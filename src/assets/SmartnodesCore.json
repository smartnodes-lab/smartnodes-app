{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "seedValidators",
          "type": "address[]"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "disputeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "getJobValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_leadDevelopers",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_communityWallet",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddr",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobIdByUserIdHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activity",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_workerCapacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "userIdHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        }
      ],
      "name": "requestJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "validatorIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "24": "contracts/SmartnodesCore.sol",
    "28": "contracts/interfaces/ISmartnodesMultiSig.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "4": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        4631
      ],
      "ContextUpgradeable": [
        4388
      ],
      "ERC20Upgradeable": [
        3177
      ],
      "IERC20MetadataUpgradeable": [
        4346
      ],
      "IERC20Upgradeable": [
        4321
      ],
      "ISmartnodesMultiSig": [
        2433
      ],
      "Initializable": [
        3254
      ],
      "SmartnodesCore": [
        1168
      ]
    },
    "id": 1169,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 137,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:24"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 3178,
        "src": "57:78:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 2434,
        "src": "136:46:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 141,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "298:16:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3177,
              "src": "298:16:24"
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:24"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "184:86:24",
          "text": " @title SmartNodes\n @dev An ERC20 contract for managing off-chain networks"
        },
        "fullyImplemented": true,
        "id": 1168,
        "linearizedBaseContracts": [
          1168,
          3177,
          4346,
          4321,
          4388,
          3254
        ],
        "name": "SmartnodesCore",
        "nameLocation": "280:14:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 145,
            "mutability": "mutable",
            "name": "_validatorContractInstance",
            "nameLocation": "384:26:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "356:54:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 144,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 143,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "356:19:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2433,
                "src": "356:19:24"
              },
              "referencedDeclaration": 2433,
              "src": "356:19:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f79621bd",
            "id": 147,
            "mutability": "mutable",
            "name": "validatorContractAddress",
            "nameLocation": "431:24:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "416:39:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 146,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 149,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "520:18:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "505:33:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 148,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2faba6ae",
            "id": 151,
            "mutability": "mutable",
            "name": "userIdCounter",
            "nameLocation": "559:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "544:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 153,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "593:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "578:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "578:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2d49c4b",
            "id": 155,
            "mutability": "mutable",
            "name": "activeValidators",
            "nameLocation": "624:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "609:31:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 154,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 157,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "661:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "646:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 156,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 159,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "695:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "680:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "680:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 165,
            "name": "TokensLocked",
            "nameLocation": "735:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "764:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "748:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "783:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "775:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:43:24"
            },
            "src": "729:62:24"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 171,
            "name": "UnlockInitiated",
            "nameLocation": "802:15:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "834:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "818:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "853:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "845:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "817:47:24"
            },
            "src": "796:69:24"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 177,
            "name": "TokensUnlocked",
            "nameLocation": "876:14:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "907:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "891:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "926:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "918:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:43:24"
            },
            "src": "870:64:24"
          },
          {
            "anonymous": false,
            "eventSelector": "3c015d1005da8bb61e99936222d4a8a0c3c5b6643f9daa5eae3ef07b7fb67647",
            "id": 184,
            "name": "JobRequested",
            "nameLocation": "945:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "974:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "958:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seedValidators",
                  "nameLocation": "991:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "981:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 180,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "981:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 181,
                    "nodeType": "ArrayTypeName",
                    "src": "981:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:49:24"
            },
            "src": "939:68:24"
          },
          {
            "anonymous": false,
            "eventSelector": "02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be8929",
            "id": 188,
            "name": "JobCompleted",
            "nameLocation": "1018:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1047:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1031:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:23:24"
            },
            "src": "1012:42:24"
          },
          {
            "anonymous": false,
            "eventSelector": "b1dee78cef8c6887046d91c59e17f84fbc012c9f7efa49a10cce97e13cc94bf4",
            "id": 192,
            "name": "JobDisputed",
            "nameLocation": "1065:11:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1093:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1077:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:23:24"
            },
            "src": "1059:41:24"
          },
          {
            "canonicalName": "SmartnodesCore.User",
            "id": 201,
            "members": [
              {
                "constant": false,
                "id": 194,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1210:2:24",
                "nodeType": "VariableDeclaration",
                "scope": 201,
                "src": "1202:10:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 193,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1202:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 196,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "1230:11:24",
                "nodeType": "VariableDeclaration",
                "scope": 201,
                "src": "1222:19:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 195,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1222:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 198,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1259:13:24",
                "nodeType": "VariableDeclaration",
                "scope": 201,
                "src": "1251:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 197,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1251:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 200,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1288:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 201,
                "src": "1282:16:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 199,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1282:5:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1187:4:24",
            "nodeType": "StructDefinition",
            "scope": 1168,
            "src": "1180:125:24",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 214,
            "members": [
              {
                "constant": false,
                "id": 203,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1449:2:24",
                "nodeType": "VariableDeclaration",
                "scope": 214,
                "src": "1441:10:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 202,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1441:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 205,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "1469:16:24",
                "nodeType": "VariableDeclaration",
                "scope": 214,
                "src": "1461:24:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 204,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1461:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 207,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1503:13:24",
                "nodeType": "VariableDeclaration",
                "scope": 214,
                "src": "1495:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 206,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1495:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 209,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "1534:6:24",
                "nodeType": "VariableDeclaration",
                "scope": 214,
                "src": "1526:14:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 208,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1526:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 211,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "1558:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 214,
                "src": "1550:18:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 210,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1550:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 213,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1584:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 214,
                "src": "1578:16:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 212,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1578:5:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "1421:9:24",
            "nodeType": "StructDefinition",
            "scope": 1168,
            "src": "1414:187:24",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 230,
            "members": [
              {
                "constant": false,
                "id": 216,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1765:2:24",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1757:10:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 215,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1757:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 218,
                "mutability": "mutable",
                "name": "author",
                "nameLocation": "1785:6:24",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1777:14:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 217,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1777:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 221,
                "mutability": "mutable",
                "name": "seedValidators",
                "nameLocation": "1811:14:24",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1801:24:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 220,
                  "nodeType": "ArrayTypeName",
                  "src": "1801:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 224,
                "mutability": "mutable",
                "name": "workers",
                "nameLocation": "1845:7:24",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1835:17:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 223,
                  "nodeType": "ArrayTypeName",
                  "src": "1835:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 227,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "1872:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1862:20:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 226,
                  "nodeType": "ArrayTypeName",
                  "src": "1862:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 229,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "1897:8:24",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1892:13:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 228,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1892:4:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "1743:3:24",
            "nodeType": "StructDefinition",
            "scope": 1168,
            "src": "1736:176:24",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 233,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "1976:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "1952:50:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 231,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1952:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32315f3030305f303030653138",
              "id": 232,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1989:13:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21_000_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 236,
            "mutability": "constant",
            "name": "tailEmission",
            "nameLocation": "2025:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2008:36:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2008:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 235,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2040:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c8df245a",
            "id": 239,
            "mutability": "mutable",
            "name": "halving",
            "nameLocation": "2066:7:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2051:31:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 237,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2051:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32365f323830",
              "id": 238,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2076:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_26280_by_1",
                "typeString": "int_const 26280"
              },
              "value": "26_280"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 242,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "2149:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2134:36:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 240,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2134:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323536653138",
              "id": 241,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2164:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256000000000000000000_by_1",
                "typeString": "int_const 256000000000000000000"
              },
              "value": "256e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 245,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "2242:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2227:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 243,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2227:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35305f303030653138",
              "id": 244,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2255:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000000000_by_1",
                "typeString": "int_const 50000000000000000000000"
              },
              "value": "50_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 248,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "2329:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2314:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 246,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2314:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530343030",
              "id": 247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2344:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50400_by_1",
                "typeString": "int_const 50400"
              },
              "value": "50400"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b115f50d",
            "id": 250,
            "mutability": "mutable",
            "name": "timeSinceLastHalving",
            "nameLocation": "2370:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2355:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 249,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2355:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 255,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "2478:5:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2446:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$201_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.User)"
            },
            "typeName": {
              "id": 254,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 251,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2454:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2446:24:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$201_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 253,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 252,
                  "name": "User",
                  "nameLocations": [
                    "2465:4:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 201,
                  "src": "2465:4:24"
                },
                "referencedDeclaration": 201,
                "src": "2465:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$201_storage_ptr",
                  "typeString": "struct SmartnodesCore.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 260,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "2526:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2489:47:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 259,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 256,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2497:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2489:29:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 258,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 257,
                  "name": "Validator",
                  "nameLocations": [
                    "2508:9:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 214,
                  "src": "2508:9:24"
                },
                "referencedDeclaration": 214,
                "src": "2508:9:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 265,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "2573:4:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2542:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 264,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 261,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2550:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2542:23:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 263,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 262,
                  "name": "Job",
                  "nameLocations": [
                    "2561:3:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 230,
                  "src": "2561:3:24"
                },
                "referencedDeclaration": 230,
                "src": "2561:3:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b759088",
            "id": 269,
            "mutability": "mutable",
            "name": "userIdByAddress",
            "nameLocation": "2643:15:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2608:50:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 268,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 266,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2616:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2608:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 267,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2627:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 273,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "2699:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2664:55:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 272,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 270,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2672:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2664:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 271,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2683:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc60bd48",
            "id": 277,
            "mutability": "mutable",
            "name": "jobIdByUserIdHash",
            "nameLocation": "2760:17:24",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2725:52:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 276,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 274,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2733:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2725:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 275,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2744:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "2858:151:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 280,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2889:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2893:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2889:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 282,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2903:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2889:38:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2941:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2868:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:123:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:123:24"
                },
                {
                  "id": 287,
                  "nodeType": "PlaceholderStatement",
                  "src": "3001:1:24"
                }
              ]
            },
            "id": 289,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "2834:21:24",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2855:2:24"
            },
            "src": "2825:184:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "3136:1055:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3159:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3173:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 299,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2611,
                      "src": "3146:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3146:33:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3146:33:24"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3263:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3279:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3263:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "3263:17:24"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 308,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "3290:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3303:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3290:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "3290:14:24"
                },
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 312,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "3314:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3335:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3314:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3314:22:24"
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 316,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "3385:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "38313932653138",
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3400:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8192000000000000000000_by_1",
                        "typeString": "int_const 8192000000000000000000"
                      },
                      "value": "8192e18"
                    },
                    "src": "3385:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:22:24"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 320,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3468:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35305f303030653138",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3481:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000000"
                      },
                      "value": "50_000e18"
                    },
                    "src": "3468:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:22:24"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 324,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "3544:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "363936",
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3554:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_696_by_1",
                        "typeString": "int_const 696"
                      },
                      "value": "696"
                    },
                    "src": "3544:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3544:13:24"
                },
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 328,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "3567:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530343030",
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3582:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50400_by_1",
                        "typeString": "int_const 50400"
                      },
                      "value": "50400"
                    },
                    "src": "3567:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:20:24"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 332,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "3610:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3633:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3610:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:24:24"
                },
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "devWallets",
                      "nameLocation": "3653:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 388,
                      "src": "3645:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3645:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 339,
                  "initialValue": {
                    "hexValue": "325f3939395f363630653138",
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3666:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2999660000000000000000000_by_1",
                      "typeString": "int_const 2999660000000000000000000"
                    },
                    "value": "2_999_660e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3645:33:24"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "communityFunding",
                      "nameLocation": "3696:16:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 388,
                      "src": "3688:24:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3688:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "hexValue": "325f3030305f303030653138",
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3715:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000000000"
                    },
                    "value": "2_000_000e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3688:39:24"
                },
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "idoAmount",
                      "nameLocation": "3745:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 388,
                      "src": "3737:17:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3737:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "hexValue": "335f3530305f303030653138",
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3757:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3500000000000000000000000_by_1",
                      "typeString": "int_const 3500000000000000000000000"
                    },
                    "value": "3_500_000e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3737:32:24"
                },
                {
                  "expression": {
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 348,
                      "name": "communityFunding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "3779:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 349,
                      "name": "idoAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "3799:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3779:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "3779:29:24"
                },
                {
                  "body": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "3963:87:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 364,
                                "name": "_leadDevelopers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "3983:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 366,
                              "indexExpression": {
                                "id": 365,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 353,
                                "src": "3999:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3983:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 367,
                                "name": "devWallets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 337,
                                "src": "4003:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "expression": {
                                  "id": 368,
                                  "name": "_leadDevelopers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "4016:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4032:6:24",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4016:22:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4003:35:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 363,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2989,
                            "src": "3977:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3977:62:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 372,
                        "nodeType": "ExpressionStatement",
                        "src": "3977:62:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 356,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "3930:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 357,
                        "name": "_leadDevelopers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "3934:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3950:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3934:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3930:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 374,
                  "initializationExpression": {
                    "assignments": [
                      353
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3923:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "3918:6:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3918:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 355,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3927:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3918:10:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3958:3:24",
                      "subExpression": {
                        "id": 360,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3958:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 362,
                    "nodeType": "ExpressionStatement",
                    "src": "3958:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "3913:137:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 376,
                        "name": "_communityWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4066:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 377,
                        "name": "communityFunding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "4084:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 375,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2989,
                      "src": "4060:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "4060:41:24"
                },
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 380,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "4140:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4156:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4140:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:17:24"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 384,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "4167:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4183:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "4167:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:17:24"
                }
              ]
            },
            "functionSelector": "462d0b2e",
            "id": 389,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "initializer",
                  "nameLocations": [
                    "3124:11:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3228,
                  "src": "3124:11:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3124:11:24"
              }
            ],
            "name": "initialize",
            "nameLocation": "3024:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_leadDevelopers",
                  "nameLocation": "3061:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "3044:32:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 290,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3044:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 291,
                    "nodeType": "ArrayTypeName",
                    "src": "3044:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_communityWallet",
                  "nameLocation": "3094:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "3086:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3086:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3034:82:24"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3136:0:24"
            },
            "scope": 1168,
            "src": "3015:1176:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "4262:261:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 395,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "4293:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4329:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4321:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 396,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4321:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4321:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4293:38:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4345:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4272:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4272:115:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "4272:115:24"
                },
                {
                  "expression": {
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 404,
                      "name": "_validatorContractInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4397:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 406,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 391,
                          "src": "4446:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 405,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2433,
                        "src": "4426:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$2433_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4426:37:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "4397:66:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4397:66:24"
                },
                {
                  "expression": {
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 410,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "4473:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 411,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "4500:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4473:43:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:43:24"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "4206:20:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "4235:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "4227:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4227:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4226:26:24"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4262:0:24"
            },
            "scope": 1168,
            "src": "4197:326:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "4671:410:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 422,
                            "name": "userIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "4745:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 425,
                          "indexExpression": {
                            "expression": {
                              "id": 423,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4761:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4765:6:24",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4761:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4745:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4776:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4745:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4779:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4737:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4737:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "4737:69:24"
                },
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 431,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "4817:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$201_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.User storage ref)"
                        }
                      },
                      "id": 433,
                      "indexExpression": {
                        "id": 432,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "4823:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4817:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$201_storage",
                        "typeString": "struct SmartnodesCore.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 435,
                          "name": "userIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "4863:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4903:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4907:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4903:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 438,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "4942:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3530",
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4982:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 434,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "4840:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$201_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.User storage pointer)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4859:2:24",
                        "4890:11:24",
                        "4927:13:24",
                        "4970:10:24"
                      ],
                      "names": [
                        "id",
                        "userAddress",
                        "publicKeyHash",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4840:155:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$201_memory_ptr",
                        "typeString": "struct SmartnodesCore.User memory"
                      }
                    },
                    "src": "4817:178:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$201_storage",
                      "typeString": "struct SmartnodesCore.User storage ref"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4817:178:24"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 443,
                        "name": "userIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "5006:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 446,
                      "indexExpression": {
                        "expression": {
                          "id": 444,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5022:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5026:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5022:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5006:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 447,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "5036:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5006:43:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:43:24"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5059:15:24",
                    "subExpression": {
                      "id": 450,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "5059:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "5059:15:24"
                }
              ]
            },
            "documentation": {
              "id": 416,
              "nodeType": "StructuredDocumentation",
              "src": "4529:84:24",
              "text": " @dev Create a User, limit one per address & public key hash (RSA)"
            },
            "functionSelector": "abf7bfd8",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "4627:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4646:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "4638:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4638:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4637:24:24"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4671:0:24"
            },
            "scope": 1168,
            "src": "4618:463:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "5307:770:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 463,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "5338:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 466,
                          "indexExpression": {
                            "expression": {
                              "id": 464,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5359:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5363:6:24",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5359:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5338:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5374:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5338:37:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206578697374732e",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5389:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        },
                        "value": "Validator already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        }
                      ],
                      "id": 462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5317:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5317:109:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "5317:109:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 474,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5468:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5472:6:24",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5468:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 473,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2683,
                              "src": "5458:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5458:21:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 477,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "5483:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5458:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 479,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "5498:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 480,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "5513:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5498:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5458:65:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5537:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5437:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5437:139:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "5437:139:24"
                },
                {
                  "expression": {
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 486,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "5633:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 488,
                      "indexExpression": {
                        "id": 487,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "5644:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5633:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$214_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 490,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "5694:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 491,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5744:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5748:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5744:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 493,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "5783:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 494,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "5819:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5855:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5882:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 489,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5666:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$214_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5690:2:24",
                        "5726:16:24",
                        "5768:13:24",
                        "5811:6:24",
                        "5843:10:24",
                        "5870:10:24"
                      ],
                      "names": [
                        "id",
                        "validatorAddress",
                        "publicKeyHash",
                        "locked",
                        "unlockTime",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5666:229:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$214_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "5633:262:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$214_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "5633:262:24"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 500,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "5906:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 503,
                      "indexExpression": {
                        "expression": {
                          "id": 501,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5927:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5931:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5927:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5906:32:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 504,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "5941:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5906:53:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "5906:53:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6016:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6020:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6016:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 510,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "6028:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 507,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "6004:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6004:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "6004:35:24"
                },
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6050:20:24",
                    "subExpression": {
                      "id": 513,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "6050:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "6050:20:24"
                }
              ]
            },
            "documentation": {
              "id": 455,
              "nodeType": "StructuredDocumentation",
              "src": "5087:114:24",
              "text": " @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
            },
            "functionSelector": "497dfe63",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "5215:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "5248:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5240:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5240:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "5280:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5272:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5230:67:24"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5307:0:24"
            },
            "scope": 1168,
            "src": "5206:871:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 627,
              "nodeType": "Block",
              "src": "6338:1270:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 531,
                            "name": "_capacities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "6610:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 533,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6622:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6610:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6627:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6610:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4361706163697479206d7573742062652067726561746572207a65726f2e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6630:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        },
                        "value": "Capacity must be greater zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6602:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6602:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "6602:61:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 540,
                            "name": "jobIdByUserIdHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "6694:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 542,
                          "indexExpression": {
                            "id": 541,
                            "name": "userIdHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "6712:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6694:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6727:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6694:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c72656164792068617320616374697665206a6f62",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6742:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86983946da8696cddd8d71768592bf7ba99d49d694eee5f89ebf01eb44dc48cc",
                          "typeString": "literal_string \"User already has active job\""
                        },
                        "value": "User already has active job"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86983946da8696cddd8d71768592bf7ba99d49d694eee5f89ebf01eb44dc48cc",
                          "typeString": "literal_string \"User already has active job\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6673:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6673:108:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "6673:108:24"
                },
                {
                  "assignments": [
                    552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 552,
                      "mutability": "mutable",
                      "name": "_seedValidators",
                      "nameLocation": "6809:15:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "6792:32:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6792:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 551,
                        "nodeType": "ArrayTypeName",
                        "src": "6792:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 553,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "6827:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6867:27:24",
                      "memberName": "generateValidatorCandidates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2390,
                      "src": "6827:67:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6827:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6792:104:24"
                },
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "mutability": "mutable",
                      "name": "_validatorIds",
                      "nameLocation": "6923:13:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "6906:30:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 559,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6906:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 560,
                        "nodeType": "ArrayTypeName",
                        "src": "6906:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 568,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 565,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 552,
                          "src": "6953:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6969:6:24",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6953:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6939:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6943:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 563,
                        "nodeType": "ArrayTypeName",
                        "src": "6943:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6939:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6906:70:24"
                },
                {
                  "body": {
                    "id": 590,
                    "nodeType": "Block",
                    "src": "7040:84:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 580,
                              "name": "_validatorIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "7054:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 582,
                            "indexExpression": {
                              "id": 581,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 570,
                              "src": "7068:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7054:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 583,
                              "name": "validatorIdByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "7073:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 587,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 584,
                                "name": "_seedValidators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 552,
                                "src": "7094:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 586,
                              "indexExpression": {
                                "id": 585,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 570,
                                "src": "7110:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7094:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7073:40:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7054:59:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 589,
                        "nodeType": "ExpressionStatement",
                        "src": "7054:59:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 573,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "7007:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 574,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "7011:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7027:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7011:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7007:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 591,
                  "initializationExpression": {
                    "assignments": [
                      570
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 570,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7000:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 591,
                        "src": "6992:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 569,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6992:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 572,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7004:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6992:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7035:3:24",
                      "subExpression": {
                        "id": 577,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "7035:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 579,
                    "nodeType": "ExpressionStatement",
                    "src": "7035:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "6987:137:24"
                },
                {
                  "expression": {
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 592,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "7179:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 594,
                      "indexExpression": {
                        "id": 593,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "7184:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7179:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 596,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "7220:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 597,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7252:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7256:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7252:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 599,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 552,
                          "src": "7292:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 603,
                                "name": "_capacities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 522,
                                "src": "7344:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7356:6:24",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7344:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7330:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 600,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7334:7:24",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 601,
                              "nodeType": "ArrayTypeName",
                              "src": "7334:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7330:33:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 606,
                          "name": "_capacities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "7389:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7424:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 595,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "7198:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$230_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Job storage pointer)"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7216:2:24",
                        "7244:6:24",
                        "7276:14:24",
                        "7321:7:24",
                        "7377:10:24",
                        "7414:8:24"
                      ],
                      "names": [
                        "id",
                        "author",
                        "seedValidators",
                        "workers",
                        "capacities",
                        "activity"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7198:241:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "src": "7179:260:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$230_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:260:24"
                },
                {
                  "expression": {
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 611,
                        "name": "jobIdByUserIdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "7449:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 613,
                      "indexExpression": {
                        "id": 612,
                        "name": "userIdHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "7467:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7449:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 614,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "7481:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7449:42:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "7449:42:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 618,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "7520:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 619,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "7532:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 617,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "7507:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7507:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "EmitStatement",
                  "src": "7502:46:24"
                },
                {
                  "expression": {
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7558:12:24",
                    "subExpression": {
                      "id": 622,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "7558:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "7558:12:24"
                },
                {
                  "expression": {
                    "id": 625,
                    "name": "_validatorIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 561,
                    "src": "7588:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 529,
                  "id": 626,
                  "nodeType": "Return",
                  "src": "7581:20:24"
                }
              ]
            },
            "functionSelector": "e63022aa",
            "id": 628,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 524,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "6276:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 289,
                  "src": "6276:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "6276:21:24"
              }
            ],
            "name": "requestJob",
            "nameLocation": "6142:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "userIdHash",
                  "nameLocation": "6170:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "6162:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6162:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "6249:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "6230:30:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 520,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6230:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 521,
                    "nodeType": "ArrayTypeName",
                    "src": "6230:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6152:114:24"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "validatorIds",
                  "nameLocation": "6324:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "6307:29:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 526,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6307:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 527,
                    "nodeType": "ArrayTypeName",
                    "src": "6307:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6306:31:24"
            },
            "scope": 1168,
            "src": "6133:1475:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "7757:274:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 642,
                            "name": "_workers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "7775:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7784:6:24",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7775:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 644,
                                "name": "jobs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 265,
                                "src": "7794:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                                  "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                                }
                              },
                              "id": 646,
                              "indexExpression": {
                                "id": 645,
                                "name": "jobId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 630,
                                "src": "7799:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7794:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$230_storage",
                                "typeString": "struct SmartnodesCore.Job storage ref"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7806:10:24",
                            "memberName": "capacities",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 227,
                            "src": "7794:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7817:6:24",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7794:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7775:48:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7767:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7767:57:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "ExpressionStatement",
                  "src": "7767:57:24"
                },
                {
                  "expression": {
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 652,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "7835:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 654,
                        "indexExpression": {
                          "id": 653,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 630,
                          "src": "7840:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7835:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7847:7:24",
                      "memberName": "workers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 224,
                      "src": "7835:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 656,
                      "name": "_workers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "7857:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "7835:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "7835:30:24"
                },
                {
                  "expression": {
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 659,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "7875:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 661,
                        "indexExpression": {
                          "id": 660,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 630,
                          "src": "7880:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7875:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7887:8:24",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "7875:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7898:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7875:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "7875:28:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 667,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "7978:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 666,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "7965:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7965:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "EmitStatement",
                  "src": "7960:24:24"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 670,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "8002:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 672,
                      "indexExpression": {
                        "id": 671,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "8007:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8002:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8014:10:24",
                    "memberName": "capacities",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 227,
                    "src": "8002:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 640,
                  "id": 674,
                  "nodeType": "Return",
                  "src": "7995:29:24"
                }
              ]
            },
            "functionSelector": "f3259572",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 636,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 635,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7708:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 289,
                  "src": "7708:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "7708:21:24"
              }
            ],
            "name": "completeJob",
            "nameLocation": "7623:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "7652:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "7644:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7644:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "7684:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "7667:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 631,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7667:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 632,
                    "nodeType": "ArrayTypeName",
                    "src": "7667:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7634:64:24"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "7739:16:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 637,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7739:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 638,
                    "nodeType": "ArrayTypeName",
                    "src": "7739:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7738:18:24"
            },
            "scope": 1168,
            "src": "7614:417:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "8103:109:24",
              "statements": [
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "8125:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 700,
                      "src": "8113:15:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 684,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 683,
                          "name": "Job",
                          "nameLocations": [
                            "8113:3:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 230,
                          "src": "8113:3:24"
                        },
                        "referencedDeclaration": 230,
                        "src": "8113:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 689,
                  "initialValue": {
                    "baseExpression": {
                      "id": 686,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "8131:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 688,
                    "indexExpression": {
                      "id": 687,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "8136:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8131:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$230_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8113:29:24"
                },
                {
                  "expression": {
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 690,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "8152:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job storage pointer"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8156:8:24",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "8152:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8167:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8152:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "8152:20:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 697,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "8199:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 696,
                      "name": "JobDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "8187:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 699,
                  "nodeType": "EmitStatement",
                  "src": "8182:23:24"
                }
              ]
            },
            "functionSelector": "d93d9beb",
            "id": 701,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 681,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 680,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "8081:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 289,
                  "src": "8081:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "8081:21:24"
              }
            ],
            "name": "disputeJob",
            "nameLocation": "8046:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "8065:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 701,
                  "src": "8057:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8057:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8056:15:24"
            },
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8103:0:24"
            },
            "scope": 1168,
            "src": "8037:175:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "8372:629:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 710,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "8390:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8399:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8390:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8402:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8382:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "8382:56:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 718,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "8466:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 717,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2683,
                            "src": "8456:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8456:17:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 720,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "8477:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8456:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8485:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8448:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8448:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "8448:61:24"
                },
                {
                  "assignments": [
                    726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 726,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "8528:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "8520:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8520:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 730,
                  "initialValue": {
                    "baseExpression": {
                      "id": 727,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "8542:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 729,
                    "indexExpression": {
                      "id": 728,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "8563:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8542:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8520:50:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 732,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 726,
                          "src": "8588:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8603:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8588:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8606:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8580:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8580:54:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "8580:54:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 739,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "8658:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 742,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8674:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1168",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1168",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8666:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 740,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8666:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8666:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 744,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "8681:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 738,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2784,
                      "src": "8645:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8645:43:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "8645:43:24"
                },
                {
                  "expression": {
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 747,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "8698:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 749,
                        "indexExpression": {
                          "id": 748,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 726,
                          "src": "8709:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8698:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$214_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8722:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 209,
                      "src": "8698:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 751,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "8732:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8698:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8698:40:24"
                },
                {
                  "assignments": [
                    755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "totalLocked",
                      "nameLocation": "8756:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "8748:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8748:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 760,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 756,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "8770:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 758,
                      "indexExpression": {
                        "id": 757,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "8781:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8770:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$214_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8794:6:24",
                    "memberName": "locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 209,
                    "src": "8770:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8748:52:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 764,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "8870:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 765,
                        "name": "totalLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "8890:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 766,
                          "name": "totalLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 755,
                          "src": "8915:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 767,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "8930:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8915:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 761,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "8811:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8838:18:24",
                      "memberName": "updateLockedTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2384,
                      "src": "8811:45:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool) external"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8811:139:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "8811:139:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 772,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "8979:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 773,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "8987:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 771,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "8966:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8966:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "EmitStatement",
                  "src": "8961:33:24"
                }
              ]
            },
            "documentation": {
              "id": 702,
              "nodeType": "StructuredDocumentation",
              "src": "8218:87:24",
              "text": " @dev Internal function to lock tokens, callable from other functions"
            },
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "8319:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8339:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "8331:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8331:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8355:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "8347:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8347:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8330:32:24"
            },
            "returnParameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8372:0:24"
            },
            "scope": 1168,
            "src": "8310:691:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "9133:48:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 784,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9155:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9159:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9155:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 786,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "9167:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 783,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "9143:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9143:31:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "9143:31:24"
                }
              ]
            },
            "documentation": {
              "id": 778,
              "nodeType": "StructuredDocumentation",
              "src": "9007:76:24",
              "text": " @dev Validator token unlocking, 30 day withdrawal period."
            },
            "functionSelector": "6e27d889",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "9097:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9116:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "9108:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9108:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9107:16:24"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9133:0:24"
            },
            "scope": 1168,
            "src": "9088:93:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "9234:1392:24",
              "statements": [
                {
                  "assignments": [
                    796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 796,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "9252:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 899,
                      "src": "9244:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 795,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9244:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 801,
                  "initialValue": {
                    "baseExpression": {
                      "id": 797,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "9266:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 800,
                    "indexExpression": {
                      "expression": {
                        "id": 798,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9287:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9291:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9287:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9266:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9244:54:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 803,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 796,
                          "src": "9316:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9330:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9316:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120726567697374657265642076616c696461746f722e",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9333:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        },
                        "value": "Not a registered validator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        }
                      ],
                      "id": 802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9308:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9308:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "9308:55:24"
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "9392:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 899,
                      "src": "9374:27:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 810,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 809,
                          "name": "Validator",
                          "nameLocations": [
                            "9374:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 214,
                          "src": "9374:9:24"
                        },
                        "referencedDeclaration": 214,
                        "src": "9374:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 815,
                  "initialValue": {
                    "baseExpression": {
                      "id": 812,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "9404:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 814,
                    "indexExpression": {
                      "id": 813,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 796,
                      "src": "9415:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9404:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$214_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9374:53:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 817,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 792,
                          "src": "9446:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 818,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "9456:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9466:6:24",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "9456:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9446:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9474:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9438:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9438:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "9438:69:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 825,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 792,
                          "src": "9525:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9534:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9525:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9537:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9517:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9517:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "9517:56:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 831,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9659:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9669:10:24",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "9659:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9683:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9659:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 897,
                    "nodeType": "Block",
                    "src": "10162:458:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 871,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10279:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10285:9:24",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10279:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 873,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 811,
                                  "src": "10298:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10308:10:24",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 211,
                                "src": "10298:20:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10279:39:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10336:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 870,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10254:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10254:122:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 878,
                        "nodeType": "ExpressionStatement",
                        "src": "10254:122:24"
                      },
                      {
                        "expression": {
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 879,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 811,
                              "src": "10391:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10401:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 209,
                            "src": "10391:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 882,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "10411:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10391:26:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "10391:26:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 886,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10437:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10441:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10437:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 888,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "10449:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 885,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2989,
                            "src": "10431:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10431:25:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "10431:25:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 892,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10538:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10542:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10538:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 894,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "10550:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 891,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "10523:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10523:34:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 896,
                        "nodeType": "EmitStatement",
                        "src": "10518:39:24"
                      }
                    ]
                  },
                  "id": 898,
                  "nodeType": "IfStatement",
                  "src": "9655:965:24",
                  "trueBody": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "9686:470:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 835,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 811,
                              "src": "9700:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9710:10:24",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "9700:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 838,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9723:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9729:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9723:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 840,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "9741:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9723:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9700:53:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 843,
                        "nodeType": "ExpressionStatement",
                        "src": "9700:53:24"
                      },
                      {
                        "assignments": [
                          845
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 845,
                            "mutability": "mutable",
                            "name": "totalLocked",
                            "nameLocation": "9837:11:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 869,
                            "src": "9829:19:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 844,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9829:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 850,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 846,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 811,
                              "src": "9851:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9861:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 209,
                            "src": "9851:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 848,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "9870:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9851:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9829:47:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 854,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9953:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9957:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9953:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 856,
                              "name": "totalLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "9981:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 857,
                                "name": "totalLocked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 845,
                                "src": "10010:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 858,
                                "name": "lockAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 245,
                                "src": "10025:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10010:25:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 851,
                              "name": "_validatorContractInstance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "9890:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9917:18:24",
                            "memberName": "updateLockedTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2384,
                            "src": "9890:45:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool) external"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9890:159:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 861,
                        "nodeType": "ExpressionStatement",
                        "src": "9890:159:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 863,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10085:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10089:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10085:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 865,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 811,
                                "src": "10097:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10107:10:24",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 211,
                              "src": "10097:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 862,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "10069:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10069:49:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "EmitStatement",
                        "src": "10064:54:24"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "9196:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9217:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "9209:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9209:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9208:16:24"
            },
            "returnParameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9234:0:24"
            },
            "scope": 1168,
            "src": "9187:1439:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "11014:974:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 918,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2669,
                              "src": "11045:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11045:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 920,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "11061:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11045:28:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 922,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "11077:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11045:42:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c79207265616368656421",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11101:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        },
                        "value": "Maximum supply reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        }
                      ],
                      "id": 917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11024:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11024:112:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "11024:112:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 927,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "11151:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 928,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "11175:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11151:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 940,
                  "nodeType": "IfStatement",
                  "src": "11147:136:24",
                  "trueBody": {
                    "id": 939,
                    "nodeType": "Block",
                    "src": "11184:99:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 930,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "11202:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11217:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "11202:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 938,
                        "nodeType": "IfStatement",
                        "src": "11198:75:24",
                        "trueBody": {
                          "id": 937,
                          "nodeType": "Block",
                          "src": "11223:50:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 933,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 242,
                                  "src": "11241:12:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11257:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "11241:17:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 936,
                              "nodeType": "ExpressionStatement",
                              "src": "11241:17:24"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "validatorRewardTotal",
                      "nameLocation": "11301:20:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1021,
                      "src": "11293:28:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11293:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 943,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "11325:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3430",
                            "id": 944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11340:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40_by_1",
                              "typeString": "int_const 40"
                            },
                            "value": "40"
                          },
                          "src": "11325:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 946,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11324:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11346:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11324:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11293:56:24"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "workerRewardTotal",
                      "nameLocation": "11367:17:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1021,
                      "src": "11359:25:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11359:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 958,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 952,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "11388:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11403:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "11388:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 955,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11387:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11409:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11387:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11359:53:24"
                },
                {
                  "assignments": [
                    960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 960,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "11484:15:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1021,
                      "src": "11476:23:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 959,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11476:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 965,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 961,
                      "name": "validatorRewardTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "11502:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 962,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "11537:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11554:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11537:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11502:58:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11476:84:24"
                },
                {
                  "body": {
                    "id": 984,
                    "nodeType": "Block",
                    "src": "11624:68:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 978,
                                "name": "_validatorsVoted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 912,
                                "src": "11644:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 980,
                              "indexExpression": {
                                "id": 979,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "11661:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11644:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 981,
                              "name": "validatorReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "11665:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 977,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2989,
                            "src": "11638:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11638:43:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 983,
                        "nodeType": "ExpressionStatement",
                        "src": "11638:43:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 970,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "11590:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 971,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "11594:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11611:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11594:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11590:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 985,
                  "initializationExpression": {
                    "assignments": [
                      967
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 967,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "11583:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "11575:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11575:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 969,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11587:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11575:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11619:3:24",
                      "subExpression": {
                        "id": 974,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "11619:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 976,
                    "nodeType": "ExpressionStatement",
                    "src": "11619:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "11570:122:24"
                },
                {
                  "body": {
                    "id": 1016,
                    "nodeType": "Block",
                    "src": "11790:159:24",
                    "statements": [
                      {
                        "assignments": [
                          998
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 998,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "11812:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 1016,
                            "src": "11804:14:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 997,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11804:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1008,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1003,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 999,
                                        "name": "_workerCapacities",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 907,
                                        "src": "11823:17:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1001,
                                      "indexExpression": {
                                        "id": 1000,
                                        "name": "w",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 987,
                                        "src": "11841:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11823:20:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1002,
                                      "name": "workerRewardTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 951,
                                      "src": "11846:17:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11823:40:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1004,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11822:42:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1005,
                                "name": "_totalCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "11883:14:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11822:75:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1007,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11821:77:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11804:94:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1010,
                                "name": "_workers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 904,
                                "src": "11918:8:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1012,
                              "indexExpression": {
                                "id": 1011,
                                "name": "w",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 987,
                                "src": "11927:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11918:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1013,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "11931:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1009,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2989,
                            "src": "11912:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11912:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1015,
                        "nodeType": "ExpressionStatement",
                        "src": "11912:26:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 990,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 987,
                      "src": "11764:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 991,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "11768:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11777:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11768:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11764:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1017,
                  "initializationExpression": {
                    "assignments": [
                      987
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 987,
                        "mutability": "mutable",
                        "name": "w",
                        "nameLocation": "11757:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "11749:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11749:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 989,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11761:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11749:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11785:3:24",
                      "subExpression": {
                        "id": 994,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "11785:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 996,
                    "nodeType": "ExpressionStatement",
                    "src": "11785:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "11744:205:24"
                },
                {
                  "expression": {
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11959:22:24",
                    "subExpression": {
                      "id": 1018,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "11959:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "11959:22:24"
                }
              ]
            },
            "documentation": {
              "id": 901,
              "nodeType": "StructuredDocumentation",
              "src": "10632:166:24",
              "text": " @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n Updates the emission rate and halving accordingly"
            },
            "functionSelector": "a3273d22",
            "id": 1022,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 915,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 914,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "10992:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 289,
                  "src": "10992:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "10992:21:24"
              }
            ],
            "name": "mintTokens",
            "nameLocation": "10812:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "10849:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "10832:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 902,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10832:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 903,
                    "nodeType": "ArrayTypeName",
                    "src": "10832:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "_workerCapacities",
                  "nameLocation": "10884:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "10867:34:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 905,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10867:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 906,
                    "nodeType": "ArrayTypeName",
                    "src": "10867:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "10919:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "10911:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10911:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "10960:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "10943:33:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 910,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10943:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 911,
                    "nodeType": "ArrayTypeName",
                    "src": "10943:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10822:160:24"
            },
            "returnParameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11014:0:24"
            },
            "scope": 1168,
            "src": "10803:1185:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1062,
              "nodeType": "Block",
              "src": "12161:273:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1031,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1024,
                          "src": "12179:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1032,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "12187:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12179:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206a6f62204944",
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12199:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        },
                        "value": "Invalid job ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        }
                      ],
                      "id": 1030,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12171:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12171:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1036,
                  "nodeType": "ExpressionStatement",
                  "src": "12171:45:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1037,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "12230:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 1039,
                        "indexExpression": {
                          "id": 1038,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1024,
                          "src": "12235:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12230:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 1040,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12242:2:24",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 216,
                      "src": "12230:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1041,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1024,
                      "src": "12248:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12230:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1060,
                    "nodeType": "Block",
                    "src": "12379:49:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4a6f62206e6f7420666f756e6421",
                              "id": 1057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12400:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              },
                              "value": "Job not found!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              }
                            ],
                            "id": 1056,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "12393:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12393:24:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1059,
                        "nodeType": "ExpressionStatement",
                        "src": "12393:24:24"
                      }
                    ]
                  },
                  "id": 1061,
                  "nodeType": "IfStatement",
                  "src": "12226:202:24",
                  "trueBody": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "12255:118:24",
                    "statements": [
                      {
                        "assignments": [
                          1047
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1047,
                            "mutability": "mutable",
                            "name": "jobValidators",
                            "nameLocation": "12286:13:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 1055,
                            "src": "12269:30:24",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1045,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12269:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1046,
                              "nodeType": "ArrayTypeName",
                              "src": "12269:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1052,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1048,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "12302:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$230_storage_$",
                                "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                              }
                            },
                            "id": 1050,
                            "indexExpression": {
                              "id": 1049,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "12307:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12302:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$230_storage",
                              "typeString": "struct SmartnodesCore.Job storage ref"
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12314:14:24",
                          "memberName": "seedValidators",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 221,
                          "src": "12302:26:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12269:59:24"
                      },
                      {
                        "expression": {
                          "id": 1053,
                          "name": "jobValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "12349:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 1029,
                        "id": 1054,
                        "nodeType": "Return",
                        "src": "12342:20:24"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6817dd5b",
            "id": 1063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobValidators",
            "nameLocation": "12074:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "12108:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "12100:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12100:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12090:29:24"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "12143:16:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1026,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12143:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1027,
                    "nodeType": "ArrayTypeName",
                    "src": "12143:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12142:18:24"
            },
            "scope": 1168,
            "src": "12065:369:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "12540:313:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1073,
                          "name": "_validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "12558:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1074,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "12573:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12558:33:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642049442e",
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12593:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        },
                        "value": "Invalid ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        }
                      ],
                      "id": 1072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12550:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12550:57:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "12550:57:24"
                },
                {
                  "assignments": [
                    1081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1081,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "12635:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "12617:28:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 1080,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1079,
                          "name": "Validator",
                          "nameLocations": [
                            "12617:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 214,
                          "src": "12617:9:24"
                        },
                        "referencedDeclaration": 214,
                        "src": "12617:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1085,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1082,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "12648:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 1084,
                    "indexExpression": {
                      "id": 1083,
                      "name": "_validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "12659:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12648:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$214_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12617:55:24"
                },
                {
                  "assignments": [
                    1087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1087,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "12687:8:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "12682:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1086,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12682:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1093,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1090,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "12756:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                            "typeString": "struct SmartnodesCore.Validator storage pointer"
                          }
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12767:16:24",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 205,
                        "src": "12756:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1088,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "12698:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2433",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12725:17:24",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2397,
                      "src": "12698:44:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12698:95:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12682:111:24"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1094,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "12811:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1095,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "12821:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$214_storage_ptr",
                            "typeString": "struct SmartnodesCore.Validator storage pointer"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12832:13:24",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 207,
                        "src": "12821:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 1097,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12810:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1098,
                  "nodeType": "Return",
                  "src": "12803:43:24"
                }
              ]
            },
            "functionSelector": "b7797537",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "12449:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "_validatorId",
                  "nameLocation": "12483:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "12475:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12475:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12465:36:24"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "12525:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12525:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "12531:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12531:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12524:15:24"
            },
            "scope": 1168,
            "src": "12440:413:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1109,
              "nodeType": "Block",
              "src": "12915:41:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1105,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "12932:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12948:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12932:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1104,
                  "id": 1108,
                  "nodeType": "Return",
                  "src": "12925:24:24"
                }
              ]
            },
            "functionSelector": "b5cb15f7",
            "id": 1110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCount",
            "nameLocation": "12868:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12880:2:24"
            },
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "12906:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12906:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12905:9:24"
            },
            "scope": 1168,
            "src": "12859:97:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1119,
              "nodeType": "Block",
              "src": "13023:46:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1115,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "13040:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13061:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13040:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1114,
                  "id": 1118,
                  "nodeType": "Return",
                  "src": "13033:29:24"
                }
              ]
            },
            "functionSelector": "7071688a",
            "id": 1120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorCount",
            "nameLocation": "12971:17:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12988:2:24"
            },
            "returnParameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "13014:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13014:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13013:9:24"
            },
            "scope": 1168,
            "src": "12962:107:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "13142:40:24",
              "statements": [
                {
                  "expression": {
                    "id": 1125,
                    "name": "activeValidators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 155,
                    "src": "13159:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1124,
                  "id": 1126,
                  "nodeType": "Return",
                  "src": "13152:23:24"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 1128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "13084:23:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13107:2:24"
            },
            "returnParameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "13133:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13133:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13132:9:24"
            },
            "scope": 1168,
            "src": "13075:107:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "13247:36:24",
              "statements": [
                {
                  "expression": {
                    "id": 1133,
                    "name": "emissionRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 242,
                    "src": "13264:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1132,
                  "id": 1134,
                  "nodeType": "Return",
                  "src": "13257:19:24"
                }
              ]
            },
            "functionSelector": "c0a77da9",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmissionRate",
            "nameLocation": "13197:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13212:2:24"
            },
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "13238:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13238:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13237:9:24"
            },
            "scope": 1168,
            "src": "13188:95:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1145,
              "nodeType": "Block",
              "src": "13342:42:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1141,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "13359:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartnodesCore_$1168",
                          "typeString": "contract SmartnodesCore"
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13364:11:24",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2669,
                      "src": "13359:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13359:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1140,
                  "id": 1144,
                  "nodeType": "Return",
                  "src": "13352:25:24"
                }
              ]
            },
            "functionSelector": "6c9c2faf",
            "id": 1146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSupply",
            "nameLocation": "13298:9:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13307:2:24"
            },
            "returnParameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "13333:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13333:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13332:9:24"
            },
            "scope": 1168,
            "src": "13289:95:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "13460:119:24",
              "statements": [
                {
                  "assignments": [
                    1154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1154,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "13478:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "13470:11:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1153,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13470:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1158,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1155,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "13484:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1157,
                    "indexExpression": {
                      "id": 1156,
                      "name": "validatorAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "13505:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13484:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13470:49:24"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1159,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "13536:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$214_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 1161,
                        "indexExpression": {
                          "id": 1160,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1154,
                          "src": "13547:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13536:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$214_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13552:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 209,
                      "src": "13536:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1163,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "13562:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13536:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1152,
                  "id": 1165,
                  "nodeType": "Return",
                  "src": "13529:43:24"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 1167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "13399:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1148,
                  "mutability": "mutable",
                  "name": "validatorAddr",
                  "nameLocation": "13416:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "13408:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13408:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13407:23:24"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "13454:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13454:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13453:6:24"
            },
            "scope": 1168,
            "src": "13390:189:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1169,
        "src": "271:13310:24",
        "usedErrors": [],
        "usedEvents": [
          165,
          171,
          177,
          184,
          188,
          192,
          4311,
          4320
        ]
      }
    ],
    "src": "32:13550:24"
  },
  "bytecode": "60806040526166a8606d55680de0b6b3a764000000606e55690a968163f0a57b400000606f5561c4e0607055348015603657600080fd5b50612a57806100466000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c806370a0823111610167578063bc60bd48116100ce578063d8df5dc111610087578063d8df5dc1146106e2578063d93d9beb146106eb578063dd62ed3e146106fe578063e63022aa14610737578063f325957214610757578063f79621bd1461076a57600080fd5b8063bc60bd481461068c578063c0a77da9146106ac578063c5ab2241146106b4578063c8df245a146106bd578063cdf64a76146106c6578063d2d49c4b146106d957600080fd5b8063a457c2d711610120578063a457c2d714610618578063a9059cbb1461062b578063abf7bfd81461063e578063b115f50d14610651578063b5cb15f71461065a578063b77975371461066257600080fd5b806370a08231146105af5780637c405325146105d85780638f029d5e146105eb57806395d89b41146105f457806396afc450146105fc578063a3273d221461060557600080fd5b8063365b98b21161020b5780634b759088116101c45780634b7590881461054357806350355d76146105635780636817dd5b1461056c5780636c9c2faf1461058c5780636e27d889146105945780637071688a146105a757600080fd5b8063365b98b21461045357806337deea70146104c057806339509351146104c8578063462d0b2e146104db578063497dfe63146104f05780634a4fbeec1461050357600080fd5b806323b872dd1161025d57806323b872dd1461036e57806327764547146103815780632faba6ae146103a1578063313ce567146103aa57806332cb6b0c146103b957806335aa2e44146103cb57600080fd5b806306fdde03146102a557806308ac5256146102c3578063095ea7b3146102da578063180aedf3146102fd57806318160ddd1461035d57806320d3a0b414610365575b600080fd5b6102ad610795565b6040516102ba91906121c8565b60405180910390f35b6102cc606c5481565b6040519081526020016102ba565b6102ed6102e836600461222c565b610827565b60405190151581526020016102ba565b61033861030b366004612258565b60746020526000908152604090208054600182015460059092015490916001600160a01b03169060ff1683565b604080519384526001600160a01b0390921660208401521515908201526060016102ba565b6035546102cc565b6102cc60705481565b6102ed61037c366004612271565b610841565b6102cc61038f3660046122b2565b60766020526000908152604090205481565b6102cc60685481565b604051601281526020016102ba565b6102cc6a115eec47f6cf7e3500000081565b61041b6103d9366004612258565b60736020526000908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b03909316939192909160ff1686565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260ff1660a082015260c0016102ba565b610495610461366004612258565b607260205260009081526040902080546001820154600283015460039093015491926001600160a01b039091169160ff1684565b604080519485526001600160a01b0390931660208501529183015260ff1660608201526080016102ba565b606a546102cc565b6102ed6104d636600461222c565b610865565b6104ee6104e93660046123b9565b6108a4565b005b6104ee6104fe36600461240b565b610a72565b6102ed6105113660046122b2565b6001600160a01b0316600090815260766020908152604080832054606f54908452607390925290912060030154101590565b6102cc6105513660046122b2565b60756020526000908152604090205481565b6102cc60695481565b61057f61057a366004612258565b610c09565b6040516102ba919061242d565b6102cc610d0c565b6104ee6105a2366004612258565b610d75565b6102cc610d82565b6102cc6105bd3660046122b2565b6001600160a01b031660009081526033602052604090205490565b6104ee6105e6366004612258565b610d93565b6102cc60675481565b6102ad611007565b6102cc606e5481565b6104ee61061336600461247a565b611016565b6102ed61062636600461222c565b6111f8565b6102ed61063936600461222c565b61128a565b6104ee61064c366004612258565b611298565b6102cc60715481565b6102cc611392565b610675610670366004612258565b6113a3565b6040805192151583526020830191909152016102ba565b6102cc61069a366004612258565b60776020526000908152604090205481565b606e546102cc565b6102cc606b5481565b6102cc606d5481565b6104ee6106d43660046122b2565b611479565b6102cc606a5481565b6102cc606f5481565b6104ee6106f9366004612258565b6114fe565b6102cc61070c366004612560565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61074a61074536600461258e565b611571565b6040516102ba919061260d565b61074a610765366004612645565b611945565b60665461077d906001600160a01b031681565b6040516001600160a01b0390911681526020016102ba565b6060603680546107a49061268c565b80601f01602080910402602001604051908101604052809291908181526020018280546107d09061268c565b801561081d5780601f106107f25761010080835404028352916020019161081d565b820191906000526020600020905b81548152906001019060200180831161080057829003601f168201915b5050505050905090565b600033610835818585611a5a565b60019150505b92915050565b60003361084f858285611b7e565b61085a858585611c10565b506001949350505050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190610835908290869061089f9087906126dc565b611a5a565b600054610100900460ff166108bf5760005460ff16156108c3565b303b155b61092b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff1615801561094d576000805461ffff19166101011790555b6109946040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250611dde565b6001606881905560698190556067556901bc16d674ec80000000606e55690a968163f0a57b400000606f556102b8606d5561c4e060705560006071556a027b33e4f9c02e923000006a01a784379d99db420000006a02e5276153cd3fb38000006109fe81836126dc565b915060005b8651811015610a4357610a3b878281518110610a2157610a216126ef565b6020026020010151885186610a369190612705565b611e13565b600101610a03565b50610a4e8583611e13565b50506001606b55506003606c558015610a6d576000805461ff00191690555b505050565b3360009081526076602052604090205415610acf5760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220616c7265616479206578697374732e000000000000006044820152606401610922565b336000908152603360205260409020548111158015610af05750606f548110155b610b3c5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e00000000006044820152606401610922565b6040805160c08101825260678054808352336020808501828152858701898152606f805460608901908152600060808a01818152603260a08c01908152988252607387528b82209a518b55945160018b0180546001600160a01b0319166001600160a01b03909216919091179055925160028a01555160038901559151600488015593516005909601805460ff191660ff90971696909617909555925481835260769093529390205554610bf09190611ef2565b60678054906000610c0083612727565b91905055505050565b60606069548210610c4d5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081a9bd888125160921b6044820152606401610922565b600082815260746020526040902054829003610cd357600082815260746020908152604080832060020180548251818502810185019093528083529192909190830182828015610cc657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ca8575b5093979650505050505050565b60405162461bcd60e51b815260206004820152600e60248201526d4a6f62206e6f7420666f756e642160901b6044820152606401610922565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d709190612740565b905090565b610d7f3382611ef2565b50565b60006001606754610d709190612759565b3360009081526076602052604090205480610df05760405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120726567697374657265642076616c696461746f722e00000000006044820152606401610922565b60008181526073602052604090206003810154831115610e525760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e00006044820152606401610922565b60008311610e725760405162461bcd60e51b81526004016109229061276c565b8060040154600003610f5557607054610e8b90426126dc565b60048201556003810154600090610ea3908590612759565b606554606f5460405163b6ceecb760e01b8152336004820152602481018490529083101560448201529192506001600160a01b03169063b6ceecb790606401600060405180830381600087803b158015610efc57600080fd5b505af1158015610f10573d6000803e3d6000fd5b50505050600482015460405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a250505050565b8060040154421015610fa95760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e00000000000000006044820152606401610922565b82816003016000828254610fbd9190612759565b90915550610fcd90503384611e13565b60405183815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958889060200160405180910390a2505050565b6060603780546107a49061268c565b6066546001600160a01b031633146110405760405162461bcd60e51b8152600401610922906127ad565b6a115eec47f6cf7e35000000606e5461105860355490565b61106291906126dc565b11156110b05760405162461bcd60e51b815260206004820152601760248201527f4d6178696d756d20737570706c792072656163686564210000000000000000006044820152606401610922565b606d54607154106110e657670de0b6b3a7640000606e5411156110e6576002606e60008282546110e09190612705565b90915550505b60006064606e5460286110f991906127f3565b6111039190612705565b905060006064606e54603c61111891906127f3565b6111229190612705565b905060008351836111339190612705565b905060005b845181101561116c57611164858281518110611156576111566126ef565b602002602001015183611e13565b600101611138565b5060005b87518110156111d9576000868489848151811061118f5761118f6126ef565b60200260200101516111a191906127f3565b6111ab9190612705565b90506111d08983815181106111c2576111c26126ef565b602002602001015182611e13565b50600101611170565b50607180549060006111ea83612727565b919050555050505050505050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561127d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610922565b61085a8286868403611a5a565b600033610835818585611c10565b33600090815260756020526040902054156112f55760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642e00000000000000006044820152606401610922565b60408051608081018252606880548083523360208085018281528587018881526032606088019081526000958652607284528886209751885591516001880180546001600160a01b0319166001600160a01b03909216919091179055516002870155516003909501805460ff191660ff9096169590951790945582549082526075909352928320829055909161138a83612727565b919050555050565b60006001606854610d709190612759565b60008060675483106113e55760405162461bcd60e51b815260206004820152600b60248201526a24b73b30b634b21024a21760a91b6044820152606401610922565b60008381526073602052604080822060655460018201549251631015428760e21b81526001600160a01b03938416600482015291939216906340550a1c90602401602060405180830381865afa158015611443573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611467919061280a565b60029092015491959194509092505050565b6066546001600160a01b0316156114d25760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e00006044820152606401610922565b606580546001600160a01b039092166001600160a01b0319928316811790915560668054909216179055565b6066546001600160a01b031633146115285760405162461bcd60e51b8152600401610922906127ad565b60008181526074602052604080822060058101805460ff191690559051909183917fb1dee78cef8c6887046d91c59e17f84fbc012c9f7efa49a10cce97e13cc94bf49190a25050565b6066546060906001600160a01b0316331461159e5760405162461bcd60e51b8152600401610922906127ad565b6000838360008181106115b3576115b36126ef565b90506020020135116116075760405162461bcd60e51b815260206004820152601e60248201527f4361706163697479206d7573742062652067726561746572207a65726f2e00006044820152606401610922565b600084815260776020526040902054156116635760405162461bcd60e51b815260206004820152601b60248201527f5573657220616c72656164792068617320616374697665206a6f6200000000006044820152606401610922565b60655460408051632909069b60e21b815290516000926001600160a01b03169163a4241a6c91600480830192869291908290030181865afa1580156116ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116d4919081019061282c565b90506000815167ffffffffffffffff8111156116f2576116f26122d6565b60405190808252806020026020018201604052801561171b578160200160208202803683370190505b50905060005b825181101561178e5760766000848381518110611740576117406126ef565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061177b5761177b6126ef565b6020908102919091010152600101611721565b506040805160c0810182526069548152336020820152908101839052606081018567ffffffffffffffff8111156117c7576117c76122d6565b6040519080825280602002602001820160405280156117f0578160200160208202803683370190505b5081526020018686808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505060016020938401819052606954835260748452604092839020855181558585015191810180546001600160a01b0319166001600160a01b0390931692909217909155918401518051929361188693600286019350910190612113565b50606082015180516118a2916003840191602090910190612113565b50608082015180516118be916004840191602090910190612178565b5060a091909101516005909101805460ff191691151591909117905560695460008781526077602052604090819020829055517f3c015d1005da8bb61e99936222d4a8a0c3c5b6643f9daa5eae3ef07b7fb676479061191e90859061242d565b60405180910390a26069805490600061193683612727565b90915550909695505050505050565b6066546060906001600160a01b031633146119725760405162461bcd60e51b8152600401610922906127ad565b60008381526074602052604090206004015482511461199057600080fd5b600083815260746020908152604090912083516119b592600390920191850190612113565b50600083815260746020526040808220600501805460ff191690555184917f02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be892991a260008381526074602090815260409182902060040180548351818402810184019094528084529091830182828015611a4d57602002820191906000526020600020905b815481526020019060010190808311611a39575b5050505050905092915050565b6001600160a01b038316611abc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610922565b6001600160a01b038216611b1d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610922565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611c0a5781811015611bfd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610922565b611c0a8484848403611a5a565b50505050565b6001600160a01b038316611c745760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610922565b6001600160a01b038216611cd65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610922565b6001600160a01b03831660009081526033602052604090205481811015611d4e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610922565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611d859084906126dc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611dd191815260200190565b60405180910390a3611c0a565b600054610100900460ff16611e055760405162461bcd60e51b8152600401610922906128c6565b611e0f82826120d3565b5050565b6001600160a01b038216611e695760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610922565b8060356000828254611e7b91906126dc565b90915550506001600160a01b03821660009081526033602052604081208054839290611ea89084906126dc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008111611f125760405162461bcd60e51b81526004016109229061276c565b80611f32836001600160a01b031660009081526033602052604090205490565b1015611f785760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610922565b6001600160a01b03821660009081526076602052604081205490819003611fe15760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220646f6573206e6f742065786973742e000000000000006044820152606401610922565b611fec833084610841565b506000818152607360205260408120600301805484929061200e9084906126dc565b90915550506000818152607360205260409081902060030154606554606f54925163b6ceecb760e01b81526001600160a01b038781166004830152602482018490529383101560448201529192169063b6ceecb790606401600060405180830381600087803b15801561208057600080fd5b505af1158015612094573d6000803e3d6000fd5b50505050836001600160a01b03167fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c84604051610f4791815260200190565b600054610100900460ff166120fa5760405162461bcd60e51b8152600401610922906128c6565b60366121068382612961565b506037610a6d8282612961565b828054828255906000526020600020908101928215612168579160200282015b8281111561216857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612133565b506121749291506121b3565b5090565b828054828255906000526020600020908101928215612168579160200282015b82811115612168578251825591602001919060010190612198565b5b8082111561217457600081556001016121b4565b60006020808352835180602085015260005b818110156121f6578581018301518582016040015282016121da565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610d7f57600080fd5b6000806040838503121561223f57600080fd5b823561224a81612217565b946020939093013593505050565b60006020828403121561226a57600080fd5b5035919050565b60008060006060848603121561228657600080fd5b833561229181612217565b925060208401356122a181612217565b929592945050506040919091013590565b6000602082840312156122c457600080fd5b81356122cf81612217565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612315576123156122d6565b604052919050565b600067ffffffffffffffff821115612337576123376122d6565b5060051b60200190565b600082601f83011261235257600080fd5b813560206123676123628361231d565b6122ec565b8083825260208201915060208460051b87010193508684111561238957600080fd5b602086015b848110156123ae5780356123a181612217565b835291830191830161238e565b509695505050505050565b600080604083850312156123cc57600080fd5b823567ffffffffffffffff8111156123e357600080fd5b6123ef85828601612341565b925050602083013561240081612217565b809150509250929050565b6000806040838503121561241e57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561246e5783516001600160a01b031683529284019291840191600101612449565b50909695505050505050565b6000806000806080858703121561249057600080fd5b843567ffffffffffffffff808211156124a857600080fd5b6124b488838901612341565b95506020915081870135818111156124cb57600080fd5b8701601f810189136124dc57600080fd5b80356124ea6123628261231d565b81815260059190911b8201840190848101908b83111561250957600080fd5b928501925b828410156125275783358252928501929085019061250e565b975050505060408701359350606087013591508082111561254757600080fd5b5061255487828801612341565b91505092959194509250565b6000806040838503121561257357600080fd5b823561257e81612217565b9150602083013561240081612217565b6000806000604084860312156125a357600080fd5b83359250602084013567ffffffffffffffff808211156125c257600080fd5b818601915086601f8301126125d657600080fd5b8135818111156125e557600080fd5b8760208260051b85010111156125fa57600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561246e57835183529284019291840191600101612629565b6000806040838503121561265857600080fd5b82359150602083013567ffffffffffffffff81111561267657600080fd5b61268285828601612341565b9150509250929050565b600181811c908216806126a057607f821691505b6020821081036126c057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561083b5761083b6126c6565b634e487b7160e01b600052603260045260246000fd5b60008261272257634e487b7160e01b600052601260045260246000fd5b500490565b600060018201612739576127396126c6565b5060010190565b60006020828403121561275257600080fd5b5051919050565b8181038181111561083b5761083b6126c6565b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b808202811582820484141761083b5761083b6126c6565b60006020828403121561281c57600080fd5b815180151581146122cf57600080fd5b6000602080838503121561283f57600080fd5b825167ffffffffffffffff81111561285657600080fd5b8301601f8101851361286757600080fd5b80516128756123628261231d565b81815260059190911b8201830190838101908783111561289457600080fd5b928401925b828410156128bb5783516128ac81612217565b82529284019290840190612899565b979650505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610a6d576000816000526020600020601f850160051c8101602086101561293a5750805b601f850160051c820191505b8181101561295957828155600101612946565b505050505050565b815167ffffffffffffffff81111561297b5761297b6122d6565b61298f81612989845461268c565b84612911565b602080601f8311600181146129c457600084156129ac5750858301515b600019600386901b1c1916600185901b178555612959565b600085815260208120601f198616915b828110156129f3578886015182559484019460019091019084016129d4565b5085821015612a115787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122032e19ddd38898ded02f62f3781daba35d27b6f0a623353095550cc29574256ed64736f6c63430008190033",
  "bytecodeSha1": "80f78268dc2ad24fe040f5102e89e65163d47850",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "149": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "147": [
            2369,
            2382,
            true
          ],
          "148": [
            2369,
            2417,
            true
          ]
        }
      },
      "2": {
        "ERC20Upgradeable._approve": {
          "139": [
            10591,
            10610,
            true
          ],
          "140": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "146": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "141": [
            11303,
            11340,
            false
          ],
          "142": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "143": [
            7951,
            7969,
            true
          ],
          "144": [
            8029,
            8045,
            true
          ],
          "145": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "138": [
            7152,
            7187,
            true
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "135": [
            8390,
            8400,
            true
          ],
          "136": [
            8456,
            8483,
            true
          ],
          "137": [
            8588,
            8604,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "134": [
            7775,
            7823,
            true
          ]
        },
        "SmartnodesCore.createUser": {
          "129": [
            4745,
            4777,
            true
          ]
        },
        "SmartnodesCore.createValidator": {
          "116": [
            5338,
            5375,
            true
          ],
          "117": [
            5458,
            5494,
            false
          ],
          "118": [
            5498,
            5523,
            true
          ]
        },
        "SmartnodesCore.getJobValidators": {
          "119": [
            12179,
            12197,
            true
          ],
          "120": [
            12230,
            12253,
            false
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "130": [
            12558,
            12591,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "126": [
            11045,
            11087,
            true
          ],
          "127": [
            11151,
            11182,
            false
          ],
          "128": [
            11202,
            11221,
            false
          ]
        },
        "SmartnodesCore.requestJob": {
          "132": [
            6610,
            6628,
            true
          ],
          "133": [
            6694,
            6728,
            true
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "131": [
            4293,
            4331,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "121": [
            9316,
            9331,
            true
          ],
          "122": [
            9446,
            9472,
            true
          ],
          "123": [
            9525,
            9535,
            true
          ],
          "124": [
            9659,
            9684,
            false
          ],
          "125": [
            10279,
            10318,
            true
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {
        "Initializable._isConstructor": {
          "15": [
            3101,
            3153
          ]
        }
      },
      "2": {
        "ERC20Upgradeable.__ERC20_init": {
          "102": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "114": [
            2381,
            2394
          ],
          "115": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "89": [
            10583,
            10651
          ],
          "90": [
            10661,
            10729
          ],
          "91": [
            10740,
            10776
          ],
          "92": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "103": [
            8827,
            8892
          ],
          "104": [
            8963,
            8985
          ],
          "105": [
            8995,
            9023
          ],
          "106": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "93": [
            11356,
            11424
          ],
          "94": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "95": [
            7943,
            8011
          ],
          "96": [
            8021,
            8085
          ],
          "97": [
            8192,
            8264
          ],
          "98": [
            8298,
            8336
          ],
          "99": [
            8356,
            8379
          ],
          "100": [
            8390,
            8421
          ],
          "101": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "6": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "9": [
            4907,
            4939
          ],
          "10": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "4": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "60": [
            7144,
            7229
          ],
          "61": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "14": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "7": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "52": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "62": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "11": [
            5712,
            5750
          ],
          "12": [
            5760,
            5787
          ],
          "13": [
            5797,
            5808
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "107": [
            8382,
            8438
          ],
          "108": [
            8448,
            8509
          ],
          "109": [
            8580,
            8634
          ],
          "110": [
            8645,
            8688
          ],
          "111": [
            8698,
            8738
          ],
          "112": [
            8811,
            8950
          ],
          "113": [
            8961,
            8994
          ]
        },
        "SmartnodesCore.completeJob": {
          "84": [
            7767,
            7824
          ],
          "85": [
            7835,
            7865
          ],
          "86": [
            7875,
            7903
          ],
          "87": [
            7960,
            7984
          ],
          "88": [
            7995,
            8024
          ]
        },
        "SmartnodesCore.createUser": {
          "63": [
            4737,
            4806
          ],
          "64": [
            4817,
            4995
          ],
          "65": [
            5006,
            5049
          ],
          "66": [
            5059,
            5074
          ]
        },
        "SmartnodesCore.createValidator": {
          "31": [
            5317,
            5426
          ],
          "32": [
            5437,
            5576
          ],
          "33": [
            5633,
            5895
          ],
          "34": [
            5906,
            5959
          ],
          "35": [
            6004,
            6039
          ],
          "36": [
            6050,
            6070
          ]
        },
        "SmartnodesCore.disputeJob": {
          "73": [
            8152,
            8172
          ],
          "74": [
            8182,
            8205
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "2": [
            13152,
            13175
          ]
        },
        "SmartnodesCore.getEmissionRate": {
          "5": [
            13257,
            13276
          ]
        },
        "SmartnodesCore.getJobValidators": {
          "37": [
            12171,
            12216
          ],
          "38": [
            12393,
            12417
          ]
        },
        "SmartnodesCore.getSupply": {
          "39": [
            13352,
            13377
          ]
        },
        "SmartnodesCore.getUserCount": {
          "67": [
            12925,
            12949
          ]
        },
        "SmartnodesCore.getValidatorCount": {
          "41": [
            13033,
            13062
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "68": [
            12550,
            12607
          ],
          "69": [
            12803,
            12846
          ]
        },
        "SmartnodesCore.initialize": {
          "16": [
            3146,
            3179
          ],
          "17": [
            3263,
            3280
          ],
          "18": [
            3290,
            3304
          ],
          "19": [
            3314,
            3336
          ],
          "20": [
            3385,
            3407
          ],
          "21": [
            3468,
            3490
          ],
          "22": [
            3544,
            3557
          ],
          "23": [
            3567,
            3587
          ],
          "24": [
            3610,
            3634
          ],
          "25": [
            3779,
            3808
          ],
          "26": [
            3977,
            4039
          ],
          "27": [
            3958,
            3961
          ],
          "28": [
            4060,
            4101
          ],
          "29": [
            4140,
            4157
          ],
          "30": [
            4167,
            4184
          ]
        },
        "SmartnodesCore.isLocked": {
          "3": [
            13529,
            13572
          ]
        },
        "SmartnodesCore.lockTokens": {
          "40": [
            9143,
            9174
          ]
        },
        "SmartnodesCore.mintTokens": {
          "53": [
            11024,
            11136
          ],
          "54": [
            11241,
            11258
          ],
          "55": [
            11638,
            11681
          ],
          "56": [
            11619,
            11622
          ],
          "57": [
            11912,
            11938
          ],
          "58": [
            11785,
            11788
          ],
          "59": [
            11959,
            11981
          ]
        },
        "SmartnodesCore.requestJob": {
          "75": [
            6602,
            6663
          ],
          "76": [
            6673,
            6781
          ],
          "77": [
            7054,
            7113
          ],
          "78": [
            7035,
            7038
          ],
          "79": [
            7179,
            7439
          ],
          "80": [
            7449,
            7491
          ],
          "81": [
            7502,
            7548
          ],
          "82": [
            7558,
            7570
          ],
          "83": [
            7581,
            7601
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "70": [
            4272,
            4387
          ],
          "71": [
            4397,
            4463
          ],
          "72": [
            4473,
            4516
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "42": [
            9308,
            9363
          ],
          "43": [
            9438,
            9507
          ],
          "44": [
            9517,
            9573
          ],
          "45": [
            9700,
            9753
          ],
          "46": [
            9890,
            10049
          ],
          "47": [
            10064,
            10118
          ],
          "48": [
            10254,
            10376
          ],
          "49": [
            10391,
            10417
          ],
          "50": [
            10431,
            10456
          ],
          "51": [
            10518,
            10557
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "8": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "271:13310:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:28:24;;;;;;;;;713:25:30;;;701:2;686:18;680:28:24;567:177:30;4770:197:2;;;;;;:::i;:::-;;:::i;:::-;;;1370:14:30;;1363:22;1345:41;;1333:2;1318:18;4770:197:2;1205:187:30;2542:35:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2542:35:24;;;;;;;;;;1778:25:30;;;-1:-1:-1;;;;;1839:32:30;;;1834:2;1819:18;;1812:60;1915:14;1908:22;1888:18;;;1881:50;1766:2;1751:18;2542:35:24;1582:355:30;3581:106:2;3668:12;;3581:106;;2314:35:24;;;;;;5529:286:2;;;;;;:::i;:::-;;:::i;2664:55:24:-;;;;;;:::i;:::-;;;;;;;;;;;;;;544:28;;;;;;3430:91:2;;;3512:2;2797:36:30;;2785:2;2770:18;3430:91:2;2655:184:30;1952:50:24;;1989:13;1952:50;;2489:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2489:47:24;;;;;;;;;;;;;;;;3127:25:30;;;-1:-1:-1;;;;;3188:32:30;;;3183:2;3168:18;;3161:60;3237:18;;;3230:34;;;;3295:2;3280:18;;3273:34;3338:3;3323:19;;3316:35;3400:4;3388:17;3208:3;3367:19;;3360:46;3114:3;3099:19;2489:47:24;2844:568:30;2446:37:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2446:37:24;;;;;;;;;;;;3644:25:30;;;-1:-1:-1;;;;;3705:32:30;;;3700:2;3685:18;;3678:60;3754:18;;;3747:34;3829:4;3817:17;3812:2;3797:18;;3790:45;3631:3;3616:19;2446:37:24;3417:424:30;13075:107:24;13159:16;;13075:107;;6210:236:2;;;;;;:::i;:::-;;:::i;3015:1176:24:-;;;;;;:::i;:::-;;:::i;:::-;;5206:871;;;;;;:::i;:::-;;:::i;13390:189::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13484:35:24;13454:4;13484:35;;;:20;:35;;;;;;;;;13562:10;;13536:15;;;:10;:15;;;;;;:22;;;:36;;;13390:189;2608:50;;;;;;:::i;:::-;;;;;;;;;;;;;;578:25;;;;;;12065:369;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13289:95::-;;;:::i;9088:93::-;;;;;;:::i;:::-;;:::i;12962:107::-;;;:::i;3745:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;9187:1439:24;;;;;;:::i;:::-;;:::i;505:33::-;;;;;;2704:102:2;;;:::i;2134:36:24:-;;;;;;10803:1185;;;;;;:::i;:::-;;:::i;6933:429:2:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4618:463:24:-;;;;;;:::i;:::-;;:::i;2355:35::-;;;;;;12859:97;;;:::i;12440:413::-;;;;;;:::i;:::-;;:::i;:::-;;;;8414:14:30;;8407:22;8389:41;;8461:2;8446:18;;8439:34;;;;8362:18;12440:413:24;8221:258:30;2725:52:24;;;;;;:::i;:::-;;;;;;;;;;;;;;13188:95;13264:12;;13188:95;;646:28;;;;;;2051:31;;;;;;4197:326;;;;;;:::i;:::-;;:::i;609:31::-;;;;;;2227:37;;;;;;8037:175;;;;;;:::i;:::-;;:::i;4313:149:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;6133:1475:24;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7614:417::-;;;;;;:::i;:::-;;:::i;416:39::-;;;;;-1:-1:-1;;;;;416:39:24;;;;;;-1:-1:-1;;;;;10787:32:30;;;10769:51;;10757:2;10742:18;416:39:24;10623:203:30;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;6210:236::-;929:10:6;6298:4:2;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:2;;;;;;;;;;6298:4;;929:10:6;6352:66:2;;929:10:6;;6377:27:2;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;3015:1176:24:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;11680:2:30;2361:107:1;;;11662:21:30;11719:2;11699:18;;;11692:30;11758:34;11738:18;;;11731:62;-1:-1:-1;;;11809:18:30;;;11802:44;11863:19;;2361:107:1;;;;;;;;;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;3146:33:24::1;;;;;;;;;;;;;;-1:-1:-1::0;;;3146:33:24::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;3146:33:24::1;;::::0;:12:::1;:33::i;:::-;3279:1;3263:13;:17:::0;;;3290:10:::1;:14:::0;;;3314:18:::1;:22:::0;3400:7:::1;3385:12;:22:::0;3481:9:::1;3468:10;:22:::0;3554:3:::1;3544:7;:13:::0;3582:5:::1;3567:12;:20:::0;-1:-1:-1;3610:20:24::1;:24:::0;3666:12:::1;3715;3757;3779:29;3757:12:::0;3715;3779:29:::1;:::i;:::-;;;3918:6;3913:137;3934:15;:22;3930:1;:26;3913:137;;;3977:62;3983:15;3999:1;3983:18;;;;;;;;:::i;:::-;;;;;;;4016:15;:22;4003:10;:35;;;;:::i;:::-;3977:5;:62::i;:::-;3958:3;;3913:137;;;;4060:41;4066:16;4084;4060:5;:41::i;:::-;-1:-1:-1::0;;4156:1:24::1;4140:13;:17:::0;-1:-1:-1;4183:1:24::1;4167:13;:17:::0;2645:66:1;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;3015:1176:24;;:::o;5206:871::-;5359:10;5338:32;;;;:20;:32;;;;;;:37;5317:109;;;;-1:-1:-1;;;5317:109:24;;12449:2:30;5317:109:24;;;12431:21:30;12488:2;12468:18;;;12461:30;12527:27;12507:18;;;12500:55;12572:18;;5317:109:24;12247:349:30;5317:109:24;5468:10;3819:7:2;3845:18;;;:9;:18;;;;;;5483:11:24;-1:-1:-1;5458:36:24;:65;;;;;5513:10;;5498:11;:25;;5458:65;5437:139;;;;-1:-1:-1;;;5437:139:24;;12803:2:30;5437:139:24;;;12785:21:30;12842:2;12822:18;;;12815:30;12881:29;12861:18;;;12854:57;12928:18;;5437:139:24;12601:351:30;5437:139:24;5666:229;;;;;;;;5694:18;;;5666:229;;;5744:10;5666:229;;;;;;;;;;;;;5819:10;;;5666:229;;;;;;-1:-1:-1;5666:229:24;;;;;;5882:2;5666:229;;;;;;5633:30;;;:10;:30;;;;;:262;;;;;;;;;;;-1:-1:-1;;;;;;5633:262:24;-1:-1:-1;;;;;5633:262:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5633:262:24;5666:229;5633:262;;;;;;;;;;5941:18;;5906:32;;;:20;:32;;;;;;:53;6028:10;6004:35;;5744:10;6004:11;:35::i;:::-;6050:18;:20;;;:18;:20;;;:::i;:::-;;;;;;5206:871;;:::o;12065:369::-;12143:16;12187:10;;12179:5;:18;12171:45;;;;-1:-1:-1;;;12171:45:24;;13299:2:30;12171:45:24;;;13281:21:30;13338:2;13318:18;;;13311:30;-1:-1:-1;;;13357:18:30;;;13350:44;13411:18;;12171:45:24;13097:338:30;12171:45:24;12230:11;;;;:4;:11;;;;;:14;:23;;;12226:202;;12269:30;12302:11;;;:4;:11;;;;;;;;:26;;12269:59;;;;;;;;;;;;;;;;;;;12302:26;;12269:59;;;12302:26;12269:59;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12269:59:24;;;;;;;;;;;;;;;;-1:-1:-1;12269:59:24;;12065:369;-1:-1:-1;;;;;;;12065:369:24:o;12226:202::-;12393:24;;-1:-1:-1;;;12393:24:24;;13642:2:30;12393:24:24;;;13624:21:30;13681:2;13661:18;;;13654:30;-1:-1:-1;;;13700:18:30;;;13693:44;13754:18;;12393:24:24;13440:338:30;13289:95:24;13333:7;13359:4;-1:-1:-1;;;;;13359:16:24;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13352:25;;13289:95;:::o;9088:93::-;9143:31;9155:10;9167:6;9143:11;:31::i;:::-;9088:93;:::o;12962:107::-;13014:7;13061:1;13040:18;;:22;;;;:::i;9187:1439::-;9287:10;9244:19;9266:32;;;:20;:32;;;;;;9316:15;9308:55;;;;-1:-1:-1;;;9308:55:24;;14307:2:30;9308:55:24;;;14289:21:30;14346:2;14326:18;;;14319:30;14385:29;14365:18;;;14358:57;14432:18;;9308:55:24;14105:351:30;9308:55:24;9374:27;9404:23;;;:10;:23;;;;;9456:16;;;;9446:26;;;9438:69;;;;-1:-1:-1;;;9438:69:24;;14663:2:30;9438:69:24;;;14645:21:30;14702:2;14682:18;;;14675:30;14741:32;14721:18;;;14714:60;14791:18;;9438:69:24;14461:354:30;9438:69:24;9534:1;9525:6;:10;9517:56;;;;-1:-1:-1;;;9517:56:24;;;;;;;:::i;:::-;9659:9;:20;;;9683:1;9659:25;9655:965;;9741:12;;9723:30;;:15;:30;:::i;:::-;9700:20;;;:53;9851:16;;;;9829:19;;9851:25;;9870:6;;9851:25;:::i;:::-;9890:26;;10025:10;;9890:159;;-1:-1:-1;;;9890:159:24;;9953:10;9890:159;;;15418:51:30;15485:18;;;15478:34;;;10010:25:24;;;;15528:18:30;;;15521:50;9829:47:24;;-1:-1:-1;;;;;;9890:26:24;;:45;;15391:18:30;;9890:159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;10097:20:24;;;;10069:49;;713:25:30;;;10085:10:24;;10069:49;;701:2:30;686:18;10069:49:24;;;;;;;;9686:470;2080:637:1;3015:1176:24;;:::o;9655:965::-;10298:9;:20;;;10279:15;:39;;10254:122;;;;-1:-1:-1;;;10254:122:24;;15784:2:30;10254:122:24;;;15766:21:30;15823:2;15803:18;;;15796:30;15862:26;15842:18;;;15835:54;15906:18;;10254:122:24;15582:348:30;10254:122:24;10411:6;10391:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;10431:25:24;;-1:-1:-1;10437:10:24;10449:6;10431:5;:25::i;:::-;10523:34;;713:25:30;;;10538:10:24;;10523:34;;701:2:30;686:18;10523:34:24;;;;;;;9234:1392;;9187:1439;:::o;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;10803:1185:24:-;2903:24;;-1:-1:-1;;;;;2903:24:24;2889:10;:38;2868:123;;;;-1:-1:-1;;;2868:123:24;;;;;;;:::i;:::-;1989:13:::1;11061:12;;11045:13;3668:12:2::0;;;3581:106;11045:13:24::1;:28;;;;:::i;:::-;:42;;11024:112;;;::::0;-1:-1:-1;;;11024:112:24;;16544:2:30;11024:112:24::1;::::0;::::1;16526:21:30::0;16583:2;16563:18;;;16556:30;16622:25;16602:18;;;16595:53;16665:18;;11024:112:24::1;16342:347:30::0;11024:112:24::1;11175:7;;11151:20;;:31;11147:136;;11217:4;11202:12;;:19;11198:75;;;11257:1;11241:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11198:75:24::1;11293:28;11346:3;11325:12;;11340:2;11325:17;;;;:::i;:::-;11324:25;;;;:::i;:::-;11293:56;;11359:25;11409:3;11388:12;;11403:2;11388:17;;;;:::i;:::-;11387:25;;;;:::i;:::-;11359:53;;11476:23;11537:16;:23;11502:20;:58;;;;:::i;:::-;11476:84;;11575:9;11570:122;11594:16;:23;11590:1;:27;11570:122;;;11638:43;11644:16;11661:1;11644:19;;;;;;;;:::i;:::-;;;;;;;11665:15;11638:5;:43::i;:::-;11619:3;;11570:122;;;;11749:9;11744:205;11768:8;:15;11764:1;:19;11744:205;;;11804:14;11883;11846:17;11823;11841:1;11823:20;;;;;;;;:::i;:::-;;;;;;;:40;;;;:::i;:::-;11822:75;;;;:::i;:::-;11804:94;;11912:26;11918:8;11927:1;11918:11;;;;;;;;:::i;:::-;;;;;;;11931:6;11912:5;:26::i;:::-;-1:-1:-1::0;11785:3:24::1;;11744:205;;;-1:-1:-1::0;11959:20:24::1;:22:::0;;;:20:::1;:22;::::0;::::1;:::i;:::-;;;;;;11014:974;;;10803:1185:::0;;;;:::o;6933:429:2:-;929:10:6;7026:4:2;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:2;;;;;;;;;;7026:4;;929:10:6;7152:35:2;;;;7144:85;;;;-1:-1:-1;;;7144:85:2;;17069:2:30;7144:85:2;;;17051:21:30;17108:2;17088:18;;;17081:30;17147:34;17127:18;;;17120:62;-1:-1:-1;;;17198:18:30;;;17191:35;17243:19;;7144:85:2;16867:401:30;7144:85:2;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;4618:463:24:-;4761:10;4745:27;;;;:15;:27;;;;;;:32;4737:69;;;;-1:-1:-1;;;4737:69:24;;17475:2:30;4737:69:24;;;17457:21:30;17514:2;17494:18;;;17487:30;17553:26;17533:18;;;17526:54;17597:18;;4737:69:24;17273:348:30;4737:69:24;4840:155;;;;;;;;4863:13;;;4840:155;;;4903:10;4840:155;;;;;;;;;;;;;4982:2;4840:155;;;;;;-1:-1:-1;4817:20:24;;;:5;:20;;;;;:178;;;;;;;;;;;-1:-1:-1;;;;;;4817:178:24;-1:-1:-1;;;;;4817:178:24;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4817:178:24;4840:155;4817:178;;;;;;;;;;5036:13;;5006:27;;;:15;:27;;;;;;:43;;;5036:13;;5059:15;5036:13;5059:15;:::i;:::-;;;;;;4618:463;:::o;12859:97::-;12906:7;12948:1;12932:13;;:17;;;;:::i;12440:413::-;12525:4;12531:7;12573:18;;12558:12;:33;12550:57;;;;-1:-1:-1;;;12550:57:24;;17828:2:30;12550:57:24;;;17810:21:30;17867:2;17847:18;;;17840:30;-1:-1:-1;;;17886:18:30;;;17879:41;17937:18;;12550:57:24;17626:335:30;12550:57:24;12617:28;12648:24;;;:10;:24;;;;;;12698:26;;;12756:27;;;12698:95;;-1:-1:-1;;;12698:95:24;;-1:-1:-1;;;;;12756:27:24;;;12698:95;;;10769:51:30;12648:24:24;;12617:28;12698:26;;:44;;10742:18:30;;12698:95:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12821:24;;;;;12682:111;;12821:24;;-1:-1:-1;12440:413:24;;-1:-1:-1;;;12440:413:24:o;4197:326::-;4293:24;;-1:-1:-1;;;;;4293:24:24;:38;4272:115;;;;-1:-1:-1;;;4272:115:24;;18450:2:30;4272:115:24;;;18432:21:30;18489:2;18469:18;;;18462:30;18528:32;18508:18;;;18501:60;18578:18;;4272:115:24;18248:354:30;4272:115:24;4397:26;:66;;-1:-1:-1;;;;;4397:66:24;;;-1:-1:-1;;;;;;4397:66:24;;;;;;;;4473:24;:43;;;;;;;;4197:326::o;8037:175::-;2903:24;;-1:-1:-1;;;;;2903:24:24;2889:10;:38;2868:123;;;;-1:-1:-1;;;2868:123:24;;;;;;;:::i;:::-;8113:15:::1;8131:11:::0;;;:4:::1;:11;::::0;;;;;8152:12:::1;::::0;::::1;:20:::0;;-1:-1:-1;;8152:20:24::1;::::0;;8187:18;;8131:11;;8136:5;;8187:18:::1;::::0;8113:15;8187:18:::1;8103:109;8037:175:::0;:::o;6133:1475::-;2903:24;;6307:29;;-1:-1:-1;;;;;2903:24:24;2889:10;:38;2868:123;;;;-1:-1:-1;;;2868:123:24;;;;;;;:::i;:::-;6627:1:::1;6610:11;;6622:1;6610:14;;;;;;;:::i;:::-;;;;;;;:18;6602:61;;;::::0;-1:-1:-1;;;6602:61:24;;18809:2:30;6602:61:24::1;::::0;::::1;18791:21:30::0;18848:2;18828:18;;;18821:30;18887:32;18867:18;;;18860:60;18937:18;;6602:61:24::1;18607:354:30::0;6602:61:24::1;6694:29;::::0;;;:17:::1;:29;::::0;;;;;:34;6673:108:::1;;;::::0;-1:-1:-1;;;6673:108:24;;19168:2:30;6673:108:24::1;::::0;::::1;19150:21:30::0;19207:2;19187:18;;;19180:30;19246:29;19226:18;;;19219:57;19293:18;;6673:108:24::1;18966:351:30::0;6673:108:24::1;6827:26;::::0;:69:::1;::::0;;-1:-1:-1;;;6827:69:24;;;;6792:32:::1;::::0;-1:-1:-1;;;;;6827:26:24::1;::::0;:67:::1;::::0;:69:::1;::::0;;::::1;::::0;6792:32;;6827:69;;;;;;;:26;:69:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;6827:69:24::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;6792:104;;6906:30;6953:15;:22;6939:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;6939:37:24::1;;6906:70;;6992:9;6987:137;7011:15;:22;7007:1;:26;6987:137;;;7073:20;:40;7094:15;7110:1;7094:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;7073:40:24::1;-1:-1:-1::0;;;;;7073:40:24::1;;;;;;;;;;;;;7054:13;7068:1;7054:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:59;7035:3:::1;;6987:137;;;-1:-1:-1::0;7198:241:24::1;::::0;;::::1;::::0;::::1;::::0;;7220:10:::1;::::0;7198:241;;7252:10:::1;7198:241;::::0;::::1;::::0;;;;;;;;;;7344:11;7330:33:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;7330:33:24::1;;7198:241;;;;7389:11;;7198:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;7198:241:24;;;-1:-1:-1;;7424:4:24::1;7198:241;::::0;;::::1;::::0;;;7184:10:::1;::::0;7179:16;;:4:::1;:16:::0;;;;;;;:260;;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;7179:260:24::1;-1:-1:-1::0;;;;;7179:260:24;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:16;;:260:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;7179:260:24;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7179:260:24::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7179:260:24::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7179:260:24::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;7179:260:24::1;::::0;::::1;;::::0;;;::::1;::::0;;7481:10:::1;::::0;-1:-1:-1;7449:29:24;;;:17:::1;:29;::::0;;;;;;:42;;;7507:41;::::1;::::0;::::1;::::0;7532:15;;7507:41:::1;:::i;:::-;;;;;;;;7558:10;:12:::0;;;:10:::1;:12;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;7588:13:24;;6133:1475;-1:-1:-1;;;;;;6133:1475:24:o;7614:417::-;2903:24;;7739:16;;-1:-1:-1;;;;;2903:24:24;2889:10;:38;2868:123;;;;-1:-1:-1;;;2868:123:24;;;;;;;:::i;:::-;7794:11:::1;::::0;;;:4:::1;:11;::::0;;;;:22:::1;;:29:::0;7775:15;;:48:::1;7767:57;;;::::0;::::1;;7835:11;::::0;;;:4:::1;:11;::::0;;;;;;;:30;;::::1;::::0;:19:::1;::::0;;::::1;::::0;:30;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7898:5:24::1;7875:11:::0;;;:4:::1;:11;::::0;;;;;:20:::1;;:28:::0;;-1:-1:-1;;7875:28:24::1;::::0;;7965:19;7880:5;;7965:19:::1;::::0;::::1;8002:11;::::0;;;:4:::1;:11;::::0;;;;;;;;:22:::1;;7995:29:::0;;;;;;::::1;::::0;;;;;;;;;;8002:22;;7995:29;::::1;8002:22:::0;7995:29;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7614:417:::0;;;;:::o;10460:370:2:-;-1:-1:-1;;;;;10591:19:2;;10583:68;;;;-1:-1:-1;;;10583:68:2;;20485:2:30;10583:68:2;;;20467:21:30;20524:2;20504:18;;;20497:30;20563:34;20543:18;;;20536:62;-1:-1:-1;;;20614:18:30;;;20607:34;20658:19;;10583:68:2;20283:400:30;10583:68:2;-1:-1:-1;;;;;10669:21:2;;10661:68;;;;-1:-1:-1;;;10661:68:2;;20890:2:30;10661:68:2;;;20872:21:30;20929:2;20909:18;;;20902:30;20968:34;20948:18;;;20941:62;-1:-1:-1;;;21019:18:30;;;21012:32;21061:19;;10661:68:2;20688:398:30;10661:68:2;-1:-1:-1;;;;;10740:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;713:25:30;;;10791:32:2;;686:18:30;10791:32:2;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:2;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:2;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;21293:2:30;11356:68:2;;;21275:21:30;21332:2;21312:18;;;21305:30;21371:31;21351:18;;;21344:59;21420:18;;11356:68:2;21091:353:30;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:2;;7943:68;;;;-1:-1:-1;;;7943:68:2;;21651:2:30;7943:68:2;;;21633:21:30;21690:2;21670:18;;;21663:30;21729:34;21709:18;;;21702:62;-1:-1:-1;;;21780:18:30;;;21773:35;21825:19;;7943:68:2;21449:401:30;7943:68:2;-1:-1:-1;;;;;8029:16:2;;8021:64;;;;-1:-1:-1;;;8021:64:2;;22057:2:30;8021:64:2;;;22039:21:30;22096:2;22076:18;;;22069:30;22135:34;22115:18;;;22108:62;-1:-1:-1;;;22186:18:30;;;22179:33;22229:19;;8021:64:2;21855:399:30;8021:64:2;-1:-1:-1;;;;;8167:15:2;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:2;;22461:2:30;8192:72:2;;;22443:21:30;22500:2;22480:18;;;22473:30;22539:34;22519:18;;;22512:62;-1:-1:-1;;;22590:18:30;;;22583:36;22636:19;;8192:72:2;22259:402:30;8192:72:2;-1:-1:-1;;;;;8298:15:2;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:2;8404:4;-1:-1:-1;;;;;8395:26:2;;8414:6;8395:26;;;;713:25:30;;701:2;686:18;;567:177;8395:26:2;;;;;;;;8432:37;3015:1176:24;2116:147:2;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;8752:389::-;-1:-1:-1;;;;;8835:21:2;;8827:65;;;;-1:-1:-1;;;8827:65:2;;23280:2:30;8827:65:2;;;23262:21:30;23319:2;23299:18;;;23292:30;23358:33;23338:18;;;23331:61;23409:18;;8827:65:2;23078:355:30;8827:65:2;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:2;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:2;;713:25:30;;;-1:-1:-1;;;;;9038:37:2;;;9055:1;;9038:37;;701:2:30;686:18;9038:37:2;;;;;;;2116:147;;:::o;8310:691:24:-;8399:1;8390:6;:10;8382:56;;;;-1:-1:-1;;;8382:56:24;;;;;;;:::i;:::-;8477:6;8456:17;8466:6;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;8456:17:24;:27;;8448:61;;;;-1:-1:-1;;;8448:61:24;;23640:2:30;8448:61:24;;;23622:21:30;23679:2;23659:18;;;23652:30;-1:-1:-1;;;23698:18:30;;;23691:51;23759:18;;8448:61:24;23438:345:30;8448:61:24;-1:-1:-1;;;;;8542:28:24;;8520:19;8542:28;;;:20;:28;;;;;;;8588:16;;;8580:54;;;;-1:-1:-1;;;8580:54:24;;23990:2:30;8580:54:24;;;23972:21:30;24029:2;24009:18;;;24002:30;24068:27;24048:18;;;24041:55;24113:18;;8580:54:24;23788:349:30;8580:54:24;8645:43;8658:6;8674:4;8681:6;8645:12;:43::i;:::-;-1:-1:-1;8698:23:24;;;;:10;:23;;;;;:30;;:40;;8732:6;;8698:23;:40;;8732:6;;8698:40;:::i;:::-;;;;-1:-1:-1;;8748:19:24;8770:23;;;:10;:23;;;;;;;:30;;;8811:26;;8930:10;;8811:139;;-1:-1:-1;;;8811:139:24;;-1:-1:-1;;;;;15436:32:30;;;8811:139:24;;;15418:51:30;15485:18;;;15478:34;;;8915:25:24;;;;15528:18:30;;;15521:50;8770:30:24;;8811:26;;:45;;15391:18:30;;8811:139:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8979:6;-1:-1:-1;;;;;8966:28:24;;8987:6;8966:28;;;;713:25:30;;701:2;686:18;;567:177;2269:159:2;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2381:5:2::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:2::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:548:30;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:131::-;-1:-1:-1;;;;;824:31:30;;814:42;;804:70;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:30:o;1397:180::-;1456:6;1509:2;1497:9;1488:7;1484:23;1480:32;1477:52;;;1525:1;1522;1515:12;1477:52;-1:-1:-1;1548:23:30;;1397:180;-1:-1:-1;1397:180:30:o;1942:456::-;2019:6;2027;2035;2088:2;2076:9;2067:7;2063:23;2059:32;2056:52;;;2104:1;2101;2094:12;2056:52;2143:9;2130:23;2162:31;2187:5;2162:31;:::i;:::-;2212:5;-1:-1:-1;2269:2:30;2254:18;;2241:32;2282:33;2241:32;2282:33;:::i;:::-;1942:456;;2334:7;;-1:-1:-1;;;2388:2:30;2373:18;;;;2360:32;;1942:456::o;2403:247::-;2462:6;2515:2;2503:9;2494:7;2490:23;2486:32;2483:52;;;2531:1;2528;2521:12;2483:52;2570:9;2557:23;2589:31;2614:5;2589:31;:::i;:::-;2639:5;2403:247;-1:-1:-1;;;2403:247:30:o;3846:127::-;3907:10;3902:3;3898:20;3895:1;3888:31;3938:4;3935:1;3928:15;3962:4;3959:1;3952:15;3978:275;4049:2;4043:9;4114:2;4095:13;;-1:-1:-1;;4091:27:30;4079:40;;4149:18;4134:34;;4170:22;;;4131:62;4128:88;;;4196:18;;:::i;:::-;4232:2;4225:22;3978:275;;-1:-1:-1;3978:275:30:o;4258:183::-;4318:4;4351:18;4343:6;4340:30;4337:56;;;4373:18;;:::i;:::-;-1:-1:-1;4418:1:30;4414:14;4430:4;4410:25;;4258:183::o;4446:743::-;4500:5;4553:3;4546:4;4538:6;4534:17;4530:27;4520:55;;4571:1;4568;4561:12;4520:55;4607:6;4594:20;4633:4;4657:60;4673:43;4713:2;4673:43;:::i;:::-;4657:60;:::i;:::-;4739:3;4763:2;4758:3;4751:15;4791:4;4786:3;4782:14;4775:21;;4848:4;4842:2;4839:1;4835:10;4827:6;4823:23;4819:34;4805:48;;4876:3;4868:6;4865:15;4862:35;;;4893:1;4890;4883:12;4862:35;4929:4;4921:6;4917:17;4943:217;4959:6;4954:3;4951:15;4943:217;;;5039:3;5026:17;5056:31;5081:5;5056:31;:::i;:::-;5100:18;;5138:12;;;;4976;;4943:217;;;-1:-1:-1;5178:5:30;4446:743;-1:-1:-1;;;;;;4446:743:30:o;5194:483::-;5287:6;5295;5348:2;5336:9;5327:7;5323:23;5319:32;5316:52;;;5364:1;5361;5354:12;5316:52;5404:9;5391:23;5437:18;5429:6;5426:30;5423:50;;;5469:1;5466;5459:12;5423:50;5492:61;5545:7;5536:6;5525:9;5521:22;5492:61;:::i;:::-;5482:71;;;5603:2;5592:9;5588:18;5575:32;5616:31;5641:5;5616:31;:::i;:::-;5666:5;5656:15;;;5194:483;;;;;:::o;5682:248::-;5750:6;5758;5811:2;5799:9;5790:7;5786:23;5782:32;5779:52;;;5827:1;5824;5817:12;5779:52;-1:-1:-1;;5850:23:30;;;5920:2;5905:18;;;5892:32;;-1:-1:-1;5682:248:30:o;5935:658::-;6106:2;6158:21;;;6228:13;;6131:18;;;6250:22;;;6077:4;;6106:2;6329:15;;;;6303:2;6288:18;;;6077:4;6372:195;6386:6;6383:1;6380:13;6372:195;;;6451:13;;-1:-1:-1;;;;;6447:39:30;6435:52;;6542:15;;;;6507:12;;;;6483:1;6401:9;6372:195;;;-1:-1:-1;6584:3:30;;5935:658;-1:-1:-1;;;;;;5935:658:30:o;6598:1433::-;6759:6;6767;6775;6783;6836:3;6824:9;6815:7;6811:23;6807:33;6804:53;;;6853:1;6850;6843:12;6804:53;6893:9;6880:23;6922:18;6963:2;6955:6;6952:14;6949:34;;;6979:1;6976;6969:12;6949:34;7002:61;7055:7;7046:6;7035:9;7031:22;7002:61;:::i;:::-;6992:71;;7082:2;7072:12;;7137:2;7126:9;7122:18;7109:32;7166:2;7156:8;7153:16;7150:36;;;7182:1;7179;7172:12;7150:36;7205:24;;7260:4;7252:13;;7248:27;-1:-1:-1;7238:55:30;;7289:1;7286;7279:12;7238:55;7325:2;7312:16;7348:60;7364:43;7404:2;7364:43;:::i;7348:60::-;7442:15;;;7524:1;7520:10;;;;7512:19;;7508:28;;;7473:12;;;;7548:19;;;7545:39;;;7580:1;7577;7570:12;7545:39;7604:11;;;;7624:142;7640:6;7635:3;7632:15;7624:142;;;7706:17;;7694:30;;7657:12;;;;7744;;;;7624:142;;;7785:5;-1:-1:-1;;;;7837:2:30;7822:18;;7809:32;;-1:-1:-1;7894:2:30;7879:18;;7866:32;;-1:-1:-1;7910:16:30;;;7907:36;;;7939:1;7936;7929:12;7907:36;;7962:63;8017:7;8006:8;7995:9;7991:24;7962:63;:::i;:::-;7952:73;;;6598:1433;;;;;;;:::o;8484:388::-;8552:6;8560;8613:2;8601:9;8592:7;8588:23;8584:32;8581:52;;;8629:1;8626;8619:12;8581:52;8668:9;8655:23;8687:31;8712:5;8687:31;:::i;:::-;8737:5;-1:-1:-1;8794:2:30;8779:18;;8766:32;8807:33;8766:32;8807:33;:::i;8877:683::-;8972:6;8980;8988;9041:2;9029:9;9020:7;9016:23;9012:32;9009:52;;;9057:1;9054;9047:12;9009:52;9093:9;9080:23;9070:33;;9154:2;9143:9;9139:18;9126:32;9177:18;9218:2;9210:6;9207:14;9204:34;;;9234:1;9231;9224:12;9204:34;9272:6;9261:9;9257:22;9247:32;;9317:7;9310:4;9306:2;9302:13;9298:27;9288:55;;9339:1;9336;9329:12;9288:55;9379:2;9366:16;9405:2;9397:6;9394:14;9391:34;;;9421:1;9418;9411:12;9391:34;9474:7;9469:2;9459:6;9456:1;9452:14;9448:2;9444:23;9440:32;9437:45;9434:65;;;9495:1;9492;9485:12;9434:65;9526:2;9522;9518:11;9508:21;;9548:6;9538:16;;;;;8877:683;;;;;:::o;9565:632::-;9736:2;9788:21;;;9858:13;;9761:18;;;9880:22;;;9707:4;;9736:2;9959:15;;;;9933:2;9918:18;;;9707:4;10002:169;10016:6;10013:1;10010:13;10002:169;;;10077:13;;10065:26;;10146:15;;;;10111:12;;;;10038:1;10031:9;10002:169;;10202:416;10295:6;10303;10356:2;10344:9;10335:7;10331:23;10327:32;10324:52;;;10372:1;10369;10362:12;10324:52;10408:9;10395:23;10385:33;;10469:2;10458:9;10454:18;10441:32;10496:18;10488:6;10485:30;10482:50;;;10528:1;10525;10518:12;10482:50;10551:61;10604:7;10595:6;10584:9;10580:22;10551:61;:::i;:::-;10541:71;;;10202:416;;;;;:::o;10831:380::-;10910:1;10906:12;;;;10953;;;10974:61;;11028:4;11020:6;11016:17;11006:27;;10974:61;11081:2;11073:6;11070:14;11050:18;11047:38;11044:161;;11127:10;11122:3;11118:20;11115:1;11108:31;11162:4;11159:1;11152:15;11190:4;11187:1;11180:15;11044:161;;10831:380;;;:::o;11216:127::-;11277:10;11272:3;11268:20;11265:1;11258:31;11308:4;11305:1;11298:15;11332:4;11329:1;11322:15;11348:125;11413:9;;;11434:10;;;11431:36;;;11447:18;;:::i;11893:127::-;11954:10;11949:3;11945:20;11942:1;11935:31;11985:4;11982:1;11975:15;12009:4;12006:1;11999:15;12025:217;12065:1;12091;12081:132;;12135:10;12130:3;12126:20;12123:1;12116:31;12170:4;12167:1;12160:15;12198:4;12195:1;12188:15;12081:132;-1:-1:-1;12227:9:30;;12025:217::o;12957:135::-;12996:3;13017:17;;;13014:43;;13037:18;;:::i;:::-;-1:-1:-1;13084:1:30;13073:13;;12957:135::o;13783:184::-;13853:6;13906:2;13894:9;13885:7;13881:23;13877:32;13874:52;;;13922:1;13919;13912:12;13874:52;-1:-1:-1;13945:16:30;;13783:184;-1:-1:-1;13783:184:30:o;13972:128::-;14039:9;;;14060:11;;;14057:37;;;14074:18;;:::i;14820:397::-;15022:2;15004:21;;;15061:2;15041:18;;;15034:30;15100:34;15095:2;15080:18;;15073:62;-1:-1:-1;;;15166:2:30;15151:18;;15144:31;15207:3;15192:19;;14820:397::o;15935:402::-;16137:2;16119:21;;;16176:2;16156:18;;;16149:30;16215:34;16210:2;16195:18;;16188:62;-1:-1:-1;;;16281:2:30;16266:18;;16259:36;16327:3;16312:19;;15935:402::o;16694:168::-;16767:9;;;16798;;16815:15;;;16809:22;;16795:37;16785:71;;16836:18;;:::i;17966:277::-;18033:6;18086:2;18074:9;18065:7;18061:23;18057:32;18054:52;;;18102:1;18099;18092:12;18054:52;18134:9;18128:16;18187:5;18180:13;18173:21;18166:5;18163:32;18153:60;;18209:1;18206;18199:12;19322:956;19417:6;19448:2;19491;19479:9;19470:7;19466:23;19462:32;19459:52;;;19507:1;19504;19497:12;19459:52;19540:9;19534:16;19573:18;19565:6;19562:30;19559:50;;;19605:1;19602;19595:12;19559:50;19628:22;;19681:4;19673:13;;19669:27;-1:-1:-1;19659:55:30;;19710:1;19707;19700:12;19659:55;19739:2;19733:9;19762:60;19778:43;19818:2;19778:43;:::i;19762:60::-;19856:15;;;19938:1;19934:10;;;;19926:19;;19922:28;;;19887:12;;;;19962:19;;;19959:39;;;19994:1;19991;19984:12;19959:39;20018:11;;;;20038:210;20054:6;20049:3;20046:15;20038:210;;;20127:3;20121:10;20144:31;20169:5;20144:31;:::i;:::-;20188:18;;20071:12;;;;20226;;;;20038:210;;;20267:5;19322:956;-1:-1:-1;;;;;;;19322:956:30:o;22666:407::-;22868:2;22850:21;;;22907:2;22887:18;;;22880:30;22946:34;22941:2;22926:18;;22919:62;-1:-1:-1;;;23012:2:30;22997:18;;22990:41;23063:3;23048:19;;22666:407::o;24268:543::-;24370:2;24365:3;24362:11;24359:446;;;24406:1;24430:5;24427:1;24420:16;24474:4;24471:1;24461:18;24544:2;24532:10;24528:19;24525:1;24521:27;24515:4;24511:38;24580:4;24568:10;24565:20;24562:47;;;-1:-1:-1;24603:4:30;24562:47;24658:2;24653:3;24649:12;24646:1;24642:20;24636:4;24632:31;24622:41;;24713:82;24731:2;24724:5;24721:13;24713:82;;;24776:17;;;24757:1;24746:13;24713:82;;;24717:3;;;24268:543;;;:::o;24987:1345::-;25113:3;25107:10;25140:18;25132:6;25129:30;25126:56;;;25162:18;;:::i;:::-;25191:97;25281:6;25241:38;25273:4;25267:11;25241:38;:::i;:::-;25235:4;25191:97;:::i;:::-;25343:4;;25400:2;25389:14;;25417:1;25412:663;;;;26119:1;26136:6;26133:89;;;-1:-1:-1;26188:19:30;;;26182:26;26133:89;-1:-1:-1;;24944:1:30;24940:11;;;24936:24;24932:29;24922:40;24968:1;24964:11;;;24919:57;26235:81;;25382:944;;25412:663;24215:1;24208:14;;;24252:4;24239:18;;-1:-1:-1;;25448:20:30;;;25566:236;25580:7;25577:1;25574:14;25566:236;;;25669:19;;;25663:26;25648:42;;25761:27;;;;25729:1;25717:14;;;;25596:19;;25566:236;;;25570:3;25830:6;25821:7;25818:19;25815:201;;;25891:19;;;25885:26;-1:-1:-1;;25974:1:30;25970:14;;;25986:3;25966:24;25962:37;25958:42;25943:58;25928:74;;25815:201;-1:-1:-1;;;;;26062:1:30;26046:14;;;26042:22;26029:36;;-1:-1:-1;24987:1345:30:o",
  "language": "Solidity",
  "natspec": {
    "details": "An ERC20 contract for managing off-chain networks",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createUser(bytes32)": {
        "details": "Create a User, limit one per address & public key hash (RSA)"
      },
      "createValidator(bytes32,uint256)": {
        "details": "Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint256)": {
        "details": "Validator token unlocking, 30 day withdrawal period."
      },
      "mintTokens(address[],uint256[],uint256,address[])": {
        "details": "Mint tokens for updating state rewards, distribute 40/60 among validators and workers Updates the emission rate and halving accordingly"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "title": "SmartNodes",
    "version": 1
  },
  "offset": [
    271,
    13581
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x167 JUMPI DUP1 PUSH4 0xBC60BD48 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD8DF5DC1 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0xD93D9BEB EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0xE63022AA EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xF3259572 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0xF79621BD EQ PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC60BD48 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xC0A77DA9 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0xC8DF245A EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x6C6 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xABF7BFD8 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xB115F50D EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xB7797537 EQ PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xA3273D22 EQ PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x365B98B2 GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x4B759088 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x4B759088 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x6817DD5B EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x7071688A EQ PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x462D0B2E EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x2FABA6AE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x365 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AD PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x338 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x2CC PUSH11 0x115EEC47F6CF7E35000000 DUP2 JUMP JUMPDEST PUSH2 0x41B PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x495 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x72 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EE PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x240B JUMP JUMPDEST PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6F SLOAD SWAP1 DUP5 MSTORE PUSH1 0x73 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x551 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x57F PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x2CC PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x5BD CALLDATASIZE PUSH1 0x4 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x5E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x247A JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x128A JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x1392 JUMP JUMPDEST PUSH2 0x675 PUSH2 0x670 CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x69A CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x6D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x6F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x70C CALLDATASIZE PUSH1 0x4 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x74A PUSH2 0x745 CALLDATASIZE PUSH1 0x4 PUSH2 0x258E JUMP JUMPDEST PUSH2 0x1571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x260D JUMP JUMPDEST PUSH2 0x74A PUSH2 0x765 CALLDATASIZE PUSH1 0x4 PUSH2 0x2645 JUMP JUMPDEST PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x77D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x268C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D0 SWAP1 PUSH2 0x268C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x800 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x835 DUP2 DUP6 DUP6 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x84F DUP6 DUP3 DUP6 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x85A DUP6 DUP6 DUP6 PUSH2 0x1C10 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x835 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x89F SWAP1 DUP8 SWAP1 PUSH2 0x26DC JUMP JUMPDEST PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8BF JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8C3 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x994 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1DDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x68 DUP2 SWAP1 SSTORE PUSH1 0x69 DUP2 SWAP1 SSTORE PUSH1 0x67 SSTORE PUSH10 0x1BC16D674EC80000000 PUSH1 0x6E SSTORE PUSH10 0xA968163F0A57B400000 PUSH1 0x6F SSTORE PUSH2 0x2B8 PUSH1 0x6D SSTORE PUSH2 0xC4E0 PUSH1 0x70 SSTORE PUSH1 0x0 PUSH1 0x71 SSTORE PUSH11 0x27B33E4F9C02E92300000 PUSH11 0x1A784379D99DB42000000 PUSH11 0x2E5276153CD3FB3800000 PUSH2 0x9FE DUP2 DUP4 PUSH2 0x26DC JUMP JUMPDEST SWAP2 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0xA43 JUMPI PUSH2 0xA3B DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA21 JUMPI PUSH2 0xA21 PUSH2 0x26EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 MLOAD DUP7 PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA03 JUMP JUMPDEST POP PUSH2 0xA4E DUP6 DUP4 PUSH2 0x1E13 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6B SSTORE POP PUSH1 0x3 PUSH1 0x6C SSTORE DUP1 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206578697374732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI POP PUSH1 0x6F SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x67 DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP10 DUP2 MSTORE PUSH1 0x6F DUP1 SLOAD PUSH1 0x60 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP11 ADD DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0xA0 DUP13 ADD SWAP1 DUP2 MSTORE SWAP9 DUP3 MSTORE PUSH1 0x73 DUP8 MSTORE DUP12 DUP3 KECCAK256 SWAP11 MLOAD DUP12 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP12 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP11 ADD SSTORE MLOAD PUSH1 0x3 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 DUP9 ADD SSTORE SWAP4 MLOAD PUSH1 0x5 SWAP1 SWAP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE SWAP3 SLOAD DUP2 DUP4 MSTORE PUSH1 0x76 SWAP1 SWAP4 MSTORE SWAP4 SWAP1 KECCAK256 SSTORE SLOAD PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xC00 DUP4 PUSH2 0x2727 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 SLOAD DUP3 LT PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081A9BD8881251 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 SUB PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xCC6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA8 JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4A6F62206E6F7420666F756E6421 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x2740 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD7F CALLER DUP3 PUSH2 0x1EF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x67 SLOAD PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x2759 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642076616C696461746F722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x276C JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xF55 JUMPI PUSH1 0x70 SLOAD PUSH2 0xE8B SWAP1 TIMESTAMP PUSH2 0x26DC JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0xEA3 SWAP1 DUP6 SWAP1 PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x6F SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6CEECB7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP4 LT ISZERO PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB6CEECB7 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x2759 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xFCD SWAP1 POP CALLER DUP5 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x268C JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x27AD JUMP JUMPDEST PUSH11 0x115EEC47F6CF7E35000000 PUSH1 0x6E SLOAD PUSH2 0x1058 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x26DC JUMP JUMPDEST GT ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20737570706C79207265616368656421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x71 SLOAD LT PUSH2 0x10E6 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x6E SLOAD GT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x2 PUSH1 0x6E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10E0 SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x28 PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x27F3 JUMP JUMPDEST PUSH2 0x1103 SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x3C PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x27F3 JUMP JUMPDEST PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 MLOAD DUP4 PUSH2 0x1133 SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x116C JUMPI PUSH2 0x1164 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1156 JUMPI PUSH2 0x1156 PUSH2 0x26EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1138 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP7 DUP5 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x118F JUMPI PUSH2 0x118F PUSH2 0x26EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x27F3 JUMP JUMPDEST PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x2705 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D0 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11C2 JUMPI PUSH2 0x11C2 PUSH2 0x26EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1E13 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1170 JUMP JUMPDEST POP PUSH1 0x71 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x11EA DUP4 PUSH2 0x2727 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x127D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x85A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x835 DUP2 DUP6 DUP6 PUSH2 0x1C10 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x68 DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x32 PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x72 DUP5 MSTORE DUP9 DUP7 KECCAK256 SWAP8 MLOAD DUP9 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP3 SLOAD SWAP1 DUP3 MSTORE PUSH1 0x75 SWAP1 SWAP4 MSTORE SWAP3 DUP4 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SWAP2 PUSH2 0x138A DUP4 PUSH2 0x2727 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x68 SLOAD PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x67 SLOAD DUP4 LT PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x24B73B30B634B21024A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x65 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP4 SWAP3 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1443 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1528 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0xB1DEE78CEF8C6887046D91C59E17F84FBC012C9F7EFA49A10CCE97E13CC94BF4 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x15B3 JUMPI PUSH2 0x15B3 PUSH2 0x26EF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x1607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4361706163697479206D7573742062652067726561746572207A65726F2E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792068617320616374697665206A6F620000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2909069B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA4241A6C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x16D4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x282C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F2 JUMPI PUSH2 0x16F2 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x171B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x178E JUMPI PUSH1 0x76 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1740 JUMPI PUSH2 0x1740 PUSH2 0x26EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x177B JUMPI PUSH2 0x177B PUSH2 0x26EF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1721 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x69 SLOAD DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17C7 JUMPI PUSH2 0x17C7 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17F0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x69 SLOAD DUP4 MSTORE PUSH1 0x74 DUP5 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP6 ADD MLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP2 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH2 0x1886 SWAP4 PUSH1 0x2 DUP7 ADD SWAP4 POP SWAP2 ADD SWAP1 PUSH2 0x2113 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x18A2 SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2113 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x18BE SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2178 JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x69 SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH32 0x3C015D1005DA8BB61E99936222D4A8A0C3C5B6643F9DAA5EAE3EF07B7FB67647 SWAP1 PUSH2 0x191E SWAP1 DUP6 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x69 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1936 DUP4 PUSH2 0x2727 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1972 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 MLOAD EQ PUSH2 0x1990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x19B5 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x2113 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP5 SWAP2 PUSH32 0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929 SWAP2 LOG2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1A4D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1A39 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1ABC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1C0A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1BFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1C0A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1A5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1D4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1D85 SWAP1 DUP5 SWAP1 PUSH2 0x26DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DD1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH2 0x1E0F DUP3 DUP3 PUSH2 0x20D3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E7B SWAP2 SWAP1 PUSH2 0x26DC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1EA8 SWAP1 DUP5 SWAP1 PUSH2 0x26DC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1F12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x276C JUMP JUMPDEST DUP1 PUSH2 0x1F32 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x1F78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x1FE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1FEC DUP4 ADDRESS DUP5 PUSH2 0x841 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x200E SWAP1 DUP5 SWAP1 PUSH2 0x26DC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x65 SLOAD PUSH1 0x6F SLOAD SWAP3 MLOAD PUSH4 0xB6CEECB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP4 DUP4 LT ISZERO PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 AND SWAP1 PUSH4 0xB6CEECB7 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2094 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C DUP5 PUSH1 0x40 MLOAD PUSH2 0xF47 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x2106 DUP4 DUP3 PUSH2 0x2961 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xA6D DUP3 DUP3 PUSH2 0x2961 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2168 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2168 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2133 JUMP JUMPDEST POP PUSH2 0x2174 SWAP3 SWAP2 POP PUSH2 0x21B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2168 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2168 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2198 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2174 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21F6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x21DA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x223F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x224A DUP2 PUSH2 0x2217 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2291 DUP2 PUSH2 0x2217 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x22A1 DUP2 PUSH2 0x2217 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22CF DUP2 PUSH2 0x2217 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2315 JUMPI PUSH2 0x2315 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2337 JUMPI PUSH2 0x2337 PUSH2 0x22D6 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2367 PUSH2 0x2362 DUP4 PUSH2 0x231D JUMP JUMPDEST PUSH2 0x22EC JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x2389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x23AE JUMPI DUP1 CALLDATALOAD PUSH2 0x23A1 DUP2 PUSH2 0x2217 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x238E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23EF DUP6 DUP3 DUP7 ADD PUSH2 0x2341 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2400 DUP2 PUSH2 0x2217 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x246E JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2449 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x24A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B4 DUP9 DUP4 DUP10 ADD PUSH2 0x2341 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x24CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x24DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x24EA PUSH2 0x2362 DUP3 PUSH2 0x231D JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP12 DUP4 GT ISZERO PUSH2 0x2509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2527 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x250E JUMP JUMPDEST SWAP8 POP POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2554 DUP8 DUP3 DUP9 ADD PUSH2 0x2341 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x257E DUP2 PUSH2 0x2217 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2400 DUP2 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x25E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x25FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x246E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2682 DUP6 DUP3 DUP7 ADD PUSH2 0x2341 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x26A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x83B JUMPI PUSH2 0x83B PUSH2 0x26C6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2722 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2739 JUMPI PUSH2 0x2739 PUSH2 0x26C6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x83B JUMPI PUSH2 0x83B PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x83B JUMPI PUSH2 0x83B PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x22CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x283F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2875 PUSH2 0x2362 DUP3 PUSH2 0x231D JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x28BB JUMPI DUP4 MLOAD PUSH2 0x28AC DUP2 PUSH2 0x2217 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x2899 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x293A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2959 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2946 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x297B JUMPI PUSH2 0x297B PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x298F DUP2 PUSH2 0x2989 DUP5 SLOAD PUSH2 0x268C JUMP JUMPDEST DUP5 PUSH2 0x2911 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29C4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x29AC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2959 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29F3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x29D4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2A11 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xE1 SWAP14 0xDD CODESIZE DUP10 DUP14 0xED MUL 0xF6 0x2F CALLDATACOPY DUP2 0xDA 0xBA CALLDATALOAD 0xD2 PUSH28 0x6F0A623353095550CC29574256ED64736F6C63430008190033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "6": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "12": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "17": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "POP",
      "path": "24"
    },
    "18": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "21": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "LT",
      "path": "24"
    },
    "22": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2A0"
    },
    "25": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "29": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "SHR",
      "path": "24"
    },
    "32": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "33": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "GT",
      "path": "24"
    },
    "39": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x167"
    },
    "42": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "43": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "44": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xBC60BD48"
    },
    "49": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "GT",
      "path": "24"
    },
    "50": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCE"
    },
    "53": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "54": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "55": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD8DF5DC1"
    },
    "60": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "GT",
      "path": "24"
    },
    "61": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "65": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "66": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD8DF5DC1"
    },
    "71": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "72": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6E2"
    },
    "75": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "76": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "77": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD93D9BEB"
    },
    "82": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "83": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6EB"
    },
    "86": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "87": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "88": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "94": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6FE"
    },
    "97": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "98": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "99": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xE63022AA"
    },
    "104": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "105": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x737"
    },
    "108": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "109": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "110": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF3259572"
    },
    "115": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "116": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x757"
    },
    "119": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "120": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "121": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF79621BD"
    },
    "126": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "127": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x76A"
    },
    "130": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "131": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "134": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "135": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "136": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "137": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xBC60BD48"
    },
    "142": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "143": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x68C"
    },
    "146": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "147": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "148": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC0A77DA9"
    },
    "153": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "154": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6AC"
    },
    "157": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "158": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "159": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC5AB2241"
    },
    "164": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "165": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6B4"
    },
    "168": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "169": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "170": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC8DF245A"
    },
    "175": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "176": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6BD"
    },
    "179": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "180": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "181": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCDF64A76"
    },
    "186": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "187": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6C6"
    },
    "190": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "191": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "192": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD2D49C4B"
    },
    "197": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "198": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6D9"
    },
    "201": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "202": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "204": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "205": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "206": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "207": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "208": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA457C2D7"
    },
    "213": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "GT",
      "path": "24"
    },
    "214": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x120"
    },
    "217": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "218": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "219": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA457C2D7"
    },
    "224": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "225": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x618"
    },
    "228": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "229": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "230": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA9059CBB"
    },
    "235": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "236": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x62B"
    },
    "239": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "240": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "241": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xABF7BFD8"
    },
    "246": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "247": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x63E"
    },
    "250": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "251": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "252": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB115F50D"
    },
    "257": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "258": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x651"
    },
    "261": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "262": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "263": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB5CB15F7"
    },
    "268": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "269": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x65A"
    },
    "272": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "273": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "274": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB7797537"
    },
    "279": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "280": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x662"
    },
    "283": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "284": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "286": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "287": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "288": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "289": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "290": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x70A08231"
    },
    "295": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "296": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5AF"
    },
    "299": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "300": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "301": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7C405325"
    },
    "306": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "307": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5D8"
    },
    "310": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "311": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "312": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8F029D5E"
    },
    "317": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "318": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5EB"
    },
    "321": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "322": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "323": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95D89B41"
    },
    "328": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "329": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5F4"
    },
    "332": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "333": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "334": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96AFC450"
    },
    "339": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "340": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5FC"
    },
    "343": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "344": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "345": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA3273D22"
    },
    "350": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "351": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x605"
    },
    "354": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "355": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "357": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "358": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "359": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "360": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "361": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x365B98B2"
    },
    "366": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "GT",
      "path": "24"
    },
    "367": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x20B"
    },
    "370": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "371": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "372": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4B759088"
    },
    "377": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "GT",
      "path": "24"
    },
    "378": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C4"
    },
    "381": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "382": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "383": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4B759088"
    },
    "388": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "389": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x543"
    },
    "392": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "393": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "394": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x50355D76"
    },
    "399": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "400": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x563"
    },
    "403": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "404": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "405": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6817DD5B"
    },
    "410": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "411": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x56C"
    },
    "414": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "415": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "416": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6C9C2FAF"
    },
    "421": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "422": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x58C"
    },
    "425": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "426": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "427": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6E27D889"
    },
    "432": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "433": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x594"
    },
    "436": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "437": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "438": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7071688A"
    },
    "443": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "444": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5A7"
    },
    "447": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "448": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "450": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "451": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "452": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "453": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "454": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x365B98B2"
    },
    "459": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "460": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x453"
    },
    "463": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "464": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "465": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x37DEEA70"
    },
    "470": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "471": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4C0"
    },
    "474": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "475": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "476": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x39509351"
    },
    "481": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "482": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4C8"
    },
    "485": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "486": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "487": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x462D0B2E"
    },
    "492": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "493": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DB"
    },
    "496": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "497": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "498": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x497DFE63"
    },
    "503": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "504": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4F0"
    },
    "507": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "508": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "509": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4A4FBEEC"
    },
    "514": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "515": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x503"
    },
    "518": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "519": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "522": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "523": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "524": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "525": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "530": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "GT",
      "path": "24"
    },
    "531": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x25D"
    },
    "534": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "535": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "536": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "541": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "542": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x36E"
    },
    "545": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "546": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "547": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x27764547"
    },
    "552": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "553": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x381"
    },
    "556": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "557": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "558": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x2FABA6AE"
    },
    "563": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "564": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3A1"
    },
    "567": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "568": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "569": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x313CE567"
    },
    "574": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "575": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3AA"
    },
    "578": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "579": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "580": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x32CB6B0C"
    },
    "585": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "586": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3B9"
    },
    "589": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "590": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "591": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x35AA2E44"
    },
    "596": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "597": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3CB"
    },
    "600": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "601": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "603": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "604": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "605": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "606": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "607": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6FDDE03"
    },
    "612": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "613": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2A5"
    },
    "616": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "617": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "618": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8AC5256"
    },
    "623": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "624": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2C3"
    },
    "627": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "628": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "629": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95EA7B3"
    },
    "634": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "635": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2DA"
    },
    "638": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "639": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "640": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x180AEDF3"
    },
    "645": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "646": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FD"
    },
    "649": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "650": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "651": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x18160DDD"
    },
    "656": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "657": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x35D"
    },
    "660": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "661": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "662": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x20D3A0B4"
    },
    "667": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "EQ",
      "path": "24"
    },
    "668": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x365"
    },
    "671": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "672": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "673": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "675": {
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "676": {
      "first_revert": true,
      "fn": null,
      "offset": [
        271,
        13581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "677": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "678": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "681": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x795"
    },
    "684": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "685": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "686": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "688": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "689": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA"
    },
    "692": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "693": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "694": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21C8"
    },
    "697": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "698": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "699": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "701": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "702": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "703": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "704": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "705": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "706": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "707": {
      "offset": [
        680,
        708
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "708": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "711": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "713": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "714": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "DUP2",
      "path": "24"
    },
    "715": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "JUMP",
      "path": "24"
    },
    "716": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "717": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "719": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "720": {
      "op": "SWAP1"
    },
    "721": {
      "op": "DUP2"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "offset": [
        680,
        708
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "729": {
      "op": "JUMP"
    },
    "730": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "731": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "734": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8"
    },
    "737": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "738": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "740": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "743": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "744": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "745": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x827"
    },
    "748": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "749": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "750": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "752": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "753": {
      "op": "SWAP1"
    },
    "754": {
      "op": "ISZERO"
    },
    "755": {
      "op": "ISZERO"
    },
    "756": {
      "op": "DUP2"
    },
    "757": {
      "op": "MSTORE"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "760": {
      "op": "ADD"
    },
    "761": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA"
    },
    "764": {
      "op": "JUMP"
    },
    "765": {
      "offset": [
        2542,
        2577
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "766": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x338"
    },
    "769": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x30B"
    },
    "772": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "773": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "775": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "778": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        2542,
        2577
      ],
      "op": "JUMP",
      "path": "24"
    },
    "779": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "780": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "782": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "784": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "785": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "787": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "788": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "DUP2",
      "path": "24"
    },
    "789": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "790": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "792": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "793": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "794": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "DUP1",
      "path": "24"
    },
    "795": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "796": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "798": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "DUP3",
      "path": "24"
    },
    "799": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "ADD",
      "path": "24"
    },
    "800": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "801": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "803": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "804": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "805": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "ADD",
      "path": "24"
    },
    "806": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "807": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "808": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "815": {
      "op": "SHL"
    },
    "816": {
      "op": "SUB"
    },
    "817": {
      "offset": [
        2542,
        2577
      ],
      "op": "AND",
      "path": "24"
    },
    "818": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "819": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "821": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "AND",
      "path": "24"
    },
    "822": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "DUP4",
      "path": "24"
    },
    "823": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "JUMP",
      "path": "24"
    },
    "824": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "825": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "827": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "DUP1",
      "path": "24"
    },
    "828": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2542,
        2577
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "829": {
      "op": "SWAP4"
    },
    "830": {
      "op": "DUP5"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "op": "SWAP1"
    },
    "841": {
      "op": "SWAP3"
    },
    "842": {
      "op": "AND"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "845": {
      "op": "DUP5"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "MSTORE"
    },
    "848": {
      "op": "ISZERO"
    },
    "849": {
      "op": "ISZERO"
    },
    "850": {
      "op": "SWAP1"
    },
    "851": {
      "op": "DUP3"
    },
    "852": {
      "op": "ADD"
    },
    "853": {
      "op": "MSTORE"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "offset": [
        2542,
        2577
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "860": {
      "op": "JUMP"
    },
    "861": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "862": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "864": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "865": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CC"
    },
    "868": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "869": {
      "offset": [
        2314,
        2349
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "870": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2314,
        2349
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "873": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2314,
        2349
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "875": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2314,
        2349
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "876": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2314,
        2349
      ],
      "op": "DUP2",
      "path": "24"
    },
    "877": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2314,
        2349
      ],
      "op": "JUMP",
      "path": "24"
    },
    "878": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "879": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "882": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C"
    },
    "885": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "886": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "888": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2271"
    },
    "891": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "892": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "893": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x841"
    },
    "896": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "897": {
      "offset": [
        2664,
        2719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "898": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "901": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x38F"
    },
    "904": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "905": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "907": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x22B2"
    },
    "910": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        2664,
        2719
      ],
      "op": "JUMP",
      "path": "24"
    },
    "911": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "912": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "914": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "916": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "917": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "919": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "920": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "DUP2",
      "path": "24"
    },
    "921": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "922": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "924": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "925": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "926": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "927": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "DUP2",
      "path": "24"
    },
    "928": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2664,
        2719
      ],
      "op": "JUMP",
      "path": "24"
    },
    "929": {
      "offset": [
        544,
        572
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "930": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "933": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "935": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "936": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "DUP2",
      "path": "24"
    },
    "937": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "JUMP",
      "path": "24"
    },
    "938": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "939": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "941": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "942": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "944": {
      "op": "DUP2"
    },
    "945": {
      "op": "MSTORE"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "948": {
      "op": "ADD"
    },
    "949": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA"
    },
    "952": {
      "op": "JUMP"
    },
    "953": {
      "offset": [
        1952,
        2002
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "954": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1952,
        2002
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "957": {
      "offset": [
        1989,
        2002
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "969": {
      "offset": [
        1952,
        2002
      ],
      "op": "DUP2",
      "path": "24"
    },
    "970": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1952,
        2002
      ],
      "op": "JUMP",
      "path": "24"
    },
    "971": {
      "offset": [
        2489,
        2536
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "972": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x41B"
    },
    "975": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3D9"
    },
    "978": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "979": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "981": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "984": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2489,
        2536
      ],
      "op": "JUMP",
      "path": "24"
    },
    "985": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "986": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "988": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "990": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "991": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "993": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "994": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP2",
      "path": "24"
    },
    "995": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "996": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "998": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "999": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1000": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1001": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1002": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1004": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1005": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "ADD",
      "path": "24"
    },
    "1006": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1007": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1009": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1010": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "ADD",
      "path": "24"
    },
    "1011": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1012": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1014": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1015": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "ADD",
      "path": "24"
    },
    "1016": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1017": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1019": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP6",
      "path": "24"
    },
    "1020": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "ADD",
      "path": "24"
    },
    "1021": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1022": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "1024": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1025": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "1026": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "ADD",
      "path": "24"
    },
    "1027": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1028": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1029": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "op": "SUB"
    },
    "1038": {
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1039": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1040": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "AND",
      "path": "24"
    },
    "1041": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1042": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1043": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1044": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1045": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1046": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "1048": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "AND",
      "path": "24"
    },
    "1049": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1050": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1051": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1052": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1054": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1055": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2489,
        2536
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1056": {
      "op": "SWAP7"
    },
    "1057": {
      "op": "DUP8"
    },
    "1058": {
      "op": "MSTORE"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "op": "SUB"
    },
    "1067": {
      "op": "SWAP1"
    },
    "1068": {
      "op": "SWAP6"
    },
    "1069": {
      "op": "AND"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1072": {
      "op": "DUP8"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "SWAP4"
    },
    "1076": {
      "op": "DUP6"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "SWAP3"
    },
    "1079": {
      "op": "SWAP1"
    },
    "1080": {
      "op": "SWAP3"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1084": {
      "op": "DUP5"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1089": {
      "op": "DUP4"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "op": "MSTORE"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1094": {
      "op": "AND"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1097": {
      "op": "DUP3"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "offset": [
        2489,
        2536
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "1106": {
      "op": "JUMP"
    },
    "1107": {
      "offset": [
        2446,
        2483
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1108": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x495"
    },
    "1111": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x461"
    },
    "1114": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1115": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1117": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1120": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2446,
        2483
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1121": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1122": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x72"
    },
    "1124": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1126": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1127": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1129": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1130": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1131": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1132": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1134": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1135": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1136": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1137": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1138": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1140": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1141": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "ADD",
      "path": "24"
    },
    "1142": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1143": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1145": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1146": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "ADD",
      "path": "24"
    },
    "1147": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1148": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1150": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1151": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1152": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "ADD",
      "path": "24"
    },
    "1153": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1154": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1155": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "SUB"
    },
    "1164": {
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1165": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1166": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "AND",
      "path": "24"
    },
    "1167": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1168": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "1170": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "AND",
      "path": "24"
    },
    "1171": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1172": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1173": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1174": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1176": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1177": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2446,
        2483
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1178": {
      "op": "SWAP5"
    },
    "1179": {
      "op": "DUP6"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1187": {
      "op": "SHL"
    },
    "1188": {
      "op": "SUB"
    },
    "1189": {
      "op": "SWAP1"
    },
    "1190": {
      "op": "SWAP4"
    },
    "1191": {
      "op": "AND"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1194": {
      "op": "DUP6"
    },
    "1195": {
      "op": "ADD"
    },
    "1196": {
      "op": "MSTORE"
    },
    "1197": {
      "op": "SWAP2"
    },
    "1198": {
      "op": "DUP4"
    },
    "1199": {
      "op": "ADD"
    },
    "1200": {
      "op": "MSTORE"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1203": {
      "op": "AND"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1206": {
      "op": "DUP3"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "op": "MSTORE"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "offset": [
        2446,
        2483
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "1215": {
      "op": "JUMP"
    },
    "1216": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13075,
        13182
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1217": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13159,
        13175
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 2,
      "value": "0x6A"
    },
    "1219": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13159,
        13175
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1220": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13075,
        13182
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1223": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13075,
        13182
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1224": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1225": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "1228": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D6"
    },
    "1231": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1232": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1234": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "1237": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1238": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1239": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x865"
    },
    "1242": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1243": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1244": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1247": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E9"
    },
    "1250": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1251": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1253": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23B9"
    },
    "1256": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1257": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1258": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8A4"
    },
    "1261": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1262": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1263": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "STOP",
      "path": "24"
    },
    "1264": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1265": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1268": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4FE"
    },
    "1271": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1272": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1274": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x240B"
    },
    "1277": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5206,
        6077
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1278": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1279": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA72"
    },
    "1282": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5206,
        6077
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1283": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1284": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2ED"
    },
    "1287": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x511"
    },
    "1290": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1291": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1293": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x22B2"
    },
    "1296": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        13390,
        13579
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1297": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1304": {
      "op": "SHL"
    },
    "1305": {
      "op": "SUB"
    },
    "1306": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "AND",
      "path": "24"
    },
    "1307": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13454,
        13458
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1309": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1310": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1311": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1312": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13504
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "1314": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1316": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1317": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1318": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1319": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1321": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1322": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1323": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1324": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13519
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1325": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13562,
        13572
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 3,
      "value": "0x6F"
    },
    "1327": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13562,
        13572
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1328": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1329": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1330": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1331": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13546
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "1333": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1334": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1335": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1336": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1337": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1338": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13551
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1339": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13558
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1341": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13558
      ],
      "op": "ADD",
      "path": "24"
    },
    "1342": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13558
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1343": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13572
      ],
      "op": "LT",
      "path": "24"
    },
    "1344": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13572
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1345": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13536,
        13572
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1346": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13390,
        13579
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1347": {
      "offset": [
        2608,
        2658
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1348": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1351": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x551"
    },
    "1354": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1355": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1357": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x22B2"
    },
    "1360": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        2608,
        2658
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1361": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1362": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "1364": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1366": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1367": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1369": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1370": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1371": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1372": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1374": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1375": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1376": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1377": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1378": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2608,
        2658
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1379": {
      "offset": [
        578,
        603
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1380": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1383": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "1385": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1386": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1387": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1388": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1389": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x57F"
    },
    "1392": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x57A"
    },
    "1395": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1396": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1398": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1401": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1402": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1403": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC09"
    },
    "1406": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1407": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1408": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1410": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1411": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "1414": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1415": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1416": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x242D"
    },
    "1419": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1420": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13289,
        13384
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1421": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13289,
        13384
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1424": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13289,
        13384
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD0C"
    },
    "1427": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        13289,
        13384
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1428": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1429": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1432": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5A2"
    },
    "1435": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1436": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1438": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1441": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        9088,
        9181
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1442": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1443": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD75"
    },
    "1446": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        9088,
        9181
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1447": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12962,
        13069
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1448": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12962,
        13069
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1451": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12962,
        13069
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD82"
    },
    "1454": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12962,
        13069
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1455": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1456": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CC"
    },
    "1459": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BD"
    },
    "1462": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1463": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1465": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B2"
    },
    "1468": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1469": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1476": {
      "op": "SHL"
    },
    "1477": {
      "op": "SUB"
    },
    "1478": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 4
    },
    "1479": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1481": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1482": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1483": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1484": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1486": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1488": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1489": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1491": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1492": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1493": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1494": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1495": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1496": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1497": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1500": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5E6"
    },
    "1503": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1504": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1506": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1509": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9187,
        10626
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1510": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1511": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD93"
    },
    "1514": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9187,
        10626
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1515": {
      "offset": [
        505,
        538
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1516": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1519": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "1521": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1522": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1523": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1524": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1525": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "1528": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1007"
    },
    "1531": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1532": {
      "offset": [
        2134,
        2170
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1533": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2134,
        2170
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1536": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2134,
        2170
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "1538": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2134,
        2170
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1539": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2134,
        2170
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1540": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2134,
        2170
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1541": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1542": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1545": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x613"
    },
    "1548": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1549": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1551": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x247A"
    },
    "1554": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10803,
        11988
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1555": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1556": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1016"
    },
    "1559": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10803,
        11988
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1560": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1561": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "1564": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x626"
    },
    "1567": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1568": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1570": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "1573": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1574": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1575": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F8"
    },
    "1578": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1579": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1580": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "1583": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x639"
    },
    "1586": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1587": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1589": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "1592": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1593": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1594": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x128A"
    },
    "1597": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1598": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1599": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1602": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x64C"
    },
    "1605": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1606": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1608": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1611": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4618,
        5081
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1612": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1613": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1298"
    },
    "1616": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4618,
        5081
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1617": {
      "offset": [
        2355,
        2390
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1618": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2355,
        2390
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1621": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2355,
        2390
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "1623": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2355,
        2390
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1624": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2355,
        2390
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1625": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2355,
        2390
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1626": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12859,
        12956
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1627": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12859,
        12956
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1630": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12859,
        12956
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1392"
    },
    "1633": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12859,
        12956
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1634": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1635": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x675"
    },
    "1638": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x670"
    },
    "1641": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1642": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1644": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1647": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12440,
        12853
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1648": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1649": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13A3"
    },
    "1652": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12440,
        12853
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1653": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1654": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1656": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1657": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1658": {
      "op": "SWAP3"
    },
    "1659": {
      "op": "ISZERO"
    },
    "1660": {
      "op": "ISZERO"
    },
    "1661": {
      "op": "DUP4"
    },
    "1662": {
      "op": "MSTORE"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1665": {
      "op": "DUP4"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "op": "SWAP2"
    },
    "1668": {
      "op": "SWAP1"
    },
    "1669": {
      "op": "SWAP2"
    },
    "1670": {
      "op": "MSTORE"
    },
    "1671": {
      "op": "ADD"
    },
    "1672": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "1675": {
      "op": "JUMP"
    },
    "1676": {
      "offset": [
        2725,
        2777
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1677": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1680": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x69A"
    },
    "1683": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1684": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1686": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1689": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        2725,
        2777
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1690": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1691": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x77"
    },
    "1693": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1695": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1696": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1698": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1699": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1700": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1701": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1703": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1704": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1705": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1706": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1707": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2725,
        2777
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1708": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13188,
        13283
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1709": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13264,
        13276
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 5,
      "value": "0x6E"
    },
    "1711": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13264,
        13276
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1712": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13188,
        13283
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1715": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13188,
        13283
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1716": {
      "offset": [
        646,
        674
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1717": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1720": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "1722": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1723": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1724": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1725": {
      "offset": [
        2051,
        2082
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1726": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2051,
        2082
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1729": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2051,
        2082
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "1731": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2051,
        2082
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1732": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2051,
        2082
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1733": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2051,
        2082
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1734": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1735": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1738": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6D4"
    },
    "1741": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1742": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1744": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x22B2"
    },
    "1747": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        4197,
        4523
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1748": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1749": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1479"
    },
    "1752": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        4197,
        4523
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1753": {
      "offset": [
        609,
        640
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1754": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1757": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "1759": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1760": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1761": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1762": {
      "offset": [
        2227,
        2264
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1763": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2227,
        2264
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CC"
    },
    "1766": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2227,
        2264
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "1768": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2227,
        2264
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1769": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2227,
        2264
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1770": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2227,
        2264
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1771": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1772": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EE"
    },
    "1775": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6F9"
    },
    "1778": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1779": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1781": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2258"
    },
    "1784": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        8037,
        8212
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1785": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1786": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14FE"
    },
    "1789": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        8037,
        8212
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1790": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1791": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CC"
    },
    "1794": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70C"
    },
    "1797": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1798": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1800": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2560"
    },
    "1803": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1804": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 6
    },
    "1814": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1815": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "1816": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1818": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1819": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1820": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1821": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "1823": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1825": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1826": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1827": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1828": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1830": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1831": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1832": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1833": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1834": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1835": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1836": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "1837": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1838": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1839": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1840": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1841": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1842": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1843": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1844": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1845": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1846": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1847": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1848": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x74A"
    },
    "1851": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x745"
    },
    "1854": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1855": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1857": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x258E"
    },
    "1860": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1861": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1862": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1571"
    },
    "1865": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1866": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1867": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1869": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1870": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "1873": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1874": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1875": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x260D"
    },
    "1878": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1879": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1880": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x74A"
    },
    "1883": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x765"
    },
    "1886": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1887": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1889": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2645"
    },
    "1892": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7614,
        8031
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1893": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1894": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1945"
    },
    "1897": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7614,
        8031
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1898": {
      "offset": [
        416,
        455
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1899": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "1901": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1902": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x77D"
    },
    "1905": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "op": "SUB"
    },
    "1914": {
      "offset": [
        416,
        455
      ],
      "op": "AND",
      "path": "24"
    },
    "1915": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1916": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1917": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1918": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1920": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1927": {
      "op": "SHL"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "op": "SWAP1"
    },
    "1930": {
      "op": "SWAP2"
    },
    "1931": {
      "op": "AND"
    },
    "1932": {
      "op": "DUP2"
    },
    "1933": {
      "op": "MSTORE"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "offset": [
        416,
        455
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BA"
    },
    "1940": {
      "op": "JUMP"
    },
    "1941": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1942": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1944": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x36"
    },
    "1946": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1947": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1948": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A4"
    },
    "1951": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1952": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268C"
    },
    "1955": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1956": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1957": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1958": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1960": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1961": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1963": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1964": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1965": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "1966": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "1967": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1969": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1970": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1972": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1973": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1974": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1975": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1976": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1978": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1979": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1980": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1981": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1982": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1983": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1984": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1985": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1986": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1988": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1989": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1990": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1991": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1992": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D0"
    },
    "1995": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1996": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268C"
    },
    "1999": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2000": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2001": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2002": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2003": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x81D"
    },
    "2006": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2007": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2008": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2010": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "2011": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F2"
    },
    "2014": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2015": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2018": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2019": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2020": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2021": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2022": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2023": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2024": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2025": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2026": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2028": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2029": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2030": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x81D"
    },
    "2033": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2034": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2035": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2036": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2037": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2038": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2039": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2041": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2042": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2044": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2046": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2047": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2048": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2049": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2050": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2051": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2052": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2053": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2054": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2056": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2057": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2058": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2060": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2061": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2062": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2063": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "2064": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x800"
    },
    "2067": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2068": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2069": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2070": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "2071": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2073": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "2074": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2075": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2076": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2077": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2078": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2079": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2080": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2081": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2082": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2083": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2084": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2085": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2086": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2087": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2088": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2090": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 8
    },
    "2091": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x835"
    },
    "2094": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2095": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2096": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2097": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5A"
    },
    "2100": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2101": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2102": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x1"
    },
    "2104": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2105": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2106": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2107": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2108": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2109": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2110": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2111": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2112": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2113": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2114": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2116": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2117": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x84F"
    },
    "2120": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2121": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2122": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2123": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B7E"
    },
    "2126": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2127": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2128": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x85A"
    },
    "2131": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2132": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2133": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2134": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C10"
    },
    "2137": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2138": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x1"
    },
    "2142": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2143": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2144": {
      "op": "POP"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "op": "POP"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2149": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2150": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2151": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2153": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 14
    },
    "2154": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2155": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2156": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "2158": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2160": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2161": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2162": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2163": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2165": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2166": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2167": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2177": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "2"
    },
    "2178": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2179": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2180": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2181": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2182": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2183": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2184": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2185": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2186": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2187": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2188": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2189": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x835"
    },
    "2192": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2193": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2194": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2195": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2196": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2197": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89F"
    },
    "2200": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2201": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2202": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2203": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DC"
    },
    "2206": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2207": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2208": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5A"
    },
    "2211": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2212": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2213": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2215": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2216": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2219": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2220": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "2221": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2223": {
      "branch": 147,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "2224": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8BF"
    },
    "2227": {
      "branch": 147,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2228": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2230": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2231": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2233": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "2234": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2235": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C3"
    },
    "2238": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2239": {
      "branch": 148,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2240": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 15
    },
    "2241": {
      "op": "EXTCODESIZE"
    },
    "2242": {
      "op": "ISZERO"
    },
    "2243": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2244": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92B"
    },
    "2247": {
      "branch": 148,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2248": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2250": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2251": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2257": {
      "op": "SHL"
    },
    "2258": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2259": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2262": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2264": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2265": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "2266": {
      "op": "MSTORE"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2271": {
      "op": "DUP3"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "op": "MSTORE"
    },
    "2274": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2309": {
      "op": "DUP3"
    },
    "2310": {
      "op": "ADD"
    },
    "2311": {
      "op": "MSTORE"
    },
    "2312": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2332": {
      "op": "DUP3"
    },
    "2333": {
      "op": "ADD"
    },
    "2334": {
      "op": "MSTORE"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2339": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2341": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2342": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2343": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2344": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "SUB",
      "path": "1"
    },
    "2345": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2346": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "2347": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2348": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2350": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2351": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2354": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2355": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "2356": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2358": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "2359": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2360": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2361": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2362": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x94D"
    },
    "2365": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2366": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2368": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2369": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2373": {
      "op": "NOT"
    },
    "2374": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "2375": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "2378": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "2379": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2380": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2381": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2382": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 16,
      "value": "0x994"
    },
    "2385": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2387": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2388": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2389": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2391": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "ADD",
      "path": "24"
    },
    "2392": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2394": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2395": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2396": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "2398": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2399": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2400": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2402": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "ADD",
      "path": "24"
    },
    "2403": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2418": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2419": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "POP",
      "path": "24"
    },
    "2420": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2422": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2423": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2424": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2426": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "ADD",
      "path": "24"
    },
    "2427": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2429": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2430": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2431": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2433": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2434": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2435": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2437": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "ADD",
      "path": "24"
    },
    "2438": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2446": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2447": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "POP",
      "path": "24"
    },
    "2448": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3158
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DDE"
    },
    "2451": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3146,
        3179
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2452": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3146,
        3179
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2453": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3279,
        3280
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 17,
      "value": "0x1"
    },
    "2455": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3263,
        3276
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "2457": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3263,
        3280
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2458": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3263,
        3280
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2459": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3263,
        3280
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2460": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3290,
        3300
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 18,
      "value": "0x69"
    },
    "2462": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3290,
        3304
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2463": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3290,
        3304
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2464": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3290,
        3304
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2465": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3314,
        3332
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 19,
      "value": "0x67"
    },
    "2467": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3314,
        3336
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2468": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3400,
        3407
      ],
      "op": "PUSH10",
      "path": "24",
      "statement": 20,
      "value": "0x1BC16D674EC80000000"
    },
    "2479": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3385,
        3397
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "2481": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3385,
        3407
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2482": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3481,
        3490
      ],
      "op": "PUSH10",
      "path": "24",
      "statement": 21,
      "value": "0xA968163F0A57B400000"
    },
    "2493": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3468,
        3478
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "2495": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3468,
        3490
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2496": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3554,
        3557
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 22,
      "value": "0x2B8"
    },
    "2499": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3544,
        3551
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "2501": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3544,
        3557
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2502": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3582,
        3587
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 23,
      "value": "0xC4E0"
    },
    "2505": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3567,
        3579
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "2507": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3567,
        3587
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2510": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3610,
        3630
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 24,
      "value": "0x71"
    },
    "2512": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3610,
        3634
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2513": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3666,
        3678
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x27B33E4F9C02E92300000"
    },
    "2525": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3715,
        3727
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x1A784379D99DB42000000"
    },
    "2537": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3757,
        3769
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x2E5276153CD3FB3800000"
    },
    "2549": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3779,
        3808
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 25,
      "value": "0x9FE"
    },
    "2552": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3757,
        3769
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2553": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3715,
        3727
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2554": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3779,
        3808
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26DC"
    },
    "2557": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3779,
        3808
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2558": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3779,
        3808
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2559": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3779,
        3808
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2560": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3779,
        3808
      ],
      "op": "POP",
      "path": "24"
    },
    "2561": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3918,
        3924
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2563": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2564": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3934,
        3949
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2565": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3934,
        3956
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2566": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3930,
        3931
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2567": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3930,
        3956
      ],
      "op": "LT",
      "path": "24"
    },
    "2568": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2569": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA43"
    },
    "2572": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2573": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3977,
        4039
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 26,
      "value": "0xA3B"
    },
    "2576": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        3998
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2577": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3999,
        4000
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2578": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2579": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2580": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2581": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "LT",
      "path": "24"
    },
    "2582": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA21"
    },
    "2585": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2586": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA21"
    },
    "2589": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26EF"
    },
    "2592": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3983,
        4001
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2593": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2594": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2596": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "MUL",
      "path": "24"
    },
    "2597": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2599": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "ADD",
      "path": "24"
    },
    "2600": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "ADD",
      "path": "24"
    },
    "2601": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3983,
        4001
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2602": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4016,
        4031
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2603": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4016,
        4038
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2604": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4003,
        4013
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2605": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4003,
        4038
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA36"
    },
    "2608": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4003,
        4038
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2609": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4003,
        4038
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2610": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4003,
        4038
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2705"
    },
    "2613": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4003,
        4038
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2614": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4003,
        4038
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2615": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3977,
        3982
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E13"
    },
    "2618": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3977,
        4039
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2619": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3977,
        4039
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2620": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3958,
        3961
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 27,
      "value": "0x1"
    },
    "2622": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3958,
        3961
      ],
      "op": "ADD",
      "path": "24"
    },
    "2623": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA03"
    },
    "2626": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2627": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2628": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3913,
        4050
      ],
      "op": "POP",
      "path": "24"
    },
    "2629": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4060,
        4101
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 28,
      "value": "0xA4E"
    },
    "2632": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4066,
        4082
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2633": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4084,
        4100
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2634": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4060,
        4065
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E13"
    },
    "2637": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4060,
        4101
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2638": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4060,
        4101
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4156,
        4157
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 29,
      "value": "0x1"
    },
    "2643": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4140,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "2645": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4140,
        4157
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4183,
        4184
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 30,
      "value": "0x3"
    },
    "2649": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4167,
        4180
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "2651": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4167,
        4184
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2652": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2653": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2654": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA6D"
    },
    "2657": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2658": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2660": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2661": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2662": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2665": {
      "op": "NOT"
    },
    "2666": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "2667": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2668": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2669": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2670": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "2671": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "POP",
      "path": "24"
    },
    "2672": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "POP",
      "path": "24"
    },
    "2673": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2674": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2675": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5359,
        5369
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 31
    },
    "2676": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2678": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2679": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2680": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2681": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5358
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "2683": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2685": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2686": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2688": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2689": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2690": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5370
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2691": {
      "branch": 116,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5338,
        5375
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2692": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xACF"
    },
    "2695": {
      "branch": 116,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2696": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2698": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2707": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2710": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2712": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2713": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "ADD",
      "path": "24"
    },
    "2714": {
      "op": "MSTORE"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206578697374732E00000000000000"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2757": {
      "op": "DUP3"
    },
    "2758": {
      "op": "ADD"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2762": {
      "op": "ADD"
    },
    "2763": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "2766": {
      "op": "JUMP"
    },
    "2767": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5317,
        5426
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2768": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5468,
        5478
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 32
    },
    "2769": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2771": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2772": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2773": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2774": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "2776": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2778": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2779": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2781": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2782": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2783": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2784": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5483,
        5494
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2785": {
      "op": "GT"
    },
    "2786": {
      "branch": 117,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5494
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2787": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5523
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2788": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5523
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2789": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5523
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAF0"
    },
    "2792": {
      "branch": 117,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5523
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2793": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5523
      ],
      "op": "POP",
      "path": "24"
    },
    "2794": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5513,
        5523
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "2796": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5513,
        5523
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2797": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5498,
        5509
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2798": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5498,
        5523
      ],
      "op": "LT",
      "path": "24"
    },
    "2799": {
      "branch": 118,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5498,
        5523
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2800": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5523
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2801": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB3C"
    },
    "2804": {
      "branch": 118,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2805": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2807": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2814": {
      "op": "SHL"
    },
    "2815": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2816": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2819": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2821": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2822": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "ADD",
      "path": "24"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2828": {
      "op": "DUP3"
    },
    "2829": {
      "op": "ADD"
    },
    "2830": {
      "op": "MSTORE"
    },
    "2831": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2866": {
      "op": "DUP3"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2871": {
      "op": "ADD"
    },
    "2872": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "2875": {
      "op": "JUMP"
    },
    "2876": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5576
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2877": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 33,
      "value": "0x40"
    },
    "2879": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2880": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2881": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xC0"
    },
    "2883": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2884": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2885": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2886": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2887": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5694,
        5712
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "2889": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5694,
        5712
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2890": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5694,
        5712
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2891": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2892": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2893": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2894": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5744,
        5754
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2895": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2897": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2898": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2899": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2900": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2901": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2902": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2903": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2904": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2905": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2906": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2907": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2908": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2909": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5819,
        5829
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "2911": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5819,
        5829
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2912": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5819,
        5829
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2913": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2915": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2916": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2917": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2918": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2919": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2922": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2924": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP11",
      "path": "24"
    },
    "2925": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2926": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2927": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2928": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2929": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5882,
        5884
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x32"
    },
    "2931": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA0"
    },
    "2933": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP13",
      "path": "24"
    },
    "2934": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2935": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2936": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2937": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2938": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "SWAP9",
      "path": "24"
    },
    "2939": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2940": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2941": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5643
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "2943": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2944": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2945": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "DUP12",
      "path": "24"
    },
    "2946": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2947": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5663
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2948": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP11",
      "path": "24"
    },
    "2949": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2950": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "DUP12",
      "path": "24"
    },
    "2951": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2952": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2953": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2954": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2956": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "DUP12",
      "path": "24"
    },
    "2957": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2958": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2959": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "op": "SUB"
    },
    "2968": {
      "op": "NOT"
    },
    "2969": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "AND",
      "path": "24"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2979": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2980": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "AND",
      "path": "24"
    },
    "2981": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2982": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2983": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2984": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "OR",
      "path": "24"
    },
    "2985": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2986": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2987": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2988": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2989": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2991": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "DUP11",
      "path": "24"
    },
    "2992": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2993": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2994": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2995": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2997": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2998": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "2999": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3000": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3001": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3002": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3004": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "DUP9",
      "path": "24"
    },
    "3005": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "3006": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3007": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3008": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3009": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "3011": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3012": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3013": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "ADD",
      "path": "24"
    },
    "3014": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3015": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3018": {
      "op": "NOT"
    },
    "3019": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "AND",
      "path": "24"
    },
    "3020": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5666,
        5895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "3022": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3023": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "3024": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "AND",
      "path": "24"
    },
    "3025": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3026": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3027": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3028": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "OR",
      "path": "24"
    },
    "3029": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3030": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "3031": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5633,
        5895
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3032": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5941,
        5959
      ],
      "op": "SWAP3",
      "path": "24",
      "statement": 34
    },
    "3033": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5941,
        5959
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3034": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3035": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3036": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3037": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5926
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "3039": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3040": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3041": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3042": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3043": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3044": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5938
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3045": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5906,
        5959
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3046": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6028,
        6038
      ],
      "op": "SLOAD",
      "path": "24",
      "statement": 35
    },
    "3047": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6004,
        6039
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBF0"
    },
    "3050": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6004,
        6039
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3051": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5744,
        5754
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3052": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6004,
        6015
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EF2"
    },
    "3055": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        6004,
        6039
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3056": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6004,
        6039
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3057": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6068
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 36,
      "value": "0x67"
    },
    "3059": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3060": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3061": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3062": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6068
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3064": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC00"
    },
    "3067": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3068": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2727"
    },
    "3071": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        6050,
        6070
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3072": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3073": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3074": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3075": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "POP",
      "path": "24"
    },
    "3076": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3077": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6050,
        6070
      ],
      "op": "POP",
      "path": "24"
    },
    "3078": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "POP",
      "path": "24"
    },
    "3079": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5206,
        6077
      ],
      "op": "POP",
      "path": "24"
    },
    "3080": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        5206,
        6077
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3081": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3082": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12143,
        12159
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3084": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12187,
        12197
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 37,
      "value": "0x69"
    },
    "3086": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12187,
        12197
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3087": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12179,
        12184
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3088": {
      "branch": 119,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12179,
        12197
      ],
      "op": "LT",
      "path": "24"
    },
    "3089": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC4D"
    },
    "3092": {
      "branch": 119,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3093": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3095": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3104": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3107": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3109": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3110": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "ADD",
      "path": "24"
    },
    "3111": {
      "op": "MSTORE"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3116": {
      "op": "DUP3"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "MSTORE"
    },
    "3119": {
      "op": "PUSH14",
      "value": "0x125B9D985B1A59081A9BD8881251"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3139": {
      "op": "DUP3"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "op": "MSTORE"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "3148": {
      "op": "JUMP"
    },
    "3149": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12171,
        12216
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3150": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3152": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3153": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3154": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3155": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12234
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "3157": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3159": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3160": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3162": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3163": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12241
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3164": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12244
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3165": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12253
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3166": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12253
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3167": {
      "branch": 120,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12230,
        12253
      ],
      "op": "SUB",
      "path": "24"
    },
    "3168": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12226,
        12428
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCD3"
    },
    "3171": {
      "branch": 120,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12226,
        12428
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3172": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12299
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3174": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3175": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3176": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3177": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12306
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "3179": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3181": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3182": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3183": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3184": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3186": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3187": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3188": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12313
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3189": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3191": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12328
      ],
      "op": "ADD",
      "path": "24"
    },
    "3192": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3193": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3194": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3195": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3196": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3197": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3198": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "MUL",
      "path": "24"
    },
    "3199": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3200": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "ADD",
      "path": "24"
    },
    "3201": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3202": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "ADD",
      "path": "24"
    },
    "3203": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3204": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3205": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3206": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3207": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3208": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3209": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3210": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3211": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12328
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3212": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12328
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3213": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3214": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3215": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "ADD",
      "path": "24"
    },
    "3216": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12302,
        12328
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3217": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3218": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3219": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3220": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCC6"
    },
    "3223": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3224": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3226": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "MUL",
      "path": "24"
    },
    "3227": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3228": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "ADD",
      "path": "24"
    },
    "3229": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3230": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3231": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3233": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3234": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3236": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3238": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3239": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3240": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3241": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3242": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3249": {
      "op": "SHL"
    },
    "3250": {
      "op": "SUB"
    },
    "3251": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "AND",
      "path": "24"
    },
    "3252": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3253": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3254": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3256": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3257": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3258": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "ADD",
      "path": "24"
    },
    "3259": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3260": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3262": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "ADD",
      "path": "24"
    },
    "3263": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3264": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3265": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "GT",
      "path": "24"
    },
    "3266": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCA8"
    },
    "3269": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3270": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3271": {
      "op": "POP"
    },
    "3272": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3273": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12269,
        12328
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "3274": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12065,
        12434
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3275": {
      "op": "POP"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "op": "POP"
    },
    "3278": {
      "op": "POP"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "op": "POP"
    },
    "3281": {
      "op": "POP"
    },
    "3282": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "o",
      "offset": [
        12065,
        12434
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3283": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12226,
        12428
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3284": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 38,
      "value": "0x40"
    },
    "3286": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3293": {
      "op": "SHL"
    },
    "3294": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3295": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3298": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3300": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3301": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "ADD",
      "path": "24"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3307": {
      "op": "DUP3"
    },
    "3308": {
      "op": "ADD"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "PUSH14",
      "value": "0x4A6F62206E6F7420666F756E6421"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3327": {
      "op": "SHL"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3330": {
      "op": "DUP3"
    },
    "3331": {
      "op": "ADD"
    },
    "3332": {
      "op": "MSTORE"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3335": {
      "op": "ADD"
    },
    "3336": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12393,
        12417
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "3339": {
      "op": "JUMP"
    },
    "3340": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13289,
        13384
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3341": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13333,
        13340
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3343": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13363
      ],
      "op": "ADDRESS",
      "path": "24",
      "statement": 39
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "op": "SUB"
    },
    "3352": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13375
      ],
      "op": "AND",
      "path": "24"
    },
    "3353": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13375
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x18160DDD"
    },
    "3358": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3360": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3361": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3362": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "3367": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "AND",
      "path": "24"
    },
    "3368": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "3370": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "SHL",
      "path": "24"
    },
    "3371": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3372": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3373": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3375": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "ADD",
      "path": "24"
    },
    "3376": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3378": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3380": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3381": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3382": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3383": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "SUB",
      "path": "24"
    },
    "3384": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3385": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP7",
      "path": "24"
    },
    "3386": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "GAS",
      "path": "24"
    },
    "3387": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "3388": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3389": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3390": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3391": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD4C"
    },
    "3394": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3395": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3396": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3398": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3399": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3400": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3401": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3403": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3404": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3405": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "POP",
      "path": "24"
    },
    "3406": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "POP",
      "path": "24"
    },
    "3407": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "POP",
      "path": "24"
    },
    "3408": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "POP",
      "path": "24"
    },
    "3409": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3411": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3412": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3413": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "3415": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "NOT",
      "path": "24"
    },
    "3416": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "3418": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3419": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "ADD",
      "path": "24"
    },
    "3420": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "AND",
      "path": "24"
    },
    "3421": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3422": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "ADD",
      "path": "24"
    },
    "3423": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3424": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3426": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3427": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "POP",
      "path": "24"
    },
    "3428": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3429": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "ADD",
      "path": "24"
    },
    "3430": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3431": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD70"
    },
    "3434": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3435": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3436": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2740"
    },
    "3439": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        13359,
        13377
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3440": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13359,
        13377
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3441": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13352,
        13377
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3442": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13352,
        13377
      ],
      "op": "POP",
      "path": "24"
    },
    "3443": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13289,
        13384
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3444": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "o",
      "offset": [
        13289,
        13384
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3445": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3446": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9143,
        9174
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 40,
      "value": "0xD7F"
    },
    "3449": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9155,
        9165
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3450": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9167,
        9173
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3451": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9143,
        9154
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EF2"
    },
    "3454": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        9143,
        9174
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3455": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9143,
        9174
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3456": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9088,
        9181
      ],
      "op": "POP",
      "path": "24"
    },
    "3457": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        9088,
        9181
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3458": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12962,
        13069
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3459": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13014,
        13021
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3461": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13061,
        13062
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 41,
      "value": "0x1"
    },
    "3463": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13040,
        13058
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "3465": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13040,
        13058
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3466": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13040,
        13062
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD70"
    },
    "3469": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13040,
        13062
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3470": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13040,
        13062
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3471": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13040,
        13062
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2759"
    },
    "3474": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        13040,
        13062
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3475": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3476": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9287,
        9297
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3477": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9244,
        9263
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3479": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3480": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3481": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3482": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9286
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "3484": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3486": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3487": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3489": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3490": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3491": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9266,
        9298
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3492": {
      "branch": 121,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9316,
        9331
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 42
    },
    "3493": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDF0"
    },
    "3496": {
      "branch": 121,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3497": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3499": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3506": {
      "op": "SHL"
    },
    "3507": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3508": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3511": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3513": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3514": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "ADD",
      "path": "24"
    },
    "3515": {
      "op": "MSTORE"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3520": {
      "op": "DUP3"
    },
    "3521": {
      "op": "ADD"
    },
    "3522": {
      "op": "MSTORE"
    },
    "3523": {
      "op": "PUSH32",
      "value": "0x4E6F74206120726567697374657265642076616C696461746F722E0000000000"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3558": {
      "op": "DUP3"
    },
    "3559": {
      "op": "ADD"
    },
    "3560": {
      "op": "MSTORE"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "3567": {
      "op": "JUMP"
    },
    "3568": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9308,
        9363
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3569": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9374,
        9401
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3571": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3572": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3573": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3574": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9414
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "3576": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3578": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3579": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3581": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3582": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9404,
        9427
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3583": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9456,
        9472
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 43,
      "value": "0x3"
    },
    "3585": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9456,
        9472
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3586": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9456,
        9472
      ],
      "op": "ADD",
      "path": "24"
    },
    "3587": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9456,
        9472
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3588": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9446,
        9472
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3589": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9446,
        9472
      ],
      "op": "GT",
      "path": "24"
    },
    "3590": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9446,
        9472
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3591": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE52"
    },
    "3594": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3595": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3597": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3598": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3606": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3609": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3611": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3612": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "ADD",
      "path": "24"
    },
    "3613": {
      "op": "MSTORE"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3618": {
      "op": "DUP3"
    },
    "3619": {
      "op": "ADD"
    },
    "3620": {
      "op": "MSTORE"
    },
    "3621": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3656": {
      "op": "DUP3"
    },
    "3657": {
      "op": "ADD"
    },
    "3658": {
      "op": "MSTORE"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3661": {
      "op": "ADD"
    },
    "3662": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "3665": {
      "op": "JUMP"
    },
    "3666": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9438,
        9507
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3667": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9534,
        9535
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 44,
      "value": "0x0"
    },
    "3669": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9525,
        9531
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3670": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9525,
        9535
      ],
      "op": "GT",
      "path": "24"
    },
    "3671": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE72"
    },
    "3674": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3675": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3677": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3686": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3687": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3689": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "ADD",
      "path": "24"
    },
    "3690": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "3693": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3694": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x276C"
    },
    "3697": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9517,
        9573
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3698": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9517,
        9573
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3699": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9668
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3700": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9679
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3702": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9679
      ],
      "op": "ADD",
      "path": "24"
    },
    "3703": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9679
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3704": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9683,
        9684
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3706": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9684
      ],
      "op": "SUB",
      "path": "24"
    },
    "3707": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9655,
        10620
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF55"
    },
    "3710": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9655,
        10620
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3711": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9741,
        9753
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 45,
      "value": "0x70"
    },
    "3713": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9741,
        9753
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3714": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9723,
        9753
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE8B"
    },
    "3717": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9723,
        9753
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3718": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9723,
        9738
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "3719": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9723,
        9753
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26DC"
    },
    "3722": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9723,
        9753
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3723": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9723,
        9753
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3724": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9700,
        9720
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3726": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9700,
        9720
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3727": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9700,
        9720
      ],
      "op": "ADD",
      "path": "24"
    },
    "3728": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9700,
        9753
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3729": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9867
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "3731": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9867
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3732": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9867
      ],
      "op": "ADD",
      "path": "24"
    },
    "3733": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9867
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3734": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9829,
        9848
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3736": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9829,
        9848
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3737": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9876
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEA3"
    },
    "3740": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9876
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3741": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9870,
        9876
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3742": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9870,
        9876
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3743": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9876
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2759"
    },
    "3746": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9851,
        9876
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3747": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9876
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3748": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        9916
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 46,
      "value": "0x65"
    },
    "3750": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        9916
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3751": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10025,
        10035
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "3753": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10025,
        10035
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3754": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3756": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3757": {
      "op": "PUSH4",
      "value": "0xB6CEECB7"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3766": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3767": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9953,
        9963
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3768": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3770": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3771": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "ADD",
      "path": "24"
    },
    "3772": {
      "op": "MSTORE"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3775": {
      "op": "DUP2"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "op": "DUP5"
    },
    "3778": {
      "op": "SWAP1"
    },
    "3779": {
      "op": "MSTORE"
    },
    "3780": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10010,
        10035
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3781": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10010,
        10035
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3782": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10010,
        10035
      ],
      "op": "LT",
      "path": "24"
    },
    "3783": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10010,
        10035
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "op": "ADD"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9829,
        9876
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3790": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9829,
        9876
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3798": {
      "op": "SHL"
    },
    "3799": {
      "op": "SUB"
    },
    "3800": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        9916
      ],
      "op": "AND",
      "path": "24"
    },
    "3801": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        9916
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3802": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        9935
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB6CEECB7"
    },
    "3807": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        9935
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3810": {
      "op": "ADD"
    },
    "3811": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3813": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3815": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3816": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3817": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3818": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "SUB",
      "path": "24"
    },
    "3819": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3820": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3822": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP8",
      "path": "24"
    },
    "3823": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3824": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "3825": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3826": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3827": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3828": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEFC"
    },
    "3831": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3832": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3834": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3835": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3836": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3837": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "POP",
      "path": "24"
    },
    "3838": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "GAS",
      "path": "24"
    },
    "3839": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "CALL",
      "path": "24"
    },
    "3840": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3841": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3842": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3843": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF10"
    },
    "3846": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3847": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3848": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3850": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3851": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3852": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3853": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3855": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3856": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9890,
        10049
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "op": "POP"
    },
    "3859": {
      "op": "POP"
    },
    "3860": {
      "op": "POP"
    },
    "3861": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10097,
        10117
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 47,
      "value": "0x4"
    },
    "3863": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10097,
        10117
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3864": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10097,
        10117
      ],
      "op": "ADD",
      "path": "24"
    },
    "3865": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10097,
        10117
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3866": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3868": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3869": {
      "op": "SWAP1"
    },
    "3870": {
      "op": "DUP2"
    },
    "3871": {
      "op": "MSTORE"
    },
    "3872": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10085,
        10095
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3873": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10085,
        10095
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3874": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "3907": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3910": {
      "op": "ADD"
    },
    "3911": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3912": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3914": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3915": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3916": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3917": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "SUB",
      "path": "24"
    },
    "3918": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3919": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10069,
        10118
      ],
      "op": "LOG2",
      "path": "24"
    },
    "3920": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9686,
        10156
      ],
      "op": "POP",
      "path": "24"
    },
    "3921": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "3922": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "POP",
      "path": "24"
    },
    "3923": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "POP",
      "path": "24"
    },
    "3924": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3925": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9655,
        10620
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3926": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10298,
        10307
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 48
    },
    "3927": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10298,
        10318
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3929": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10298,
        10318
      ],
      "op": "ADD",
      "path": "24"
    },
    "3930": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10298,
        10318
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3931": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10279,
        10294
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "3932": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10279,
        10318
      ],
      "op": "LT",
      "path": "24"
    },
    "3933": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10279,
        10318
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3934": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFA9"
    },
    "3937": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3938": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3940": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3947": {
      "op": "SHL"
    },
    "3948": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3949": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3952": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3954": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3955": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "ADD",
      "path": "24"
    },
    "3956": {
      "op": "MSTORE"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3961": {
      "op": "DUP3"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "MSTORE"
    },
    "3964": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3999": {
      "op": "DUP3"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "4008": {
      "op": "JUMP"
    },
    "4009": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10254,
        10376
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4010": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10411,
        10417
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 49
    },
    "4011": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10400
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4012": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10407
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4014": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10407
      ],
      "op": "ADD",
      "path": "24"
    },
    "4015": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10407
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4017": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4018": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4019": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4020": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFBD"
    },
    "4023": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4024": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4025": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2759"
    },
    "4028": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        10391,
        10417
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4029": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4030": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4031": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4032": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10391,
        10417
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10431,
        10456
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 50,
      "value": "0xFCD"
    },
    "4037": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10431,
        10456
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4038": {
      "op": "POP"
    },
    "4039": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10437,
        10447
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4040": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10449,
        10455
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4041": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10431,
        10436
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E13"
    },
    "4044": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        10431,
        10456
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4045": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10431,
        10456
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4046": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 51,
      "value": "0x40"
    },
    "4048": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4049": {
      "op": "DUP4"
    },
    "4050": {
      "op": "DUP2"
    },
    "4051": {
      "op": "MSTORE"
    },
    "4052": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10538,
        10548
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4053": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10538,
        10548
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4054": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "4087": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4090": {
      "op": "ADD"
    },
    "4091": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4093": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4094": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4095": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4096": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "SUB",
      "path": "24"
    },
    "4097": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4098": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10523,
        10557
      ],
      "op": "LOG2",
      "path": "24"
    },
    "4099": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9234,
        10626
      ],
      "op": "POP",
      "path": "24"
    },
    "4100": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9234,
        10626
      ],
      "op": "POP",
      "path": "24"
    },
    "4101": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9187,
        10626
      ],
      "op": "POP",
      "path": "24"
    },
    "4102": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        9187,
        10626
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4103": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4104": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4106": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x37"
    },
    "4108": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4109": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4110": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A4"
    },
    "4113": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4114": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268C"
    },
    "4117": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4118": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4119": {
      "offset": [
        2903,
        2927
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "4121": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2903,
        2927
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4128": {
      "op": "SHL"
    },
    "4129": {
      "op": "SUB"
    },
    "4130": {
      "offset": [
        2903,
        2927
      ],
      "op": "AND",
      "path": "24"
    },
    "4131": {
      "offset": [
        2889,
        2899
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4132": {
      "offset": [
        2889,
        2927
      ],
      "op": "EQ",
      "path": "24"
    },
    "4133": {
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1040"
    },
    "4136": {
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4137": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4139": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4146": {
      "op": "SHL"
    },
    "4147": {
      "offset": [
        2868,
        2991
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4148": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4149": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4151": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "ADD",
      "path": "24"
    },
    "4152": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "4155": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4156": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27AD"
    },
    "4159": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4160": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4161": {
      "offset": [
        1989,
        2002
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "4173": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11061,
        11073
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 53,
      "value": "0x6E"
    },
    "4175": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11061,
        11073
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4176": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11058
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1058"
    },
    "4179": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "4181": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4182": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4183": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4184": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11058
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4185": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11073
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1062"
    },
    "4188": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11073
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4189": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11073
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4190": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11073
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26DC"
    },
    "4193": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11045,
        11073
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4194": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11073
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4195": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11087
      ],
      "op": "GT",
      "path": "24"
    },
    "4196": {
      "branch": 126,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11045,
        11087
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4197": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10B0"
    },
    "4200": {
      "branch": 126,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4201": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4203": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4210": {
      "op": "SHL"
    },
    "4211": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4212": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4215": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4217": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4218": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "ADD",
      "path": "24"
    },
    "4219": {
      "op": "MSTORE"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4224": {
      "op": "DUP3"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "op": "MSTORE"
    },
    "4227": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D20737570706C79207265616368656421000000000000000000"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "MSTORE"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4267": {
      "op": "ADD"
    },
    "4268": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "4271": {
      "op": "JUMP"
    },
    "4272": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11024,
        11136
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4273": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11175,
        11182
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "4275": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11175,
        11182
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4276": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11151,
        11171
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "4278": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11151,
        11171
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4279": {
      "branch": 127,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11151,
        11182
      ],
      "op": "LT",
      "path": "24"
    },
    "4280": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11147,
        11283
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E6"
    },
    "4283": {
      "branch": 127,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11147,
        11283
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4284": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11217,
        11221
      ],
      "op": "PUSH8",
      "path": "24",
      "value": "0xDE0B6B3A7640000"
    },
    "4293": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11202,
        11214
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "4295": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11202,
        11214
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4296": {
      "branch": 128,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11202,
        11221
      ],
      "op": "GT",
      "path": "24"
    },
    "4297": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11198,
        11273
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4298": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11198,
        11273
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E6"
    },
    "4301": {
      "branch": 128,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11198,
        11273
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4302": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11257,
        11258
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 54,
      "value": "0x2"
    },
    "4304": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11253
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "4306": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11253
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4308": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4309": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4310": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4311": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E0"
    },
    "4314": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4315": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4316": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2705"
    },
    "4319": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11241,
        11258
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4320": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4321": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4322": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4323": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11258
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4324": {
      "op": "POP"
    },
    "4325": {
      "op": "POP"
    },
    "4326": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11198,
        11273
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4327": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11293,
        11321
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4329": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11346,
        11349
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "4331": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11325,
        11337
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "4333": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11325,
        11337
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4334": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11340,
        11342
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x28"
    },
    "4336": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11325,
        11342
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10F9"
    },
    "4339": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11325,
        11342
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4340": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11325,
        11342
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4341": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11325,
        11342
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27F3"
    },
    "4344": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11325,
        11342
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4345": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11325,
        11342
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4346": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11324,
        11349
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1103"
    },
    "4349": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11324,
        11349
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4350": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11324,
        11349
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4351": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11324,
        11349
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2705"
    },
    "4354": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11324,
        11349
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4355": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11324,
        11349
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4356": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11293,
        11349
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4357": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11293,
        11349
      ],
      "op": "POP",
      "path": "24"
    },
    "4358": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11384
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4360": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11409,
        11412
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "4362": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11388,
        11400
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "4364": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11388,
        11400
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4365": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11403,
        11405
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3C"
    },
    "4367": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11388,
        11405
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1118"
    },
    "4370": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11388,
        11405
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4371": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11388,
        11405
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4372": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11388,
        11405
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27F3"
    },
    "4375": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11388,
        11405
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4376": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11388,
        11405
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4377": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11387,
        11412
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1122"
    },
    "4380": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11387,
        11412
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4381": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11387,
        11412
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4382": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11387,
        11412
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2705"
    },
    "4385": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11387,
        11412
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4386": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11387,
        11412
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4387": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11412
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4388": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11412
      ],
      "op": "POP",
      "path": "24"
    },
    "4389": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11476,
        11499
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4391": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11537,
        11553
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4392": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11537,
        11560
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4393": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11502,
        11522
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4394": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11502,
        11560
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1133"
    },
    "4397": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11502,
        11560
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4398": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11502,
        11560
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4399": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11502,
        11560
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2705"
    },
    "4402": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11502,
        11560
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4403": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11502,
        11560
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4404": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11476,
        11560
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4405": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11476,
        11560
      ],
      "op": "POP",
      "path": "24"
    },
    "4406": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11575,
        11584
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4408": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4409": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11594,
        11610
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4410": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11594,
        11617
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4411": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11590,
        11591
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4412": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11590,
        11617
      ],
      "op": "LT",
      "path": "24"
    },
    "4413": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4414": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x116C"
    },
    "4417": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4418": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11638,
        11681
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 55,
      "value": "0x1164"
    },
    "4421": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11660
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4422": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11661,
        11662
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4423": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4424": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4425": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4426": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "LT",
      "path": "24"
    },
    "4427": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1156"
    },
    "4430": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4431": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1156"
    },
    "4434": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26EF"
    },
    "4437": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11644,
        11663
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4438": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4439": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4441": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "MUL",
      "path": "24"
    },
    "4442": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4444": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "ADD",
      "path": "24"
    },
    "4445": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "ADD",
      "path": "24"
    },
    "4446": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11644,
        11663
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4447": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11665,
        11680
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4448": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11638,
        11643
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E13"
    },
    "4451": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11638,
        11681
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4452": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11638,
        11681
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4453": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11619,
        11622
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 56,
      "value": "0x1"
    },
    "4455": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11619,
        11622
      ],
      "op": "ADD",
      "path": "24"
    },
    "4456": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1138"
    },
    "4459": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4460": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4461": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11570,
        11692
      ],
      "op": "POP",
      "path": "24"
    },
    "4462": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11749,
        11758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4464": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11949
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4465": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11768,
        11776
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4466": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11768,
        11783
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4467": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11764,
        11765
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4468": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11764,
        11783
      ],
      "op": "LT",
      "path": "24"
    },
    "4469": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11949
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4470": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11949
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11D9"
    },
    "4473": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11949
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4474": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11804,
        11818
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4476": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11883,
        11897
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4477": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11846,
        11863
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4478": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11840
      ],
      "op": "DUP10",
      "path": "24"
    },
    "4479": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11841,
        11842
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4480": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4481": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4482": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4483": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "LT",
      "path": "24"
    },
    "4484": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x118F"
    },
    "4487": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4488": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x118F"
    },
    "4491": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26EF"
    },
    "4494": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11823,
        11843
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4495": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4496": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4498": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "MUL",
      "path": "24"
    },
    "4499": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4501": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "ADD",
      "path": "24"
    },
    "4502": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "ADD",
      "path": "24"
    },
    "4503": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11843
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4504": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11863
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11A1"
    },
    "4507": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11863
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4508": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11863
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4509": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11863
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27F3"
    },
    "4512": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11823,
        11863
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4513": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11823,
        11863
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4514": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11822,
        11897
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11AB"
    },
    "4517": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11822,
        11897
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4518": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11822,
        11897
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4519": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11822,
        11897
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2705"
    },
    "4522": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11822,
        11897
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4523": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11822,
        11897
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4524": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11804,
        11898
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4525": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11804,
        11898
      ],
      "op": "POP",
      "path": "24"
    },
    "4526": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11912,
        11938
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 57,
      "value": "0x11D0"
    },
    "4529": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11926
      ],
      "op": "DUP10",
      "path": "24"
    },
    "4530": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11927,
        11928
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4531": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4532": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4533": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4534": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "LT",
      "path": "24"
    },
    "4535": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11C2"
    },
    "4538": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4539": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11C2"
    },
    "4542": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26EF"
    },
    "4545": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11918,
        11929
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4546": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4547": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4549": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "MUL",
      "path": "24"
    },
    "4550": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4552": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "ADD",
      "path": "24"
    },
    "4553": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "ADD",
      "path": "24"
    },
    "4554": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11918,
        11929
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4555": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11931,
        11937
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4556": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11912,
        11917
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E13"
    },
    "4559": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11912,
        11938
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4560": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11912,
        11938
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4561": {
      "op": "POP"
    },
    "4562": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11785,
        11788
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 58,
      "value": "0x1"
    },
    "4564": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11785,
        11788
      ],
      "op": "ADD",
      "path": "24"
    },
    "4565": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11949
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1170"
    },
    "4568": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11949
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4569": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11949
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4570": {
      "op": "POP"
    },
    "4571": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11979
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 59,
      "value": "0x71"
    },
    "4573": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4574": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4575": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4576": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11979
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4578": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11EA"
    },
    "4581": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4582": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2727"
    },
    "4585": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11959,
        11981
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4586": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4587": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4588": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4589": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "POP",
      "path": "24"
    },
    "4590": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4591": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11959,
        11981
      ],
      "op": "POP",
      "path": "24"
    },
    "4592": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11014,
        11988
      ],
      "op": "POP",
      "path": "24"
    },
    "4593": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11014,
        11988
      ],
      "op": "POP",
      "path": "24"
    },
    "4594": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11014,
        11988
      ],
      "op": "POP",
      "path": "24"
    },
    "4595": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "POP",
      "path": "24"
    },
    "4596": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "POP",
      "path": "24"
    },
    "4597": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "POP",
      "path": "24"
    },
    "4598": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10803,
        11988
      ],
      "op": "POP",
      "path": "24"
    },
    "4599": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        10803,
        11988
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4600": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4601": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4602": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4604": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4605": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4606": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4607": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "4609": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4611": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4612": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4613": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4614": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4616": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4617": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4618": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4625": {
      "op": "SHL"
    },
    "4626": {
      "op": "SUB"
    },
    "4627": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4628": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "2"
    },
    "4629": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4630": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4631": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4632": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4633": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4634": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4635": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4636": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4637": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4638": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4639": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4640": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 60
    },
    "4641": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4642": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "2"
    },
    "4643": {
      "branch": 138,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4644": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x127D"
    },
    "4647": {
      "branch": 138,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4648": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4650": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4657": {
      "op": "SHL"
    },
    "4658": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4659": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4662": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4664": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4665": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "2"
    },
    "4666": {
      "op": "MSTORE"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4671": {
      "op": "DUP3"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "op": "MSTORE"
    },
    "4674": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4709": {
      "op": "DUP3"
    },
    "4710": {
      "op": "ADD"
    },
    "4711": {
      "op": "MSTORE"
    },
    "4712": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4720": {
      "op": "SHL"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4723": {
      "op": "DUP3"
    },
    "4724": {
      "op": "ADD"
    },
    "4725": {
      "op": "MSTORE"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4728": {
      "op": "ADD"
    },
    "4729": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "4732": {
      "op": "JUMP"
    },
    "4733": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4734": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 61,
      "value": "0x85A"
    },
    "4737": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4738": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4739": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4740": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4741": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "2"
    },
    "4742": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5A"
    },
    "4745": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4746": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4747": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4749": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4750": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 62,
      "value": "0x835"
    },
    "4753": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4754": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4755": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4756": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C10"
    },
    "4759": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4760": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4761": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4761,
        4771
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 63
    },
    "4762": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4764": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4765": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4766": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4767": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4760
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "4769": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4771": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4772": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4774": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4775": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4776": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4772
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4777": {
      "branch": 129,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4745,
        4777
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4778": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12F5"
    },
    "4781": {
      "branch": 129,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4782": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4784": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4791": {
      "op": "SHL"
    },
    "4792": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4793": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4796": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4798": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4799": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "ADD",
      "path": "24"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4805": {
      "op": "DUP3"
    },
    "4806": {
      "op": "ADD"
    },
    "4807": {
      "op": "MSTORE"
    },
    "4808": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4843": {
      "op": "DUP3"
    },
    "4844": {
      "op": "ADD"
    },
    "4845": {
      "op": "MSTORE"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4848": {
      "op": "ADD"
    },
    "4849": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "4852": {
      "op": "JUMP"
    },
    "4853": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4737,
        4806
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4854": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 64,
      "value": "0x40"
    },
    "4856": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4857": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4858": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "4860": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4861": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "ADD",
      "path": "24"
    },
    "4862": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4863": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4864": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4863,
        4876
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4866": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4863,
        4876
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4867": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4863,
        4876
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4868": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4869": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4870": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4871": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4903,
        4913
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4872": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4874": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4875": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4876": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "ADD",
      "path": "24"
    },
    "4877": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4878": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4879": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4880": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4881": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4882": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "ADD",
      "path": "24"
    },
    "4883": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP9",
      "path": "24"
    },
    "4884": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4885": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4886": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4982,
        4984
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x32"
    },
    "4888": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "4890": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP9",
      "path": "24"
    },
    "4891": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "ADD",
      "path": "24"
    },
    "4892": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4893": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4894": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4897": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "4898": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4899": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4900": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4822
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x72"
    },
    "4902": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4903": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4904": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "DUP9",
      "path": "24"
    },
    "4905": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4906": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4837
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4907": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "4908": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4909": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "DUP9",
      "path": "24"
    },
    "4910": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4911": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4912": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4913": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "4915": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "DUP9",
      "path": "24"
    },
    "4916": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "ADD",
      "path": "24"
    },
    "4917": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4918": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4925": {
      "op": "SHL"
    },
    "4926": {
      "op": "SUB"
    },
    "4927": {
      "op": "NOT"
    },
    "4928": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "AND",
      "path": "24"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4935": {
      "op": "SHL"
    },
    "4936": {
      "op": "SUB"
    },
    "4937": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4938": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4939": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "AND",
      "path": "24"
    },
    "4940": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4941": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4942": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4943": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "OR",
      "path": "24"
    },
    "4944": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4945": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4946": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4947": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "4949": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4950": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "ADD",
      "path": "24"
    },
    "4951": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4952": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4953": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4955": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4956": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "4957": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "ADD",
      "path": "24"
    },
    "4958": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4959": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4962": {
      "op": "NOT"
    },
    "4963": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "AND",
      "path": "24"
    },
    "4964": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4840,
        4995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "4966": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4967": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "4968": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "AND",
      "path": "24"
    },
    "4969": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "4970": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4971": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "4972": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "OR",
      "path": "24"
    },
    "4973": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4974": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4975": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4817,
        4995
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4976": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5036,
        5049
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 65
    },
    "4977": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5036,
        5049
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4978": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4979": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4980": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4981": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5021
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "4983": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4984": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4985": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4986": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4987": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4988": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5033
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4989": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5049
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4990": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5049
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4991": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5006,
        5049
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4992": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5036,
        5049
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4993": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5036,
        5049
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4994": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 66,
      "value": "0x138A"
    },
    "4997": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5036,
        5049
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4998": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2727"
    },
    "5001": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        5059,
        5074
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5002": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5003": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5004": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5005": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "POP",
      "path": "24"
    },
    "5006": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5007": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5059,
        5074
      ],
      "op": "POP",
      "path": "24"
    },
    "5008": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4618,
        5081
      ],
      "op": "POP",
      "path": "24"
    },
    "5009": {
      "fn": "SmartnodesCore.createUser",
      "jump": "o",
      "offset": [
        4618,
        5081
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5010": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12859,
        12956
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5011": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12906,
        12913
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5013": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12948,
        12949
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 67,
      "value": "0x1"
    },
    "5015": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12932,
        12945
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "5017": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12932,
        12945
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5018": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12932,
        12949
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD70"
    },
    "5021": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12932,
        12949
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5022": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12932,
        12949
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5023": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12932,
        12949
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2759"
    },
    "5026": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12932,
        12949
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5027": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5028": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12525,
        12529
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5030": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12531,
        12538
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5031": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12573,
        12591
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 68,
      "value": "0x67"
    },
    "5033": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12573,
        12591
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5034": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12558,
        12570
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5035": {
      "branch": 130,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12558,
        12591
      ],
      "op": "LT",
      "path": "24"
    },
    "5036": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13E5"
    },
    "5039": {
      "branch": 130,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5040": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5042": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5049": {
      "op": "SHL"
    },
    "5050": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5051": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5054": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5056": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5057": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "ADD",
      "path": "24"
    },
    "5058": {
      "op": "MSTORE"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5063": {
      "op": "DUP3"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "MSTORE"
    },
    "5066": {
      "op": "PUSH11",
      "value": "0x24B73B30B634B21024A217"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5080": {
      "op": "SHL"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5083": {
      "op": "DUP3"
    },
    "5084": {
      "op": "ADD"
    },
    "5085": {
      "op": "MSTORE"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5088": {
      "op": "ADD"
    },
    "5089": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "5092": {
      "op": "JUMP"
    },
    "5093": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12550,
        12607
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5094": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12645
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5096": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5097": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5098": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5099": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12658
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "5101": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5103": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5104": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5106": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5107": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5108": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5109": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12724
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "5111": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12724
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5112": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12724
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "5114": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12756,
        12783
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5115": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12756,
        12783
      ],
      "op": "ADD",
      "path": "24"
    },
    "5116": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12756,
        12783
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5117": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5118": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5119": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5126": {
      "op": "SHL"
    },
    "5127": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5128": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5135": {
      "op": "SHL"
    },
    "5136": {
      "op": "SUB"
    },
    "5137": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12756,
        12783
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5138": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12756,
        12783
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5139": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12756,
        12783
      ],
      "op": "AND",
      "path": "24"
    },
    "5140": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5142": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5143": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "ADD",
      "path": "24"
    },
    "5144": {
      "op": "MSTORE"
    },
    "5145": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5146": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12648,
        12672
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5147": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12645
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5148": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12724
      ],
      "op": "AND",
      "path": "24"
    },
    "5149": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12724
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5150": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12742
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x40550A1C"
    },
    "5155": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12742
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5161": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5163": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5164": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5165": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5166": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "SUB",
      "path": "24"
    },
    "5167": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5168": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP7",
      "path": "24"
    },
    "5169": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "GAS",
      "path": "24"
    },
    "5170": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "5171": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5172": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5173": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5174": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1443"
    },
    "5177": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5178": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "5179": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5181": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5182": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "5183": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "5184": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5186": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "REVERT",
      "path": "24"
    },
    "5187": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5188": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "POP",
      "path": "24"
    },
    "5189": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "POP",
      "path": "24"
    },
    "5190": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "POP",
      "path": "24"
    },
    "5191": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "POP",
      "path": "24"
    },
    "5192": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5194": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5195": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "5196": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "5198": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "NOT",
      "path": "24"
    },
    "5199": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "5201": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5202": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "ADD",
      "path": "24"
    },
    "5203": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "AND",
      "path": "24"
    },
    "5204": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5205": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "ADD",
      "path": "24"
    },
    "5206": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5207": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5209": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5210": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "POP",
      "path": "24"
    },
    "5211": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5212": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "ADD",
      "path": "24"
    },
    "5213": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5214": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1467"
    },
    "5217": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5218": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5219": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x280A"
    },
    "5222": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12698,
        12793
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5223": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12698,
        12793
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5224": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12821,
        12845
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 69,
      "value": "0x2"
    },
    "5226": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12821,
        12845
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5227": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12821,
        12845
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5228": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12821,
        12845
      ],
      "op": "ADD",
      "path": "24"
    },
    "5229": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12821,
        12845
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5230": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12793
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5231": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12793
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "5232": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12821,
        12845
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5233": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12821,
        12845
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "5234": {
      "op": "POP"
    },
    "5235": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5236": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12440,
        12853
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "op": "POP"
    },
    "5239": {
      "op": "POP"
    },
    "5240": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        12440,
        12853
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5241": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4197,
        4523
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5242": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4293,
        4317
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 70,
      "value": "0x66"
    },
    "5244": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4293,
        4317
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "op": "SUB"
    },
    "5253": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4293,
        4317
      ],
      "op": "AND",
      "path": "24"
    },
    "5254": {
      "branch": 131,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4293,
        4331
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5255": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14D2"
    },
    "5258": {
      "branch": 131,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5259": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5261": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5270": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5273": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5275": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5276": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "ADD",
      "path": "24"
    },
    "5277": {
      "op": "MSTORE"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5282": {
      "op": "DUP3"
    },
    "5283": {
      "op": "ADD"
    },
    "5284": {
      "op": "MSTORE"
    },
    "5285": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5320": {
      "op": "DUP3"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "MSTORE"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5325": {
      "op": "ADD"
    },
    "5326": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "5329": {
      "op": "JUMP"
    },
    "5330": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4272,
        4387
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5331": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4423
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 71,
      "value": "0x65"
    },
    "5333": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5334": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5341": {
      "op": "SHL"
    },
    "5342": {
      "op": "SUB"
    },
    "5343": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5344": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5345": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "AND",
      "path": "24"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5352": {
      "op": "SHL"
    },
    "5353": {
      "op": "SUB"
    },
    "5354": {
      "op": "NOT"
    },
    "5355": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5356": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5357": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "AND",
      "path": "24"
    },
    "5358": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5359": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "OR",
      "path": "24"
    },
    "5360": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5361": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5362": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4397,
        4463
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5363": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4497
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 72,
      "value": "0x66"
    },
    "5365": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5366": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5367": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5368": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5369": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "AND",
      "path": "24"
    },
    "5370": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "OR",
      "path": "24"
    },
    "5371": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5372": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4473,
        4516
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5373": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        4197,
        4523
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5374": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5375": {
      "offset": [
        2903,
        2927
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "5377": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2903,
        2927
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5384": {
      "op": "SHL"
    },
    "5385": {
      "op": "SUB"
    },
    "5386": {
      "offset": [
        2903,
        2927
      ],
      "op": "AND",
      "path": "24"
    },
    "5387": {
      "offset": [
        2889,
        2899
      ],
      "op": "CALLER",
      "path": "24"
    },
    "5388": {
      "offset": [
        2889,
        2927
      ],
      "op": "EQ",
      "path": "24"
    },
    "5389": {
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1528"
    },
    "5392": {
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5393": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5395": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5396": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5402": {
      "op": "SHL"
    },
    "5403": {
      "offset": [
        2868,
        2991
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5404": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5405": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5407": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "ADD",
      "path": "24"
    },
    "5408": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "5411": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5412": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27AD"
    },
    "5415": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5416": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5417": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8113,
        8128
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5419": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5420": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5421": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5422": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8135
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "5424": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5426": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5427": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5429": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5430": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5431": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5432": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8164
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 73,
      "value": "0x5"
    },
    "5434": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8164
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5435": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8164
      ],
      "op": "ADD",
      "path": "24"
    },
    "5436": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8172
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5437": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8172
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5440": {
      "op": "NOT"
    },
    "5441": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8172
      ],
      "op": "AND",
      "path": "24"
    },
    "5442": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8172
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5443": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8152,
        8172
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5444": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8187,
        8205
      ],
      "op": "SWAP1",
      "path": "24",
      "statement": 74
    },
    "5445": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8187,
        8205
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5446": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5447": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8131,
        8142
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5448": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8136,
        8141
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5449": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8136,
        8141
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5450": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8187,
        8205
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xB1DEE78CEF8C6887046D91C59E17F84FBC012C9F7EFA49A10CCE97E13CC94BF4"
    },
    "5483": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8187,
        8205
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5484": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8113,
        8128
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5485": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8187,
        8205
      ],
      "op": "LOG2",
      "path": "24"
    },
    "5486": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8103,
        8212
      ],
      "op": "POP",
      "path": "24"
    },
    "5487": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8037,
        8212
      ],
      "op": "POP",
      "path": "24"
    },
    "5488": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "o",
      "offset": [
        8037,
        8212
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5489": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5490": {
      "offset": [
        2903,
        2927
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "5492": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2903,
        2927
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5493": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6307,
        6336
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "5495": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6307,
        6336
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5502": {
      "op": "SHL"
    },
    "5503": {
      "op": "SUB"
    },
    "5504": {
      "offset": [
        2903,
        2927
      ],
      "op": "AND",
      "path": "24"
    },
    "5505": {
      "offset": [
        2889,
        2899
      ],
      "op": "CALLER",
      "path": "24"
    },
    "5506": {
      "offset": [
        2889,
        2927
      ],
      "op": "EQ",
      "path": "24"
    },
    "5507": {
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x159E"
    },
    "5510": {
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5511": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5513": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5520": {
      "op": "SHL"
    },
    "5521": {
      "offset": [
        2868,
        2991
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5522": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5523": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5525": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "ADD",
      "path": "24"
    },
    "5526": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "5529": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5530": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27AD"
    },
    "5533": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5534": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5535": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6627,
        6628
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 75,
      "value": "0x0"
    },
    "5537": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6621
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5538": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6621
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5539": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6622,
        6623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5541": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5542": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5543": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "LT",
      "path": "24"
    },
    "5544": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15B3"
    },
    "5547": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5548": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15B3"
    },
    "5551": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26EF"
    },
    "5554": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6610,
        6624
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5555": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5556": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5557": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "POP",
      "path": "24"
    },
    "5558": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5560": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "MUL",
      "path": "24"
    },
    "5561": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "ADD",
      "path": "24"
    },
    "5562": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6624
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "5563": {
      "branch": 132,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6610,
        6628
      ],
      "op": "GT",
      "path": "24"
    },
    "5564": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1607"
    },
    "5567": {
      "branch": 132,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5568": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5570": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5577": {
      "op": "SHL"
    },
    "5578": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5579": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5582": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5584": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5585": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "ADD",
      "path": "24"
    },
    "5586": {
      "op": "MSTORE"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5591": {
      "op": "DUP3"
    },
    "5592": {
      "op": "ADD"
    },
    "5593": {
      "op": "MSTORE"
    },
    "5594": {
      "op": "PUSH32",
      "value": "0x4361706163697479206D7573742062652067726561746572207A65726F2E0000"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5629": {
      "op": "DUP3"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "MSTORE"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "5638": {
      "op": "JUMP"
    },
    "5639": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6602,
        6663
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5640": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 76,
      "value": "0x0"
    },
    "5642": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5643": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5644": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5645": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6711
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x77"
    },
    "5647": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5649": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5650": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5652": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5653": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5654": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6723
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5655": {
      "branch": 133,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6694,
        6728
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5656": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1663"
    },
    "5659": {
      "branch": 133,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5660": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5662": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5669": {
      "op": "SHL"
    },
    "5670": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5671": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5674": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5676": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5677": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "ADD",
      "path": "24"
    },
    "5678": {
      "op": "MSTORE"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5683": {
      "op": "DUP3"
    },
    "5684": {
      "op": "ADD"
    },
    "5685": {
      "op": "MSTORE"
    },
    "5686": {
      "op": "PUSH32",
      "value": "0x5573657220616C72656164792068617320616374697665206A6F620000000000"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5721": {
      "op": "DUP3"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "op": "MSTORE"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5726": {
      "op": "ADD"
    },
    "5727": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "5730": {
      "op": "JUMP"
    },
    "5731": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6673,
        6781
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5732": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6853
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "5734": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6853
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5735": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5737": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5738": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5739": {
      "op": "PUSH4",
      "value": "0x2909069B"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5746": {
      "op": "SHL"
    },
    "5747": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5748": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5749": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5750": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5751": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6792,
        6824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5753": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6792,
        6824
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5760": {
      "op": "SHL"
    },
    "5761": {
      "op": "SUB"
    },
    "5762": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6853
      ],
      "op": "AND",
      "path": "24"
    },
    "5763": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6853
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5764": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6894
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA4241A6C"
    },
    "5769": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6894
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5770": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5772": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5773": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5774": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "ADD",
      "path": "24"
    },
    "5775": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5776": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6792,
        6824
      ],
      "op": "DUP7",
      "path": "24"
    },
    "5777": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6792,
        6824
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5778": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5779": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5780": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5781": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5782": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SUB",
      "path": "24"
    },
    "5783": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "ADD",
      "path": "24"
    },
    "5784": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5785": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6853
      ],
      "op": "DUP7",
      "path": "24"
    },
    "5786": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "GAS",
      "path": "24"
    },
    "5787": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "5788": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5789": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5790": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5791": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16AC"
    },
    "5794": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5795": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "5796": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5798": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5799": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "5800": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "5801": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5803": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "REVERT",
      "path": "24"
    },
    "5804": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5805": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "POP",
      "path": "24"
    },
    "5806": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "POP",
      "path": "24"
    },
    "5807": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "POP",
      "path": "24"
    },
    "5808": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "POP",
      "path": "24"
    },
    "5809": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5811": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5812": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "5813": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5815": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5816": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "5817": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "5819": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "5820": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5821": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5822": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "ADD",
      "path": "24"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5825": {
      "op": "NOT"
    },
    "5826": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "AND",
      "path": "24"
    },
    "5827": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5828": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "ADD",
      "path": "24"
    },
    "5829": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5831": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5832": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16D4"
    },
    "5835": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5836": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5837": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5838": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "ADD",
      "path": "24"
    },
    "5839": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5840": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "5843": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6827,
        6896
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5844": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6827,
        6896
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5845": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6792,
        6896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5846": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6792,
        6896
      ],
      "op": "POP",
      "path": "24"
    },
    "5847": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6906,
        6936
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5849": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6953,
        6968
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5850": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6953,
        6975
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5851": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH8",
      "path": "24",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5860": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5861": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "GT",
      "path": "24"
    },
    "5862": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5863": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16F2"
    },
    "5866": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5867": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16F2"
    },
    "5870": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x22D6"
    },
    "5873": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6939,
        6976
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5874": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5875": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5877": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5878": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5879": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5880": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5881": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5882": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5883": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5885": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "MUL",
      "path": "24"
    },
    "5886": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5888": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "ADD",
      "path": "24"
    },
    "5889": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5890": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "ADD",
      "path": "24"
    },
    "5891": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5893": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5894": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5895": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5896": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x171B"
    },
    "5899": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5900": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5901": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5903": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "ADD",
      "path": "24"
    },
    "5904": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5906": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5907": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "MUL",
      "path": "24"
    },
    "5908": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5909": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "5910": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5911": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "5912": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "ADD",
      "path": "24"
    },
    "5913": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5914": {
      "op": "POP"
    },
    "5915": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5916": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6939,
        6976
      ],
      "op": "POP",
      "path": "24"
    },
    "5917": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6906,
        6976
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5918": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6906,
        6976
      ],
      "op": "POP",
      "path": "24"
    },
    "5919": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6992,
        7001
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5921": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6987,
        7124
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5922": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7011,
        7026
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5923": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7011,
        7033
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5924": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7007,
        7008
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5925": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7007,
        7033
      ],
      "op": "LT",
      "path": "24"
    },
    "5926": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6987,
        7124
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5927": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6987,
        7124
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x178E"
    },
    "5930": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6987,
        7124
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5931": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7093
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 77,
      "value": "0x76"
    },
    "5933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5935": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7109
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5936": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7110,
        7111
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5937": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5938": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5939": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5940": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "LT",
      "path": "24"
    },
    "5941": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1740"
    },
    "5944": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5945": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1740"
    },
    "5948": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26EF"
    },
    "5951": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7094,
        7112
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5952": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5953": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5955": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "MUL",
      "path": "24"
    },
    "5956": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5958": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "ADD",
      "path": "24"
    },
    "5959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "ADD",
      "path": "24"
    },
    "5960": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7094,
        7112
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5967": {
      "op": "SHL"
    },
    "5968": {
      "op": "SUB"
    },
    "5969": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "AND",
      "path": "24"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5976": {
      "op": "SHL"
    },
    "5977": {
      "op": "SUB"
    },
    "5978": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "AND",
      "path": "24"
    },
    "5979": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5980": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5981": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5983": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "ADD",
      "path": "24"
    },
    "5984": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5985": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5986": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5987": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5989": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "ADD",
      "path": "24"
    },
    "5990": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5992": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5993": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7073,
        7113
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5994": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7067
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5995": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7068,
        7069
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5996": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5997": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5998": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5999": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "LT",
      "path": "24"
    },
    "6000": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x177B"
    },
    "6003": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6004": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x177B"
    },
    "6007": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26EF"
    },
    "6010": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7054,
        7070
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6011": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6012": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6014": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6015": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6016": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "MUL",
      "path": "24"
    },
    "6017": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6018": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6019": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6020": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "ADD",
      "path": "24"
    },
    "6021": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7070
      ],
      "op": "ADD",
      "path": "24"
    },
    "6022": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7054,
        7113
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6023": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7035,
        7038
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 78,
      "value": "0x1"
    },
    "6025": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7035,
        7038
      ],
      "op": "ADD",
      "path": "24"
    },
    "6026": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6987,
        7124
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1721"
    },
    "6029": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6987,
        7124
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6030": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6987,
        7124
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6031": {
      "op": "POP"
    },
    "6032": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 79,
      "value": "0x40"
    },
    "6034": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6035": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6036": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xC0"
    },
    "6038": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6039": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6040": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6041": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6042": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7220,
        7230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "6044": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7220,
        7230
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6045": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6046": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6047": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7252,
        7262
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6048": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6050": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6051": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6052": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6053": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6054": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6055": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6056": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6057": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6058": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6059": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "6061": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6062": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6063": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7344,
        7355
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6064": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH8",
      "path": "24",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6073": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6074": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "GT",
      "path": "24"
    },
    "6075": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6076": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17C7"
    },
    "6079": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6080": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17C7"
    },
    "6083": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x22D6"
    },
    "6086": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7330,
        7363
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6087": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6088": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6090": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6091": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6092": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6093": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6094": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6095": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6096": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6098": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "MUL",
      "path": "24"
    },
    "6099": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6101": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "ADD",
      "path": "24"
    },
    "6102": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6103": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "ADD",
      "path": "24"
    },
    "6104": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6106": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6107": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6108": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6109": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17F0"
    },
    "6112": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6113": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6114": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6116": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "ADD",
      "path": "24"
    },
    "6117": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6119": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6120": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "MUL",
      "path": "24"
    },
    "6121": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6122": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "6123": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6124": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "6125": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "ADD",
      "path": "24"
    },
    "6126": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6127": {
      "op": "POP"
    },
    "6128": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6129": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7363
      ],
      "op": "POP",
      "path": "24"
    },
    "6130": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6131": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6132": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6134": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6135": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7389,
        7400
      ],
      "op": "DUP7",
      "path": "24"
    },
    "6136": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7389,
        7400
      ],
      "op": "DUP7",
      "path": "24"
    },
    "6137": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6138": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6139": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6141": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MUL",
      "path": "24"
    },
    "6142": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6144": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6145": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6147": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6148": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6149": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6150": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6151": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6153": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6154": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6155": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6156": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6157": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6158": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6159": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6160": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6161": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6162": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6164": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6165": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6166": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6167": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6169": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MUL",
      "path": "24"
    },
    "6170": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6171": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6172": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6173": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "6174": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6176": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6177": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6178": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6179": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6180": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6181": {
      "op": "POP"
    },
    "6182": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6183": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6184": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6185": {
      "op": "POP"
    },
    "6186": {
      "op": "POP"
    },
    "6187": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7424,
        7428
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "6189": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6191": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6192": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6193": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6194": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6195": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6196": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7198,
        7439
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6197": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7184,
        7194
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "6199": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7184,
        7194
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6200": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6201": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6202": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7183
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6204": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6205": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6206": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6208": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6209": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6210": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6211": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6212": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6213": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6214": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6215": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6216": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6217": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6218": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6219": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6220": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6221": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6222": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6223": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6224": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6231": {
      "op": "SHL"
    },
    "6232": {
      "op": "SUB"
    },
    "6233": {
      "op": "NOT"
    },
    "6234": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "AND",
      "path": "24"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6241": {
      "op": "SHL"
    },
    "6242": {
      "op": "SUB"
    },
    "6243": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6244": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6245": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "AND",
      "path": "24"
    },
    "6246": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6247": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6248": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6249": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "OR",
      "path": "24"
    },
    "6250": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6251": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6252": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6253": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6254": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6255": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6256": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6257": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6258": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6259": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6260": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7195
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6261": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1886"
    },
    "6264": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6265": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "6267": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP7",
      "path": "24"
    },
    "6268": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6269": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6272": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6273": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6274": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2113"
    },
    "6277": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7179,
        7439
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6278": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6279": {
      "op": "POP"
    },
    "6280": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "6282": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6283": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6284": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6285": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6286": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6287": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x18A2"
    },
    "6290": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6291": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "6293": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6294": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6295": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6296": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6298": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6299": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6300": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6301": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6302": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2113"
    },
    "6305": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7179,
        7439
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6306": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6307": {
      "op": "POP"
    },
    "6308": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "6310": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6311": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6312": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6313": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6314": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6315": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x18BE"
    },
    "6318": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6319": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6321": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6322": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6323": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6324": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6326": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6327": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6328": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6329": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6330": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2178"
    },
    "6333": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7179,
        7439
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6334": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6335": {
      "op": "POP"
    },
    "6336": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA0"
    },
    "6338": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6339": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6340": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6341": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6342": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6343": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "6345": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6346": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6347": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ADD",
      "path": "24"
    },
    "6348": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6349": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6352": {
      "op": "NOT"
    },
    "6353": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "AND",
      "path": "24"
    },
    "6354": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6355": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6356": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6357": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6358": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6359": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6360": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "OR",
      "path": "24"
    },
    "6361": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6362": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7179,
        7439
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6363": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7481,
        7491
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 80,
      "value": "0x69"
    },
    "6365": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7481,
        7491
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6368": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "DUP8",
      "path": "24"
    },
    "6369": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6370": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6371": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7466
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x77"
    },
    "6373": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6375": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6376": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6378": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6379": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6380": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6381": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7478
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6382": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7491
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6383": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7491
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6384": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7449,
        7491
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6385": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "MLOAD",
      "path": "24",
      "statement": 81
    },
    "6386": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x3C015D1005DA8BB61E99936222D4A8A0C3C5B6643F9DAA5EAE3EF07B7FB67647"
    },
    "6419": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6420": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x191E"
    },
    "6423": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6424": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7532,
        7547
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6425": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7532,
        7547
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6426": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x242D"
    },
    "6429": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7507,
        7548
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6430": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6431": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6433": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6434": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6435": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6436": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "SUB",
      "path": "24"
    },
    "6437": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6438": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7507,
        7548
      ],
      "op": "LOG2",
      "path": "24"
    },
    "6439": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7568
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 82,
      "value": "0x69"
    },
    "6441": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6442": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6443": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6444": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7568
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6446": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1936"
    },
    "6449": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6450": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2727"
    },
    "6453": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7558,
        7570
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6454": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6455": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6456": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6457": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7558,
        7570
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6458": {
      "op": "POP"
    },
    "6459": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7588,
        7601
      ],
      "op": "SWAP1",
      "path": "24",
      "statement": 83
    },
    "6460": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7588,
        7601
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "6461": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        7608
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "6462": {
      "op": "POP"
    },
    "6463": {
      "op": "POP"
    },
    "6464": {
      "op": "POP"
    },
    "6465": {
      "op": "POP"
    },
    "6466": {
      "op": "POP"
    },
    "6467": {
      "op": "POP"
    },
    "6468": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        6133,
        7608
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6469": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6470": {
      "offset": [
        2903,
        2927
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "6472": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2903,
        2927
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6473": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7739,
        7755
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "6475": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7739,
        7755
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6482": {
      "op": "SHL"
    },
    "6483": {
      "op": "SUB"
    },
    "6484": {
      "offset": [
        2903,
        2927
      ],
      "op": "AND",
      "path": "24"
    },
    "6485": {
      "offset": [
        2889,
        2899
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6486": {
      "offset": [
        2889,
        2927
      ],
      "op": "EQ",
      "path": "24"
    },
    "6487": {
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1972"
    },
    "6490": {
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6491": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6493": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6500": {
      "op": "SHL"
    },
    "6501": {
      "offset": [
        2868,
        2991
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6502": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6503": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6505": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "ADD",
      "path": "24"
    },
    "6506": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "6509": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6510": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27AD"
    },
    "6513": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6514": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2868,
        2991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6515": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 84,
      "value": "0x0"
    },
    "6517": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6518": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6519": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6520": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7798
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6522": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6524": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6525": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6527": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6528": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7805
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6529": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7816
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6531": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7816
      ],
      "op": "ADD",
      "path": "24"
    },
    "6532": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7794,
        7823
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6533": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7775,
        7790
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6534": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7775,
        7790
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6535": {
      "branch": 134,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7775,
        7823
      ],
      "op": "EQ",
      "path": "24"
    },
    "6536": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7767,
        7824
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1990"
    },
    "6539": {
      "branch": 134,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7767,
        7824
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6540": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7767,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6542": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7767,
        7824
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6543": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7767,
        7824
      ],
      "op": "REVERT",
      "path": "24"
    },
    "6544": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7767,
        7824
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6545": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 85,
      "value": "0x0"
    },
    "6547": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6548": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6549": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6550": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7839
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6552": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6554": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6555": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6556": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6557": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6559": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6560": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6561": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7846
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6562": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6563": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6564": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19B5"
    },
    "6567": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6568": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7854
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "6570": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7854
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6571": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7854
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6572": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7854
      ],
      "op": "ADD",
      "path": "24"
    },
    "6573": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7854
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6574": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6575": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "ADD",
      "path": "24"
    },
    "6576": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6577": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2113"
    },
    "6580": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7835,
        7865
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6581": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7835,
        7865
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6582": {
      "op": "POP"
    },
    "6583": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7898,
        7903
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 86,
      "value": "0x0"
    },
    "6585": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6586": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6587": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6588": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7879
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6590": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6592": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6593": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6595": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6596": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6597": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7886
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6598": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "6600": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7895
      ],
      "op": "ADD",
      "path": "24"
    },
    "6601": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7903
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6602": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7903
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6605": {
      "op": "NOT"
    },
    "6606": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7903
      ],
      "op": "AND",
      "path": "24"
    },
    "6607": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7903
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6608": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7875,
        7903
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6609": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7965,
        7984
      ],
      "op": "MLOAD",
      "path": "24",
      "statement": 87
    },
    "6610": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7880,
        7885
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6611": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7880,
        7885
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6612": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7965,
        7984
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929"
    },
    "6645": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7965,
        7984
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6646": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7965,
        7984
      ],
      "op": "LOG2",
      "path": "24"
    },
    "6647": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 88,
      "value": "0x0"
    },
    "6649": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6650": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6651": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6652": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8006
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6654": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6656": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6657": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6658": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6659": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6661": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6662": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6663": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6664": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8013
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6665": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8024
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6667": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8024
      ],
      "op": "ADD",
      "path": "24"
    },
    "6668": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6669": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6670": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6671": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6672": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6673": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6674": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "MUL",
      "path": "24"
    },
    "6675": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6676": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "ADD",
      "path": "24"
    },
    "6677": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6678": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "ADD",
      "path": "24"
    },
    "6679": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6680": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "6681": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6682": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6683": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6684": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6685": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8024
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6686": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8024
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6687": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6688": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "ADD",
      "path": "24"
    },
    "6689": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8002,
        8024
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6690": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6691": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6692": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6693": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A4D"
    },
    "6696": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6697": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6699": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "MUL",
      "path": "24"
    },
    "6700": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6701": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "ADD",
      "path": "24"
    },
    "6702": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6703": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6704": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6706": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6707": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6709": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6711": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6712": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6713": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6714": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6715": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6716": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6717": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6718": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6720": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "ADD",
      "path": "24"
    },
    "6721": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6722": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "6724": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "ADD",
      "path": "24"
    },
    "6725": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6726": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6727": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6728": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "GT",
      "path": "24"
    },
    "6729": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A39"
    },
    "6732": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6733": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6734": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "POP",
      "path": "24"
    },
    "6735": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "POP",
      "path": "24"
    },
    "6736": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "POP",
      "path": "24"
    },
    "6737": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "POP",
      "path": "24"
    },
    "6738": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "POP",
      "path": "24"
    },
    "6739": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6740": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7995,
        8024
      ],
      "op": "POP",
      "path": "24"
    },
    "6741": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6742": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6743": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "POP",
      "path": "24"
    },
    "6744": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7614,
        8031
      ],
      "op": "POP",
      "path": "24"
    },
    "6745": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        7614,
        8031
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6746": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6753": {
      "op": "SHL"
    },
    "6754": {
      "op": "SUB"
    },
    "6755": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 89
    },
    "6756": {
      "branch": 139,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "2"
    },
    "6757": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ABC"
    },
    "6760": {
      "branch": 139,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6761": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6763": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6770": {
      "op": "SHL"
    },
    "6771": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6772": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6775": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6777": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6778": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "2"
    },
    "6779": {
      "op": "MSTORE"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6782": {
      "op": "DUP1"
    },
    "6783": {
      "op": "DUP3"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "MSTORE"
    },
    "6786": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6821": {
      "op": "DUP3"
    },
    "6822": {
      "op": "ADD"
    },
    "6823": {
      "op": "MSTORE"
    },
    "6824": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6831": {
      "op": "SHL"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6834": {
      "op": "DUP3"
    },
    "6835": {
      "op": "ADD"
    },
    "6836": {
      "op": "MSTORE"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6839": {
      "op": "ADD"
    },
    "6840": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "6843": {
      "op": "JUMP"
    },
    "6844": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6851": {
      "op": "SHL"
    },
    "6852": {
      "op": "SUB"
    },
    "6853": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 90
    },
    "6854": {
      "branch": 140,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "2"
    },
    "6855": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B1D"
    },
    "6858": {
      "branch": 140,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6859": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6861": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6862": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6868": {
      "op": "SHL"
    },
    "6869": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6870": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6873": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6875": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6876": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "2"
    },
    "6877": {
      "op": "MSTORE"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6882": {
      "op": "DUP3"
    },
    "6883": {
      "op": "ADD"
    },
    "6884": {
      "op": "MSTORE"
    },
    "6885": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "6918": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6920": {
      "op": "DUP3"
    },
    "6921": {
      "op": "ADD"
    },
    "6922": {
      "op": "MSTORE"
    },
    "6923": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6931": {
      "op": "DUP3"
    },
    "6932": {
      "op": "ADD"
    },
    "6933": {
      "op": "MSTORE"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6936": {
      "op": "ADD"
    },
    "6937": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "6940": {
      "op": "JUMP"
    },
    "6941": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6948": {
      "op": "SHL"
    },
    "6949": {
      "op": "SUB"
    },
    "6950": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 91
    },
    "6951": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6952": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "2"
    },
    "6953": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6955": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6956": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6957": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6958": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "6960": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6962": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6963": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6964": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6965": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6967": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6968": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6969": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6970": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6971": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6972": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "6973": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6974": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6975": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6976": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6977": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6978": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6979": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6980": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6981": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6982": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6983": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6984": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6985": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6986": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 92
    },
    "6987": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6988": {
      "op": "DUP5"
    },
    "6989": {
      "op": "DUP2"
    },
    "6990": {
      "op": "MSTORE"
    },
    "6991": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7024": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7025": {
      "op": "ADD"
    },
    "7026": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7028": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7029": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7030": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7031": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "7032": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7033": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7034": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7035": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7036": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7037": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7038": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7045": {
      "op": "SHL"
    },
    "7046": {
      "op": "SUB"
    },
    "7047": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7048": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7049": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "7050": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7052": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7053": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7054": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7055": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7057": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7059": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7060": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7061": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7062": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7064": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7065": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7066": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7067": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7068": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7069": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "7070": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7071": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7072": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7073": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7074": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7075": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7076": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7079": {
      "op": "NOT"
    },
    "7080": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7081": {
      "branch": 141,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "7082": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0A"
    },
    "7085": {
      "branch": 141,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7086": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 93
    },
    "7087": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7088": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "7089": {
      "branch": 142,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7090": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BFD"
    },
    "7093": {
      "branch": 142,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7094": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7096": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7103": {
      "op": "SHL"
    },
    "7104": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7105": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7108": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7110": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7111": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "7112": {
      "op": "MSTORE"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7117": {
      "op": "DUP3"
    },
    "7118": {
      "op": "ADD"
    },
    "7119": {
      "op": "MSTORE"
    },
    "7120": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7155": {
      "op": "DUP3"
    },
    "7156": {
      "op": "ADD"
    },
    "7157": {
      "op": "MSTORE"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "7164": {
      "op": "JUMP"
    },
    "7165": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7166": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 94,
      "value": "0x1C0A"
    },
    "7169": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7170": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7171": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7172": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7173": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "7174": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5A"
    },
    "7177": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7178": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7179": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7180": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7181": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7182": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7183": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7184": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7191": {
      "op": "SHL"
    },
    "7192": {
      "op": "SUB"
    },
    "7193": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 95
    },
    "7194": {
      "branch": 143,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "2"
    },
    "7195": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C74"
    },
    "7198": {
      "branch": 143,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7199": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7201": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7202": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7208": {
      "op": "SHL"
    },
    "7209": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7210": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7213": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7215": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7216": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "2"
    },
    "7217": {
      "op": "MSTORE"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7222": {
      "op": "DUP3"
    },
    "7223": {
      "op": "ADD"
    },
    "7224": {
      "op": "MSTORE"
    },
    "7225": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "7258": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7260": {
      "op": "DUP3"
    },
    "7261": {
      "op": "ADD"
    },
    "7262": {
      "op": "MSTORE"
    },
    "7263": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7271": {
      "op": "SHL"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7274": {
      "op": "DUP3"
    },
    "7275": {
      "op": "ADD"
    },
    "7276": {
      "op": "MSTORE"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7279": {
      "op": "ADD"
    },
    "7280": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "7283": {
      "op": "JUMP"
    },
    "7284": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7291": {
      "op": "SHL"
    },
    "7292": {
      "op": "SUB"
    },
    "7293": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 96
    },
    "7294": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "2"
    },
    "7295": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD6"
    },
    "7298": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7299": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7301": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7308": {
      "op": "SHL"
    },
    "7309": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7310": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7313": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7315": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7316": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "2"
    },
    "7317": {
      "op": "MSTORE"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7322": {
      "op": "DUP3"
    },
    "7323": {
      "op": "ADD"
    },
    "7324": {
      "op": "MSTORE"
    },
    "7325": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7360": {
      "op": "DUP3"
    },
    "7361": {
      "op": "ADD"
    },
    "7362": {
      "op": "MSTORE"
    },
    "7363": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7369": {
      "op": "SHL"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7372": {
      "op": "DUP3"
    },
    "7373": {
      "op": "ADD"
    },
    "7374": {
      "op": "MSTORE"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7377": {
      "op": "ADD"
    },
    "7378": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "7381": {
      "op": "JUMP"
    },
    "7382": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7389": {
      "op": "SHL"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7392": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "2"
    },
    "7393": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7395": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7396": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7397": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7398": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7400": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7402": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7403": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7405": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7406": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7407": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7408": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 97
    },
    "7409": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7410": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "2"
    },
    "7411": {
      "branch": 145,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7412": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4E"
    },
    "7415": {
      "branch": 145,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7416": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7418": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7425": {
      "op": "SHL"
    },
    "7426": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7427": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7430": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7432": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7433": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "2"
    },
    "7434": {
      "op": "MSTORE"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7439": {
      "op": "DUP3"
    },
    "7440": {
      "op": "ADD"
    },
    "7441": {
      "op": "MSTORE"
    },
    "7442": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7477": {
      "op": "DUP3"
    },
    "7478": {
      "op": "ADD"
    },
    "7479": {
      "op": "MSTORE"
    },
    "7480": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7489": {
      "op": "SHL"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7492": {
      "op": "DUP3"
    },
    "7493": {
      "op": "ADD"
    },
    "7494": {
      "op": "MSTORE"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7497": {
      "op": "ADD"
    },
    "7498": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "7501": {
      "op": "JUMP"
    },
    "7502": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7509": {
      "op": "SHL"
    },
    "7510": {
      "op": "SUB"
    },
    "7511": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 98
    },
    "7512": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7513": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "7514": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7516": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7517": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7518": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7519": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7521": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7523": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7524": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7526": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7527": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7528": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7529": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7530": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7531": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "7532": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7533": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7534": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 99
    },
    "7535": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7536": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "2"
    },
    "7537": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7538": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7539": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7540": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7541": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7542": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7543": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7544": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7545": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7546": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7547": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D85"
    },
    "7550": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7551": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7552": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7553": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DC"
    },
    "7556": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7557": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7558": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7559": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7560": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7561": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7562": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7563": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7564": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7565": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 100
    },
    "7566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7572": {
      "op": "SHL"
    },
    "7573": {
      "op": "SUB"
    },
    "7574": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7575": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7582": {
      "op": "SHL"
    },
    "7583": {
      "op": "SUB"
    },
    "7584": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7585": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7618": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7619": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7621": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7622": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DD1"
    },
    "7625": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7626": {
      "op": "DUP2"
    },
    "7627": {
      "op": "MSTORE"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7630": {
      "op": "ADD"
    },
    "7631": {
      "op": "SWAP1"
    },
    "7632": {
      "op": "JUMP"
    },
    "7633": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7634": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7636": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7637": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7638": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7639": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "2"
    },
    "7640": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7641": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7642": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 101,
      "value": "0x1C0A"
    },
    "7645": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3015,
        4191
      ],
      "op": "JUMP",
      "path": "24"
    },
    "7646": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7647": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7649": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7650": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7653": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7654": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "7655": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7657": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "7658": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E05"
    },
    "7661": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7662": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7664": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7665": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7671": {
      "op": "SHL"
    },
    "7672": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7673": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7674": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7676": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "7677": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x922"
    },
    "7680": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7681": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28C6"
    },
    "7684": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7685": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7686": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 102,
      "value": "0x1E0F"
    },
    "7689": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7690": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7691": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D3"
    },
    "7694": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7695": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7696": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "7697": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "7698": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7699": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7706": {
      "op": "SHL"
    },
    "7707": {
      "op": "SUB"
    },
    "7708": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 103
    },
    "7709": {
      "branch": 146,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "2"
    },
    "7710": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E69"
    },
    "7713": {
      "branch": 146,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7714": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7716": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7717": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7725": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7728": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7730": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7731": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "2"
    },
    "7732": {
      "op": "MSTORE"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7737": {
      "op": "DUP3"
    },
    "7738": {
      "op": "ADD"
    },
    "7739": {
      "op": "MSTORE"
    },
    "7740": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7775": {
      "op": "DUP3"
    },
    "7776": {
      "op": "ADD"
    },
    "7777": {
      "op": "MSTORE"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7780": {
      "op": "ADD"
    },
    "7781": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x922"
    },
    "7784": {
      "op": "JUMP"
    },
    "7785": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7786": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 104
    },
    "7787": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "7789": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7791": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7792": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7793": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7794": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7B"
    },
    "7797": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7798": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7799": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DC"
    },
    "7802": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7803": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7804": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7805": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7806": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7807": {
      "op": "POP"
    },
    "7808": {
      "op": "POP"
    },
    "7809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7815": {
      "op": "SHL"
    },
    "7816": {
      "op": "SUB"
    },
    "7817": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 105
    },
    "7818": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "7819": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7821": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7822": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7823": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7824": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7826": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7828": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7829": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7831": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7832": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7833": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7834": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7835": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7836": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7837": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7838": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA8"
    },
    "7841": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7842": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7843": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7844": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DC"
    },
    "7847": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7848": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7849": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7850": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7851": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7852": {
      "op": "POP"
    },
    "7853": {
      "op": "POP"
    },
    "7854": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 106,
      "value": "0x40"
    },
    "7856": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7857": {
      "op": "DUP2"
    },
    "7858": {
      "op": "DUP2"
    },
    "7859": {
      "op": "MSTORE"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7866": {
      "op": "SHL"
    },
    "7867": {
      "op": "SUB"
    },
    "7868": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7869": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "2"
    },
    "7870": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7871": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7873": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7874": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7907": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7910": {
      "op": "ADD"
    },
    "7911": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7913": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7914": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7915": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7916": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "2"
    },
    "7917": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7918": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7919": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "7920": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "7921": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7922": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8310,
        9001
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "7923": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8399,
        8400
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 107,
      "value": "0x0"
    },
    "7925": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8390,
        8396
      ],
      "op": "DUP2",
      "path": "24"
    },
    "7926": {
      "branch": 135,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8390,
        8400
      ],
      "op": "GT",
      "path": "24"
    },
    "7927": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F12"
    },
    "7930": {
      "branch": 135,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "7931": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "7933": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "7934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7940": {
      "op": "SHL"
    },
    "7941": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "DUP2",
      "path": "24"
    },
    "7942": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "7943": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "7945": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "ADD",
      "path": "24"
    },
    "7946": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "7949": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "7950": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x276C"
    },
    "7953": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8382,
        8438
      ],
      "op": "JUMP",
      "path": "24"
    },
    "7954": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8382,
        8438
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "7955": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8477,
        8483
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 108
    },
    "7956": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8456,
        8473
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F32"
    },
    "7959": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8466,
        8472
      ],
      "op": "DUP4",
      "path": "24"
    },
    "7960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7966": {
      "op": "SHL"
    },
    "7967": {
      "op": "SUB"
    },
    "7968": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2"
    },
    "7969": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7971": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7972": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7973": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7974": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7976": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7978": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7979": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7981": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7982": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7983": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7984": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7985": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7986": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8456,
        8473
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "7987": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8456,
        8483
      ],
      "op": "LT",
      "path": "24"
    },
    "7988": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8456,
        8483
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "7989": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F78"
    },
    "7992": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "7993": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "7995": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "7996": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8002": {
      "op": "SHL"
    },
    "8003": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8004": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8007": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "8009": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "DUP3",
      "path": "24"
    },
    "8010": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "ADD",
      "path": "24"
    },
    "8011": {
      "op": "MSTORE"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8016": {
      "op": "DUP3"
    },
    "8017": {
      "op": "ADD"
    },
    "8018": {
      "op": "MSTORE"
    },
    "8019": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "8043": {
      "op": "SHL"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8046": {
      "op": "DUP3"
    },
    "8047": {
      "op": "ADD"
    },
    "8048": {
      "op": "MSTORE"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8051": {
      "op": "ADD"
    },
    "8052": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "8055": {
      "op": "JUMP"
    },
    "8056": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8448,
        8509
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8063": {
      "op": "SHL"
    },
    "8064": {
      "op": "SUB"
    },
    "8065": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "DUP3",
      "path": "24"
    },
    "8066": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "AND",
      "path": "24"
    },
    "8067": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8520,
        8539
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8069": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8070": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8071": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8072": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8562
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "8074": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "8076": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8077": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8079": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8080": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "8081": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8082": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8570
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8083": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8588,
        8604
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 109
    },
    "8084": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8588,
        8604
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8085": {
      "branch": 137,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8588,
        8604
      ],
      "op": "SUB",
      "path": "24"
    },
    "8086": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1FE1"
    },
    "8089": {
      "branch": 137,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8090": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8092": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8099": {
      "op": "SHL"
    },
    "8100": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8101": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8104": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "8106": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "DUP3",
      "path": "24"
    },
    "8107": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "ADD",
      "path": "24"
    },
    "8108": {
      "op": "MSTORE"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8113": {
      "op": "DUP3"
    },
    "8114": {
      "op": "ADD"
    },
    "8115": {
      "op": "MSTORE"
    },
    "8116": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8151": {
      "op": "DUP3"
    },
    "8152": {
      "op": "ADD"
    },
    "8153": {
      "op": "MSTORE"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8156": {
      "op": "ADD"
    },
    "8157": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x922"
    },
    "8160": {
      "op": "JUMP"
    },
    "8161": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8580,
        8634
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8162": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8645,
        8688
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 110,
      "value": "0x1FEC"
    },
    "8165": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8658,
        8664
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8166": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8674,
        8678
      ],
      "op": "ADDRESS",
      "path": "24"
    },
    "8167": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8681,
        8687
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8168": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8645,
        8657
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x841"
    },
    "8171": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8645,
        8688
      ],
      "op": "JUMP",
      "path": "24"
    },
    "8172": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8645,
        8688
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8173": {
      "op": "POP"
    },
    "8174": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 111,
      "value": "0x0"
    },
    "8176": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8177": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8178": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8179": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8708
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "8181": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "8183": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8184": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8186": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8187": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "8188": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8728
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "8190": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8728
      ],
      "op": "ADD",
      "path": "24"
    },
    "8191": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8192": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8193": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8732,
        8738
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8194": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8732,
        8738
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "8195": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8721
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8196": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x200E"
    },
    "8199": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8200": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8732,
        8738
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8201": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8732,
        8738
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8202": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26DC"
    },
    "8205": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8698,
        8738
      ],
      "op": "JUMP",
      "path": "24"
    },
    "8206": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8207": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8208": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "8209": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8698,
        8738
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "8210": {
      "op": "POP"
    },
    "8211": {
      "op": "POP"
    },
    "8212": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8748,
        8767
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8214": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8215": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8216": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8217": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8780
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "8219": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "8221": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8222": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8224": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8225": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8226": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8227": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8793
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "8228": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8800
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "8230": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8800
      ],
      "op": "ADD",
      "path": "24"
    },
    "8231": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8800
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8232": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8837
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 112,
      "value": "0x65"
    },
    "8234": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8837
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8235": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8930,
        8940
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "8237": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8930,
        8940
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8238": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "8239": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8240": {
      "op": "PUSH4",
      "value": "0xB6CEECB7"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8247": {
      "op": "SHL"
    },
    "8248": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8249": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8256": {
      "op": "SHL"
    },
    "8257": {
      "op": "SUB"
    },
    "8258": {
      "op": "DUP8"
    },
    "8259": {
      "op": "DUP2"
    },
    "8260": {
      "op": "AND"
    },
    "8261": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "8263": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8264": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "ADD",
      "path": "24"
    },
    "8265": {
      "op": "MSTORE"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8268": {
      "op": "DUP3"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "DUP5"
    },
    "8271": {
      "op": "SWAP1"
    },
    "8272": {
      "op": "MSTORE"
    },
    "8273": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8915,
        8940
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "8274": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8915,
        8940
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8275": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8915,
        8940
      ],
      "op": "LT",
      "path": "24"
    },
    "8276": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8915,
        8940
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8279": {
      "op": "DUP3"
    },
    "8280": {
      "op": "ADD"
    },
    "8281": {
      "op": "MSTORE"
    },
    "8282": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8800
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "8283": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8770,
        8800
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "8284": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8837
      ],
      "op": "AND",
      "path": "24"
    },
    "8285": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8837
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8286": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8856
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB6CEECB7"
    },
    "8291": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8856
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8294": {
      "op": "ADD"
    },
    "8295": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8297": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8299": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8300": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8301": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8302": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "SUB",
      "path": "24"
    },
    "8303": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8304": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8306": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP8",
      "path": "24"
    },
    "8307": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8308": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "8309": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8310": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8311": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8312": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2080"
    },
    "8315": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8316": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8318": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8319": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "REVERT",
      "path": "24"
    },
    "8320": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8321": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "POP",
      "path": "24"
    },
    "8322": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "GAS",
      "path": "24"
    },
    "8323": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "CALL",
      "path": "24"
    },
    "8324": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8325": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8326": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8327": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2094"
    },
    "8330": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8331": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "8332": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8334": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8335": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "8336": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "8337": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8339": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "REVERT",
      "path": "24"
    },
    "8340": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8341": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "POP",
      "path": "24"
    },
    "8342": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "POP",
      "path": "24"
    },
    "8343": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "POP",
      "path": "24"
    },
    "8344": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8811,
        8950
      ],
      "op": "POP",
      "path": "24"
    },
    "8345": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 113
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8352": {
      "op": "SHL"
    },
    "8353": {
      "op": "SUB"
    },
    "8354": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8966,
        8994
      ],
      "op": "AND",
      "path": "24"
    },
    "8355": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8966,
        8994
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "8388": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8987,
        8993
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8389": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8966,
        8994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8391": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8966,
        8994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8392": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8966,
        8994
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF47"
    },
    "8395": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8966,
        8994
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "8396": {
      "op": "DUP2"
    },
    "8397": {
      "op": "MSTORE"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8400": {
      "op": "ADD"
    },
    "8401": {
      "op": "SWAP1"
    },
    "8402": {
      "op": "JUMP"
    },
    "8403": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2269,
        2428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8404": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8406": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8407": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8410": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8411": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8412": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8414": {
      "branch": 149,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8415": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20FA"
    },
    "8418": {
      "branch": 149,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8419": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8421": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8428": {
      "op": "SHL"
    },
    "8429": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8430": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8431": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8433": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8434": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x922"
    },
    "8437": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8438": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28C6"
    },
    "8441": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8442": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8443": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 114,
      "value": "0x36"
    },
    "8445": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2106"
    },
    "8448": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8449": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8450": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2961"
    },
    "8453": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8454": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8455": {
      "op": "POP"
    },
    "8456": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 115,
      "value": "0x37"
    },
    "8458": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6D"
    },
    "8461": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8462": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8463": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2961"
    },
    "8466": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8467": {
      "op": "JUMPDEST"
    },
    "8468": {
      "op": "DUP3"
    },
    "8469": {
      "op": "DUP1"
    },
    "8470": {
      "op": "SLOAD"
    },
    "8471": {
      "op": "DUP3"
    },
    "8472": {
      "op": "DUP3"
    },
    "8473": {
      "op": "SSTORE"
    },
    "8474": {
      "op": "SWAP1"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8477": {
      "op": "MSTORE"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8482": {
      "op": "KECCAK256"
    },
    "8483": {
      "op": "SWAP1"
    },
    "8484": {
      "op": "DUP2"
    },
    "8485": {
      "op": "ADD"
    },
    "8486": {
      "op": "SWAP3"
    },
    "8487": {
      "op": "DUP3"
    },
    "8488": {
      "op": "ISZERO"
    },
    "8489": {
      "op": "PUSH2",
      "value": "0x2168"
    },
    "8492": {
      "op": "JUMPI"
    },
    "8493": {
      "op": "SWAP2"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8496": {
      "op": "MUL"
    },
    "8497": {
      "op": "DUP3"
    },
    "8498": {
      "op": "ADD"
    },
    "8499": {
      "op": "JUMPDEST"
    },
    "8500": {
      "op": "DUP3"
    },
    "8501": {
      "op": "DUP2"
    },
    "8502": {
      "op": "GT"
    },
    "8503": {
      "op": "ISZERO"
    },
    "8504": {
      "op": "PUSH2",
      "value": "0x2168"
    },
    "8507": {
      "op": "JUMPI"
    },
    "8508": {
      "op": "DUP3"
    },
    "8509": {
      "op": "MLOAD"
    },
    "8510": {
      "op": "DUP3"
    },
    "8511": {
      "op": "SLOAD"
    },
    "8512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8518": {
      "op": "SHL"
    },
    "8519": {
      "op": "SUB"
    },
    "8520": {
      "op": "NOT"
    },
    "8521": {
      "op": "AND"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8528": {
      "op": "SHL"
    },
    "8529": {
      "op": "SUB"
    },
    "8530": {
      "op": "SWAP1"
    },
    "8531": {
      "op": "SWAP2"
    },
    "8532": {
      "op": "AND"
    },
    "8533": {
      "op": "OR"
    },
    "8534": {
      "op": "DUP3"
    },
    "8535": {
      "op": "SSTORE"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8538": {
      "op": "SWAP1"
    },
    "8539": {
      "op": "SWAP3"
    },
    "8540": {
      "op": "ADD"
    },
    "8541": {
      "op": "SWAP2"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8544": {
      "op": "SWAP1"
    },
    "8545": {
      "op": "SWAP2"
    },
    "8546": {
      "op": "ADD"
    },
    "8547": {
      "op": "SWAP1"
    },
    "8548": {
      "op": "PUSH2",
      "value": "0x2133"
    },
    "8551": {
      "op": "JUMP"
    },
    "8552": {
      "op": "JUMPDEST"
    },
    "8553": {
      "op": "POP"
    },
    "8554": {
      "op": "PUSH2",
      "value": "0x2174"
    },
    "8557": {
      "op": "SWAP3"
    },
    "8558": {
      "op": "SWAP2"
    },
    "8559": {
      "op": "POP"
    },
    "8560": {
      "op": "PUSH2",
      "value": "0x21B3"
    },
    "8563": {
      "jump": "i",
      "op": "JUMP"
    },
    "8564": {
      "op": "JUMPDEST"
    },
    "8565": {
      "op": "POP"
    },
    "8566": {
      "op": "SWAP1"
    },
    "8567": {
      "jump": "o",
      "op": "JUMP"
    },
    "8568": {
      "op": "JUMPDEST"
    },
    "8569": {
      "op": "DUP3"
    },
    "8570": {
      "op": "DUP1"
    },
    "8571": {
      "op": "SLOAD"
    },
    "8572": {
      "op": "DUP3"
    },
    "8573": {
      "op": "DUP3"
    },
    "8574": {
      "op": "SSTORE"
    },
    "8575": {
      "op": "SWAP1"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8578": {
      "op": "MSTORE"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8583": {
      "op": "KECCAK256"
    },
    "8584": {
      "op": "SWAP1"
    },
    "8585": {
      "op": "DUP2"
    },
    "8586": {
      "op": "ADD"
    },
    "8587": {
      "op": "SWAP3"
    },
    "8588": {
      "op": "DUP3"
    },
    "8589": {
      "op": "ISZERO"
    },
    "8590": {
      "op": "PUSH2",
      "value": "0x2168"
    },
    "8593": {
      "op": "JUMPI"
    },
    "8594": {
      "op": "SWAP2"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8597": {
      "op": "MUL"
    },
    "8598": {
      "op": "DUP3"
    },
    "8599": {
      "op": "ADD"
    },
    "8600": {
      "op": "JUMPDEST"
    },
    "8601": {
      "op": "DUP3"
    },
    "8602": {
      "op": "DUP2"
    },
    "8603": {
      "op": "GT"
    },
    "8604": {
      "op": "ISZERO"
    },
    "8605": {
      "op": "PUSH2",
      "value": "0x2168"
    },
    "8608": {
      "op": "JUMPI"
    },
    "8609": {
      "op": "DUP3"
    },
    "8610": {
      "op": "MLOAD"
    },
    "8611": {
      "op": "DUP3"
    },
    "8612": {
      "op": "SSTORE"
    },
    "8613": {
      "op": "SWAP2"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8616": {
      "op": "ADD"
    },
    "8617": {
      "op": "SWAP2"
    },
    "8618": {
      "op": "SWAP1"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8621": {
      "op": "ADD"
    },
    "8622": {
      "op": "SWAP1"
    },
    "8623": {
      "op": "PUSH2",
      "value": "0x2198"
    },
    "8626": {
      "op": "JUMP"
    },
    "8627": {
      "op": "JUMPDEST"
    },
    "8628": {
      "op": "JUMPDEST"
    },
    "8629": {
      "op": "DUP1"
    },
    "8630": {
      "op": "DUP3"
    },
    "8631": {
      "op": "GT"
    },
    "8632": {
      "op": "ISZERO"
    },
    "8633": {
      "op": "PUSH2",
      "value": "0x2174"
    },
    "8636": {
      "op": "JUMPI"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8639": {
      "op": "DUP2"
    },
    "8640": {
      "op": "SSTORE"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8643": {
      "op": "ADD"
    },
    "8644": {
      "op": "PUSH2",
      "value": "0x21B4"
    },
    "8647": {
      "op": "JUMP"
    },
    "8648": {
      "op": "JUMPDEST"
    },
    "8649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8653": {
      "op": "DUP1"
    },
    "8654": {
      "op": "DUP4"
    },
    "8655": {
      "op": "MSTORE"
    },
    "8656": {
      "op": "DUP4"
    },
    "8657": {
      "op": "MLOAD"
    },
    "8658": {
      "op": "DUP1"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8661": {
      "op": "DUP6"
    },
    "8662": {
      "op": "ADD"
    },
    "8663": {
      "op": "MSTORE"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8666": {
      "op": "JUMPDEST"
    },
    "8667": {
      "op": "DUP2"
    },
    "8668": {
      "op": "DUP2"
    },
    "8669": {
      "op": "LT"
    },
    "8670": {
      "op": "ISZERO"
    },
    "8671": {
      "op": "PUSH2",
      "value": "0x21F6"
    },
    "8674": {
      "op": "JUMPI"
    },
    "8675": {
      "op": "DUP6"
    },
    "8676": {
      "op": "DUP2"
    },
    "8677": {
      "op": "ADD"
    },
    "8678": {
      "op": "DUP4"
    },
    "8679": {
      "op": "ADD"
    },
    "8680": {
      "op": "MLOAD"
    },
    "8681": {
      "op": "DUP6"
    },
    "8682": {
      "op": "DUP3"
    },
    "8683": {
      "op": "ADD"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8686": {
      "op": "ADD"
    },
    "8687": {
      "op": "MSTORE"
    },
    "8688": {
      "op": "DUP3"
    },
    "8689": {
      "op": "ADD"
    },
    "8690": {
      "op": "PUSH2",
      "value": "0x21DA"
    },
    "8693": {
      "op": "JUMP"
    },
    "8694": {
      "op": "JUMPDEST"
    },
    "8695": {
      "op": "POP"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8700": {
      "op": "DUP3"
    },
    "8701": {
      "op": "DUP7"
    },
    "8702": {
      "op": "ADD"
    },
    "8703": {
      "op": "ADD"
    },
    "8704": {
      "op": "MSTORE"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8709": {
      "op": "NOT"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8712": {
      "op": "DUP4"
    },
    "8713": {
      "op": "ADD"
    },
    "8714": {
      "op": "AND"
    },
    "8715": {
      "op": "DUP6"
    },
    "8716": {
      "op": "ADD"
    },
    "8717": {
      "op": "ADD"
    },
    "8718": {
      "op": "SWAP3"
    },
    "8719": {
      "op": "POP"
    },
    "8720": {
      "op": "POP"
    },
    "8721": {
      "op": "POP"
    },
    "8722": {
      "op": "SWAP3"
    },
    "8723": {
      "op": "SWAP2"
    },
    "8724": {
      "op": "POP"
    },
    "8725": {
      "op": "POP"
    },
    "8726": {
      "jump": "o",
      "op": "JUMP"
    },
    "8727": {
      "op": "JUMPDEST"
    },
    "8728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8734": {
      "op": "SHL"
    },
    "8735": {
      "op": "SUB"
    },
    "8736": {
      "op": "DUP2"
    },
    "8737": {
      "op": "AND"
    },
    "8738": {
      "op": "DUP2"
    },
    "8739": {
      "op": "EQ"
    },
    "8740": {
      "op": "PUSH2",
      "value": "0xD7F"
    },
    "8743": {
      "op": "JUMPI"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8746": {
      "op": "DUP1"
    },
    "8747": {
      "op": "REVERT"
    },
    "8748": {
      "op": "JUMPDEST"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8751": {
      "op": "DUP1"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8754": {
      "op": "DUP4"
    },
    "8755": {
      "op": "DUP6"
    },
    "8756": {
      "op": "SUB"
    },
    "8757": {
      "op": "SLT"
    },
    "8758": {
      "op": "ISZERO"
    },
    "8759": {
      "op": "PUSH2",
      "value": "0x223F"
    },
    "8762": {
      "op": "JUMPI"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8765": {
      "op": "DUP1"
    },
    "8766": {
      "op": "REVERT"
    },
    "8767": {
      "op": "JUMPDEST"
    },
    "8768": {
      "op": "DUP3"
    },
    "8769": {
      "op": "CALLDATALOAD"
    },
    "8770": {
      "op": "PUSH2",
      "value": "0x224A"
    },
    "8773": {
      "op": "DUP2"
    },
    "8774": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "8777": {
      "jump": "i",
      "op": "JUMP"
    },
    "8778": {
      "op": "JUMPDEST"
    },
    "8779": {
      "op": "SWAP5"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8782": {
      "op": "SWAP4"
    },
    "8783": {
      "op": "SWAP1"
    },
    "8784": {
      "op": "SWAP4"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "CALLDATALOAD"
    },
    "8787": {
      "op": "SWAP4"
    },
    "8788": {
      "op": "POP"
    },
    "8789": {
      "op": "POP"
    },
    "8790": {
      "op": "POP"
    },
    "8791": {
      "jump": "o",
      "op": "JUMP"
    },
    "8792": {
      "op": "JUMPDEST"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8797": {
      "op": "DUP3"
    },
    "8798": {
      "op": "DUP5"
    },
    "8799": {
      "op": "SUB"
    },
    "8800": {
      "op": "SLT"
    },
    "8801": {
      "op": "ISZERO"
    },
    "8802": {
      "op": "PUSH2",
      "value": "0x226A"
    },
    "8805": {
      "op": "JUMPI"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8808": {
      "op": "DUP1"
    },
    "8809": {
      "op": "REVERT"
    },
    "8810": {
      "op": "JUMPDEST"
    },
    "8811": {
      "op": "POP"
    },
    "8812": {
      "op": "CALLDATALOAD"
    },
    "8813": {
      "op": "SWAP2"
    },
    "8814": {
      "op": "SWAP1"
    },
    "8815": {
      "op": "POP"
    },
    "8816": {
      "jump": "o",
      "op": "JUMP"
    },
    "8817": {
      "op": "JUMPDEST"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8820": {
      "op": "DUP1"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8825": {
      "op": "DUP5"
    },
    "8826": {
      "op": "DUP7"
    },
    "8827": {
      "op": "SUB"
    },
    "8828": {
      "op": "SLT"
    },
    "8829": {
      "op": "ISZERO"
    },
    "8830": {
      "op": "PUSH2",
      "value": "0x2286"
    },
    "8833": {
      "op": "JUMPI"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8836": {
      "op": "DUP1"
    },
    "8837": {
      "op": "REVERT"
    },
    "8838": {
      "op": "JUMPDEST"
    },
    "8839": {
      "op": "DUP4"
    },
    "8840": {
      "op": "CALLDATALOAD"
    },
    "8841": {
      "op": "PUSH2",
      "value": "0x2291"
    },
    "8844": {
      "op": "DUP2"
    },
    "8845": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "8848": {
      "jump": "i",
      "op": "JUMP"
    },
    "8849": {
      "op": "JUMPDEST"
    },
    "8850": {
      "op": "SWAP3"
    },
    "8851": {
      "op": "POP"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8854": {
      "op": "DUP5"
    },
    "8855": {
      "op": "ADD"
    },
    "8856": {
      "op": "CALLDATALOAD"
    },
    "8857": {
      "op": "PUSH2",
      "value": "0x22A1"
    },
    "8860": {
      "op": "DUP2"
    },
    "8861": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "8864": {
      "jump": "i",
      "op": "JUMP"
    },
    "8865": {
      "op": "JUMPDEST"
    },
    "8866": {
      "op": "SWAP3"
    },
    "8867": {
      "op": "SWAP6"
    },
    "8868": {
      "op": "SWAP3"
    },
    "8869": {
      "op": "SWAP5"
    },
    "8870": {
      "op": "POP"
    },
    "8871": {
      "op": "POP"
    },
    "8872": {
      "op": "POP"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8875": {
      "op": "SWAP2"
    },
    "8876": {
      "op": "SWAP1"
    },
    "8877": {
      "op": "SWAP2"
    },
    "8878": {
      "op": "ADD"
    },
    "8879": {
      "op": "CALLDATALOAD"
    },
    "8880": {
      "op": "SWAP1"
    },
    "8881": {
      "jump": "o",
      "op": "JUMP"
    },
    "8882": {
      "op": "JUMPDEST"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8887": {
      "op": "DUP3"
    },
    "8888": {
      "op": "DUP5"
    },
    "8889": {
      "op": "SUB"
    },
    "8890": {
      "op": "SLT"
    },
    "8891": {
      "op": "ISZERO"
    },
    "8892": {
      "op": "PUSH2",
      "value": "0x22C4"
    },
    "8895": {
      "op": "JUMPI"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8898": {
      "op": "DUP1"
    },
    "8899": {
      "op": "REVERT"
    },
    "8900": {
      "op": "JUMPDEST"
    },
    "8901": {
      "op": "DUP2"
    },
    "8902": {
      "op": "CALLDATALOAD"
    },
    "8903": {
      "op": "PUSH2",
      "value": "0x22CF"
    },
    "8906": {
      "op": "DUP2"
    },
    "8907": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "8910": {
      "jump": "i",
      "op": "JUMP"
    },
    "8911": {
      "op": "JUMPDEST"
    },
    "8912": {
      "op": "SWAP4"
    },
    "8913": {
      "op": "SWAP3"
    },
    "8914": {
      "op": "POP"
    },
    "8915": {
      "op": "POP"
    },
    "8916": {
      "op": "POP"
    },
    "8917": {
      "jump": "o",
      "op": "JUMP"
    },
    "8918": {
      "op": "JUMPDEST"
    },
    "8919": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8924": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8926": {
      "op": "SHL"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8929": {
      "op": "MSTORE"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8932": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8934": {
      "op": "MSTORE"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8939": {
      "op": "REVERT"
    },
    "8940": {
      "op": "JUMPDEST"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8943": {
      "op": "MLOAD"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8946": {
      "op": "DUP3"
    },
    "8947": {
      "op": "ADD"
    },
    "8948": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8950": {
      "op": "NOT"
    },
    "8951": {
      "op": "AND"
    },
    "8952": {
      "op": "DUP2"
    },
    "8953": {
      "op": "ADD"
    },
    "8954": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8963": {
      "op": "DUP2"
    },
    "8964": {
      "op": "GT"
    },
    "8965": {
      "op": "DUP3"
    },
    "8966": {
      "op": "DUP3"
    },
    "8967": {
      "op": "LT"
    },
    "8968": {
      "op": "OR"
    },
    "8969": {
      "op": "ISZERO"
    },
    "8970": {
      "op": "PUSH2",
      "value": "0x2315"
    },
    "8973": {
      "op": "JUMPI"
    },
    "8974": {
      "op": "PUSH2",
      "value": "0x2315"
    },
    "8977": {
      "op": "PUSH2",
      "value": "0x22D6"
    },
    "8980": {
      "jump": "i",
      "op": "JUMP"
    },
    "8981": {
      "op": "JUMPDEST"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8984": {
      "op": "MSTORE"
    },
    "8985": {
      "op": "SWAP2"
    },
    "8986": {
      "op": "SWAP1"
    },
    "8987": {
      "op": "POP"
    },
    "8988": {
      "jump": "o",
      "op": "JUMP"
    },
    "8989": {
      "op": "JUMPDEST"
    },
    "8990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8992": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9001": {
      "op": "DUP3"
    },
    "9002": {
      "op": "GT"
    },
    "9003": {
      "op": "ISZERO"
    },
    "9004": {
      "op": "PUSH2",
      "value": "0x2337"
    },
    "9007": {
      "op": "JUMPI"
    },
    "9008": {
      "op": "PUSH2",
      "value": "0x2337"
    },
    "9011": {
      "op": "PUSH2",
      "value": "0x22D6"
    },
    "9014": {
      "jump": "i",
      "op": "JUMP"
    },
    "9015": {
      "op": "JUMPDEST"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9019": {
      "op": "SHL"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9022": {
      "op": "ADD"
    },
    "9023": {
      "op": "SWAP1"
    },
    "9024": {
      "jump": "o",
      "op": "JUMP"
    },
    "9025": {
      "op": "JUMPDEST"
    },
    "9026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9028": {
      "op": "DUP3"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9031": {
      "op": "DUP4"
    },
    "9032": {
      "op": "ADD"
    },
    "9033": {
      "op": "SLT"
    },
    "9034": {
      "op": "PUSH2",
      "value": "0x2352"
    },
    "9037": {
      "op": "JUMPI"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9040": {
      "op": "DUP1"
    },
    "9041": {
      "op": "REVERT"
    },
    "9042": {
      "op": "JUMPDEST"
    },
    "9043": {
      "op": "DUP2"
    },
    "9044": {
      "op": "CALLDATALOAD"
    },
    "9045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9047": {
      "op": "PUSH2",
      "value": "0x2367"
    },
    "9050": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9053": {
      "op": "DUP4"
    },
    "9054": {
      "op": "PUSH2",
      "value": "0x231D"
    },
    "9057": {
      "jump": "i",
      "op": "JUMP"
    },
    "9058": {
      "op": "JUMPDEST"
    },
    "9059": {
      "op": "PUSH2",
      "value": "0x22EC"
    },
    "9062": {
      "jump": "i",
      "op": "JUMP"
    },
    "9063": {
      "op": "JUMPDEST"
    },
    "9064": {
      "op": "DUP1"
    },
    "9065": {
      "op": "DUP4"
    },
    "9066": {
      "op": "DUP3"
    },
    "9067": {
      "op": "MSTORE"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9070": {
      "op": "DUP3"
    },
    "9071": {
      "op": "ADD"
    },
    "9072": {
      "op": "SWAP2"
    },
    "9073": {
      "op": "POP"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9076": {
      "op": "DUP5"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9079": {
      "op": "SHL"
    },
    "9080": {
      "op": "DUP8"
    },
    "9081": {
      "op": "ADD"
    },
    "9082": {
      "op": "ADD"
    },
    "9083": {
      "op": "SWAP4"
    },
    "9084": {
      "op": "POP"
    },
    "9085": {
      "op": "DUP7"
    },
    "9086": {
      "op": "DUP5"
    },
    "9087": {
      "op": "GT"
    },
    "9088": {
      "op": "ISZERO"
    },
    "9089": {
      "op": "PUSH2",
      "value": "0x2389"
    },
    "9092": {
      "op": "JUMPI"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9095": {
      "op": "DUP1"
    },
    "9096": {
      "op": "REVERT"
    },
    "9097": {
      "op": "JUMPDEST"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9100": {
      "op": "DUP7"
    },
    "9101": {
      "op": "ADD"
    },
    "9102": {
      "op": "JUMPDEST"
    },
    "9103": {
      "op": "DUP5"
    },
    "9104": {
      "op": "DUP2"
    },
    "9105": {
      "op": "LT"
    },
    "9106": {
      "op": "ISZERO"
    },
    "9107": {
      "op": "PUSH2",
      "value": "0x23AE"
    },
    "9110": {
      "op": "JUMPI"
    },
    "9111": {
      "op": "DUP1"
    },
    "9112": {
      "op": "CALLDATALOAD"
    },
    "9113": {
      "op": "PUSH2",
      "value": "0x23A1"
    },
    "9116": {
      "op": "DUP2"
    },
    "9117": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "9120": {
      "jump": "i",
      "op": "JUMP"
    },
    "9121": {
      "op": "JUMPDEST"
    },
    "9122": {
      "op": "DUP4"
    },
    "9123": {
      "op": "MSTORE"
    },
    "9124": {
      "op": "SWAP2"
    },
    "9125": {
      "op": "DUP4"
    },
    "9126": {
      "op": "ADD"
    },
    "9127": {
      "op": "SWAP2"
    },
    "9128": {
      "op": "DUP4"
    },
    "9129": {
      "op": "ADD"
    },
    "9130": {
      "op": "PUSH2",
      "value": "0x238E"
    },
    "9133": {
      "op": "JUMP"
    },
    "9134": {
      "op": "JUMPDEST"
    },
    "9135": {
      "op": "POP"
    },
    "9136": {
      "op": "SWAP7"
    },
    "9137": {
      "op": "SWAP6"
    },
    "9138": {
      "op": "POP"
    },
    "9139": {
      "op": "POP"
    },
    "9140": {
      "op": "POP"
    },
    "9141": {
      "op": "POP"
    },
    "9142": {
      "op": "POP"
    },
    "9143": {
      "op": "POP"
    },
    "9144": {
      "jump": "o",
      "op": "JUMP"
    },
    "9145": {
      "op": "JUMPDEST"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9148": {
      "op": "DUP1"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9151": {
      "op": "DUP4"
    },
    "9152": {
      "op": "DUP6"
    },
    "9153": {
      "op": "SUB"
    },
    "9154": {
      "op": "SLT"
    },
    "9155": {
      "op": "ISZERO"
    },
    "9156": {
      "op": "PUSH2",
      "value": "0x23CC"
    },
    "9159": {
      "op": "JUMPI"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9162": {
      "op": "DUP1"
    },
    "9163": {
      "op": "REVERT"
    },
    "9164": {
      "op": "JUMPDEST"
    },
    "9165": {
      "op": "DUP3"
    },
    "9166": {
      "op": "CALLDATALOAD"
    },
    "9167": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9176": {
      "op": "DUP2"
    },
    "9177": {
      "op": "GT"
    },
    "9178": {
      "op": "ISZERO"
    },
    "9179": {
      "op": "PUSH2",
      "value": "0x23E3"
    },
    "9182": {
      "op": "JUMPI"
    },
    "9183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9185": {
      "op": "DUP1"
    },
    "9186": {
      "op": "REVERT"
    },
    "9187": {
      "op": "JUMPDEST"
    },
    "9188": {
      "op": "PUSH2",
      "value": "0x23EF"
    },
    "9191": {
      "op": "DUP6"
    },
    "9192": {
      "op": "DUP3"
    },
    "9193": {
      "op": "DUP7"
    },
    "9194": {
      "op": "ADD"
    },
    "9195": {
      "op": "PUSH2",
      "value": "0x2341"
    },
    "9198": {
      "jump": "i",
      "op": "JUMP"
    },
    "9199": {
      "op": "JUMPDEST"
    },
    "9200": {
      "op": "SWAP3"
    },
    "9201": {
      "op": "POP"
    },
    "9202": {
      "op": "POP"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9205": {
      "op": "DUP4"
    },
    "9206": {
      "op": "ADD"
    },
    "9207": {
      "op": "CALLDATALOAD"
    },
    "9208": {
      "op": "PUSH2",
      "value": "0x2400"
    },
    "9211": {
      "op": "DUP2"
    },
    "9212": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "9215": {
      "jump": "i",
      "op": "JUMP"
    },
    "9216": {
      "op": "JUMPDEST"
    },
    "9217": {
      "op": "DUP1"
    },
    "9218": {
      "op": "SWAP2"
    },
    "9219": {
      "op": "POP"
    },
    "9220": {
      "op": "POP"
    },
    "9221": {
      "op": "SWAP3"
    },
    "9222": {
      "op": "POP"
    },
    "9223": {
      "op": "SWAP3"
    },
    "9224": {
      "op": "SWAP1"
    },
    "9225": {
      "op": "POP"
    },
    "9226": {
      "jump": "o",
      "op": "JUMP"
    },
    "9227": {
      "op": "JUMPDEST"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9230": {
      "op": "DUP1"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9233": {
      "op": "DUP4"
    },
    "9234": {
      "op": "DUP6"
    },
    "9235": {
      "op": "SUB"
    },
    "9236": {
      "op": "SLT"
    },
    "9237": {
      "op": "ISZERO"
    },
    "9238": {
      "op": "PUSH2",
      "value": "0x241E"
    },
    "9241": {
      "op": "JUMPI"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9244": {
      "op": "DUP1"
    },
    "9245": {
      "op": "REVERT"
    },
    "9246": {
      "op": "JUMPDEST"
    },
    "9247": {
      "op": "POP"
    },
    "9248": {
      "op": "POP"
    },
    "9249": {
      "op": "DUP1"
    },
    "9250": {
      "op": "CALLDATALOAD"
    },
    "9251": {
      "op": "SWAP3"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9254": {
      "op": "SWAP1"
    },
    "9255": {
      "op": "SWAP2"
    },
    "9256": {
      "op": "ADD"
    },
    "9257": {
      "op": "CALLDATALOAD"
    },
    "9258": {
      "op": "SWAP2"
    },
    "9259": {
      "op": "POP"
    },
    "9260": {
      "jump": "o",
      "op": "JUMP"
    },
    "9261": {
      "op": "JUMPDEST"
    },
    "9262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9264": {
      "op": "DUP1"
    },
    "9265": {
      "op": "DUP3"
    },
    "9266": {
      "op": "MSTORE"
    },
    "9267": {
      "op": "DUP3"
    },
    "9268": {
      "op": "MLOAD"
    },
    "9269": {
      "op": "DUP3"
    },
    "9270": {
      "op": "DUP3"
    },
    "9271": {
      "op": "ADD"
    },
    "9272": {
      "op": "DUP2"
    },
    "9273": {
      "op": "SWAP1"
    },
    "9274": {
      "op": "MSTORE"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9277": {
      "op": "SWAP2"
    },
    "9278": {
      "op": "SWAP1"
    },
    "9279": {
      "op": "DUP5"
    },
    "9280": {
      "op": "DUP3"
    },
    "9281": {
      "op": "ADD"
    },
    "9282": {
      "op": "SWAP1"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9285": {
      "op": "DUP6"
    },
    "9286": {
      "op": "ADD"
    },
    "9287": {
      "op": "SWAP1"
    },
    "9288": {
      "op": "DUP5"
    },
    "9289": {
      "op": "JUMPDEST"
    },
    "9290": {
      "op": "DUP2"
    },
    "9291": {
      "op": "DUP2"
    },
    "9292": {
      "op": "LT"
    },
    "9293": {
      "op": "ISZERO"
    },
    "9294": {
      "op": "PUSH2",
      "value": "0x246E"
    },
    "9297": {
      "op": "JUMPI"
    },
    "9298": {
      "op": "DUP4"
    },
    "9299": {
      "op": "MLOAD"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9306": {
      "op": "SHL"
    },
    "9307": {
      "op": "SUB"
    },
    "9308": {
      "op": "AND"
    },
    "9309": {
      "op": "DUP4"
    },
    "9310": {
      "op": "MSTORE"
    },
    "9311": {
      "op": "SWAP3"
    },
    "9312": {
      "op": "DUP5"
    },
    "9313": {
      "op": "ADD"
    },
    "9314": {
      "op": "SWAP3"
    },
    "9315": {
      "op": "SWAP2"
    },
    "9316": {
      "op": "DUP5"
    },
    "9317": {
      "op": "ADD"
    },
    "9318": {
      "op": "SWAP2"
    },
    "9319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9321": {
      "op": "ADD"
    },
    "9322": {
      "op": "PUSH2",
      "value": "0x2449"
    },
    "9325": {
      "op": "JUMP"
    },
    "9326": {
      "op": "JUMPDEST"
    },
    "9327": {
      "op": "POP"
    },
    "9328": {
      "op": "SWAP1"
    },
    "9329": {
      "op": "SWAP7"
    },
    "9330": {
      "op": "SWAP6"
    },
    "9331": {
      "op": "POP"
    },
    "9332": {
      "op": "POP"
    },
    "9333": {
      "op": "POP"
    },
    "9334": {
      "op": "POP"
    },
    "9335": {
      "op": "POP"
    },
    "9336": {
      "op": "POP"
    },
    "9337": {
      "jump": "o",
      "op": "JUMP"
    },
    "9338": {
      "op": "JUMPDEST"
    },
    "9339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9341": {
      "op": "DUP1"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9344": {
      "op": "DUP1"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9347": {
      "op": "DUP6"
    },
    "9348": {
      "op": "DUP8"
    },
    "9349": {
      "op": "SUB"
    },
    "9350": {
      "op": "SLT"
    },
    "9351": {
      "op": "ISZERO"
    },
    "9352": {
      "op": "PUSH2",
      "value": "0x2490"
    },
    "9355": {
      "op": "JUMPI"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9358": {
      "op": "DUP1"
    },
    "9359": {
      "op": "REVERT"
    },
    "9360": {
      "op": "JUMPDEST"
    },
    "9361": {
      "op": "DUP5"
    },
    "9362": {
      "op": "CALLDATALOAD"
    },
    "9363": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9372": {
      "op": "DUP1"
    },
    "9373": {
      "op": "DUP3"
    },
    "9374": {
      "op": "GT"
    },
    "9375": {
      "op": "ISZERO"
    },
    "9376": {
      "op": "PUSH2",
      "value": "0x24A8"
    },
    "9379": {
      "op": "JUMPI"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9382": {
      "op": "DUP1"
    },
    "9383": {
      "op": "REVERT"
    },
    "9384": {
      "op": "JUMPDEST"
    },
    "9385": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9388": {
      "op": "DUP9"
    },
    "9389": {
      "op": "DUP4"
    },
    "9390": {
      "op": "DUP10"
    },
    "9391": {
      "op": "ADD"
    },
    "9392": {
      "op": "PUSH2",
      "value": "0x2341"
    },
    "9395": {
      "jump": "i",
      "op": "JUMP"
    },
    "9396": {
      "op": "JUMPDEST"
    },
    "9397": {
      "op": "SWAP6"
    },
    "9398": {
      "op": "POP"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9401": {
      "op": "SWAP2"
    },
    "9402": {
      "op": "POP"
    },
    "9403": {
      "op": "DUP2"
    },
    "9404": {
      "op": "DUP8"
    },
    "9405": {
      "op": "ADD"
    },
    "9406": {
      "op": "CALLDATALOAD"
    },
    "9407": {
      "op": "DUP2"
    },
    "9408": {
      "op": "DUP2"
    },
    "9409": {
      "op": "GT"
    },
    "9410": {
      "op": "ISZERO"
    },
    "9411": {
      "op": "PUSH2",
      "value": "0x24CB"
    },
    "9414": {
      "op": "JUMPI"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9417": {
      "op": "DUP1"
    },
    "9418": {
      "op": "REVERT"
    },
    "9419": {
      "op": "JUMPDEST"
    },
    "9420": {
      "op": "DUP8"
    },
    "9421": {
      "op": "ADD"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9424": {
      "op": "DUP2"
    },
    "9425": {
      "op": "ADD"
    },
    "9426": {
      "op": "DUP10"
    },
    "9427": {
      "op": "SGT"
    },
    "9428": {
      "op": "PUSH2",
      "value": "0x24DC"
    },
    "9431": {
      "op": "JUMPI"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9434": {
      "op": "DUP1"
    },
    "9435": {
      "op": "REVERT"
    },
    "9436": {
      "op": "JUMPDEST"
    },
    "9437": {
      "op": "DUP1"
    },
    "9438": {
      "op": "CALLDATALOAD"
    },
    "9439": {
      "op": "PUSH2",
      "value": "0x24EA"
    },
    "9442": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9445": {
      "op": "DUP3"
    },
    "9446": {
      "op": "PUSH2",
      "value": "0x231D"
    },
    "9449": {
      "jump": "i",
      "op": "JUMP"
    },
    "9450": {
      "op": "JUMPDEST"
    },
    "9451": {
      "op": "DUP2"
    },
    "9452": {
      "op": "DUP2"
    },
    "9453": {
      "op": "MSTORE"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9456": {
      "op": "SWAP2"
    },
    "9457": {
      "op": "SWAP1"
    },
    "9458": {
      "op": "SWAP2"
    },
    "9459": {
      "op": "SHL"
    },
    "9460": {
      "op": "DUP3"
    },
    "9461": {
      "op": "ADD"
    },
    "9462": {
      "op": "DUP5"
    },
    "9463": {
      "op": "ADD"
    },
    "9464": {
      "op": "SWAP1"
    },
    "9465": {
      "op": "DUP5"
    },
    "9466": {
      "op": "DUP2"
    },
    "9467": {
      "op": "ADD"
    },
    "9468": {
      "op": "SWAP1"
    },
    "9469": {
      "op": "DUP12"
    },
    "9470": {
      "op": "DUP4"
    },
    "9471": {
      "op": "GT"
    },
    "9472": {
      "op": "ISZERO"
    },
    "9473": {
      "op": "PUSH2",
      "value": "0x2509"
    },
    "9476": {
      "op": "JUMPI"
    },
    "9477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9479": {
      "op": "DUP1"
    },
    "9480": {
      "op": "REVERT"
    },
    "9481": {
      "op": "JUMPDEST"
    },
    "9482": {
      "op": "SWAP3"
    },
    "9483": {
      "op": "DUP6"
    },
    "9484": {
      "op": "ADD"
    },
    "9485": {
      "op": "SWAP3"
    },
    "9486": {
      "op": "JUMPDEST"
    },
    "9487": {
      "op": "DUP3"
    },
    "9488": {
      "op": "DUP5"
    },
    "9489": {
      "op": "LT"
    },
    "9490": {
      "op": "ISZERO"
    },
    "9491": {
      "op": "PUSH2",
      "value": "0x2527"
    },
    "9494": {
      "op": "JUMPI"
    },
    "9495": {
      "op": "DUP4"
    },
    "9496": {
      "op": "CALLDATALOAD"
    },
    "9497": {
      "op": "DUP3"
    },
    "9498": {
      "op": "MSTORE"
    },
    "9499": {
      "op": "SWAP3"
    },
    "9500": {
      "op": "DUP6"
    },
    "9501": {
      "op": "ADD"
    },
    "9502": {
      "op": "SWAP3"
    },
    "9503": {
      "op": "SWAP1"
    },
    "9504": {
      "op": "DUP6"
    },
    "9505": {
      "op": "ADD"
    },
    "9506": {
      "op": "SWAP1"
    },
    "9507": {
      "op": "PUSH2",
      "value": "0x250E"
    },
    "9510": {
      "op": "JUMP"
    },
    "9511": {
      "op": "JUMPDEST"
    },
    "9512": {
      "op": "SWAP8"
    },
    "9513": {
      "op": "POP"
    },
    "9514": {
      "op": "POP"
    },
    "9515": {
      "op": "POP"
    },
    "9516": {
      "op": "POP"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9519": {
      "op": "DUP8"
    },
    "9520": {
      "op": "ADD"
    },
    "9521": {
      "op": "CALLDATALOAD"
    },
    "9522": {
      "op": "SWAP4"
    },
    "9523": {
      "op": "POP"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9526": {
      "op": "DUP8"
    },
    "9527": {
      "op": "ADD"
    },
    "9528": {
      "op": "CALLDATALOAD"
    },
    "9529": {
      "op": "SWAP2"
    },
    "9530": {
      "op": "POP"
    },
    "9531": {
      "op": "DUP1"
    },
    "9532": {
      "op": "DUP3"
    },
    "9533": {
      "op": "GT"
    },
    "9534": {
      "op": "ISZERO"
    },
    "9535": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9538": {
      "op": "JUMPI"
    },
    "9539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9541": {
      "op": "DUP1"
    },
    "9542": {
      "op": "REVERT"
    },
    "9543": {
      "op": "JUMPDEST"
    },
    "9544": {
      "op": "POP"
    },
    "9545": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "9548": {
      "op": "DUP8"
    },
    "9549": {
      "op": "DUP3"
    },
    "9550": {
      "op": "DUP9"
    },
    "9551": {
      "op": "ADD"
    },
    "9552": {
      "op": "PUSH2",
      "value": "0x2341"
    },
    "9555": {
      "jump": "i",
      "op": "JUMP"
    },
    "9556": {
      "op": "JUMPDEST"
    },
    "9557": {
      "op": "SWAP2"
    },
    "9558": {
      "op": "POP"
    },
    "9559": {
      "op": "POP"
    },
    "9560": {
      "op": "SWAP3"
    },
    "9561": {
      "op": "SWAP6"
    },
    "9562": {
      "op": "SWAP2"
    },
    "9563": {
      "op": "SWAP5"
    },
    "9564": {
      "op": "POP"
    },
    "9565": {
      "op": "SWAP3"
    },
    "9566": {
      "op": "POP"
    },
    "9567": {
      "jump": "o",
      "op": "JUMP"
    },
    "9568": {
      "op": "JUMPDEST"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9571": {
      "op": "DUP1"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9574": {
      "op": "DUP4"
    },
    "9575": {
      "op": "DUP6"
    },
    "9576": {
      "op": "SUB"
    },
    "9577": {
      "op": "SLT"
    },
    "9578": {
      "op": "ISZERO"
    },
    "9579": {
      "op": "PUSH2",
      "value": "0x2573"
    },
    "9582": {
      "op": "JUMPI"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9585": {
      "op": "DUP1"
    },
    "9586": {
      "op": "REVERT"
    },
    "9587": {
      "op": "JUMPDEST"
    },
    "9588": {
      "op": "DUP3"
    },
    "9589": {
      "op": "CALLDATALOAD"
    },
    "9590": {
      "op": "PUSH2",
      "value": "0x257E"
    },
    "9593": {
      "op": "DUP2"
    },
    "9594": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "9597": {
      "jump": "i",
      "op": "JUMP"
    },
    "9598": {
      "op": "JUMPDEST"
    },
    "9599": {
      "op": "SWAP2"
    },
    "9600": {
      "op": "POP"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9603": {
      "op": "DUP4"
    },
    "9604": {
      "op": "ADD"
    },
    "9605": {
      "op": "CALLDATALOAD"
    },
    "9606": {
      "op": "PUSH2",
      "value": "0x2400"
    },
    "9609": {
      "op": "DUP2"
    },
    "9610": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "9613": {
      "jump": "i",
      "op": "JUMP"
    },
    "9614": {
      "op": "JUMPDEST"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9617": {
      "op": "DUP1"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9622": {
      "op": "DUP5"
    },
    "9623": {
      "op": "DUP7"
    },
    "9624": {
      "op": "SUB"
    },
    "9625": {
      "op": "SLT"
    },
    "9626": {
      "op": "ISZERO"
    },
    "9627": {
      "op": "PUSH2",
      "value": "0x25A3"
    },
    "9630": {
      "op": "JUMPI"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9633": {
      "op": "DUP1"
    },
    "9634": {
      "op": "REVERT"
    },
    "9635": {
      "op": "JUMPDEST"
    },
    "9636": {
      "op": "DUP4"
    },
    "9637": {
      "op": "CALLDATALOAD"
    },
    "9638": {
      "op": "SWAP3"
    },
    "9639": {
      "op": "POP"
    },
    "9640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9642": {
      "op": "DUP5"
    },
    "9643": {
      "op": "ADD"
    },
    "9644": {
      "op": "CALLDATALOAD"
    },
    "9645": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9654": {
      "op": "DUP1"
    },
    "9655": {
      "op": "DUP3"
    },
    "9656": {
      "op": "GT"
    },
    "9657": {
      "op": "ISZERO"
    },
    "9658": {
      "op": "PUSH2",
      "value": "0x25C2"
    },
    "9661": {
      "op": "JUMPI"
    },
    "9662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9664": {
      "op": "DUP1"
    },
    "9665": {
      "op": "REVERT"
    },
    "9666": {
      "op": "JUMPDEST"
    },
    "9667": {
      "op": "DUP2"
    },
    "9668": {
      "op": "DUP7"
    },
    "9669": {
      "op": "ADD"
    },
    "9670": {
      "op": "SWAP2"
    },
    "9671": {
      "op": "POP"
    },
    "9672": {
      "op": "DUP7"
    },
    "9673": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9675": {
      "op": "DUP4"
    },
    "9676": {
      "op": "ADD"
    },
    "9677": {
      "op": "SLT"
    },
    "9678": {
      "op": "PUSH2",
      "value": "0x25D6"
    },
    "9681": {
      "op": "JUMPI"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9684": {
      "op": "DUP1"
    },
    "9685": {
      "op": "REVERT"
    },
    "9686": {
      "op": "JUMPDEST"
    },
    "9687": {
      "op": "DUP2"
    },
    "9688": {
      "op": "CALLDATALOAD"
    },
    "9689": {
      "op": "DUP2"
    },
    "9690": {
      "op": "DUP2"
    },
    "9691": {
      "op": "GT"
    },
    "9692": {
      "op": "ISZERO"
    },
    "9693": {
      "op": "PUSH2",
      "value": "0x25E5"
    },
    "9696": {
      "op": "JUMPI"
    },
    "9697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9699": {
      "op": "DUP1"
    },
    "9700": {
      "op": "REVERT"
    },
    "9701": {
      "op": "JUMPDEST"
    },
    "9702": {
      "op": "DUP8"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9705": {
      "op": "DUP3"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9708": {
      "op": "SHL"
    },
    "9709": {
      "op": "DUP6"
    },
    "9710": {
      "op": "ADD"
    },
    "9711": {
      "op": "ADD"
    },
    "9712": {
      "op": "GT"
    },
    "9713": {
      "op": "ISZERO"
    },
    "9714": {
      "op": "PUSH2",
      "value": "0x25FA"
    },
    "9717": {
      "op": "JUMPI"
    },
    "9718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9720": {
      "op": "DUP1"
    },
    "9721": {
      "op": "REVERT"
    },
    "9722": {
      "op": "JUMPDEST"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9725": {
      "op": "DUP4"
    },
    "9726": {
      "op": "ADD"
    },
    "9727": {
      "op": "SWAP5"
    },
    "9728": {
      "op": "POP"
    },
    "9729": {
      "op": "DUP1"
    },
    "9730": {
      "op": "SWAP4"
    },
    "9731": {
      "op": "POP"
    },
    "9732": {
      "op": "POP"
    },
    "9733": {
      "op": "POP"
    },
    "9734": {
      "op": "POP"
    },
    "9735": {
      "op": "SWAP3"
    },
    "9736": {
      "op": "POP"
    },
    "9737": {
      "op": "SWAP3"
    },
    "9738": {
      "op": "POP"
    },
    "9739": {
      "op": "SWAP3"
    },
    "9740": {
      "jump": "o",
      "op": "JUMP"
    },
    "9741": {
      "op": "JUMPDEST"
    },
    "9742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9744": {
      "op": "DUP1"
    },
    "9745": {
      "op": "DUP3"
    },
    "9746": {
      "op": "MSTORE"
    },
    "9747": {
      "op": "DUP3"
    },
    "9748": {
      "op": "MLOAD"
    },
    "9749": {
      "op": "DUP3"
    },
    "9750": {
      "op": "DUP3"
    },
    "9751": {
      "op": "ADD"
    },
    "9752": {
      "op": "DUP2"
    },
    "9753": {
      "op": "SWAP1"
    },
    "9754": {
      "op": "MSTORE"
    },
    "9755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9757": {
      "op": "SWAP2"
    },
    "9758": {
      "op": "SWAP1"
    },
    "9759": {
      "op": "DUP5"
    },
    "9760": {
      "op": "DUP3"
    },
    "9761": {
      "op": "ADD"
    },
    "9762": {
      "op": "SWAP1"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9765": {
      "op": "DUP6"
    },
    "9766": {
      "op": "ADD"
    },
    "9767": {
      "op": "SWAP1"
    },
    "9768": {
      "op": "DUP5"
    },
    "9769": {
      "op": "JUMPDEST"
    },
    "9770": {
      "op": "DUP2"
    },
    "9771": {
      "op": "DUP2"
    },
    "9772": {
      "op": "LT"
    },
    "9773": {
      "op": "ISZERO"
    },
    "9774": {
      "op": "PUSH2",
      "value": "0x246E"
    },
    "9777": {
      "op": "JUMPI"
    },
    "9778": {
      "op": "DUP4"
    },
    "9779": {
      "op": "MLOAD"
    },
    "9780": {
      "op": "DUP4"
    },
    "9781": {
      "op": "MSTORE"
    },
    "9782": {
      "op": "SWAP3"
    },
    "9783": {
      "op": "DUP5"
    },
    "9784": {
      "op": "ADD"
    },
    "9785": {
      "op": "SWAP3"
    },
    "9786": {
      "op": "SWAP2"
    },
    "9787": {
      "op": "DUP5"
    },
    "9788": {
      "op": "ADD"
    },
    "9789": {
      "op": "SWAP2"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "PUSH2",
      "value": "0x2629"
    },
    "9796": {
      "op": "JUMP"
    },
    "9797": {
      "op": "JUMPDEST"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9800": {
      "op": "DUP1"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9803": {
      "op": "DUP4"
    },
    "9804": {
      "op": "DUP6"
    },
    "9805": {
      "op": "SUB"
    },
    "9806": {
      "op": "SLT"
    },
    "9807": {
      "op": "ISZERO"
    },
    "9808": {
      "op": "PUSH2",
      "value": "0x2658"
    },
    "9811": {
      "op": "JUMPI"
    },
    "9812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9814": {
      "op": "DUP1"
    },
    "9815": {
      "op": "REVERT"
    },
    "9816": {
      "op": "JUMPDEST"
    },
    "9817": {
      "op": "DUP3"
    },
    "9818": {
      "op": "CALLDATALOAD"
    },
    "9819": {
      "op": "SWAP2"
    },
    "9820": {
      "op": "POP"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9823": {
      "op": "DUP4"
    },
    "9824": {
      "op": "ADD"
    },
    "9825": {
      "op": "CALLDATALOAD"
    },
    "9826": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9835": {
      "op": "DUP2"
    },
    "9836": {
      "op": "GT"
    },
    "9837": {
      "op": "ISZERO"
    },
    "9838": {
      "op": "PUSH2",
      "value": "0x2676"
    },
    "9841": {
      "op": "JUMPI"
    },
    "9842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9844": {
      "op": "DUP1"
    },
    "9845": {
      "op": "REVERT"
    },
    "9846": {
      "op": "JUMPDEST"
    },
    "9847": {
      "op": "PUSH2",
      "value": "0x2682"
    },
    "9850": {
      "op": "DUP6"
    },
    "9851": {
      "op": "DUP3"
    },
    "9852": {
      "op": "DUP7"
    },
    "9853": {
      "op": "ADD"
    },
    "9854": {
      "op": "PUSH2",
      "value": "0x2341"
    },
    "9857": {
      "jump": "i",
      "op": "JUMP"
    },
    "9858": {
      "op": "JUMPDEST"
    },
    "9859": {
      "op": "SWAP2"
    },
    "9860": {
      "op": "POP"
    },
    "9861": {
      "op": "POP"
    },
    "9862": {
      "op": "SWAP3"
    },
    "9863": {
      "op": "POP"
    },
    "9864": {
      "op": "SWAP3"
    },
    "9865": {
      "op": "SWAP1"
    },
    "9866": {
      "op": "POP"
    },
    "9867": {
      "jump": "o",
      "op": "JUMP"
    },
    "9868": {
      "op": "JUMPDEST"
    },
    "9869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9871": {
      "op": "DUP2"
    },
    "9872": {
      "op": "DUP2"
    },
    "9873": {
      "op": "SHR"
    },
    "9874": {
      "op": "SWAP1"
    },
    "9875": {
      "op": "DUP3"
    },
    "9876": {
      "op": "AND"
    },
    "9877": {
      "op": "DUP1"
    },
    "9878": {
      "op": "PUSH2",
      "value": "0x26A0"
    },
    "9881": {
      "op": "JUMPI"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9884": {
      "op": "DUP3"
    },
    "9885": {
      "op": "AND"
    },
    "9886": {
      "op": "SWAP2"
    },
    "9887": {
      "op": "POP"
    },
    "9888": {
      "op": "JUMPDEST"
    },
    "9889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9891": {
      "op": "DUP3"
    },
    "9892": {
      "op": "LT"
    },
    "9893": {
      "op": "DUP2"
    },
    "9894": {
      "op": "SUB"
    },
    "9895": {
      "op": "PUSH2",
      "value": "0x26C0"
    },
    "9898": {
      "op": "JUMPI"
    },
    "9899": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9906": {
      "op": "SHL"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9909": {
      "op": "MSTORE"
    },
    "9910": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9914": {
      "op": "MSTORE"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9919": {
      "op": "REVERT"
    },
    "9920": {
      "op": "JUMPDEST"
    },
    "9921": {
      "op": "POP"
    },
    "9922": {
      "op": "SWAP2"
    },
    "9923": {
      "op": "SWAP1"
    },
    "9924": {
      "op": "POP"
    },
    "9925": {
      "jump": "o",
      "op": "JUMP"
    },
    "9926": {
      "op": "JUMPDEST"
    },
    "9927": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9934": {
      "op": "SHL"
    },
    "9935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9937": {
      "op": "MSTORE"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9942": {
      "op": "MSTORE"
    },
    "9943": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9947": {
      "op": "REVERT"
    },
    "9948": {
      "op": "JUMPDEST"
    },
    "9949": {
      "op": "DUP1"
    },
    "9950": {
      "op": "DUP3"
    },
    "9951": {
      "op": "ADD"
    },
    "9952": {
      "op": "DUP1"
    },
    "9953": {
      "op": "DUP3"
    },
    "9954": {
      "op": "GT"
    },
    "9955": {
      "op": "ISZERO"
    },
    "9956": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "9959": {
      "op": "JUMPI"
    },
    "9960": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "9963": {
      "op": "PUSH2",
      "value": "0x26C6"
    },
    "9966": {
      "jump": "i",
      "op": "JUMP"
    },
    "9967": {
      "op": "JUMPDEST"
    },
    "9968": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9975": {
      "op": "SHL"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9978": {
      "op": "MSTORE"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9983": {
      "op": "MSTORE"
    },
    "9984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9988": {
      "op": "REVERT"
    },
    "9989": {
      "op": "JUMPDEST"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9992": {
      "op": "DUP3"
    },
    "9993": {
      "op": "PUSH2",
      "value": "0x2722"
    },
    "9996": {
      "op": "JUMPI"
    },
    "9997": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10004": {
      "op": "SHL"
    },
    "10005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10007": {
      "op": "MSTORE"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10010": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10012": {
      "op": "MSTORE"
    },
    "10013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10017": {
      "op": "REVERT"
    },
    "10018": {
      "op": "JUMPDEST"
    },
    "10019": {
      "op": "POP"
    },
    "10020": {
      "op": "DIV"
    },
    "10021": {
      "op": "SWAP1"
    },
    "10022": {
      "jump": "o",
      "op": "JUMP"
    },
    "10023": {
      "op": "JUMPDEST"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10028": {
      "op": "DUP3"
    },
    "10029": {
      "op": "ADD"
    },
    "10030": {
      "op": "PUSH2",
      "value": "0x2739"
    },
    "10033": {
      "op": "JUMPI"
    },
    "10034": {
      "op": "PUSH2",
      "value": "0x2739"
    },
    "10037": {
      "op": "PUSH2",
      "value": "0x26C6"
    },
    "10040": {
      "jump": "i",
      "op": "JUMP"
    },
    "10041": {
      "op": "JUMPDEST"
    },
    "10042": {
      "op": "POP"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10045": {
      "op": "ADD"
    },
    "10046": {
      "op": "SWAP1"
    },
    "10047": {
      "jump": "o",
      "op": "JUMP"
    },
    "10048": {
      "op": "JUMPDEST"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10053": {
      "op": "DUP3"
    },
    "10054": {
      "op": "DUP5"
    },
    "10055": {
      "op": "SUB"
    },
    "10056": {
      "op": "SLT"
    },
    "10057": {
      "op": "ISZERO"
    },
    "10058": {
      "op": "PUSH2",
      "value": "0x2752"
    },
    "10061": {
      "op": "JUMPI"
    },
    "10062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10064": {
      "op": "DUP1"
    },
    "10065": {
      "op": "REVERT"
    },
    "10066": {
      "op": "JUMPDEST"
    },
    "10067": {
      "op": "POP"
    },
    "10068": {
      "op": "MLOAD"
    },
    "10069": {
      "op": "SWAP2"
    },
    "10070": {
      "op": "SWAP1"
    },
    "10071": {
      "op": "POP"
    },
    "10072": {
      "jump": "o",
      "op": "JUMP"
    },
    "10073": {
      "op": "JUMPDEST"
    },
    "10074": {
      "op": "DUP2"
    },
    "10075": {
      "op": "DUP2"
    },
    "10076": {
      "op": "SUB"
    },
    "10077": {
      "op": "DUP2"
    },
    "10078": {
      "op": "DUP2"
    },
    "10079": {
      "op": "GT"
    },
    "10080": {
      "op": "ISZERO"
    },
    "10081": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "10084": {
      "op": "JUMPI"
    },
    "10085": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "10088": {
      "op": "PUSH2",
      "value": "0x26C6"
    },
    "10091": {
      "jump": "i",
      "op": "JUMP"
    },
    "10092": {
      "op": "JUMPDEST"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10095": {
      "op": "DUP1"
    },
    "10096": {
      "op": "DUP3"
    },
    "10097": {
      "op": "MSTORE"
    },
    "10098": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10100": {
      "op": "SWAP1"
    },
    "10101": {
      "op": "DUP3"
    },
    "10102": {
      "op": "ADD"
    },
    "10103": {
      "op": "MSTORE"
    },
    "10104": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "10137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10139": {
      "op": "DUP3"
    },
    "10140": {
      "op": "ADD"
    },
    "10141": {
      "op": "MSTORE"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10146": {
      "op": "SHL"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10149": {
      "op": "DUP3"
    },
    "10150": {
      "op": "ADD"
    },
    "10151": {
      "op": "MSTORE"
    },
    "10152": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10154": {
      "op": "ADD"
    },
    "10155": {
      "op": "SWAP1"
    },
    "10156": {
      "jump": "o",
      "op": "JUMP"
    },
    "10157": {
      "op": "JUMPDEST"
    },
    "10158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10160": {
      "op": "DUP1"
    },
    "10161": {
      "op": "DUP3"
    },
    "10162": {
      "op": "MSTORE"
    },
    "10163": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10165": {
      "op": "SWAP1"
    },
    "10166": {
      "op": "DUP3"
    },
    "10167": {
      "op": "ADD"
    },
    "10168": {
      "op": "MSTORE"
    },
    "10169": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10204": {
      "op": "DUP3"
    },
    "10205": {
      "op": "ADD"
    },
    "10206": {
      "op": "MSTORE"
    },
    "10207": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "10214": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10216": {
      "op": "SHL"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10219": {
      "op": "DUP3"
    },
    "10220": {
      "op": "ADD"
    },
    "10221": {
      "op": "MSTORE"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10224": {
      "op": "ADD"
    },
    "10225": {
      "op": "SWAP1"
    },
    "10226": {
      "jump": "o",
      "op": "JUMP"
    },
    "10227": {
      "op": "JUMPDEST"
    },
    "10228": {
      "op": "DUP1"
    },
    "10229": {
      "op": "DUP3"
    },
    "10230": {
      "op": "MUL"
    },
    "10231": {
      "op": "DUP2"
    },
    "10232": {
      "op": "ISZERO"
    },
    "10233": {
      "op": "DUP3"
    },
    "10234": {
      "op": "DUP3"
    },
    "10235": {
      "op": "DIV"
    },
    "10236": {
      "op": "DUP5"
    },
    "10237": {
      "op": "EQ"
    },
    "10238": {
      "op": "OR"
    },
    "10239": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "10242": {
      "op": "JUMPI"
    },
    "10243": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "10246": {
      "op": "PUSH2",
      "value": "0x26C6"
    },
    "10249": {
      "jump": "i",
      "op": "JUMP"
    },
    "10250": {
      "op": "JUMPDEST"
    },
    "10251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10255": {
      "op": "DUP3"
    },
    "10256": {
      "op": "DUP5"
    },
    "10257": {
      "op": "SUB"
    },
    "10258": {
      "op": "SLT"
    },
    "10259": {
      "op": "ISZERO"
    },
    "10260": {
      "op": "PUSH2",
      "value": "0x281C"
    },
    "10263": {
      "op": "JUMPI"
    },
    "10264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10266": {
      "op": "DUP1"
    },
    "10267": {
      "op": "REVERT"
    },
    "10268": {
      "op": "JUMPDEST"
    },
    "10269": {
      "op": "DUP2"
    },
    "10270": {
      "op": "MLOAD"
    },
    "10271": {
      "op": "DUP1"
    },
    "10272": {
      "op": "ISZERO"
    },
    "10273": {
      "op": "ISZERO"
    },
    "10274": {
      "op": "DUP2"
    },
    "10275": {
      "op": "EQ"
    },
    "10276": {
      "op": "PUSH2",
      "value": "0x22CF"
    },
    "10279": {
      "op": "JUMPI"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10282": {
      "op": "DUP1"
    },
    "10283": {
      "op": "REVERT"
    },
    "10284": {
      "op": "JUMPDEST"
    },
    "10285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10289": {
      "op": "DUP1"
    },
    "10290": {
      "op": "DUP4"
    },
    "10291": {
      "op": "DUP6"
    },
    "10292": {
      "op": "SUB"
    },
    "10293": {
      "op": "SLT"
    },
    "10294": {
      "op": "ISZERO"
    },
    "10295": {
      "op": "PUSH2",
      "value": "0x283F"
    },
    "10298": {
      "op": "JUMPI"
    },
    "10299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10301": {
      "op": "DUP1"
    },
    "10302": {
      "op": "REVERT"
    },
    "10303": {
      "op": "JUMPDEST"
    },
    "10304": {
      "op": "DUP3"
    },
    "10305": {
      "op": "MLOAD"
    },
    "10306": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10315": {
      "op": "DUP2"
    },
    "10316": {
      "op": "GT"
    },
    "10317": {
      "op": "ISZERO"
    },
    "10318": {
      "op": "PUSH2",
      "value": "0x2856"
    },
    "10321": {
      "op": "JUMPI"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10324": {
      "op": "DUP1"
    },
    "10325": {
      "op": "REVERT"
    },
    "10326": {
      "op": "JUMPDEST"
    },
    "10327": {
      "op": "DUP4"
    },
    "10328": {
      "op": "ADD"
    },
    "10329": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10331": {
      "op": "DUP2"
    },
    "10332": {
      "op": "ADD"
    },
    "10333": {
      "op": "DUP6"
    },
    "10334": {
      "op": "SGT"
    },
    "10335": {
      "op": "PUSH2",
      "value": "0x2867"
    },
    "10338": {
      "op": "JUMPI"
    },
    "10339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10341": {
      "op": "DUP1"
    },
    "10342": {
      "op": "REVERT"
    },
    "10343": {
      "op": "JUMPDEST"
    },
    "10344": {
      "op": "DUP1"
    },
    "10345": {
      "op": "MLOAD"
    },
    "10346": {
      "op": "PUSH2",
      "value": "0x2875"
    },
    "10349": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "10352": {
      "op": "DUP3"
    },
    "10353": {
      "op": "PUSH2",
      "value": "0x231D"
    },
    "10356": {
      "jump": "i",
      "op": "JUMP"
    },
    "10357": {
      "op": "JUMPDEST"
    },
    "10358": {
      "op": "DUP2"
    },
    "10359": {
      "op": "DUP2"
    },
    "10360": {
      "op": "MSTORE"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10363": {
      "op": "SWAP2"
    },
    "10364": {
      "op": "SWAP1"
    },
    "10365": {
      "op": "SWAP2"
    },
    "10366": {
      "op": "SHL"
    },
    "10367": {
      "op": "DUP3"
    },
    "10368": {
      "op": "ADD"
    },
    "10369": {
      "op": "DUP4"
    },
    "10370": {
      "op": "ADD"
    },
    "10371": {
      "op": "SWAP1"
    },
    "10372": {
      "op": "DUP4"
    },
    "10373": {
      "op": "DUP2"
    },
    "10374": {
      "op": "ADD"
    },
    "10375": {
      "op": "SWAP1"
    },
    "10376": {
      "op": "DUP8"
    },
    "10377": {
      "op": "DUP4"
    },
    "10378": {
      "op": "GT"
    },
    "10379": {
      "op": "ISZERO"
    },
    "10380": {
      "op": "PUSH2",
      "value": "0x2894"
    },
    "10383": {
      "op": "JUMPI"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10386": {
      "op": "DUP1"
    },
    "10387": {
      "op": "REVERT"
    },
    "10388": {
      "op": "JUMPDEST"
    },
    "10389": {
      "op": "SWAP3"
    },
    "10390": {
      "op": "DUP5"
    },
    "10391": {
      "op": "ADD"
    },
    "10392": {
      "op": "SWAP3"
    },
    "10393": {
      "op": "JUMPDEST"
    },
    "10394": {
      "op": "DUP3"
    },
    "10395": {
      "op": "DUP5"
    },
    "10396": {
      "op": "LT"
    },
    "10397": {
      "op": "ISZERO"
    },
    "10398": {
      "op": "PUSH2",
      "value": "0x28BB"
    },
    "10401": {
      "op": "JUMPI"
    },
    "10402": {
      "op": "DUP4"
    },
    "10403": {
      "op": "MLOAD"
    },
    "10404": {
      "op": "PUSH2",
      "value": "0x28AC"
    },
    "10407": {
      "op": "DUP2"
    },
    "10408": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "10411": {
      "jump": "i",
      "op": "JUMP"
    },
    "10412": {
      "op": "JUMPDEST"
    },
    "10413": {
      "op": "DUP3"
    },
    "10414": {
      "op": "MSTORE"
    },
    "10415": {
      "op": "SWAP3"
    },
    "10416": {
      "op": "DUP5"
    },
    "10417": {
      "op": "ADD"
    },
    "10418": {
      "op": "SWAP3"
    },
    "10419": {
      "op": "SWAP1"
    },
    "10420": {
      "op": "DUP5"
    },
    "10421": {
      "op": "ADD"
    },
    "10422": {
      "op": "SWAP1"
    },
    "10423": {
      "op": "PUSH2",
      "value": "0x2899"
    },
    "10426": {
      "op": "JUMP"
    },
    "10427": {
      "op": "JUMPDEST"
    },
    "10428": {
      "op": "SWAP8"
    },
    "10429": {
      "op": "SWAP7"
    },
    "10430": {
      "op": "POP"
    },
    "10431": {
      "op": "POP"
    },
    "10432": {
      "op": "POP"
    },
    "10433": {
      "op": "POP"
    },
    "10434": {
      "op": "POP"
    },
    "10435": {
      "op": "POP"
    },
    "10436": {
      "op": "POP"
    },
    "10437": {
      "jump": "o",
      "op": "JUMP"
    },
    "10438": {
      "op": "JUMPDEST"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10441": {
      "op": "DUP1"
    },
    "10442": {
      "op": "DUP3"
    },
    "10443": {
      "op": "MSTORE"
    },
    "10444": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10446": {
      "op": "SWAP1"
    },
    "10447": {
      "op": "DUP3"
    },
    "10448": {
      "op": "ADD"
    },
    "10449": {
      "op": "MSTORE"
    },
    "10450": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "10483": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10485": {
      "op": "DUP3"
    },
    "10486": {
      "op": "ADD"
    },
    "10487": {
      "op": "MSTORE"
    },
    "10488": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "10500": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10502": {
      "op": "SHL"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10505": {
      "op": "DUP3"
    },
    "10506": {
      "op": "ADD"
    },
    "10507": {
      "op": "MSTORE"
    },
    "10508": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10510": {
      "op": "ADD"
    },
    "10511": {
      "op": "SWAP1"
    },
    "10512": {
      "jump": "o",
      "op": "JUMP"
    },
    "10513": {
      "op": "JUMPDEST"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10516": {
      "op": "DUP3"
    },
    "10517": {
      "op": "GT"
    },
    "10518": {
      "op": "ISZERO"
    },
    "10519": {
      "op": "PUSH2",
      "value": "0xA6D"
    },
    "10522": {
      "op": "JUMPI"
    },
    "10523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10525": {
      "op": "DUP2"
    },
    "10526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10528": {
      "op": "MSTORE"
    },
    "10529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10533": {
      "op": "KECCAK256"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10536": {
      "op": "DUP6"
    },
    "10537": {
      "op": "ADD"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10540": {
      "op": "SHR"
    },
    "10541": {
      "op": "DUP2"
    },
    "10542": {
      "op": "ADD"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10545": {
      "op": "DUP7"
    },
    "10546": {
      "op": "LT"
    },
    "10547": {
      "op": "ISZERO"
    },
    "10548": {
      "op": "PUSH2",
      "value": "0x293A"
    },
    "10551": {
      "op": "JUMPI"
    },
    "10552": {
      "op": "POP"
    },
    "10553": {
      "op": "DUP1"
    },
    "10554": {
      "op": "JUMPDEST"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10557": {
      "op": "DUP6"
    },
    "10558": {
      "op": "ADD"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10561": {
      "op": "SHR"
    },
    "10562": {
      "op": "DUP3"
    },
    "10563": {
      "op": "ADD"
    },
    "10564": {
      "op": "SWAP2"
    },
    "10565": {
      "op": "POP"
    },
    "10566": {
      "op": "JUMPDEST"
    },
    "10567": {
      "op": "DUP2"
    },
    "10568": {
      "op": "DUP2"
    },
    "10569": {
      "op": "LT"
    },
    "10570": {
      "op": "ISZERO"
    },
    "10571": {
      "op": "PUSH2",
      "value": "0x2959"
    },
    "10574": {
      "op": "JUMPI"
    },
    "10575": {
      "op": "DUP3"
    },
    "10576": {
      "op": "DUP2"
    },
    "10577": {
      "op": "SSTORE"
    },
    "10578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10580": {
      "op": "ADD"
    },
    "10581": {
      "op": "PUSH2",
      "value": "0x2946"
    },
    "10584": {
      "op": "JUMP"
    },
    "10585": {
      "op": "JUMPDEST"
    },
    "10586": {
      "op": "POP"
    },
    "10587": {
      "op": "POP"
    },
    "10588": {
      "op": "POP"
    },
    "10589": {
      "op": "POP"
    },
    "10590": {
      "op": "POP"
    },
    "10591": {
      "op": "POP"
    },
    "10592": {
      "jump": "o",
      "op": "JUMP"
    },
    "10593": {
      "op": "JUMPDEST"
    },
    "10594": {
      "op": "DUP2"
    },
    "10595": {
      "op": "MLOAD"
    },
    "10596": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10605": {
      "op": "DUP2"
    },
    "10606": {
      "op": "GT"
    },
    "10607": {
      "op": "ISZERO"
    },
    "10608": {
      "op": "PUSH2",
      "value": "0x297B"
    },
    "10611": {
      "op": "JUMPI"
    },
    "10612": {
      "op": "PUSH2",
      "value": "0x297B"
    },
    "10615": {
      "op": "PUSH2",
      "value": "0x22D6"
    },
    "10618": {
      "jump": "i",
      "op": "JUMP"
    },
    "10619": {
      "op": "JUMPDEST"
    },
    "10620": {
      "op": "PUSH2",
      "value": "0x298F"
    },
    "10623": {
      "op": "DUP2"
    },
    "10624": {
      "op": "PUSH2",
      "value": "0x2989"
    },
    "10627": {
      "op": "DUP5"
    },
    "10628": {
      "op": "SLOAD"
    },
    "10629": {
      "op": "PUSH2",
      "value": "0x268C"
    },
    "10632": {
      "jump": "i",
      "op": "JUMP"
    },
    "10633": {
      "op": "JUMPDEST"
    },
    "10634": {
      "op": "DUP5"
    },
    "10635": {
      "op": "PUSH2",
      "value": "0x2911"
    },
    "10638": {
      "jump": "i",
      "op": "JUMP"
    },
    "10639": {
      "op": "JUMPDEST"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10642": {
      "op": "DUP1"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10645": {
      "op": "DUP4"
    },
    "10646": {
      "op": "GT"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10649": {
      "op": "DUP2"
    },
    "10650": {
      "op": "EQ"
    },
    "10651": {
      "op": "PUSH2",
      "value": "0x29C4"
    },
    "10654": {
      "op": "JUMPI"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10657": {
      "op": "DUP5"
    },
    "10658": {
      "op": "ISZERO"
    },
    "10659": {
      "op": "PUSH2",
      "value": "0x29AC"
    },
    "10662": {
      "op": "JUMPI"
    },
    "10663": {
      "op": "POP"
    },
    "10664": {
      "op": "DUP6"
    },
    "10665": {
      "op": "DUP4"
    },
    "10666": {
      "op": "ADD"
    },
    "10667": {
      "op": "MLOAD"
    },
    "10668": {
      "op": "JUMPDEST"
    },
    "10669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10671": {
      "op": "NOT"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10674": {
      "op": "DUP7"
    },
    "10675": {
      "op": "SWAP1"
    },
    "10676": {
      "op": "SHL"
    },
    "10677": {
      "op": "SHR"
    },
    "10678": {
      "op": "NOT"
    },
    "10679": {
      "op": "AND"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10682": {
      "op": "DUP6"
    },
    "10683": {
      "op": "SWAP1"
    },
    "10684": {
      "op": "SHL"
    },
    "10685": {
      "op": "OR"
    },
    "10686": {
      "op": "DUP6"
    },
    "10687": {
      "op": "SSTORE"
    },
    "10688": {
      "op": "PUSH2",
      "value": "0x2959"
    },
    "10691": {
      "op": "JUMP"
    },
    "10692": {
      "op": "JUMPDEST"
    },
    "10693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10695": {
      "op": "DUP6"
    },
    "10696": {
      "op": "DUP2"
    },
    "10697": {
      "op": "MSTORE"
    },
    "10698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10700": {
      "op": "DUP2"
    },
    "10701": {
      "op": "KECCAK256"
    },
    "10702": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10704": {
      "op": "NOT"
    },
    "10705": {
      "op": "DUP7"
    },
    "10706": {
      "op": "AND"
    },
    "10707": {
      "op": "SWAP2"
    },
    "10708": {
      "op": "JUMPDEST"
    },
    "10709": {
      "op": "DUP3"
    },
    "10710": {
      "op": "DUP2"
    },
    "10711": {
      "op": "LT"
    },
    "10712": {
      "op": "ISZERO"
    },
    "10713": {
      "op": "PUSH2",
      "value": "0x29F3"
    },
    "10716": {
      "op": "JUMPI"
    },
    "10717": {
      "op": "DUP9"
    },
    "10718": {
      "op": "DUP7"
    },
    "10719": {
      "op": "ADD"
    },
    "10720": {
      "op": "MLOAD"
    },
    "10721": {
      "op": "DUP3"
    },
    "10722": {
      "op": "SSTORE"
    },
    "10723": {
      "op": "SWAP5"
    },
    "10724": {
      "op": "DUP5"
    },
    "10725": {
      "op": "ADD"
    },
    "10726": {
      "op": "SWAP5"
    },
    "10727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10729": {
      "op": "SWAP1"
    },
    "10730": {
      "op": "SWAP2"
    },
    "10731": {
      "op": "ADD"
    },
    "10732": {
      "op": "SWAP1"
    },
    "10733": {
      "op": "DUP5"
    },
    "10734": {
      "op": "ADD"
    },
    "10735": {
      "op": "PUSH2",
      "value": "0x29D4"
    },
    "10738": {
      "op": "JUMP"
    },
    "10739": {
      "op": "JUMPDEST"
    },
    "10740": {
      "op": "POP"
    },
    "10741": {
      "op": "DUP6"
    },
    "10742": {
      "op": "DUP3"
    },
    "10743": {
      "op": "LT"
    },
    "10744": {
      "op": "ISZERO"
    },
    "10745": {
      "op": "PUSH2",
      "value": "0x2A11"
    },
    "10748": {
      "op": "JUMPI"
    },
    "10749": {
      "op": "DUP8"
    },
    "10750": {
      "op": "DUP6"
    },
    "10751": {
      "op": "ADD"
    },
    "10752": {
      "op": "MLOAD"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10755": {
      "op": "NOT"
    },
    "10756": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10758": {
      "op": "DUP9"
    },
    "10759": {
      "op": "SWAP1"
    },
    "10760": {
      "op": "SHL"
    },
    "10761": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10763": {
      "op": "AND"
    },
    "10764": {
      "op": "SHR"
    },
    "10765": {
      "op": "NOT"
    },
    "10766": {
      "op": "AND"
    },
    "10767": {
      "op": "DUP2"
    },
    "10768": {
      "op": "SSTORE"
    },
    "10769": {
      "op": "JUMPDEST"
    },
    "10770": {
      "op": "POP"
    },
    "10771": {
      "op": "POP"
    },
    "10772": {
      "op": "POP"
    },
    "10773": {
      "op": "POP"
    },
    "10774": {
      "op": "POP"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10777": {
      "op": "SWAP1"
    },
    "10778": {
      "op": "DUP2"
    },
    "10779": {
      "op": "SHL"
    },
    "10780": {
      "op": "ADD"
    },
    "10781": {
      "op": "SWAP1"
    },
    "10782": {
      "op": "SSTORE"
    },
    "10783": {
      "op": "POP"
    },
    "10784": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d60b0f6f15c18e43447340bb7d3b589a3fe16347",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\n/**\n * @title SmartNodes\n * @dev An ERC20 contract for managing off-chain networks\n */\ncontract SmartnodesCore is ERC20Upgradeable {\n    // Validator multi-sig address\n    ISmartnodesMultiSig private _validatorContractInstance;\n    address public validatorContractAddress;\n\n    // Counters for storage indexing / IDs\n    uint256 public validatorIdCounter;\n    uint256 public userIdCounter;\n    uint256 public jobCounter;\n    uint256 public activeValidators;\n    uint256 public minValidators;\n    uint256 public maxValidators;\n\n    // Events\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(uint256 indexed jobId, address[] seedValidators);\n    event JobCompleted(uint256 indexed jobId);\n    event JobDisputed(uint256 indexed jobId);\n\n    // User data with key information (address, RSA key hash, reputation)\n    struct User {\n        uint256 id;\n        address userAddress;\n        bytes32 publicKeyHash;\n        uint8 reputation;\n    }\n\n    // Validator data with key information (address, RSA key hash, locked value, reputation, activity)\n    struct Validator {\n        uint256 id;\n        address validatorAddress;\n        bytes32 publicKeyHash;\n        uint256 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n    }\n\n    // Information for  a generic off-chain job (job hash [key for kademlia lookup], seed validators, participants, author, etc)\n    struct Job {\n        uint256 id;\n        address author;\n        address[] seedValidators;\n        address[] workers;\n        uint256[] capacities;\n        bool activity;\n    }\n\n    // ERC20 token supply metrics\n    uint256 public constant MAX_SUPPLY = 21_000_000e18;\n    uint256 constant tailEmission = 1e18;\n\n    uint256 public halving = 26_280; // number of state updates until next halving\n    uint256 public emissionRate = 256e18; // amount of tokens to be emitted per state update\n    uint256 public lockAmount = 50_000e18; // minimum validator locked tokens required\n    uint256 public unlockPeriod = 50400;\n    uint256 public timeSinceLastHalving;\n\n    // Main datastructure mappings via id lookup\n    mapping(uint256 => User) public users;\n    mapping(uint256 => Validator) public validators;\n    mapping(uint256 => Job) public jobs;\n\n    // Helpful mappings\n    mapping(address => uint256) public userIdByAddress;\n    mapping(address => uint256) public validatorIdByAddress;\n    mapping(bytes32 => uint256) public jobIdByUserIdHash; // temporary for validator job creation?\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == validatorContractAddress,\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    function initialize(\n        address[] memory _leadDevelopers,\n        address _communityWallet\n    ) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n\n        // Set all counters to 1 (when looking up values, 0 = Not found)\n        userIdCounter = 1;\n        jobCounter = 1;\n        validatorIdCounter = 1;\n\n        // Set ERC20 token parameters\n        emissionRate = 8192e18; // amount of tokens to be emitted per state update\n        lockAmount = 50_000e18; // minimum validator locked tokens required\n        halving = 696;\n        unlockPeriod = 50400; // (seconds)\n        timeSinceLastHalving = 0;\n\n        uint256 devWallets = 2_999_660e18;\n        uint256 communityFunding = 2_000_000e18;\n        uint256 idoAmount = 3_500_000e18;\n        communityFunding += idoAmount; // We are sending the ido amount to the community wallet while we await an initial token sale\n\n        for (uint i = 0; i < _leadDevelopers.length; i++) {\n            _mint(_leadDevelopers[i], devWallets / _leadDevelopers.length);\n        }\n\n        _mint(_communityWallet, communityFunding);\n\n        // Other parameters\n        minValidators = 1;\n        maxValidators = 3;\n    }\n\n    function setValidatorContract(address validatorAddress) external {\n        require(\n            validatorContractAddress == address(0),\n            \"Validator address already set.\"\n        );\n        _validatorContractInstance = ISmartnodesMultiSig(validatorAddress);\n        validatorContractAddress = validatorAddress;\n    }\n\n    /**\n     * @dev Create a User, limit one per address & public key hash (RSA)\n     */\n    function createUser(bytes32 _publicKeyHash) external {\n        // Only one address & public key hash per user.\n        require(userIdByAddress[msg.sender] == 0, \"User already registered.\");\n\n        users[userIdCounter] = User({\n            id: userIdCounter,\n            userAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            reputation: 50\n        });\n\n        userIdByAddress[msg.sender] = userIdCounter;\n        userIdCounter++;\n    }\n\n    /**\n     * @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno\n     */\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already exists.\"\n        );\n\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n\n        // Create validator on SmartnodesCore\n        validators[validatorIdCounter] = Validator({\n            id: validatorIdCounter,\n            validatorAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            locked: lockAmount,\n            unlockTime: 0,\n            reputation: 50\n        });\n\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n\n        // Lock token in contract\n        _lockTokens(msg.sender, lockAmount);\n\n        validatorIdCounter++;\n    }\n\n    // User Job Requesting Via Chainlink VRF TODO\n    function requestJob(\n        bytes32 userIdHash, //temporary for validator job creation?\n        uint256[] calldata _capacities\n    ) external onlyValidatorMultiSig returns (uint256[] memory validatorIds) {\n        // We are temporarily passing user id to allow validators to propose jobs.\n        // Eventually users will have to do this themselves...\n        // uint256 uid = userIdByAddress[msg.sender];\n        // require(uid != 0, \"User not registered.\");\n        require(_capacities[0] > 0, \"Capacity must be greater zero.\");\n        require(\n            jobIdByUserIdHash[userIdHash] == 0,\n            \"User already has active job\"\n        );\n\n        address[] memory _seedValidators = _validatorContractInstance\n            .generateValidatorCandidates();\n        uint256[] memory _validatorIds = new uint256[](_seedValidators.length);\n\n        for (uint256 i = 0; i < _seedValidators.length; i++) {\n            _validatorIds[i] = validatorIdByAddress[_seedValidators[i]];\n        }\n\n        // Store the job in the jobs mapping\n        jobs[jobCounter] = Job({\n            id: jobCounter,\n            author: msg.sender,\n            seedValidators: _seedValidators,\n            workers: new address[](_capacities.length),\n            capacities: _capacities,\n            activity: true\n        });\n        jobIdByUserIdHash[userIdHash] = jobCounter;\n\n        emit JobRequested(jobCounter, _seedValidators);\n        jobCounter++;\n\n        return _validatorIds;\n    }\n\n    function completeJob(\n        uint256 jobId,\n        address[] memory _workers\n    ) external onlyValidatorMultiSig returns (uint256[] memory) {\n        require(_workers.length == jobs[jobId].capacities.length);\n\n        jobs[jobId].workers = _workers;\n        jobs[jobId].activity = false;\n        // jobIdByUserIdHash[userIdHash] = 0;\n\n        emit JobCompleted(jobId);\n\n        return jobs[jobId].capacities;\n    }\n\n    function disputeJob(uint256 jobId) external onlyValidatorMultiSig {\n        Job storage job = jobs[jobId];\n        job.activity = false;\n        emit JobDisputed(jobId);\n    }\n\n    /**\n     * @dev Internal function to lock tokens, callable from other functions\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(sender, address(this), amount);\n        validators[validatorId].locked += amount;\n        uint256 totalLocked = validators[validatorId].locked;\n\n        _validatorContractInstance.updateLockedTokens(\n            sender,\n            totalLocked,\n            totalLocked >= lockAmount\n        );\n\n        emit TokensLocked(sender, amount);\n    }\n\n    /**\n     * @dev Validator token unlocking, 30 day withdrawal period.\n     */\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId > 0, \"Not a registered validator.\");\n\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            uint256 totalLocked = validator.locked - amount;\n            _validatorContractInstance.updateLockedTokens(\n                msg.sender,\n                totalLocked,\n                totalLocked >= lockAmount\n            );\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    /**\n     * @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n     * Updates the emission rate and halving accordingly\n     */\n    function mintTokens(\n        address[] memory _workers,\n        uint256[] memory _workerCapacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted\n    ) external onlyValidatorMultiSig {\n        require(\n            totalSupply() + emissionRate <= MAX_SUPPLY,\n            \"Maximum supply reached!\"\n        );\n\n        if (timeSinceLastHalving >= halving) {\n            if (emissionRate > 1e18) {\n                emissionRate /= 2;\n            }\n        }\n\n        uint256 validatorRewardTotal = (emissionRate * 40) / 100;\n        uint256 workerRewardTotal = (emissionRate * 60) / 100;\n\n        // Distribute rewards for validators equally\n        uint256 validatorReward = validatorRewardTotal /\n            _validatorsVoted.length;\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            _mint(_validatorsVoted[v], validatorReward);\n        }\n\n        // Distribute rewards for workers\n        for (uint256 w = 0; w < _workers.length; w++) {\n            uint256 reward = ((_workerCapacities[w] * workerRewardTotal) /\n                _totalCapacity);\n            _mint(_workers[w], reward);\n        }\n\n        timeSinceLastHalving++;\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobValidators(\n        uint256 jobId\n    ) external view returns (address[] memory) {\n        require(jobId < jobCounter, \"Invalid job ID\");\n        if (jobs[jobId].id == jobId) {\n            address[] memory jobValidators = jobs[jobId].seedValidators;\n            return jobValidators;\n        } else {\n            revert(\"Job not found!\");\n        }\n    }\n\n    function getValidatorInfo(\n        uint256 _validatorId\n    ) external view returns (bool, bytes32) {\n        require(_validatorId < validatorIdCounter, \"Invalid ID.\");\n        Validator storage _validator = validators[_validatorId];\n        bool isActive = _validatorContractInstance.isActiveValidator(\n            _validator.validatorAddress\n        );\n        return (isActive, _validator.publicKeyHash);\n    }\n\n    function getUserCount() external view returns (uint256) {\n        return userIdCounter - 1;\n    }\n\n    function getValidatorCount() external view returns (uint256) {\n        return validatorIdCounter - 1;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return activeValidators;\n    }\n\n    function getEmissionRate() external view returns (uint256) {\n        return emissionRate;\n    }\n\n    function getSupply() external view returns (uint256) {\n        return this.totalSupply();\n    }\n\n    function isLocked(address validatorAddr) external view returns (bool) {\n        uint256 _id = validatorIdByAddress[validatorAddr];\n        return validators[_id].locked >= lockAmount;\n    }\n}\n",
  "sourceMap": "271:13310:24:-:0;;;2076:6;2051:31;;2164:6;2134:36;;2255:9;2227:37;;2344:5;2314:35;;271:13310;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}