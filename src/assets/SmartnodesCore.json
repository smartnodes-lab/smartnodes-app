{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "seedValidators",
          "type": "address[]"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validtor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeJobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "disputeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "getJobValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposees",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "getValidatorBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_genesisNodes",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddr",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activity",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_workerCapacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "userHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        }
      ],
      "name": "requestJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "validatorIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userHashByAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "validatorAddressByHash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "workers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "26": "contracts/SmartnodesCore.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "30": "contracts/interfaces/ISmartnodesMultiSig.sol",
    "4": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5399
      ],
      "ContextUpgradeable": [
        5156
      ],
      "ERC20Upgradeable": [
        3727
      ],
      "IERC20MetadataUpgradeable": [
        5114
      ],
      "IERC20Upgradeable": [
        5089
      ],
      "ISmartnodesMultiSig": [
        2983
      ],
      "Initializable": [
        3804
      ],
      "SmartnodesCore": [
        1194
      ]
    },
    "id": 1195,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 137,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:26"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1195,
        "sourceUnit": 3728,
        "src": "57:78:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1195,
        "sourceUnit": 2984,
        "src": "136:46:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 141,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "298:16:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3727,
              "src": "298:16:26"
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:26"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "184:86:26",
          "text": " @title SmartNodes\n @dev An ERC20 contract for managing off-chain networks"
        },
        "fullyImplemented": true,
        "id": 1194,
        "linearizedBaseContracts": [
          1194,
          3727,
          5114,
          5089,
          5156,
          3804
        ],
        "name": "SmartnodesCore",
        "nameLocation": "280:14:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 145,
            "mutability": "mutable",
            "name": "_validatorContractInstance",
            "nameLocation": "384:26:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "356:54:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 144,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 143,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "356:19:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2983,
                "src": "356:19:26"
              },
              "referencedDeclaration": 2983,
              "src": "356:19:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f79621bd",
            "id": 147,
            "mutability": "mutable",
            "name": "validatorContractAddress",
            "nameLocation": "431:24:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "416:39:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 146,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 149,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "520:18:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "505:33:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 148,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0c37a59",
            "id": 151,
            "mutability": "mutable",
            "name": "userCounter",
            "nameLocation": "559:11:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "544:26:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 153,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "591:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "576:25:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2d49c4b",
            "id": 155,
            "mutability": "mutable",
            "name": "activeValidators",
            "nameLocation": "622:16:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "607:31:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 154,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 157,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "659:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "644:28:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 156,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 159,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "693:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "678:28:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "56891412",
            "id": 161,
            "mutability": "mutable",
            "name": "totalLocked",
            "nameLocation": "727:11:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "712:26:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 160,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "712:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 167,
            "name": "TokensLocked",
            "nameLocation": "765:12:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "794:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "778:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "813:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "805:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:43:26"
            },
            "src": "759:62:26"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 173,
            "name": "UnlockInitiated",
            "nameLocation": "832:15:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "864:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "848:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "883:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "875:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:47:26"
            },
            "src": "826:69:26"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 179,
            "name": "TokensUnlocked",
            "nameLocation": "906:14:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validtor",
                  "nameLocation": "937:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "921:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "955:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "947:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "920:42:26"
            },
            "src": "900:63:26"
          },
          {
            "anonymous": false,
            "eventSelector": "5dd5aff7b55a6d23db5800ae74fafb29f5f00976a85526c852c81900d14cf3e7",
            "id": 188,
            "name": "JobRequested",
            "nameLocation": "974:12:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1012:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "996:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1037:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1029:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seedValidators",
                  "nameLocation": "1066:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1056:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 184,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1056:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 185,
                    "nodeType": "ArrayTypeName",
                    "src": "1056:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:100:26"
            },
            "src": "968:119:26"
          },
          {
            "anonymous": false,
            "eventSelector": "9b5ed714c31dfcb1a9397710b6fc1842f37d94ab5dc0ccb528d9a2c97ea76f2a",
            "id": 194,
            "name": "JobCompleted",
            "nameLocation": "1098:12:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1127:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1111:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1142:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1134:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:42:26"
            },
            "src": "1092:61:26"
          },
          {
            "anonymous": false,
            "eventSelector": "6e04aa702f9af7a9a398f10d27918152df25ac0cdc6d74321b9f7496374387a7",
            "id": 200,
            "name": "JobDisputed",
            "nameLocation": "1164:11:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1192:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "1176:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1207:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "1199:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1175:42:26"
            },
            "src": "1158:60:26"
          },
          {
            "canonicalName": "SmartnodesCore.User",
            "id": 207,
            "members": [
              {
                "constant": false,
                "id": 202,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "1328:11:26",
                "nodeType": "VariableDeclaration",
                "scope": 207,
                "src": "1320:19:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 201,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1320:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 204,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1357:13:26",
                "nodeType": "VariableDeclaration",
                "scope": 207,
                "src": "1349:21:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 203,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1349:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 206,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1386:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 207,
                "src": "1380:16:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 205,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1380:5:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1305:4:26",
            "nodeType": "StructDefinition",
            "scope": 1194,
            "src": "1298:105:26",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 218,
            "members": [
              {
                "constant": false,
                "id": 209,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1547:13:26",
                "nodeType": "VariableDeclaration",
                "scope": 218,
                "src": "1539:21:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 208,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1539:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 211,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "1578:16:26",
                "nodeType": "VariableDeclaration",
                "scope": 218,
                "src": "1570:24:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 210,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1570:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 213,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "1612:6:26",
                "nodeType": "VariableDeclaration",
                "scope": 218,
                "src": "1604:14:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 212,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1604:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 215,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "1636:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 218,
                "src": "1628:18:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 214,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1628:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 217,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1662:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 218,
                "src": "1656:16:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 216,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1656:5:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "1519:9:26",
            "nodeType": "StructDefinition",
            "scope": 1194,
            "src": "1512:167:26",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 232,
            "members": [
              {
                "constant": false,
                "id": 220,
                "mutability": "mutable",
                "name": "author",
                "nameLocation": "1843:6:26",
                "nodeType": "VariableDeclaration",
                "scope": 232,
                "src": "1835:14:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 219,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1835:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 223,
                "mutability": "mutable",
                "name": "seedValidators",
                "nameLocation": "1869:14:26",
                "nodeType": "VariableDeclaration",
                "scope": 232,
                "src": "1859:24:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ArrayTypeName",
                  "src": "1859:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 226,
                "mutability": "mutable",
                "name": "workers",
                "nameLocation": "1903:7:26",
                "nodeType": "VariableDeclaration",
                "scope": 232,
                "src": "1893:17:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 225,
                  "nodeType": "ArrayTypeName",
                  "src": "1893:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 229,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "1930:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 232,
                "src": "1920:20:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 228,
                  "nodeType": "ArrayTypeName",
                  "src": "1920:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 231,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "1955:8:26",
                "nodeType": "VariableDeclaration",
                "scope": 232,
                "src": "1950:13:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 230,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1950:4:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "1821:3:26",
            "nodeType": "StructDefinition",
            "scope": 1194,
            "src": "1814:156:26",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 235,
            "mutability": "constant",
            "name": "TAIL_EMISSION",
            "nameLocation": "2027:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2010:37:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 233,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2010:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32653138",
              "id": 234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2043:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000000000000000_by_1",
                "typeString": "int_const 2000000000000000000"
              },
              "value": "2e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c8df245a",
            "id": 237,
            "mutability": "mutable",
            "name": "halving",
            "nameLocation": "2069:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2054:22:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2054:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 239,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "2155:12:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2140:27:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 238,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2140:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 241,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "2239:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2224:25:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 240,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2224:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 243,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "2314:12:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2299:27:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 242,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2299:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b115f50d",
            "id": 245,
            "mutability": "mutable",
            "name": "timeSinceLastHalving",
            "nameLocation": "2347:20:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2332:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 244,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2332:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cea6ab98",
            "id": 250,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "2455:5:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2423:37:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$207_storage_$",
              "typeString": "mapping(bytes32 => struct SmartnodesCore.User)"
            },
            "typeName": {
              "id": 249,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 246,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2431:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2423:24:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$207_storage_$",
                "typeString": "mapping(bytes32 => struct SmartnodesCore.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 248,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 247,
                  "name": "User",
                  "nameLocations": [
                    "2442:4:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 207,
                  "src": "2442:4:26"
                },
                "referencedDeclaration": 207,
                "src": "2442:4:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$207_storage_ptr",
                  "typeString": "struct SmartnodesCore.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d3eece97",
            "id": 254,
            "mutability": "mutable",
            "name": "workers",
            "nameLocation": "2501:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2466:42:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 253,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 251,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2474:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2466:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 252,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2485:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38e56261",
            "id": 258,
            "mutability": "mutable",
            "name": "validatorAddressByHash",
            "nameLocation": "2549:22:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2514:57:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 257,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 255,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2522:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2514:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 256,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2533:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 263,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "2614:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2577:47:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 262,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 259,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2585:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2577:29:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 261,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 260,
                  "name": "Validator",
                  "nameLocations": [
                    "2596:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 218,
                  "src": "2596:9:26"
                },
                "referencedDeclaration": 218,
                "src": "2596:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38ed7cfc",
            "id": 268,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "2661:4:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2630:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
              "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 267,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 264,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2638:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2630:23:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 266,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 265,
                  "name": "Job",
                  "nameLocations": [
                    "2649:3:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 232,
                  "src": "2649:3:26"
                },
                "referencedDeclaration": 232,
                "src": "2649:3:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$232_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21b0908b",
            "id": 271,
            "mutability": "mutable",
            "name": "activeJobs",
            "nameLocation": "2688:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2671:27:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 269,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2671:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 270,
              "nodeType": "ArrayTypeName",
              "src": "2671:9:26",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d057fc19",
            "id": 275,
            "mutability": "mutable",
            "name": "userHashByAddress",
            "nameLocation": "2764:17:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2729:52:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 274,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 272,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2737:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2729:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 273,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2748:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 279,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "2822:20:26",
            "nodeType": "VariableDeclaration",
            "scope": 1194,
            "src": "2787:55:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 278,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 276,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2795:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2787:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 277,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2806:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "2882:151:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2913:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2917:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2913:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 284,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2927:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2913:38:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2965:40:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2892:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:123:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:123:26"
                },
                {
                  "id": 289,
                  "nodeType": "PlaceholderStatement",
                  "src": "3025:1:26"
                }
              ]
            },
            "id": 291,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "2858:21:26",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2879:2:26"
            },
            "src": "2849:184:26",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "3110:762:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3133:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3147:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 299,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3161,
                      "src": "3120:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:33:26"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3237:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3251:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3237:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:15:26"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 308,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "3262:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3275:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3262:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "3262:14:26"
                },
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 312,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "3286:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3307:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3286:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:22:26"
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 316,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "3357:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "323536653138",
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3372:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256000000000000000000_by_1",
                        "typeString": "int_const 256000000000000000000"
                      },
                      "value": "256e18"
                    },
                    "src": "3357:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3357:21:26"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 320,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 241,
                      "src": "3439:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130305f303030653138",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3452:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      },
                      "value": "100_000e18"
                    },
                    "src": "3439:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3439:23:26"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 324,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "3516:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3532343532323232",
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3526:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_52452222_by_1",
                        "typeString": "int_const 52452222"
                      },
                      "value": "52452222"
                    },
                    "src": "3516:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3516:18:26"
                },
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 328,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "3593:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "315f3230395f363030",
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3608:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1209600_by_1",
                        "typeString": "int_const 1209600"
                      },
                      "value": "1_209_600"
                    },
                    "src": "3593:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:24:26"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 332,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3640:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3663:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3640:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:24:26"
                },
                {
                  "body": {
                    "id": 354,
                    "nodeType": "Block",
                    "src": "3723:60:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 348,
                                "name": "_genesisNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 294,
                                "src": "3743:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 350,
                              "indexExpression": {
                                "id": 349,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 337,
                                "src": "3757:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3743:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 351,
                              "name": "lockAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "3761:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 347,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3539,
                            "src": "3737:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3737:35:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 353,
                        "nodeType": "ExpressionStatement",
                        "src": "3737:35:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 340,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "3692:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 341,
                        "name": "_genesisNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3696:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3710:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3696:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3692:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 355,
                  "initializationExpression": {
                    "assignments": [
                      337
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3685:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "3680:6:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3680:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 339,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3689:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3680:10:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3718:3:26",
                      "subExpression": {
                        "id": 344,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "3718:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 346,
                    "nodeType": "ExpressionStatement",
                    "src": "3718:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "3675:108:26"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 356,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3821:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3837:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3821:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:17:26"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 360,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "3848:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3864:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "3848:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:17:26"
                }
              ]
            },
            "functionSelector": "a224cee7",
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "initializer",
                  "nameLocations": [
                    "3098:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3778,
                  "src": "3098:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3098:11:26"
              }
            ],
            "name": "initialize",
            "nameLocation": "3048:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_genesisNodes",
                  "nameLocation": "3076:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "3059:30:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 292,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3059:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 293,
                    "nodeType": "ArrayTypeName",
                    "src": "3059:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3058:32:26"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:26"
            },
            "scope": 1194,
            "src": "3039:833:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "3943:261:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 371,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "3974:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4010:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4002:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 372,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4002:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4002:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3974:38:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4026:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3953:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3953:115:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "3953:115:26"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 380,
                      "name": "_validatorContractInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4078:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 382,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "4127:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 381,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2983,
                        "src": "4107:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$2983_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4107:37:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "4078:66:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "4078:66:26"
                },
                {
                  "expression": {
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 386,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "4154:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 387,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "4181:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4154:43:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "4154:43:26"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "3887:20:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "3916:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "3908:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3908:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3907:26:26"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3943:0:26"
            },
            "scope": 1194,
            "src": "3878:326:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "4350:426:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 398,
                            "name": "userHashByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "4437:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 401,
                          "indexExpression": {
                            "expression": {
                              "id": 399,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4455:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4459:6:26",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4455:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4437:29:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4478:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4470:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 402,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4470:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4470:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4437:43:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4494:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4416:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:114:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:114:26"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 410,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "4541:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$207_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.User storage ref)"
                        }
                      },
                      "id": 412,
                      "indexExpression": {
                        "id": 411,
                        "name": "_publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "4547:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4541:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$207_storage",
                        "typeString": "struct SmartnodesCore.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 414,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4597:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4601:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4597:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 416,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "4636:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3530",
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4676:2:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 413,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "4565:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$207_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.User storage pointer)"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4584:11:26",
                        "4621:13:26",
                        "4664:10:26"
                      ],
                      "names": [
                        "userAddress",
                        "publicKeyHash",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4565:124:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$207_memory_ptr",
                        "typeString": "struct SmartnodesCore.User memory"
                      }
                    },
                    "src": "4541:148:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$207_storage",
                      "typeString": "struct SmartnodesCore.User storage ref"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:148:26"
                },
                {
                  "expression": {
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 421,
                        "name": "userHashByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "4700:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 424,
                      "indexExpression": {
                        "expression": {
                          "id": 422,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4718:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4722:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4718:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4700:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 425,
                      "name": "_publicKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "4732:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4700:46:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "4700:46:26"
                },
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4756:13:26",
                    "subExpression": {
                      "id": 428,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "4756:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "4756:13:26"
                }
              ]
            },
            "documentation": {
              "id": 392,
              "nodeType": "StructuredDocumentation",
              "src": "4210:84:26",
              "text": " @dev Create a User, limit one per address & public key hash (RSA)"
            },
            "functionSelector": "abf7bfd8",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "4308:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4327:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "4319:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4319:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4318:24:26"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4350:0:26"
            },
            "scope": 1194,
            "src": "4299:477:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "5002:795:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 441,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5033:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 444,
                          "indexExpression": {
                            "expression": {
                              "id": 442,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5054:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5058:6:26",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5054:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5033:32:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5069:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5033:37:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206578697374732e",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5084:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        },
                        "value": "Validator already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        }
                      ],
                      "id": 440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5012:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:109:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:109:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 452,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5163:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5167:6:26",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5163:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 451,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3233,
                              "src": "5153:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5153:21:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 455,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "5178:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5153:36:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 457,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "5193:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 458,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "5208:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5193:25:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5153:65:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5232:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5132:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:139:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:139:26"
                },
                {
                  "expression": {
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 464,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "5328:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 466,
                      "indexExpression": {
                        "id": 465,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "5339:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5328:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$218_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 468,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "5400:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 469,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5446:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5450:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5446:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 471,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "5478:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5514:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5541:2:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 467,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "5361:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$218_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5385:13:26",
                        "5428:16:26",
                        "5470:6:26",
                        "5502:10:26",
                        "5529:10:26"
                      ],
                      "names": [
                        "publicKeyHash",
                        "validatorAddress",
                        "locked",
                        "unlockTime",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5361:193:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$218_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "5328:226:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$218_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "5328:226:26"
                },
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 477,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5565:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 480,
                      "indexExpression": {
                        "expression": {
                          "id": 478,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5586:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5590:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5586:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5565:32:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 481,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "5600:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5565:53:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "5565:53:26"
                },
                {
                  "expression": {
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 484,
                        "name": "validatorAddressByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "5628:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 486,
                      "indexExpression": {
                        "id": 485,
                        "name": "_publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "5651:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5628:38:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 487,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5669:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5673:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5669:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5628:51:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "5628:51:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 492,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5736:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5740:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5736:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 494,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "5748:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 491,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "5724:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5724:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "5724:35:26"
                },
                {
                  "expression": {
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5770:20:26",
                    "subExpression": {
                      "id": 497,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "5770:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "5770:20:26"
                }
              ]
            },
            "documentation": {
              "id": 433,
              "nodeType": "StructuredDocumentation",
              "src": "4782:114:26",
              "text": " @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
            },
            "functionSelector": "497dfe63",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "4910:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4943:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "4935:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4935:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "4975:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "4967:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4967:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4925:67:26"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5002:0:26"
            },
            "scope": 1194,
            "src": "4901:896:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "6019:1298:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 514,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6119:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6123:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6119:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 516,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "6133:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6119:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 541,
                  "nodeType": "IfStatement",
                  "src": "6115:228:26",
                  "trueBody": {
                    "id": 540,
                    "nodeType": "Block",
                    "src": "6159:184:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 518,
                              "name": "userHashByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "6177:17:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                "typeString": "mapping(address => bytes32)"
                              }
                            },
                            "id": 521,
                            "indexExpression": {
                              "expression": {
                                "id": 519,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6195:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6199:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6195:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6177:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6218:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6210:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 522,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "6210:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6210:10:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6177:43:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 539,
                        "nodeType": "IfStatement",
                        "src": "6173:160:26",
                        "trueBody": {
                          "id": 538,
                          "nodeType": "Block",
                          "src": "6222:111:26",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 528,
                                    "name": "userHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 503,
                                    "src": "6251:8:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 527,
                                  "name": "createUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 432,
                                  "src": "6240:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6240:20:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 530,
                              "nodeType": "ExpressionStatement",
                              "src": "6240:20:26"
                            },
                            {
                              "expression": {
                                "id": 536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 531,
                                  "name": "userHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "6278:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 532,
                                    "name": "userHashByAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 275,
                                    "src": "6289:17:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                      "typeString": "mapping(address => bytes32)"
                                    }
                                  },
                                  "id": 535,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 533,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6307:3:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 534,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6311:6:26",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6307:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6289:29:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "6278:40:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 537,
                              "nodeType": "ExpressionStatement",
                              "src": "6278:40:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 543,
                          "name": "userHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "6361:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6381:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6373:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 544,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6373:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6373:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6361:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f74207265676973746572656421",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6385:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2662cfe69e59afcc0e4be6b0ffe6f1fda50fc8b79c94ddf5a5c98e71a845f489",
                          "typeString": "literal_string \"User not registered!\""
                        },
                        "value": "User not registered!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2662cfe69e59afcc0e4be6b0ffe6f1fda50fc8b79c94ddf5a5c98e71a845f489",
                          "typeString": "literal_string \"User not registered!\""
                        }
                      ],
                      "id": 542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6353:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6353:55:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "6353:55:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 553,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "6426:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                                "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                              }
                            },
                            "id": 555,
                            "indexExpression": {
                              "id": 554,
                              "name": "jobHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 505,
                              "src": "6431:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6426:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$232_storage",
                              "typeString": "struct SmartnodesCore.Job storage ref"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6440:6:26",
                          "memberName": "author",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 220,
                          "src": "6426:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6458:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6450:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 557,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6450:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6450:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6426:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f6220616c726561647920637265617465642e",
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6462:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42ad34d022cd5c2f061afe8c5fe6f6360c9e039f0bd4289af315d9f5963f4f28",
                          "typeString": "literal_string \"Job already created.\""
                        },
                        "value": "Job already created."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42ad34d022cd5c2f061afe8c5fe6f6360c9e039f0bd4289af315d9f5963f4f28",
                          "typeString": "literal_string \"Job already created.\""
                        }
                      ],
                      "id": 552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6418:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:67:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "6418:67:26"
                },
                {
                  "assignments": [
                    569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 569,
                      "mutability": "mutable",
                      "name": "_seedValidators",
                      "nameLocation": "6587:15:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "6570:32:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6570:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 568,
                        "nodeType": "ArrayTypeName",
                        "src": "6570:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 574,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6664:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 570,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "6605:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6645:18:26",
                      "memberName": "generateValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2906,
                      "src": "6605:58:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (address[] memory)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6605:61:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6570:96:26"
                },
                {
                  "assignments": [
                    579
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 579,
                      "mutability": "mutable",
                      "name": "_validatorIds",
                      "nameLocation": "6693:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "6676:30:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 577,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6676:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 578,
                        "nodeType": "ArrayTypeName",
                        "src": "6676:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 585,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6723:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6709:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 580,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6713:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 581,
                        "nodeType": "ArrayTypeName",
                        "src": "6713:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6709:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6676:49:26"
                },
                {
                  "body": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "6818:84:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 597,
                              "name": "_validatorIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "6832:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 599,
                            "indexExpression": {
                              "id": 598,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "6846:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6832:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 600,
                              "name": "validatorIdByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "6851:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 604,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 601,
                                "name": "_seedValidators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "6872:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 603,
                              "indexExpression": {
                                "id": 602,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "6888:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6872:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6851:40:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6832:59:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "6832:59:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 590,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "6785:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 591,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "6789:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6805:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6789:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6785:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 608,
                  "initializationExpression": {
                    "assignments": [
                      587
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6778:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "6770:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6770:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 589,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6782:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6770:13:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6813:3:26",
                      "subExpression": {
                        "id": 594,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "6813:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 596,
                    "nodeType": "ExpressionStatement",
                    "src": "6813:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "6765:137:26"
                },
                {
                  "expression": {
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 609,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "6957:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 611,
                      "indexExpression": {
                        "id": 610,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "6962:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6957:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$232_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 613,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6999:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7003:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6999:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 615,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 569,
                          "src": "7039:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 619,
                                "name": "_capacities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "7091:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7103:6:26",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7091:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7077:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 616,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7081:7:26",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 617,
                              "nodeType": "ArrayTypeName",
                              "src": "7081:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7077:33:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 622,
                          "name": "_capacities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 508,
                          "src": "7136:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7171:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 612,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "6973:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$232_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Job storage pointer)"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "6991:6:26",
                        "7023:14:26",
                        "7068:7:26",
                        "7124:10:26",
                        "7161:8:26"
                      ],
                      "names": [
                        "author",
                        "seedValidators",
                        "workers",
                        "capacities",
                        "activity"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6973:213:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$232_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "src": "6957:229:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$232_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "6957:229:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 628,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "7215:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 629,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7224:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7230:9:26",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7224:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 631,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "7241:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 627,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "7202:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,address[] memory)"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7202:55:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "EmitStatement",
                  "src": "7197:60:26"
                },
                {
                  "expression": {
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7267:12:26",
                    "subExpression": {
                      "id": 634,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "7267:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "7267:12:26"
                },
                {
                  "expression": {
                    "id": 637,
                    "name": "_validatorIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 579,
                    "src": "7297:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 513,
                  "id": 638,
                  "nodeType": "Return",
                  "src": "7290:20:26"
                }
              ]
            },
            "functionSelector": "1d4e7793",
            "id": 640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "5862:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "userHash",
                  "nameLocation": "5890:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "5882:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5882:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "5916:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "5908:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5908:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "5952:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "5933:30:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 506,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5933:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 507,
                    "nodeType": "ArrayTypeName",
                    "src": "5933:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5872:97:26"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "validatorIds",
                  "nameLocation": "6005:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "5988:29:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 510,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5988:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 511,
                    "nodeType": "ArrayTypeName",
                    "src": "5988:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5987:31:26"
            },
            "scope": 1194,
            "src": "5853:1464:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 689,
              "nodeType": "Block",
              "src": "7468:299:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 654,
                            "name": "_workers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "7486:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7495:6:26",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7486:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 656,
                                "name": "jobs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "7505:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                                  "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                                }
                              },
                              "id": 658,
                              "indexExpression": {
                                "id": 657,
                                "name": "jobHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 642,
                                "src": "7510:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7505:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$232_storage",
                                "typeString": "struct SmartnodesCore.Job storage ref"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7519:10:26",
                            "memberName": "capacities",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 229,
                            "src": "7505:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7530:6:26",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7505:31:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7486:50:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7478:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7478:59:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "7478:59:26"
                },
                {
                  "expression": {
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 664,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "7548:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                            "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 666,
                        "indexExpression": {
                          "id": 665,
                          "name": "jobHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "7553:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7548:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$232_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7562:7:26",
                      "memberName": "workers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 226,
                      "src": "7548:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 668,
                      "name": "_workers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "7572:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "7548:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "7548:32:26"
                },
                {
                  "expression": {
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 671,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "7590:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                            "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 673,
                        "indexExpression": {
                          "id": 672,
                          "name": "jobHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "7595:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7590:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$232_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7604:8:26",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 231,
                      "src": "7590:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7615:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7590:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "7590:30:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 679,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "7693:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 680,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7702:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7708:9:26",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7702:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 678,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "7680:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7680:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 683,
                  "nodeType": "EmitStatement",
                  "src": "7675:43:26"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 684,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "7736:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 686,
                      "indexExpression": {
                        "id": 685,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "7741:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7736:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$232_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7750:10:26",
                    "memberName": "capacities",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 229,
                    "src": "7736:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 652,
                  "id": 688,
                  "nodeType": "Return",
                  "src": "7729:31:26"
                }
              ]
            },
            "functionSelector": "43a8d914",
            "id": 690,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 647,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7419:21:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "7419:21:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "7419:21:26"
              }
            ],
            "name": "completeJob",
            "nameLocation": "7332:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "7361:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "7353:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7353:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "7395:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "7378:25:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 643,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7378:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 644,
                    "nodeType": "ArrayTypeName",
                    "src": "7378:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7343:66:26"
            },
            "returnParameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "7450:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 649,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7450:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 650,
                    "nodeType": "ArrayTypeName",
                    "src": "7450:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7449:18:26"
            },
            "scope": 1194,
            "src": "7323:444:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "7841:130:26",
              "statements": [
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "7863:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 716,
                      "src": "7851:15:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$232_storage_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 698,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 697,
                          "name": "Job",
                          "nameLocations": [
                            "7851:3:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 232,
                          "src": "7851:3:26"
                        },
                        "referencedDeclaration": 232,
                        "src": "7851:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$232_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 703,
                  "initialValue": {
                    "baseExpression": {
                      "id": 700,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "7869:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                        "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 702,
                    "indexExpression": {
                      "id": 701,
                      "name": "jobHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "7874:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7869:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$232_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7851:31:26"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 704,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "7892:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$232_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job storage pointer"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7896:8:26",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 231,
                      "src": "7892:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7907:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7892:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "7892:20:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 711,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "7939:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 712,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7948:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7954:9:26",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7948:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 710,
                      "name": "JobDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "7927:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7927:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 715,
                  "nodeType": "EmitStatement",
                  "src": "7922:42:26"
                }
              ]
            },
            "functionSelector": "ba3f5443",
            "id": 717,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 695,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 694,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7819:21:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "7819:21:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "7819:21:26"
              }
            ],
            "name": "disputeJob",
            "nameLocation": "7782:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "7801:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 717,
                  "src": "7793:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7793:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7792:17:26"
            },
            "returnParameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7841:0:26"
            },
            "scope": 1194,
            "src": "7773:198:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "8131:517:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 726,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "8149:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8158:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8149:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8161:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8141:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8141:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "8141:56:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 734,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "8225:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 733,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3233,
                            "src": "8215:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8215:17:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 736,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "8236:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8215:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8244:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8207:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8207:61:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "8207:61:26"
                },
                {
                  "assignments": [
                    742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 742,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "8287:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 786,
                      "src": "8279:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8279:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 746,
                  "initialValue": {
                    "baseExpression": {
                      "id": 743,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "8301:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 745,
                    "indexExpression": {
                      "id": 744,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "8322:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8301:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8279:50:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 748,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "8347:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8362:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8347:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8365:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8339:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8339:54:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8339:54:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 755,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "8417:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 758,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8433:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1194",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1194",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8425:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 756,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8425:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8425:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 760,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "8440:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 754,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3334,
                      "src": "8404:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8404:43:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "8404:43:26"
                },
                {
                  "expression": {
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 763,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "8457:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 765,
                        "indexExpression": {
                          "id": 764,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "8468:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8457:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$218_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8481:6:26",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 213,
                      "src": "8457:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 767,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "8491:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8457:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "8457:40:26"
                },
                {
                  "assignments": [
                    771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 771,
                      "mutability": "mutable",
                      "name": "_totalLocked",
                      "nameLocation": "8515:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 786,
                      "src": "8507:20:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 770,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8507:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 772,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "8530:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 774,
                      "indexExpression": {
                        "id": 773,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "8541:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8530:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$218_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8554:6:26",
                    "memberName": "locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 213,
                    "src": "8530:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8507:53:26"
                },
                {
                  "expression": {
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 777,
                      "name": "totalLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "8570:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 778,
                      "name": "_totalLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "8585:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8570:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "8570:27:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 782,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "8626:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 783,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "8634:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 781,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "8613:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8613:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 785,
                  "nodeType": "EmitStatement",
                  "src": "8608:33:26"
                }
              ]
            },
            "documentation": {
              "id": 718,
              "nodeType": "StructuredDocumentation",
              "src": "7977:87:26",
              "text": " @dev Internal function to lock tokens, callable from other functions"
            },
            "id": 787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "8078:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8098:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "8090:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8090:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8114:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "8106:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8106:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8089:32:26"
            },
            "returnParameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8131:0:26"
            },
            "scope": 1194,
            "src": "8069:579:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "8780:48:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 794,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8802:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8806:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8802:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 796,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "8814:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 793,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "8790:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8790:31:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "8790:31:26"
                }
              ]
            },
            "documentation": {
              "id": 788,
              "nodeType": "StructuredDocumentation",
              "src": "8654:76:26",
              "text": " @dev Validator token unlocking, 30 day withdrawal period."
            },
            "functionSelector": "6e27d889",
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "8744:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8763:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "8755:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8755:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8754:16:26"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8780:0:26"
            },
            "scope": 1194,
            "src": "8735:93:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "8881:1258:26",
              "statements": [
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "8899:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 895,
                      "src": "8891:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8891:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "baseExpression": {
                      "id": 807,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "8913:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 810,
                    "indexExpression": {
                      "expression": {
                        "id": 808,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8934:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8938:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8934:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8913:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8891:54:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 813,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "8963:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8977:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8963:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120726567697374657265642076616c696461746f722e",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8980:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        },
                        "value": "Not a registered validator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        }
                      ],
                      "id": 812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8955:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8955:55:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "8955:55:26"
                },
                {
                  "assignments": [
                    821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 821,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "9039:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 895,
                      "src": "9021:27:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 820,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 819,
                          "name": "Validator",
                          "nameLocations": [
                            "9021:9:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 218,
                          "src": "9021:9:26"
                        },
                        "referencedDeclaration": 218,
                        "src": "9021:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 825,
                  "initialValue": {
                    "baseExpression": {
                      "id": 822,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "9051:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 824,
                    "indexExpression": {
                      "id": 823,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 806,
                      "src": "9062:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9051:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$218_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9021:53:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 827,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "9093:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 828,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 821,
                            "src": "9103:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9113:6:26",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 213,
                          "src": "9103:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9093:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9121:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9085:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9085:69:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:69:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 835,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "9172:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9181:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9172:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9184:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9164:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9164:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "9164:56:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 841,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "9306:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9316:10:26",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 215,
                      "src": "9306:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9330:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9306:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 893,
                    "nodeType": "Block",
                    "src": "9675:458:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 867,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9792:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9798:9:26",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9792:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 869,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 821,
                                  "src": "9811:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 870,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9821:10:26",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 215,
                                "src": "9811:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9792:39:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9849:26:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 866,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9767:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9767:122:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 874,
                        "nodeType": "ExpressionStatement",
                        "src": "9767:122:26"
                      },
                      {
                        "expression": {
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 875,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "9904:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 877,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9914:6:26",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 213,
                            "src": "9904:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 878,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "9924:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9904:26:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "9904:26:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 882,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9950:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9954:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9950:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 884,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "9962:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 881,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3539,
                            "src": "9944:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9944:25:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 886,
                        "nodeType": "ExpressionStatement",
                        "src": "9944:25:26"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 888,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10051:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10055:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10051:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 890,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "10063:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 887,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "10036:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10036:34:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 892,
                        "nodeType": "EmitStatement",
                        "src": "10031:39:26"
                      }
                    ]
                  },
                  "id": 894,
                  "nodeType": "IfStatement",
                  "src": "9302:831:26",
                  "trueBody": {
                    "id": 865,
                    "nodeType": "Block",
                    "src": "9333:336:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 845,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "9347:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9357:10:26",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 215,
                            "src": "9347:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 848,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9370:5:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9376:9:26",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9370:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 850,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "9388:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9370:30:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9347:53:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 853,
                        "nodeType": "ExpressionStatement",
                        "src": "9347:53:26"
                      },
                      {
                        "expression": {
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 854,
                            "name": "totalLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "9541:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 855,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "9556:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9541:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 857,
                        "nodeType": "ExpressionStatement",
                        "src": "9541:21:26"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 859,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9598:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9602:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9598:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 861,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 821,
                                "src": "9610:9:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9620:10:26",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 215,
                              "src": "9610:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 858,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "9582:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9582:49:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 864,
                        "nodeType": "EmitStatement",
                        "src": "9577:54:26"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "8843:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8864:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "8856:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8856:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8855:16:26"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8881:0:26"
            },
            "scope": 1194,
            "src": "8834:1305:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1007,
              "nodeType": "Block",
              "src": "10527:861:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 913,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "10541:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 914,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "10565:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10541:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 926,
                  "nodeType": "IfStatement",
                  "src": "10537:145:26",
                  "trueBody": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "10574:108:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 916,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "10592:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 917,
                            "name": "TAIL_EMISSION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "10607:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10592:28:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 924,
                        "nodeType": "IfStatement",
                        "src": "10588:84:26",
                        "trueBody": {
                          "id": 923,
                          "nodeType": "Block",
                          "src": "10622:50:26",
                          "statements": [
                            {
                              "expression": {
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 919,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 239,
                                  "src": "10640:12:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10656:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "10640:17:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 922,
                              "nodeType": "ExpressionStatement",
                              "src": "10640:17:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 928,
                      "mutability": "mutable",
                      "name": "validatorRewardTotal",
                      "nameLocation": "10700:20:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1007,
                      "src": "10692:28:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10692:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 935,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 929,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "10724:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10739:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "10724:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 932,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10723:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10745:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10723:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10692:56:26"
                },
                {
                  "assignments": [
                    937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 937,
                      "mutability": "mutable",
                      "name": "workerRewardTotal",
                      "nameLocation": "10766:17:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1007,
                      "src": "10758:25:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 936,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10758:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 944,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 938,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "10787:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3830",
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10802:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_80_by_1",
                              "typeString": "int_const 80"
                            },
                            "value": "80"
                          },
                          "src": "10787:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 941,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10786:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10808:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10786:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10758:53:26"
                },
                {
                  "assignments": [
                    946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 946,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "10883:15:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1007,
                      "src": "10875:23:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 945,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10875:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 951,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 947,
                      "name": "validatorRewardTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "10901:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 948,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "10936:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10953:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10936:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10901:58:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10875:84:26"
                },
                {
                  "body": {
                    "id": 970,
                    "nodeType": "Block",
                    "src": "11024:68:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 964,
                                "name": "_validatorsVoted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 908,
                                "src": "11044:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 966,
                              "indexExpression": {
                                "id": 965,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 953,
                                "src": "11061:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11044:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 967,
                              "name": "validatorReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "11065:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 963,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3539,
                            "src": "11038:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11038:43:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 969,
                        "nodeType": "ExpressionStatement",
                        "src": "11038:43:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 956,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "10990:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 957,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "10994:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11011:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10994:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10990:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 971,
                  "initializationExpression": {
                    "assignments": [
                      953
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 953,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "10983:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 971,
                        "src": "10975:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 952,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10975:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 955,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10987:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10975:13:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11019:3:26",
                      "subExpression": {
                        "id": 960,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "11019:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 962,
                    "nodeType": "ExpressionStatement",
                    "src": "11019:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "10970:122:26"
                },
                {
                  "body": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "11190:159:26",
                    "statements": [
                      {
                        "assignments": [
                          984
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 984,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "11212:6:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 1002,
                            "src": "11204:14:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 983,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11204:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 994,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 985,
                                        "name": "_workerCapacities",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 903,
                                        "src": "11223:17:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 987,
                                      "indexExpression": {
                                        "id": 986,
                                        "name": "w",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 973,
                                        "src": "11241:1:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11223:20:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 988,
                                      "name": "workerRewardTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 937,
                                      "src": "11246:17:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11223:40:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 990,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11222:42:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 991,
                                "name": "_totalCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 905,
                                "src": "11283:14:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11222:75:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 993,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11221:77:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11204:94:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 996,
                                "name": "_workers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 900,
                                "src": "11318:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 998,
                              "indexExpression": {
                                "id": 997,
                                "name": "w",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 973,
                                "src": "11327:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11318:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 999,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "11331:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 995,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3539,
                            "src": "11312:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11312:26:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1001,
                        "nodeType": "ExpressionStatement",
                        "src": "11312:26:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 976,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "11164:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 977,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "11168:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11177:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11168:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11164:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "initializationExpression": {
                    "assignments": [
                      973
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "w",
                        "nameLocation": "11157:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "11149:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11149:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 975,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11161:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11149:13:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11185:3:26",
                      "subExpression": {
                        "id": 980,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "11185:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 982,
                    "nodeType": "ExpressionStatement",
                    "src": "11185:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "11144:205:26"
                },
                {
                  "expression": {
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11359:22:26",
                    "subExpression": {
                      "id": 1004,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "11359:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "11359:22:26"
                }
              ]
            },
            "documentation": {
              "id": 897,
              "nodeType": "StructuredDocumentation",
              "src": "10145:166:26",
              "text": " @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n Updates the emission rate and halving accordingly"
            },
            "functionSelector": "a3273d22",
            "id": 1008,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 911,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 910,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "10505:21:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "10505:21:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "10505:21:26"
              }
            ],
            "name": "mintTokens",
            "nameLocation": "10325:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "10362:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "10345:25:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 898,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10345:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 899,
                    "nodeType": "ArrayTypeName",
                    "src": "10345:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_workerCapacities",
                  "nameLocation": "10397:17:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "10380:34:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 901,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10380:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 902,
                    "nodeType": "ArrayTypeName",
                    "src": "10380:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "10432:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "10424:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10424:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "10473:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "10456:33:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 906,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10456:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 907,
                    "nodeType": "ArrayTypeName",
                    "src": "10456:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10335:160:26"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10527:0:26"
            },
            "scope": 1194,
            "src": "10316:1072:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1028,
              "nodeType": "Block",
              "src": "11563:108:26",
              "statements": [
                {
                  "assignments": [
                    1020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1020,
                      "mutability": "mutable",
                      "name": "jobValidators",
                      "nameLocation": "11590:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1028,
                      "src": "11573:30:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11573:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1019,
                        "nodeType": "ArrayTypeName",
                        "src": "11573:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1025,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1021,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "11606:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$232_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 1023,
                      "indexExpression": {
                        "id": 1022,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "11611:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11606:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$232_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11620:14:26",
                    "memberName": "seedValidators",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 223,
                    "src": "11606:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11573:61:26"
                },
                {
                  "expression": {
                    "id": 1026,
                    "name": "jobValidators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1020,
                    "src": "11651:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1015,
                  "id": 1027,
                  "nodeType": "Return",
                  "src": "11644:20:26"
                }
              ]
            },
            "functionSelector": "bc1d82a1",
            "id": 1029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobValidators",
            "nameLocation": "11474:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "11508:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1029,
                  "src": "11500:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11500:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11490:31:26"
            },
            "returnParameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1029,
                  "src": "11545:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1012,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11545:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1013,
                    "nodeType": "ArrayTypeName",
                    "src": "11545:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11544:18:26"
            },
            "scope": 1194,
            "src": "11465:206:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1069,
              "nodeType": "Block",
              "src": "11786:387:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1041,
                          "name": "_validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1031,
                          "src": "11804:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1042,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "11819:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11804:33:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642049442e",
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11839:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        },
                        "value": "Invalid ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        }
                      ],
                      "id": 1040,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11796:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11796:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "11796:57:26"
                },
                {
                  "assignments": [
                    1049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1049,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "11880:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1069,
                      "src": "11863:27:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$218_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 1048,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1047,
                          "name": "Validator",
                          "nameLocations": [
                            "11863:9:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 218,
                          "src": "11863:9:26"
                        },
                        "referencedDeclaration": 218,
                        "src": "11863:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$218_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1053,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1050,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "11893:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 1052,
                    "indexExpression": {
                      "id": 1051,
                      "name": "_validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "11904:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11893:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$218_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11863:54:26"
                },
                {
                  "assignments": [
                    1055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1055,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "11932:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1069,
                      "src": "11927:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1054,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11927:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1061,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1058,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "12001:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$218_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12012:16:26",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 211,
                        "src": "12001:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1056,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "11943:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11970:17:26",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2913,
                      "src": "11943:44:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11943:95:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11927:111:26"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1062,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "12069:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1063,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "12091:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$218_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12102:13:26",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "12091:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1065,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "12129:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$218_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12140:16:26",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 211,
                        "src": "12129:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1067,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12055:111:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(bool,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 1039,
                  "id": 1068,
                  "nodeType": "Return",
                  "src": "12048:118:26"
                }
              ]
            },
            "functionSelector": "b7797537",
            "id": 1070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "11686:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "_validatorId",
                  "nameLocation": "11720:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "11712:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11712:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11702:36:26"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "11762:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11762:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "11768:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11768:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "11777:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11777:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11761:24:26"
            },
            "scope": 1194,
            "src": "11677:496:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "12278:195:26",
              "statements": [
                {
                  "assignments": [
                    1078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1078,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "12296:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "12288:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1077,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12288:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1082,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1079,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "12310:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1081,
                    "indexExpression": {
                      "id": 1080,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1072,
                      "src": "12331:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12310:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12288:60:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1084,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "12366:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12380:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12366:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12383:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 1083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12358:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12358:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "12358:53:26"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1090,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "12429:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 1092,
                      "indexExpression": {
                        "id": 1091,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "12440:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12429:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$218_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12453:13:26",
                    "memberName": "publicKeyHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 209,
                    "src": "12429:37:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1076,
                  "id": 1094,
                  "nodeType": "Return",
                  "src": "12422:44:26"
                }
              ]
            },
            "functionSelector": "62fb00fc",
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorBytes",
            "nameLocation": "12188:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "12223:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "12215:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12215:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12205:40:26"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "12269:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12269:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12268:9:26"
            },
            "scope": 1194,
            "src": "12179:294:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "12535:39:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1101,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "12552:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12566:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12552:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1100,
                  "id": 1104,
                  "nodeType": "Return",
                  "src": "12545:22:26"
                }
              ]
            },
            "functionSelector": "b5cb15f7",
            "id": 1106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCount",
            "nameLocation": "12488:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12500:2:26"
            },
            "returnParameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "12526:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12526:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12525:9:26"
            },
            "scope": 1194,
            "src": "12479:95:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1115,
              "nodeType": "Block",
              "src": "12641:46:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1111,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "12658:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12679:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12658:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1110,
                  "id": 1114,
                  "nodeType": "Return",
                  "src": "12651:29:26"
                }
              ]
            },
            "functionSelector": "7071688a",
            "id": 1116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorCount",
            "nameLocation": "12589:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12606:2:26"
            },
            "returnParameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "12632:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12632:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12631:9:26"
            },
            "scope": 1194,
            "src": "12580:107:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1125,
              "nodeType": "Block",
              "src": "12760:69:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1121,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "12777:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12804:16:26",
                      "memberName": "getNumValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2918,
                      "src": "12777:43:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12777:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1120,
                  "id": 1124,
                  "nodeType": "Return",
                  "src": "12770:52:26"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 1126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "12702:23:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12725:2:26"
            },
            "returnParameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "12751:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12751:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12750:9:26"
            },
            "scope": 1194,
            "src": "12693:136:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1133,
              "nodeType": "Block",
              "src": "12894:36:26",
              "statements": [
                {
                  "expression": {
                    "id": 1131,
                    "name": "emissionRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 239,
                    "src": "12911:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1130,
                  "id": 1132,
                  "nodeType": "Return",
                  "src": "12904:19:26"
                }
              ]
            },
            "functionSelector": "c0a77da9",
            "id": 1134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmissionRate",
            "nameLocation": "12844:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12859:2:26"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "12885:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12885:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12884:9:26"
            },
            "scope": 1194,
            "src": "12835:95:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "12989:42:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1139,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "13006:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartnodesCore_$1194",
                          "typeString": "contract SmartnodesCore"
                        }
                      },
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13011:11:26",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3219,
                      "src": "13006:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13006:18:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1138,
                  "id": 1142,
                  "nodeType": "Return",
                  "src": "12999:25:26"
                }
              ]
            },
            "functionSelector": "6c9c2faf",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSupply",
            "nameLocation": "12945:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12954:2:26"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "12980:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12980:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12979:9:26"
            },
            "scope": 1194,
            "src": "12936:95:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "13107:119:26",
              "statements": [
                {
                  "assignments": [
                    1152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1152,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "13125:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1164,
                      "src": "13117:11:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13117:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1156,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1153,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "13131:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1155,
                    "indexExpression": {
                      "id": 1154,
                      "name": "validatorAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "13152:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13131:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13117:49:26"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1157,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "13183:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$218_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 1159,
                        "indexExpression": {
                          "id": 1158,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1152,
                          "src": "13194:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13183:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$218_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13199:6:26",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 213,
                      "src": "13183:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1161,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 241,
                      "src": "13209:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13183:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1150,
                  "id": 1163,
                  "nodeType": "Return",
                  "src": "13176:43:26"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "13046:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "validatorAddr",
                  "nameLocation": "13063:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13055:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13055:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13054:23:26"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13101:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13101:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13100:6:26"
            },
            "scope": 1194,
            "src": "13037:189:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1175,
              "nodeType": "Block",
              "src": "13297:74:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1171,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "13314:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13341:21:26",
                      "memberName": "getSelectedValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2924,
                      "src": "13314:48:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13314:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1170,
                  "id": 1174,
                  "nodeType": "Return",
                  "src": "13307:57:26"
                }
              ]
            },
            "functionSelector": "4966d086",
            "id": 1176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposees",
            "nameLocation": "13241:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13253:2:26"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "13279:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1167,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13279:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1168,
                    "nodeType": "ArrayTypeName",
                    "src": "13279:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13278:18:26"
            },
            "scope": 1194,
            "src": "13232:139:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "13493:61:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1188,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "13510:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2983",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13537:8:26",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2947,
                      "src": "13510:35:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13510:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,address[] memory)"
                    }
                  },
                  "functionReturnParameters": 1187,
                  "id": 1191,
                  "nodeType": "Return",
                  "src": "13503:44:26"
                }
              ]
            },
            "functionSelector": "1865c57d",
            "id": 1193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "13386:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13394:2:26"
            },
            "returnParameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13444:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13444:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13453:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13453:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13462:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13462:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13471:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1184,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13471:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1185,
                    "nodeType": "ArrayTypeName",
                    "src": "13471:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13443:45:26"
            },
            "scope": 1194,
            "src": "13377:177:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1195,
        "src": "271:13285:26",
        "usedErrors": [],
        "usedEvents": [
          167,
          173,
          179,
          188,
          194,
          200,
          5079,
          5088
        ]
      }
    ],
    "src": "32:13525:26"
  },
  "bytecode": "",
  "bytecodeSha1": "d9bfe3101d81702d4cb791c3300193d43a9edcac",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20Upgradeable.__ERC20_init": {
          "148": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "146": [
            2369,
            2382,
            true
          ],
          "147": [
            2369,
            2417,
            true
          ]
        }
      },
      "2": {
        "ERC20Upgradeable._approve": {
          "138": [
            10591,
            10610,
            true
          ],
          "139": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "145": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "140": [
            11303,
            11340,
            false
          ],
          "141": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "142": [
            7951,
            7969,
            true
          ],
          "143": [
            8029,
            8045,
            true
          ],
          "144": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "137": [
            7152,
            7187,
            true
          ]
        }
      },
      "26": {
        "SmartnodesCore._lockTokens": {
          "134": [
            8149,
            8159,
            true
          ],
          "135": [
            8215,
            8242,
            true
          ],
          "136": [
            8347,
            8363,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "119": [
            7486,
            7536,
            true
          ]
        },
        "SmartnodesCore.createUser": {
          "131": [
            4437,
            4480,
            true
          ]
        },
        "SmartnodesCore.createValidator": {
          "120": [
            5033,
            5070,
            true
          ],
          "121": [
            5153,
            5189,
            false
          ],
          "122": [
            5193,
            5218,
            true
          ]
        },
        "SmartnodesCore.getValidatorBytes": {
          "123": [
            12366,
            12381,
            true
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "132": [
            11804,
            11837,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "129": [
            10541,
            10572,
            false
          ],
          "130": [
            10592,
            10620,
            false
          ]
        },
        "SmartnodesCore.requestJob": {
          "117": [
            6119,
            6157,
            false
          ],
          "118": [
            6426,
            6460,
            true
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "133": [
            3974,
            4012,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "124": [
            8963,
            8978,
            true
          ],
          "125": [
            9093,
            9119,
            true
          ],
          "126": [
            9172,
            9182,
            true
          ],
          "127": [
            9306,
            9331,
            false
          ],
          "128": [
            9792,
            9831,
            true
          ]
        }
      },
      "3": {},
      "30": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {
        "Initializable._isConstructor": {
          "55": [
            3101,
            3153
          ]
        }
      },
      "2": {
        "ERC20Upgradeable.__ERC20_init": {
          "114": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "115": [
            2381,
            2394
          ],
          "116": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "90": [
            10583,
            10651
          ],
          "91": [
            10661,
            10729
          ],
          "92": [
            10740,
            10776
          ],
          "93": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "110": [
            8827,
            8892
          ],
          "111": [
            8963,
            8985
          ],
          "112": [
            8995,
            9023
          ],
          "113": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "94": [
            11356,
            11424
          ],
          "95": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "96": [
            7943,
            8011
          ],
          "97": [
            8021,
            8085
          ],
          "98": [
            8192,
            8264
          ],
          "99": [
            8298,
            8336
          ],
          "100": [
            8356,
            8379
          ],
          "101": [
            8390,
            8421
          ],
          "102": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "5": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "8": [
            4907,
            4939
          ],
          "9": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "75": [
            7144,
            7229
          ],
          "76": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "25": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "6": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "54": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "77": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "21": [
            5712,
            5750
          ],
          "22": [
            5760,
            5787
          ],
          "23": [
            5797,
            5808
          ]
        }
      },
      "26": {
        "SmartnodesCore._lockTokens": {
          "103": [
            8141,
            8197
          ],
          "104": [
            8207,
            8268
          ],
          "105": [
            8339,
            8393
          ],
          "106": [
            8404,
            8447
          ],
          "107": [
            8457,
            8497
          ],
          "108": [
            8570,
            8597
          ],
          "109": [
            8608,
            8641
          ]
        },
        "SmartnodesCore.completeJob": {
          "26": [
            7478,
            7537
          ],
          "27": [
            7548,
            7580
          ],
          "28": [
            7590,
            7620
          ],
          "29": [
            7675,
            7718
          ],
          "30": [
            7729,
            7760
          ]
        },
        "SmartnodesCore.createUser": {
          "78": [
            4416,
            4530
          ],
          "79": [
            4541,
            4689
          ],
          "80": [
            4700,
            4746
          ],
          "81": [
            4756,
            4769
          ]
        },
        "SmartnodesCore.createValidator": {
          "32": [
            5012,
            5121
          ],
          "33": [
            5132,
            5271
          ],
          "34": [
            5328,
            5554
          ],
          "35": [
            5565,
            5618
          ],
          "36": [
            5628,
            5679
          ],
          "37": [
            5724,
            5759
          ],
          "38": [
            5770,
            5790
          ]
        },
        "SmartnodesCore.disputeJob": {
          "85": [
            7892,
            7912
          ],
          "86": [
            7922,
            7964
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "24": [
            12770,
            12822
          ]
        },
        "SmartnodesCore.getEmissionRate": {
          "4": [
            12904,
            12923
          ]
        },
        "SmartnodesCore.getProposees": {
          "31": [
            13307,
            13364
          ]
        },
        "SmartnodesCore.getState": {
          "10": [
            13503,
            13547
          ]
        },
        "SmartnodesCore.getSupply": {
          "41": [
            12999,
            13024
          ]
        },
        "SmartnodesCore.getUserCount": {
          "82": [
            12545,
            12567
          ]
        },
        "SmartnodesCore.getValidatorBytes": {
          "39": [
            12358,
            12411
          ],
          "40": [
            12422,
            12466
          ]
        },
        "SmartnodesCore.getValidatorCount": {
          "43": [
            12651,
            12680
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "83": [
            11796,
            11853
          ],
          "84": [
            12048,
            12166
          ]
        },
        "SmartnodesCore.initialize": {
          "56": [
            3120,
            3153
          ],
          "57": [
            3237,
            3252
          ],
          "58": [
            3262,
            3276
          ],
          "59": [
            3286,
            3308
          ],
          "60": [
            3357,
            3378
          ],
          "61": [
            3439,
            3462
          ],
          "62": [
            3516,
            3534
          ],
          "63": [
            3593,
            3617
          ],
          "64": [
            3640,
            3664
          ],
          "65": [
            3737,
            3772
          ],
          "66": [
            3718,
            3721
          ],
          "67": [
            3821,
            3838
          ],
          "68": [
            3848,
            3865
          ]
        },
        "SmartnodesCore.isLocked": {
          "2": [
            13176,
            13219
          ]
        },
        "SmartnodesCore.lockTokens": {
          "42": [
            8790,
            8821
          ]
        },
        "SmartnodesCore.mintTokens": {
          "69": [
            10640,
            10657
          ],
          "70": [
            11038,
            11081
          ],
          "71": [
            11019,
            11022
          ],
          "72": [
            11312,
            11338
          ],
          "73": [
            11185,
            11188
          ],
          "74": [
            11359,
            11381
          ]
        },
        "SmartnodesCore.requestJob": {
          "11": [
            6240,
            6260
          ],
          "12": [
            6278,
            6318
          ],
          "13": [
            6353,
            6408
          ],
          "14": [
            6418,
            6485
          ],
          "15": [
            6832,
            6891
          ],
          "16": [
            6813,
            6816
          ],
          "17": [
            6957,
            7186
          ],
          "18": [
            7197,
            7257
          ],
          "19": [
            7267,
            7279
          ],
          "20": [
            7290,
            7310
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "87": [
            3953,
            4068
          ],
          "88": [
            4078,
            4144
          ],
          "89": [
            4154,
            4197
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "44": [
            8955,
            9010
          ],
          "45": [
            9085,
            9154
          ],
          "46": [
            9164,
            9220
          ],
          "47": [
            9347,
            9400
          ],
          "48": [
            9541,
            9562
          ],
          "49": [
            9577,
            9631
          ],
          "50": [
            9767,
            9889
          ],
          "51": [
            9904,
            9930
          ],
          "52": [
            9944,
            9969
          ],
          "53": [
            10031,
            10070
          ]
        }
      },
      "3": {},
      "30": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "7": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "271:13285:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:28:26;;;;;;;;;713:25:32;;;701:2;686:18;678:28:26;567:177:32;4770:197:2;;;;;;:::i;:::-;;:::i;:::-;;;1370:14:32;;1363:22;1345:41;;1333:2;1318:18;4770:197:2;1205:187:32;3581:106:2;3668:12;;3581:106;;13377:177:26;;;:::i;:::-;;;;;;;;;;:::i;5853:1464::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2299:27::-;;;;;;2671;;;;;;:::i;:::-;;:::i;5529:286:2:-;;;;;;:::i;:::-;;:::i;2787:55:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3430:91:2;;;3512:2;4781:36:32;;4769:2;4754:18;3430:91:2;4639:184:32;2577:47:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2577:47:26;;;;;;;;;;;;;;;5083:25:32;;;-1:-1:-1;;;;;5144:32:32;;;5139:2;5124:18;;5117:60;5193:18;;;5186:34;;;;5251:2;5236:18;;5229:34;5312:4;5300:17;5294:3;5279:19;;5272:46;5070:3;5055:19;2577:47:26;4828:496:32;12693:136:26;;;:::i;2514:57::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2514:57:26;;;;;;-1:-1:-1;;;;;5678:32:32;;;5660:51;;5648:2;5633:18;2514:57:26;5514:203:32;2630:35:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2630:35:26;;;;;;;;;;;;-1:-1:-1;;;;;5908:32:32;;;5890:51;;5984:14;;5977:22;5972:2;5957:18;;5950:50;5863:18;2630:35:26;5722:284:32;6210:236:2;;;;;;:::i;:::-;;:::i;7323:444:26:-;;;;;;:::i;:::-;;:::i;13232:139::-;;;:::i;:::-;;;;;;;:::i;4901:896::-;;;;;;:::i;:::-;;:::i;:::-;;13037:189;;;;;;:::i;:::-;-1:-1:-1;;;;;13131:35:26;13101:4;13131:35;;;:20;:35;;;;;;;;;13209:10;;13183:15;;;:10;:15;;;;;;:22;;;:36;;;13037:189;576:25;;;;;;712:26;;;;;;12179:294;;;;;;:::i;:::-;;:::i;12936:95::-;;;:::i;8735:93::-;;;;;;:::i;:::-;;:::i;12580:107::-;;;:::i;3745:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;8834:1305:26;;;;;;:::i;:::-;;:::i;505:33::-;;;;;;2704:102:2;;;:::i;2140:27:26:-;;;;;;3039:833;;;;;;:::i;:::-;;:::i;10316:1072::-;;;;;;:::i;:::-;;:::i;6933:429:2:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4299:477:26:-;;;;;;:::i;:::-;;:::i;2332:35::-;;;;;;12479:95;;;:::i;11677:496::-;;;;;;:::i;:::-;;:::i;:::-;;;;10493:14:32;;10486:22;10468:41;;10540:2;10525:18;;10518:34;;;;-1:-1:-1;;;;;10588:32:32;10568:18;;;10561:60;10456:2;10441:18;11677:496:26;10272:355:32;7773:198:26;;;;;;:::i;:::-;;:::i;11465:206::-;;;;;;:::i;:::-;;:::i;12835:95::-;12911:12;;12835:95;;644:28;;;;;;2054:22;;;;;;3878:326;;;;;;:::i;:::-;;:::i;2423:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2423:37:26;;;;;;;;;;;;;-1:-1:-1;;;;;10848:32:32;;;10830:51;;10912:2;10897:18;;10890:34;;;;10972:4;10960:17;10940:18;;;10933:45;10818:2;10803:18;2423:37:26;10632:352:32;2729:52:26;;;;;;:::i;:::-;;;;;;;;;;;;;;607:31;;;;;;2466:42;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2466:42:26;;;2224:25;;;;;;4313:149:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;544:26:26;;;;;;416:39;;;;;-1:-1:-1;;;;;416:39:26;;;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;13377:177:26:-;13444:7;13453;13462;13471:16;13510:26;;;;;;;;;-1:-1:-1;;;;;13510:26:26;-1:-1:-1;;;;;13510:35:26;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13510:37:26;;;;;;;;;;;;:::i;:::-;13503:44;;;;;;;;13377:177;;;;:::o;5853:1464::-;6133:24;;5988:29;;-1:-1:-1;;;;;6133:24:26;6119:10;:38;6115:228;;6195:10;6218:1;6177:29;;;:17;:29;;;;;;6173:160;;6240:20;6251:8;6240:10;:20::i;:::-;6307:10;6289:29;;;;:17;:29;;;;;;;-1:-1:-1;6173:160:26;6361:8;6353:55;;;;-1:-1:-1;;;6353:55:26;;13266:2:32;6353:55:26;;;13248:21:32;13305:2;13285:18;;;13278:30;-1:-1:-1;;;13324:18:32;;;13317:50;13384:18;;6353:55:26;;;;;;;;;6458:1;6426:13;;;:4;:13;;;;;:20;-1:-1:-1;;;;;6426:20:26;:34;6418:67;;;;-1:-1:-1;;;6418:67:26;;13615:2:32;6418:67:26;;;13597:21:32;13654:2;13634:18;;;13627:30;-1:-1:-1;;;13673:18:32;;;13666:50;13733:18;;6418:67:26;13413:344:32;6418:67:26;6605:26;;:61;;-1:-1:-1;;;6605:61:26;;:26;:61;;;713:25:32;6570:32:26;;-1:-1:-1;;;;;6605:26:26;;:58;;686:18:32;;6605:61:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6605:61:26;;;;;;;;;;;;:::i;:::-;6709:16;;;6723:1;6709:16;;;;;;;;;6570:96;;-1:-1:-1;6676:30:26;;6709:16;;;;;;;;;;;;-1:-1:-1;6709:16:26;6676:49;;6770:9;6765:137;6789:15;:22;6785:1;:26;6765:137;;;6851:20;:40;6872:15;6888:1;6872:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6851:40:26;-1:-1:-1;;;;;6851:40:26;;;;;;;;;;;;;6832:13;6846:1;6832:16;;;;;;;;:::i;:::-;;;;;;;;;;:59;6813:3;;6765:137;;;-1:-1:-1;6973:213:26;;;;;;;;6999:10;6973:213;;;;;;;;;;;7091:11;7077:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7077:33:26;;6973:213;;;;7136:11;;6973:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6973:213:26;;;-1:-1:-1;;7171:4:26;6973:213;;;;;;;6957:13;;;:4;:13;;;;;;:229;;;;-1:-1:-1;;;;;;6957:229:26;-1:-1:-1;;;;;6957:229:26;;;;;;;;;;;;:13;;:229;;;;;-1:-1:-1;6957:229:26;;;:::i;:::-;-1:-1:-1;6957:229:26;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6957:229:26;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6957:229:26;;;;;;;;;;;;-1:-1:-1;;6957:229:26;;;;;;;;;;7202:55;;7215:7;;7202:55;;;;7224:15;;7241;;7202:55;:::i;:::-;;;;;;;;7267:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;7297:13:26;;5853:1464;-1:-1:-1;;;;;;;5853:1464:26:o;2671:27::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2671:27:26;:::o;5529:286:2:-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;12693:136:26:-;12777:26;;:45;;;-1:-1:-1;;;12777:45:26;;;;12751:7;;-1:-1:-1;;;;;12777:26:26;;:43;;:45;;;;;;;;;;;;;;:26;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12770:52;;12693:136;:::o;6210:236:2:-;929:10:6;6298:4:2;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:2;;;;;;;;;;6298:4;;929:10:6;6352:66:2;;929:10:6;;6377:27:2;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;7323:444:26:-;2927:24;;7450:16;;-1:-1:-1;;;;;2927:24:26;2913:10;:38;2892:123;;;;-1:-1:-1;;;2892:123:26;;;;;;;:::i;:::-;7505:13:::1;::::0;;;:4:::1;:13;::::0;;;;:24:::1;;:31:::0;7486:15;;:50:::1;7478:59;;;::::0;::::1;;7548:13;::::0;;;:4:::1;:13;::::0;;;;;;;:32;;::::1;::::0;:21:::1;::::0;;::::1;::::0;:32;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7615:5:26::1;7590:13:::0;;;:4:::1;:13;::::0;;;;;;:22:::1;;:30:::0;;-1:-1:-1;;7590:30:26::1;::::0;;7680:38;7595:7;;7680:38:::1;::::0;::::1;::::0;7702:15:::1;713:25:32::0;;701:2;686:18;;567:177;7680:38:26::1;;;;;;;;7736:13;::::0;;;:4:::1;:13;::::0;;;;;;;;:24:::1;;7729:31:::0;;;;;;::::1;::::0;;;;;;;;;;7736:24;;7729:31;::::1;7736:24:::0;7729:31;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7323:444:::0;;;;:::o;13232:139::-;13314:26;;:50;;;-1:-1:-1;;;13314:50:26;;;;13279:16;;-1:-1:-1;;;;;13314:26:26;;:48;;:50;;;;;:26;;:50;;;;;;;:26;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13314:50:26;;;;;;;;;;;;:::i;4901:896::-;5054:10;5033:32;;;;:20;:32;;;;;;:37;5012:109;;;;-1:-1:-1;;;5012:109:26;;15989:2:32;5012:109:26;;;15971:21:32;16028:2;16008:18;;;16001:30;16067:27;16047:18;;;16040:55;16112:18;;5012:109:26;15787:349:32;5012:109:26;5163:10;3819:7:2;3845:18;;;:9;:18;;;;;;5178:11:26;-1:-1:-1;5153:36:26;:65;;;;;5208:10;;5193:11;:25;;5153:65;5132:139;;;;-1:-1:-1;;;5132:139:26;;16343:2:32;5132:139:26;;;16325:21:32;16382:2;16362:18;;;16355:30;16421:29;16401:18;;;16394:57;16468:18;;5132:139:26;16141:351:32;5132:139:26;5361:193;;;;;;;;;;;5446:10;5361:193;;;;;;;5478:10;;;5361:193;;;;;;-1:-1:-1;5361:193:26;;;;;;5541:2;5361:193;;;;;;5339:18;;;5328:30;;:10;:30;;;;;:226;;;;;;;;;;;-1:-1:-1;;;;;5328:226:26;;;-1:-1:-1;;;;;;5328:226:26;;;;;;;;;;;;;;;;;;;;;;;;;5361:193;5328:226;;;-1:-1:-1;;5328:226:26;;;;;;;;;;5600:18;;5565:32;;;:20;:32;;;;;:53;5628:38;;;:22;:38;;;;;;;:51;;;;;;;;;;5748:10;5724:35;;5446:10;5724:11;:35::i;:::-;5770:18;:20;;;:18;:20;;;:::i;:::-;;;;;;4901:896;;:::o;12179:294::-;-1:-1:-1;;;;;12310:38:26;;12269:7;12310:38;;;:20;:38;;;;;;12366:15;12358:53;;;;-1:-1:-1;;;12358:53:26;;16699:2:32;12358:53:26;;;16681:21:32;16738:2;16718:18;;;16711:30;-1:-1:-1;;;16757:18:32;;;16750:55;16822:18;;12358:53:26;16497:349:32;12358:53:26;12429:23;;;;:10;:23;;;;;:37;;12179:294;-1:-1:-1;;12179:294:26:o;12936:95::-;12980:7;13006:4;-1:-1:-1;;;;;13006:16:26;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8735:93;8790:31;8802:10;8814:6;8790:11;:31::i;:::-;8735:93;:::o;12580:107::-;12632:7;12679:1;12658:18;;:22;;;;:::i;8834:1305::-;8934:10;8891:19;8913:32;;;:20;:32;;;;;;8963:15;8955:55;;;;-1:-1:-1;;;8955:55:26;;17186:2:32;8955:55:26;;;17168:21:32;17225:2;17205:18;;;17198:30;17264:29;17244:18;;;17237:57;17311:18;;8955:55:26;16984:351:32;8955:55:26;9021:27;9051:23;;;:10;:23;;;;;9103:16;;;;9093:26;;;9085:69;;;;-1:-1:-1;;;9085:69:26;;17542:2:32;9085:69:26;;;17524:21:32;17581:2;17561:18;;;17554:30;17620:32;17600:18;;;17593:60;17670:18;;9085:69:26;17340:354:32;9085:69:26;9181:1;9172:6;:10;9164:56;;;;-1:-1:-1;;;9164:56:26;;;;;;;:::i;:::-;9306:9;:20;;;9330:1;9306:25;9302:831;;9388:12;;9370:30;;:15;:30;:::i;:::-;9347:9;:20;;:53;;;;9556:6;9541:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;9610:20:26;;;;9582:49;;713:25:32;;;9598:10:26;;9582:49;;701:2:32;686:18;9582:49:26;;;;;;;;8881:1258;;8834:1305;:::o;9302:831::-;9811:9;:20;;;9792:15;:39;;9767:122;;;;-1:-1:-1;;;9767:122:26;;18303:2:32;9767:122:26;;;18285:21:32;18342:2;18322:18;;;18315:30;18381:26;18361:18;;;18354:54;18425:18;;9767:122:26;18101:348:32;9767:122:26;9924:6;9904:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;9944:25:26;;-1:-1:-1;9950:10:26;9962:6;9944:5;:25::i;:::-;10036:34;;713:25:32;;;10051:10:26;;10036:34;;701:2:32;686:18;10036:34:26;567:177:32;9302:831:26;8881:1258;;8834:1305;:::o;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;3039:833:26:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;18656:2:32;2361:107:1;;;18638:21:32;18695:2;18675:18;;;18668:30;18734:34;18714:18;;;18707:62;-1:-1:-1;;;18785:18:32;;;18778:44;18839:19;;2361:107:1;18454:410:32;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;3120:33:26::1;;;;;;;;;;;;;;-1:-1:-1::0;;;3120:33:26::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;3120:33:26::1;;::::0;:12:::1;:33::i;:::-;3251:1;3237:11;:15:::0;;;3262:10:::1;:14:::0;;;3286:18:::1;:22:::0;3372:6:::1;3357:12;:21:::0;3452:10:::1;3439;:23:::0;3526:8:::1;3516:7;:18:::0;3608:9:::1;3593:12;:24:::0;-1:-1:-1;3640:20:26::1;:24:::0;;;3675:108:::1;3696:13;:20;3692:1;:24;3675:108;;;3737:35;3743:13;3757:1;3743:16;;;;;;;;:::i;:::-;;;;;;;3761:10;;3737:5;:35::i;:::-;3718:3;;3675:108;;;-1:-1:-1::0;3837:1:26::1;3821:13;:17:::0;3864:1:::1;3848:13;:17:::0;2645:66:1;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;3039:833:26;:::o;10316:1072::-;2927:24;;-1:-1:-1;;;;;2927:24:26;2913:10;:38;2892:123;;;;-1:-1:-1;;;2892:123:26;;;;;;;:::i;:::-;10565:7:::1;;10541:20;;:31;10537:145;;2043:4;10592:12;;:28;10588:84;;;10656:1;10640:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10588:84:26::1;10692:28;10745:3;10724:12;;10739:2;10724:17;;;;:::i;:::-;10723:25;;;;:::i;:::-;10692:56;;10758:25;10808:3;10787:12;;10802:2;10787:17;;;;:::i;:::-;10786:25;;;;:::i;:::-;10758:53;;10875:23;10936:16;:23;10901:20;:58;;;;:::i;:::-;10875:84;;10975:9;10970:122;10994:16;:23;10990:1;:27;10970:122;;;11038:43;11044:16;11061:1;11044:19;;;;;;;;:::i;:::-;;;;;;;11065:15;11038:5;:43::i;:::-;11019:3;;10970:122;;;;11149:9;11144:205;11168:8;:15;11164:1;:19;11144:205;;;11204:14;11283;11246:17;11223;11241:1;11223:20;;;;;;;;:::i;:::-;;;;;;;:40;;;;:::i;:::-;11222:75;;;;:::i;:::-;11204:94;;11312:26;11318:8;11327:1;11318:11;;;;;;;;:::i;:::-;;;;;;;11331:6;11312:5;:26::i;:::-;-1:-1:-1::0;11185:3:26::1;;11144:205;;;-1:-1:-1::0;11359:20:26::1;:22:::0;;;:20:::1;:22;::::0;::::1;:::i;:::-;;;;;;10527:861;;;10316:1072:::0;;;;:::o;6933:429:2:-;929:10:6;7026:4:2;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:2;;;;;;;;;;7026:4;;929:10:6;7152:35:2;;;;7144:85;;;;-1:-1:-1;;;7144:85:2;;19466:2:32;7144:85:2;;;19448:21:32;19505:2;19485:18;;;19478:30;19544:34;19524:18;;;19517:62;-1:-1:-1;;;19595:18:32;;;19588:35;19640:19;;7144:85:2;19264:401:32;7144:85:2;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;4299:477:26:-;4455:10;4478:1;4437:29;;;:17;:29;;;;;;:43;4416:114;;;;-1:-1:-1;;;4416:114:26;;19872:2:32;4416:114:26;;;19854:21:32;19911:2;19891:18;;;19884:30;19950:26;19930:18;;;19923:54;19994:18;;4416:114:26;19670:348:32;4416:114:26;4565:124;;;;;;;;4597:10;4565:124;;;;;;;;;;4676:2;4565:124;;;;;;-1:-1:-1;4541:21:26;;;:5;:21;;;;;:148;;;;-1:-1:-1;;;;;;4541:148:26;-1:-1:-1;;;;;4541:148:26;;;;;;;;-1:-1:-1;4541:148:26;;;;;;;;;;-1:-1:-1;;4541:148:26;4565:124;4541:148;;;;;;;;;;4700:29;;;:17;:29;;;;;:46;;;4756:11;:13;;;;;;:::i;:::-;;;;;;4299:477;:::o;12479:95::-;12526:7;12566:1;12552:11;;:15;;;;:::i;11677:496::-;11762:4;11768:7;11777;11819:18;;11804:12;:33;11796:57;;;;-1:-1:-1;;;11796:57:26;;20225:2:32;11796:57:26;;;20207:21:32;20264:2;20244:18;;;20237:30;-1:-1:-1;;;20283:18:32;;;20276:41;20334:18;;11796:57:26;20023:335:32;11796:57:26;11863:27;11893:24;;;:10;:24;;;;;;;;11863:54;;;;;;;;;;;;;;;-1:-1:-1;;;;;11863:54:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11943:26;;:95;;-1:-1:-1;;;11943:95:26;;;;;5660:51:32;;;;11863:54:26;:27;11943:26;;;;;:44;;5633:18:32;;11943:95:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12091:24;;12129:27;;;;;11927:111;;12091:24;;-1:-1:-1;12129:27:26;-1:-1:-1;11677:496:26;;-1:-1:-1;;;11677:496:26:o;7773:198::-;2927:24;;-1:-1:-1;;;;;2927:24:26;2913:10;:38;2892:123;;;;-1:-1:-1;;;2892:123:26;;;;;;;:::i;:::-;7851:15:::1;7869:13:::0;;;:4:::1;:13;::::0;;;;;;;;7892:12:::1;::::0;::::1;:20:::0;;-1:-1:-1;;7892:20:26::1;::::0;;7927:37;;7948:15:::1;713:25:32::0;;7869:13:26;;7927:37:::1;::::0;686:18:32;7927:37:26::1;;;;;;;7841:130;7773:198:::0;:::o;11465:206::-;11573:30;11606:13;;;:4;:13;;;;;;;;:28;;11573:61;;;;;;;;;;;;;;;;;11545:16;;11573:30;:61;;11606:28;11573:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11573:61:26;;;;;;;;;;;;;;;;-1:-1:-1;11573:61:26;;11465:206;-1:-1:-1;;;;;;;11465:206:26:o;3878:326::-;3974:24;;-1:-1:-1;;;;;3974:24:26;:38;3953:115;;;;-1:-1:-1;;;3953:115:26;;20847:2:32;3953:115:26;;;20829:21:32;20886:2;20866:18;;;20859:30;20925:32;20905:18;;;20898:60;20975:18;;3953:115:26;20645:354:32;3953:115:26;4078:26;:66;;-1:-1:-1;;;;;4078:66:26;;;-1:-1:-1;;;;;;4078:66:26;;;;;;;;4154:24;:43;;;;;;;;3878:326::o;10460:370:2:-;-1:-1:-1;;;;;10591:19:2;;10583:68;;;;-1:-1:-1;;;10583:68:2;;21206:2:32;10583:68:2;;;21188:21:32;21245:2;21225:18;;;21218:30;21284:34;21264:18;;;21257:62;-1:-1:-1;;;21335:18:32;;;21328:34;21379:19;;10583:68:2;21004:400:32;10583:68:2;-1:-1:-1;;;;;10669:21:2;;10661:68;;;;-1:-1:-1;;;10661:68:2;;21611:2:32;10661:68:2;;;21593:21:32;21650:2;21630:18;;;21623:30;21689:34;21669:18;;;21662:62;-1:-1:-1;;;21740:18:32;;;21733:32;21782:19;;10661:68:2;21409:398:32;10661:68:2;-1:-1:-1;;;;;10740:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;713:25:32;;;10791:32:2;;686:18:32;10791:32:2;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:2;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:2;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;22014:2:32;11356:68:2;;;21996:21:32;22053:2;22033:18;;;22026:30;22092:31;22072:18;;;22065:59;22141:18;;11356:68:2;21812:353:32;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:2;;7943:68;;;;-1:-1:-1;;;7943:68:2;;22372:2:32;7943:68:2;;;22354:21:32;22411:2;22391:18;;;22384:30;22450:34;22430:18;;;22423:62;-1:-1:-1;;;22501:18:32;;;22494:35;22546:19;;7943:68:2;22170:401:32;7943:68:2;-1:-1:-1;;;;;8029:16:2;;8021:64;;;;-1:-1:-1;;;8021:64:2;;22778:2:32;8021:64:2;;;22760:21:32;22817:2;22797:18;;;22790:30;22856:34;22836:18;;;22829:62;-1:-1:-1;;;22907:18:32;;;22900:33;22950:19;;8021:64:2;22576:399:32;8021:64:2;-1:-1:-1;;;;;8167:15:2;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:2;;23182:2:32;8192:72:2;;;23164:21:32;23221:2;23201:18;;;23194:30;23260:34;23240:18;;;23233:62;-1:-1:-1;;;23311:18:32;;;23304:36;23357:19;;8192:72:2;22980:402:32;8192:72:2;-1:-1:-1;;;;;8298:15:2;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:2;8404:4;-1:-1:-1;;;;;8395:26:2;;8414:6;8395:26;;;;713:25:32;;701:2;686:18;;567:177;8395:26:2;;;;;;;;8432:37;8834:1305:26;8069:579;8158:1;8149:6;:10;8141:56;;;;-1:-1:-1;;;8141:56:26;;;;;;;:::i;:::-;8236:6;8215:17;8225:6;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;8215:17:26;:27;;8207:61;;;;-1:-1:-1;;;8207:61:26;;23589:2:32;8207:61:26;;;23571:21:32;23628:2;23608:18;;;23601:30;-1:-1:-1;;;23647:18:32;;;23640:51;23708:18;;8207:61:26;23387:345:32;8207:61:26;-1:-1:-1;;;;;8301:28:26;;8279:19;8301:28;;;:20;:28;;;;;;;8347:16;;;8339:54;;;;-1:-1:-1;;;8339:54:26;;16699:2:32;8339:54:26;;;16681:21:32;16738:2;16718:18;;;16711:30;-1:-1:-1;;;16757:18:32;;;16750:55;16822:18;;8339:54:26;16497:349:32;8339:54:26;8404:43;8417:6;8433:4;8440:6;8404:12;:43::i;:::-;-1:-1:-1;8457:23:26;;;;:10;:23;;;;;:30;;:40;;8491:6;;8457:23;:40;;8491:6;;8457:40;:::i;:::-;;;;-1:-1:-1;;8507:20:26;8530:23;;;:10;:23;;;;;:30;;;8570:11;:27;;8530:30;;;;8570:27;;8530:30;;8570:27;:::i;:::-;;;;-1:-1:-1;;8613:28:26;;713:25:32;;;-1:-1:-1;;;;;8613:28:26;;;;;701:2:32;686:18;8613:28:26;;;;;;;8131:517;;8069:579;;:::o;8752:389:2:-;-1:-1:-1;;;;;8835:21:2;;8827:65;;;;-1:-1:-1;;;8827:65:2;;23939:2:32;8827:65:2;;;23921:21:32;23978:2;23958:18;;;23951:30;24017:33;23997:18;;;23990:61;24068:18;;8827:65:2;23737:355:32;8827:65:2;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:2;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:2;;713:25:32;;;-1:-1:-1;;;;;9038:37:2;;;9055:1;;9038:37;;701:2:32;686:18;9038:37:2;;;;;;;2080:637:1;3039:833:26;:::o;2116:147:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2952:13:1::0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2381:5:2::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:2::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:548:32;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:131::-;-1:-1:-1;;;;;824:31:32;;814:42;;804:70;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:32:o;1397:465::-;1450:3;1488:5;1482:12;1515:6;1510:3;1503:19;1541:4;1570;1565:3;1561:14;1554:21;;1609:4;1602:5;1598:16;1632:1;1642:195;1656:6;1653:1;1650:13;1642:195;;;1721:13;;-1:-1:-1;;;;;1717:39:32;1705:52;;1777:12;;;;1812:15;;;;1753:1;1671:9;1642:195;;;-1:-1:-1;1853:3:32;;1397:465;-1:-1:-1;;;;;1397:465:32:o;1867:476::-;2130:6;2119:9;2112:25;2173:6;2168:2;2157:9;2153:18;2146:34;2216:6;2211:2;2200:9;2196:18;2189:34;2259:3;2254:2;2243:9;2239:18;2232:31;2093:4;2280:57;2332:3;2321:9;2317:19;2309:6;2280:57;:::i;:::-;2272:65;1867:476;-1:-1:-1;;;;;;1867:476:32:o;2348:751::-;2452:6;2460;2468;2476;2529:2;2517:9;2508:7;2504:23;2500:32;2497:52;;;2545:1;2542;2535:12;2497:52;2581:9;2568:23;2558:33;;2638:2;2627:9;2623:18;2610:32;2600:42;;2693:2;2682:9;2678:18;2665:32;2716:18;2757:2;2749:6;2746:14;2743:34;;;2773:1;2770;2763:12;2743:34;2811:6;2800:9;2796:22;2786:32;;2856:7;2849:4;2845:2;2841:13;2837:27;2827:55;;2878:1;2875;2868:12;2827:55;2918:2;2905:16;2944:2;2936:6;2933:14;2930:34;;;2960:1;2957;2950:12;2930:34;3013:7;3008:2;2998:6;2995:1;2991:14;2987:2;2983:23;2979:32;2976:45;2973:65;;;3034:1;3031;3024:12;2973:65;2348:751;;;;-1:-1:-1;;3065:2:32;3057:11;;-1:-1:-1;;;2348:751:32:o;3104:632::-;3275:2;3327:21;;;3397:13;;3300:18;;;3419:22;;;3246:4;;3275:2;3498:15;;;;3472:2;3457:18;;;3246:4;3541:169;3555:6;3552:1;3549:13;3541:169;;;3616:13;;3604:26;;3685:15;;;;3650:12;;;;3577:1;3570:9;3541:169;;;-1:-1:-1;3727:3:32;;3104:632;-1:-1:-1;;;;;;3104:632:32:o;3741:180::-;3800:6;3853:2;3841:9;3832:7;3828:23;3824:32;3821:52;;;3869:1;3866;3859:12;3821:52;-1:-1:-1;3892:23:32;;3741:180;-1:-1:-1;3741:180:32:o;3926:456::-;4003:6;4011;4019;4072:2;4060:9;4051:7;4047:23;4043:32;4040:52;;;4088:1;4085;4078:12;4040:52;4127:9;4114:23;4146:31;4171:5;4146:31;:::i;:::-;4196:5;-1:-1:-1;4253:2:32;4238:18;;4225:32;4266:33;4225:32;4266:33;:::i;:::-;3926:456;;4318:7;;-1:-1:-1;;;4372:2:32;4357:18;;;;4344:32;;3926:456::o;4387:247::-;4446:6;4499:2;4487:9;4478:7;4474:23;4470:32;4467:52;;;4515:1;4512;4505:12;4467:52;4554:9;4541:23;4573:31;4598:5;4573:31;:::i;:::-;4623:5;4387:247;-1:-1:-1;;;4387:247:32:o;6011:127::-;6072:10;6067:3;6063:20;6060:1;6053:31;6103:4;6100:1;6093:15;6127:4;6124:1;6117:15;6143:275;6214:2;6208:9;6279:2;6260:13;;-1:-1:-1;;6256:27:32;6244:40;;6314:18;6299:34;;6335:22;;;6296:62;6293:88;;;6361:18;;:::i;:::-;6397:2;6390:22;6143:275;;-1:-1:-1;6143:275:32:o;6423:183::-;6483:4;6516:18;6508:6;6505:30;6502:56;;;6538:18;;:::i;:::-;-1:-1:-1;6583:1:32;6579:14;6595:4;6575:25;;6423:183::o;6611:743::-;6665:5;6718:3;6711:4;6703:6;6699:17;6695:27;6685:55;;6736:1;6733;6726:12;6685:55;6772:6;6759:20;6798:4;6822:60;6838:43;6878:2;6838:43;:::i;:::-;6822:60;:::i;:::-;6904:3;6928:2;6923:3;6916:15;6956:4;6951:3;6947:14;6940:21;;7013:4;7007:2;7004:1;7000:10;6992:6;6988:23;6984:34;6970:48;;7041:3;7033:6;7030:15;7027:35;;;7058:1;7055;7048:12;7027:35;7094:4;7086:6;7082:17;7108:217;7124:6;7119:3;7116:15;7108:217;;;7204:3;7191:17;7221:31;7246:5;7221:31;:::i;:::-;7265:18;;7303:12;;;;7141;;7108:217;;;-1:-1:-1;7343:5:32;6611:743;-1:-1:-1;;;;;;6611:743:32:o;7359:416::-;7452:6;7460;7513:2;7501:9;7492:7;7488:23;7484:32;7481:52;;;7529:1;7526;7519:12;7481:52;7565:9;7552:23;7542:33;;7626:2;7615:9;7611:18;7598:32;7653:18;7645:6;7642:30;7639:50;;;7685:1;7682;7675:12;7639:50;7708:61;7761:7;7752:6;7741:9;7737:22;7708:61;:::i;:::-;7698:71;;;7359:416;;;;;:::o;7780:261::-;7959:2;7948:9;7941:21;7922:4;7979:56;8031:2;8020:9;8016:18;8008:6;7979:56;:::i;8046:248::-;8114:6;8122;8175:2;8163:9;8154:7;8150:23;8146:32;8143:52;;;8191:1;8188;8181:12;8143:52;-1:-1:-1;;8214:23:32;;;8284:2;8269:18;;;8256:32;;-1:-1:-1;8046:248:32:o;8481:348::-;8565:6;8618:2;8606:9;8597:7;8593:23;8589:32;8586:52;;;8634:1;8631;8624:12;8586:52;8674:9;8661:23;8707:18;8699:6;8696:30;8693:50;;;8739:1;8736;8729:12;8693:50;8762:61;8815:7;8806:6;8795:9;8791:22;8762:61;:::i;:::-;8752:71;8481:348;-1:-1:-1;;;;8481:348:32:o;8834:1433::-;8995:6;9003;9011;9019;9072:3;9060:9;9051:7;9047:23;9043:33;9040:53;;;9089:1;9086;9079:12;9040:53;9129:9;9116:23;9158:18;9199:2;9191:6;9188:14;9185:34;;;9215:1;9212;9205:12;9185:34;9238:61;9291:7;9282:6;9271:9;9267:22;9238:61;:::i;:::-;9228:71;;9318:2;9308:12;;9373:2;9362:9;9358:18;9345:32;9402:2;9392:8;9389:16;9386:36;;;9418:1;9415;9408:12;9386:36;9441:24;;9496:4;9488:13;;9484:27;-1:-1:-1;9474:55:32;;9525:1;9522;9515:12;9474:55;9561:2;9548:16;9584:60;9600:43;9640:2;9600:43;:::i;9584:60::-;9678:15;;;9760:1;9756:10;;;;9748:19;;9744:28;;;9709:12;;;;9784:19;;;9781:39;;;9816:1;9813;9806:12;9781:39;9840:11;;;;9860:142;9876:6;9871:3;9868:15;9860:142;;;9942:17;;9930:30;;9893:12;;;;9980;;;;9860:142;;;10021:5;-1:-1:-1;;;;10073:2:32;10058:18;;10045:32;;-1:-1:-1;10130:2:32;10115:18;;10102:32;;-1:-1:-1;10146:16:32;;;10143:36;;;10175:1;10172;10165:12;10143:36;;10198:63;10253:7;10242:8;10231:9;10227:24;10198:63;:::i;:::-;10188:73;;;8834:1433;;;;;;;:::o;10989:388::-;11057:6;11065;11118:2;11106:9;11097:7;11093:23;11089:32;11086:52;;;11134:1;11131;11124:12;11086:52;11173:9;11160:23;11192:31;11217:5;11192:31;:::i;:::-;11242:5;-1:-1:-1;11299:2:32;11284:18;;11271:32;11312:33;11271:32;11312:33;:::i;:::-;11364:7;11354:17;;;10989:388;;;;;:::o;11382:380::-;11461:1;11457:12;;;;11504;;;11525:61;;11579:4;11571:6;11567:17;11557:27;;11525:61;11632:2;11624:6;11621:14;11601:18;11598:38;11595:161;;11678:10;11673:3;11669:20;11666:1;11659:31;11713:4;11710:1;11703:15;11741:4;11738:1;11731:15;11595:161;;11382:380;;;:::o;11767:740::-;11832:5;11885:3;11878:4;11870:6;11866:17;11862:27;11852:55;;11903:1;11900;11893:12;11852:55;11932:6;11926:13;11958:4;11982:60;11998:43;12038:2;11998:43;:::i;11982:60::-;12064:3;12088:2;12083:3;12076:15;12116:4;12111:3;12107:14;12100:21;;12173:4;12167:2;12164:1;12160:10;12152:6;12148:23;12144:34;12130:48;;12201:3;12193:6;12190:15;12187:35;;;12218:1;12215;12208:12;12187:35;12254:4;12246:6;12242:17;12268:210;12284:6;12279:3;12276:15;12268:210;;;12357:3;12351:10;12374:31;12399:5;12374:31;:::i;:::-;12418:18;;12456:12;;;;12301;;12268:210;;12512:547;12634:6;12642;12650;12658;12711:3;12699:9;12690:7;12686:23;12682:33;12679:53;;;12728:1;12725;12718:12;12679:53;12757:9;12751:16;12741:26;;12807:2;12796:9;12792:18;12786:25;12776:35;;12851:2;12840:9;12836:18;12830:25;12820:35;;12899:2;12888:9;12884:18;12878:25;12926:18;12918:6;12915:30;12912:50;;;12958:1;12955;12948:12;12912:50;12981:72;13045:7;13036:6;13025:9;13021:22;12981:72;:::i;13952:363::-;14047:6;14100:2;14088:9;14079:7;14075:23;14071:32;14068:52;;;14116:1;14113;14106:12;14068:52;14149:9;14143:16;14182:18;14174:6;14171:30;14168:50;;;14214:1;14211;14204:12;14168:50;14237:72;14301:7;14292:6;14281:9;14277:22;14237:72;:::i;14320:127::-;14381:10;14376:3;14372:20;14369:1;14362:31;14412:4;14409:1;14402:15;14436:4;14433:1;14426:15;14452:332;14659:6;14648:9;14641:25;14702:2;14697;14686:9;14682:18;14675:30;14622:4;14722:56;14774:2;14763:9;14759:18;14751:6;14722:56;:::i;14789:127::-;14850:10;14845:3;14841:20;14838:1;14831:31;14881:4;14878:1;14871:15;14905:4;14902:1;14895:15;14921:135;14960:3;14981:17;;;14978:43;;15001:18;;:::i;:::-;-1:-1:-1;15048:1:32;15037:13;;14921:135::o;15061:184::-;15131:6;15184:2;15172:9;15163:7;15159:23;15155:32;15152:52;;;15200:1;15197;15190:12;15152:52;-1:-1:-1;15223:16:32;;15061:184;-1:-1:-1;15061:184:32:o;15250:125::-;15315:9;;;15336:10;;;15333:36;;;15349:18;;:::i;15380:402::-;15582:2;15564:21;;;15621:2;15601:18;;;15594:30;15660:34;15655:2;15640:18;;15633:62;-1:-1:-1;;;15726:2:32;15711:18;;15704:36;15772:3;15757:19;;15380:402::o;16851:128::-;16918:9;;;16939:11;;;16936:37;;;16953:18;;:::i;17699:397::-;17901:2;17883:21;;;17940:2;17920:18;;;17913:30;17979:34;17974:2;17959:18;;17952:62;-1:-1:-1;;;18045:2:32;18030:18;;18023:31;18086:3;18071:19;;17699:397::o;18869:217::-;18909:1;18935;18925:132;;18979:10;18974:3;18970:20;18967:1;18960:31;19014:4;19011:1;19004:15;19042:4;19039:1;19032:15;18925:132;-1:-1:-1;19071:9:32;;18869:217::o;19091:168::-;19164:9;;;19195;;19212:15;;;19206:22;;19192:37;19182:71;;19233:18;;:::i;20363:277::-;20430:6;20483:2;20471:9;20462:7;20458:23;20454:32;20451:52;;;20499:1;20496;20489:12;20451:52;20531:9;20525:16;20584:5;20577:13;20570:21;20563:5;20560:32;20550:60;;20606:1;20603;20596:12;24097:407;24299:2;24281:21;;;24338:2;24318:18;;;24311:30;24377:34;24372:2;24357:18;;24350:62;-1:-1:-1;;;24443:2:32;24428:18;;24421:41;24494:3;24479:19;;24097:407::o;24635:543::-;24737:2;24732:3;24729:11;24726:446;;;24773:1;24797:5;24794:1;24787:16;24841:4;24838:1;24828:18;24911:2;24899:10;24895:19;24892:1;24888:27;24882:4;24878:38;24947:4;24935:10;24932:20;24929:47;;;-1:-1:-1;24970:4:32;24929:47;25025:2;25020:3;25016:12;25013:1;25009:20;25003:4;24999:31;24989:41;;25080:82;25098:2;25091:5;25088:13;25080:82;;;25143:17;;;25124:1;25113:13;25080:82;;;25084:3;;;24635:543;;;:::o;25354:1345::-;25480:3;25474:10;25507:18;25499:6;25496:30;25493:56;;;25529:18;;:::i;:::-;25558:97;25648:6;25608:38;25640:4;25634:11;25608:38;:::i;:::-;25602:4;25558:97;:::i;:::-;25710:4;;25767:2;25756:14;;25784:1;25779:663;;;;26486:1;26503:6;26500:89;;;-1:-1:-1;26555:19:32;;;26549:26;26500:89;-1:-1:-1;;25311:1:32;25307:11;;;25303:24;25299:29;25289:40;25335:1;25331:11;;;25286:57;26602:81;;25749:944;;25779:663;24582:1;24575:14;;;24619:4;24606:18;;-1:-1:-1;;25815:20:32;;;25933:236;25947:7;25944:1;25941:14;25933:236;;;26036:19;;;26030:26;26015:42;;26128:27;;;;26096:1;26084:14;;;;25963:19;;25933:236;;;25937:3;26197:6;26188:7;26185:19;26182:201;;;26258:19;;;26252:26;-1:-1:-1;;26341:1:32;26337:14;;;26353:3;26333:24;26329:37;26325:42;26310:58;26295:74;;26182:201;-1:-1:-1;;;;;26429:1:32;26413:14;;;26409:22;26396:36;;-1:-1:-1;25354:1345:32:o",
  "language": "Solidity",
  "natspec": {
    "details": "An ERC20 contract for managing off-chain networks",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createUser(bytes32)": {
        "details": "Create a User, limit one per address & public key hash (RSA)"
      },
      "createValidator(bytes32,uint256)": {
        "details": "Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint256)": {
        "details": "Validator token unlocking, 30 day withdrawal period."
      },
      "mintTokens(address[],uint256[],uint256,address[])": {
        "details": "Mint tokens for updating state rewards, distribute 40/60 among validators and workers Updates the emission rate and halving accordingly"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "title": "SmartNodes",
    "version": 1
  },
  "offset": [
    271,
    13556
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x327 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xBA3F5443 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xD057FC19 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD8DF5DC1 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x81D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x826 JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x85F JUMPI DUP1 PUSH4 0xF79621BD EQ PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD057FC19 EQ PUSH2 0x7CB JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x7EB JUMPI DUP1 PUSH4 0xD3EECE97 EQ PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC5AB2241 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0xC8DF245A EQ PUSH2 0x74B JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0xCEA6AB98 EQ PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA3F5443 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xBC1D82A1 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xC0A77DA9 EQ PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3273D22 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xABF7BFD8 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xABF7BFD8 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0xB115F50D EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xB7797537 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3273D22 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38E56261 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x4A4FBEEC GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x62FB00FC GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x62FB00FC EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0x7071688A EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0x56891412 EQ PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38E56261 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x38ED7CFC EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x43A8D914 EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x4966D086 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20D3A0B4 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x27764547 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x21B0908B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x1D4E7793 EQ PUSH2 0x3A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x334 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x394 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x23F9 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2456 JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x7A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x46C PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x353 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x4F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x259E JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x56B PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x25E5 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x586 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x70 SLOAD SWAP1 DUP5 MSTORE PUSH1 0x76 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x5ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x58B PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST PUSH2 0x353 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x353 PUSH2 0x623 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x123C JUMP JUMPDEST PUSH2 0x353 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x679 CALLDATASIZE PUSH1 0x4 PUSH2 0x261A JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x68C CALLDATASIZE PUSH1 0x4 PUSH2 0x2657 JUMP JUMPDEST PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x6B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x18CB JUMP JUMPDEST PUSH2 0x6EE PUSH2 0x6E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x56B PUSH2 0x735 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x6F SLOAD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x58B PUSH2 0x762 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x7A3 PUSH2 0x775 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x7D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x802 CALLDATASIZE PUSH1 0x4 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x834 CALLDATASIZE PUSH1 0x4 PUSH2 0x273D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x4D0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0x2776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B6 SWAP1 PUSH2 0x2776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x903 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x903 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x91B DUP2 DUP6 DUP6 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1865C57D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x9A9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2818 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FC JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9FC JUMPI PUSH2 0x9E9 DUP6 PUSH2 0x17E6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 POP JUMPDEST DUP5 PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x55736572206E6F74207265676973746572656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2537B11030B63932B0B23C9031B932B0BA32B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x71547B79 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE2A8F6F2 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB13 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x7A PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB5B JUMPI PUSH2 0xB5B PUSH2 0x289B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB96 JUMPI PUSH2 0xB96 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xB3C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBDA PUSH2 0x24BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC03 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE DUP11 DUP4 MSTORE PUSH1 0x77 DUP5 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP5 DUP5 ADD MLOAD DUP1 MLOAD SWAP2 SWAP5 PUSH2 0xC86 SWAP5 DUP7 ADD SWAP4 POP ADD SWAP1 PUSH2 0x21BD JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xCA2 SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21BD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xCBE SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2222 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH32 0x5DD5AFF7B55A6D23DB5800AE74FAFB29F5F00976A85526C852C81900D14CF3E7 SWAP1 PUSH2 0xD0E SWAP1 TIMESTAMP SWAP1 DUP7 SWAP1 PUSH2 0x28B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x69 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD26 DUP4 PUSH2 0x28E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x78 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xD65 DUP6 DUP3 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0xD70 DUP6 DUP6 DUP6 PUSH2 0x1D19 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x48F17129 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x91E2E252 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x28F9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x91B SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xE28 SWAP1 DUP8 SWAP1 PUSH2 0x2912 JUMP JUMPDEST PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 MLOAD EQ PUSH2 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xE9D SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x21BD JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH32 0x9B5ED714C31DFCB1A9397710B6FC1842F37D94AB5DC0CCB528D9A2C97EA76F2A SWAP1 PUSH2 0xEEB SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xF4A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xF36 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFBCCA273 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFBCCA273 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDE9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2866 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206578697374732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x1047 JUMPI POP PUSH1 0x70 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x70 DUP1 SLOAD DUP6 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x80 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x67 DUP1 SLOAD DUP5 MSTORE PUSH1 0x76 DUP9 MSTORE DUP11 DUP5 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP6 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP4 MLOAD PUSH1 0x2 DUP11 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP10 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH1 0xFF NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE SWAP2 SLOAD DUP5 DUP7 MSTORE PUSH1 0x7A DUP5 MSTORE DUP7 DUP7 KECCAK256 SSTORE DUP8 DUP6 MSTORE PUSH1 0x75 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND DUP2 OR SWAP1 SWAP3 SSTORE SLOAD PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x115E DUP4 PUSH2 0x28E0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1228 CALLER DUP3 PUSH2 0x1EE7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x67 SLOAD PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642076616C696461746F722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x131B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x297E JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x1393 JUMPI PUSH1 0x71 SLOAD PUSH2 0x1334 SWAP1 TIMESTAMP PUSH2 0x2912 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6D PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x140B SWAP1 POP CALLER DUP5 PUSH2 0x2072 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH2 0x1386 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x146C JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1470 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x14D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x153C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x68 DUP2 SWAP1 SSTORE PUSH1 0x69 DUP2 SWAP1 SSTORE PUSH1 0x67 SSTORE PUSH9 0xDE0B6B3A764000000 PUSH1 0x6F SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x70 SSTORE PUSH4 0x3205B7E PUSH1 0x6E SSTORE PUSH3 0x127500 PUSH1 0x71 SSTORE PUSH1 0x0 PUSH1 0x72 DUP2 SWAP1 SSTORE JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x15B3 JUMPI PUSH2 0x15AB DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x159B JUMPI PUSH2 0x159B PUSH2 0x289B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x70 SLOAD PUSH2 0x2072 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x157D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6B SSTORE PUSH1 0x5 PUSH1 0x6C SSTORE DUP1 ISZERO PUSH2 0x15D0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH1 0x72 SLOAD LT PUSH2 0x1634 JUMPI PUSH8 0x1BC16D674EC80000 PUSH1 0x6F SLOAD GT ISZERO PUSH2 0x1634 JUMPI PUSH1 0x2 PUSH1 0x6F PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x162E SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6F SLOAD PUSH1 0x14 PUSH2 0x1647 SWAP2 SWAP1 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x6F SLOAD PUSH1 0x50 PUSH2 0x1666 SWAP2 SWAP1 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 MLOAD DUP4 PUSH2 0x1681 SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16A4 JUMPI PUSH2 0x16A4 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x2072 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1686 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x1727 JUMPI PUSH1 0x0 DUP7 DUP5 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x16DD JUMPI PUSH2 0x16DD PUSH2 0x289B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x16EF SWAP2 SWAP1 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP PUSH2 0x171E DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1710 JUMPI PUSH2 0x1710 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2072 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x16BE JUMP JUMPDEST POP PUSH1 0x72 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1738 DUP4 PUSH2 0x28E0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x17CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH2 0xD70 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x91B DUP2 DUP6 DUP6 PUSH2 0x1D19 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x32 DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x73 DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP1 DUP3 MSTORE PUSH1 0x79 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP2 PUSH2 0x18C3 DUP4 PUSH2 0x28E0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x68 SLOAD PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x67 SLOAD DUP5 LT PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x24B73B30B634B21024A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP3 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x65 SLOAD SWAP4 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19DB SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP8 SWAP3 SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 MLOAD TIMESTAMP DUP2 MSTORE DUP4 SWAP2 PUSH32 0x6E04AA702F9AF7A9A398F10D27918152DF25AC0CDC6D74321B9F7496374387A7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x77 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1AD1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1AB3 JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1B37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1BC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D13 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x1D13 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1B63 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1E57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E8E SWAP1 DUP5 SWAP1 PUSH2 0x2912 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1EDA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1F07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x297E JUMP JUMPDEST DUP1 PUSH2 0x1F27 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x1F6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x1FD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x1FDD DUP4 ADDRESS DUP5 PUSH2 0xD57 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1FFF SWAP1 DUP5 SWAP1 PUSH2 0x2912 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x6D DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x2029 SWAP1 DUP5 SWAP1 PUSH2 0x2912 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA3C JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20DA SWAP2 SWAP1 PUSH2 0x2912 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2107 SWAP1 DUP5 SWAP1 PUSH2 0x2912 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2178 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x2A1A JUMP JUMPDEST PUSH2 0x15D0 DUP3 DUP3 PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x2A1A JUMP JUMPDEST PUSH1 0x36 PUSH2 0x21B0 DUP4 DUP3 PUSH2 0x2AB5 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x143D DUP3 DUP3 PUSH2 0x2AB5 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2212 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2212 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21DD JUMP JUMPDEST POP PUSH2 0x221E SWAP3 SWAP2 POP PUSH2 0x225D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2212 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2212 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2242 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x221E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x225E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22A0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2284 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x22F4 DUP2 PUSH2 0x22C1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x233C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2317 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x236C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2302 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x238C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x23D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x23EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2431 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2415 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x246B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2476 DUP2 PUSH2 0x22C1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2486 DUP2 PUSH2 0x22C1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24B4 DUP2 PUSH2 0x22C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x24FA JUMPI PUSH2 0x24FA PUSH2 0x24BB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x251C JUMPI PUSH2 0x251C PUSH2 0x24BB JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x254C PUSH2 0x2547 DUP4 PUSH2 0x2502 JUMP JUMPDEST PUSH2 0x24D1 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x256E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2593 JUMPI DUP1 CALLDATALOAD PUSH2 0x2586 DUP2 PUSH2 0x22C1 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2573 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25DB DUP6 DUP3 DUP7 ADD PUSH2 0x2526 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x24B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2302 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x262C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x264F DUP5 DUP3 DUP6 ADD PUSH2 0x2526 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x266D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2691 DUP9 DUP4 DUP10 ADD PUSH2 0x2526 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x26A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x26B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x26C7 PUSH2 0x2547 DUP3 PUSH2 0x2502 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP12 DUP4 GT ISZERO PUSH2 0x26E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2704 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x26EB JUMP JUMPDEST SWAP8 POP POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2731 DUP8 DUP3 DUP9 ADD PUSH2 0x2526 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x275B DUP2 PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x276B DUP2 PUSH2 0x22C1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x278A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x27D1 PUSH2 0x2547 DUP4 PUSH2 0x2502 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x27F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2593 JUMPI DUP1 MLOAD PUSH2 0x280B DUP2 PUSH2 0x22C1 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x282E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x285A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2731 DUP8 DUP3 DUP9 ADD PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x264F DUP5 DUP3 DUP6 ADD PUSH2 0x27B0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x264F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2302 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x28F2 JUMPI PUSH2 0x28F2 PUSH2 0x28CA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x290B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0x28CA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0x28CA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0x28CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x24B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x143D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2A8E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AAD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A9A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ACF JUMPI PUSH2 0x2ACF PUSH2 0x24BB JUMP JUMPDEST PUSH2 0x2AE3 DUP2 PUSH2 0x2ADD DUP5 SLOAD PUSH2 0x2776 JUMP JUMPDEST DUP5 PUSH2 0x2A65 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B18 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B00 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B47 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B28 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2B65 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SIGNEXTEND DIV 0x2B 0xC3 0xC8 0x4E 0xC0 0xE6 SWAP5 SWAP12 PUSH20 0x143D048B43C61ABDBE71086E41C55EDF9B86779B PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "6": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "12": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "16": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "17": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "POP",
      "path": "26"
    },
    "18": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "21": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "LT",
      "path": "26"
    },
    "22": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x327"
    },
    "25": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "26": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "29": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "SHR",
      "path": "26"
    },
    "32": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "33": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "39": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B8"
    },
    "42": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "43": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "44": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBA3F5443"
    },
    "49": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "50": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "54": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "55": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD057FC19"
    },
    "60": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "61": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "65": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "66": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD8DF5DC1"
    },
    "71": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "72": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "76": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "77": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD8DF5DC1"
    },
    "82": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "83": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x81D"
    },
    "86": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "87": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "88": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "94": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x826"
    },
    "97": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "98": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "99": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xF0C37A59"
    },
    "104": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "105": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x85F"
    },
    "108": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "109": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "110": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xF79621BD"
    },
    "115": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "116": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x868"
    },
    "119": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "120": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "123": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "124": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "125": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "126": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD057FC19"
    },
    "131": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "132": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7CB"
    },
    "135": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "136": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "137": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD2D49C4B"
    },
    "142": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "143": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7EB"
    },
    "146": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "147": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "148": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD3EECE97"
    },
    "153": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "154": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7F4"
    },
    "157": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "158": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "161": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "162": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "163": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "164": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC5AB2241"
    },
    "169": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "170": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "174": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "175": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC5AB2241"
    },
    "180": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "181": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x742"
    },
    "184": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "185": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "186": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC8DF245A"
    },
    "191": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "192": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x74B"
    },
    "195": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "196": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "197": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xCDF64A76"
    },
    "202": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "203": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x754"
    },
    "206": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "207": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "208": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xCEA6AB98"
    },
    "213": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "214": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x767"
    },
    "217": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "218": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "221": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "222": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "223": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "224": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBA3F5443"
    },
    "229": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "230": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x714"
    },
    "233": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "234": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "235": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBC1D82A1"
    },
    "240": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "241": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x727"
    },
    "244": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "245": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "246": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC0A77DA9"
    },
    "251": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "252": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x73A"
    },
    "255": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "256": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "259": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "260": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "261": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "262": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA3273D22"
    },
    "267": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "268": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "272": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "273": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xABF7BFD8"
    },
    "278": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "279": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "283": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "284": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xABF7BFD8"
    },
    "289": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "290": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6B7"
    },
    "293": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "294": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "295": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB115F50D"
    },
    "300": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "301": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6CA"
    },
    "304": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "305": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "306": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB5CB15F7"
    },
    "311": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "312": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6D3"
    },
    "315": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "316": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "317": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB7797537"
    },
    "322": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "323": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6DB"
    },
    "326": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "327": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "330": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "331": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "332": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "333": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA3273D22"
    },
    "338": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "339": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x67E"
    },
    "342": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "343": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "344": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA457C2D7"
    },
    "349": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "350": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x691"
    },
    "353": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "354": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "355": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA9059CBB"
    },
    "360": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "361": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6A4"
    },
    "364": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "365": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "368": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "369": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "370": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "371": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x70A08231"
    },
    "376": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "377": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x615"
    },
    "380": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "381": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "382": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7C405325"
    },
    "387": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "388": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x63E"
    },
    "391": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "392": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "393": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x8F029D5E"
    },
    "398": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "399": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x651"
    },
    "402": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "403": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "404": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x95D89B41"
    },
    "409": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "410": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x65A"
    },
    "413": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "414": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "415": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x96AFC450"
    },
    "420": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "421": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x662"
    },
    "424": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "425": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "426": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA224CEE7"
    },
    "431": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "432": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x66B"
    },
    "435": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "436": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "439": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "440": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "441": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "442": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x38E56261"
    },
    "447": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "448": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x277"
    },
    "451": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "452": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "453": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4A4FBEEC"
    },
    "458": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "459": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x230"
    },
    "462": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "463": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "464": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x62FB00FC"
    },
    "469": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "470": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20A"
    },
    "473": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "474": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "475": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x62FB00FC"
    },
    "480": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "481": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5DF"
    },
    "484": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "485": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "486": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6C9C2FAF"
    },
    "491": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "492": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5F2"
    },
    "495": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "496": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "497": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6E27D889"
    },
    "502": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "503": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5FA"
    },
    "506": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "507": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "508": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7071688A"
    },
    "513": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "514": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x60D"
    },
    "517": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "518": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "520": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "521": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "522": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "523": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "524": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4A4FBEEC"
    },
    "529": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "530": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58D"
    },
    "533": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "534": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "535": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x50355D76"
    },
    "540": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "541": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5CD"
    },
    "544": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "545": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "546": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x56891412"
    },
    "551": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "552": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5D6"
    },
    "555": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "556": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "558": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "559": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "560": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "561": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "562": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x38E56261"
    },
    "567": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "568": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4A7"
    },
    "571": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "572": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "573": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x38ED7CFC"
    },
    "578": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "579": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4E8"
    },
    "582": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "583": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "584": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x39509351"
    },
    "589": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "590": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x53D"
    },
    "593": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "594": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "595": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x43A8D914"
    },
    "600": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "601": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x550"
    },
    "604": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "605": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "606": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4966D086"
    },
    "611": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "612": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x563"
    },
    "615": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "616": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "617": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x497DFE63"
    },
    "622": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "623": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x578"
    },
    "626": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "627": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "629": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "630": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "631": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "632": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "633": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x20D3A0B4"
    },
    "638": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "639": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2E4"
    },
    "642": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "643": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "644": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x27764547"
    },
    "649": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "GT",
      "path": "26"
    },
    "650": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2BE"
    },
    "653": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "654": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "655": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x27764547"
    },
    "660": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "661": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3F3"
    },
    "664": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "665": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "666": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x313CE567"
    },
    "671": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "672": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x413"
    },
    "675": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "676": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "677": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x35AA2E44"
    },
    "682": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "683": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x422"
    },
    "686": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "687": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "688": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x37DEEA70"
    },
    "693": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "694": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x49F"
    },
    "697": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "698": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "700": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "701": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "702": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "703": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "704": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x20D3A0B4"
    },
    "709": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "710": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3C4"
    },
    "713": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "714": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "715": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x21B0908B"
    },
    "720": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "721": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3CD"
    },
    "724": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "725": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "726": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x23B872DD"
    },
    "731": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "732": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3E0"
    },
    "735": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "736": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "738": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "739": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "740": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "741": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "742": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6FDDE03"
    },
    "747": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "748": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x32C"
    },
    "751": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "752": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "753": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x8AC5256"
    },
    "758": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "759": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34A"
    },
    "762": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "763": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "764": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x95EA7B3"
    },
    "769": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "770": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x361"
    },
    "773": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "774": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "775": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x18160DDD"
    },
    "780": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "781": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x384"
    },
    "784": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "785": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "786": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1865C57D"
    },
    "791": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "792": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x38C"
    },
    "795": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "796": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "797": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1D4E7793"
    },
    "802": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "EQ",
      "path": "26"
    },
    "803": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3A4"
    },
    "806": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "807": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "808": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "810": {
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "811": {
      "first_revert": true,
      "fn": null,
      "offset": [
        271,
        13556
      ],
      "op": "REVERT",
      "path": "26"
    },
    "812": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "813": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334"
    },
    "816": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87B"
    },
    "819": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "820": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "821": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "824": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "827": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "828": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "829": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2272"
    },
    "832": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "833": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "834": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "836": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "837": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "838": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "839": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "840": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "841": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "842": {
      "offset": [
        678,
        706
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "843": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "846": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6C"
    },
    "848": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "849": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "DUP2",
      "path": "26"
    },
    "850": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "JUMP",
      "path": "26"
    },
    "851": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "852": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "854": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "855": {
      "op": "SWAP1"
    },
    "856": {
      "op": "DUP2"
    },
    "857": {
      "op": "MSTORE"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "offset": [
        678,
        706
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "864": {
      "op": "JUMP"
    },
    "865": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "866": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "869": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F"
    },
    "872": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "873": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "875": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D6"
    },
    "878": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "879": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "880": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x90D"
    },
    "883": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "885": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "887": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "888": {
      "op": "SWAP1"
    },
    "889": {
      "op": "ISZERO"
    },
    "890": {
      "op": "ISZERO"
    },
    "891": {
      "op": "DUP2"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "899": {
      "op": "JUMP"
    },
    "900": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "901": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "903": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "904": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "907": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "908": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "909": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x394"
    },
    "912": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x927"
    },
    "915": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13377,
        13554
      ],
      "op": "JUMP",
      "path": "26"
    },
    "916": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "917": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "919": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "920": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "923": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "924": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "925": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "926": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "927": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "928": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2347"
    },
    "931": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13377,
        13554
      ],
      "op": "JUMP",
      "path": "26"
    },
    "932": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3B7"
    },
    "936": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3B2"
    },
    "939": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "940": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "942": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2376"
    },
    "945": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMP",
      "path": "26"
    },
    "946": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "947": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9B7"
    },
    "950": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMP",
      "path": "26"
    },
    "951": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "952": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "954": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "955": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "958": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "960": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x23F9"
    },
    "963": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMP",
      "path": "26"
    },
    "964": {
      "offset": [
        2299,
        2326
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "965": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2299,
        2326
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "968": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2299,
        2326
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x71"
    },
    "970": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2299,
        2326
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "971": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2299,
        2326
      ],
      "op": "DUP2",
      "path": "26"
    },
    "972": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2299,
        2326
      ],
      "op": "JUMP",
      "path": "26"
    },
    "973": {
      "offset": [
        2671,
        2698
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "974": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "977": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3DB"
    },
    "980": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "981": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "983": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "986": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMP",
      "path": "26"
    },
    "987": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "988": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD36"
    },
    "991": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMP",
      "path": "26"
    },
    "992": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "993": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "996": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EE"
    },
    "999": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1000": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1002": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2456"
    },
    "1005": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1006": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1007": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD57"
    },
    "1010": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1011": {
      "offset": [
        2787,
        2842
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1012": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1015": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x401"
    },
    "1018": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1019": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1021": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2497"
    },
    "1024": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        2787,
        2842
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1025": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1026": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7A"
    },
    "1028": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1030": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1031": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1033": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1034": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1035": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1036": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1038": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1039": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1040": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1041": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1042": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2787,
        2842
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1043": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1044": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1046": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1047": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "1057": {
      "op": "JUMP"
    },
    "1058": {
      "offset": [
        2577,
        2624
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1059": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x46C"
    },
    "1062": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x430"
    },
    "1065": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1066": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1068": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1071": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2577,
        2624
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1072": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1073": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "1075": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1077": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1078": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1080": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1081": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1082": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1083": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1085": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1086": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1087": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1088": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1089": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "1091": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1092": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "ADD",
      "path": "26"
    },
    "1093": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1094": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1096": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1097": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "ADD",
      "path": "26"
    },
    "1098": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1099": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "1101": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1102": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "ADD",
      "path": "26"
    },
    "1103": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1104": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1106": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1107": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "1108": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "ADD",
      "path": "26"
    },
    "1109": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1110": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1111": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1118": {
      "op": "SHL"
    },
    "1119": {
      "op": "SUB"
    },
    "1120": {
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1121": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1122": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "AND",
      "path": "26"
    },
    "1123": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1124": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1125": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1126": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1127": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "1129": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "AND",
      "path": "26"
    },
    "1130": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "DUP6",
      "path": "26"
    },
    "1131": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1132": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1133": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1135": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1136": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2577,
        2624
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1137": {
      "op": "SWAP6"
    },
    "1138": {
      "op": "DUP7"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "op": "SWAP1"
    },
    "1149": {
      "op": "SWAP5"
    },
    "1150": {
      "op": "AND"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1153": {
      "op": "DUP7"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "op": "MSTORE"
    },
    "1156": {
      "op": "SWAP3"
    },
    "1157": {
      "op": "DUP5"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "op": "SWAP2"
    },
    "1160": {
      "op": "SWAP1"
    },
    "1161": {
      "op": "SWAP2"
    },
    "1162": {
      "op": "MSTORE"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1165": {
      "op": "DUP4"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "op": "MSTORE"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1170": {
      "op": "AND"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1173": {
      "op": "DUP3"
    },
    "1174": {
      "op": "ADD"
    },
    "1175": {
      "op": "MSTORE"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "offset": [
        2577,
        2624
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1182": {
      "op": "JUMP"
    },
    "1183": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12693,
        12829
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1184": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12693,
        12829
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1187": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12693,
        12829
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD7B"
    },
    "1190": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        12693,
        12829
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1191": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1192": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4D0"
    },
    "1195": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4B5"
    },
    "1198": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1199": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1201": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1204": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1205": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1206": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "1208": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1210": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1211": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1213": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1214": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1215": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1216": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1218": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1219": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1220": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "offset": [
        2514,
        2571
      ],
      "op": "AND",
      "path": "26"
    },
    "1230": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1231": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1232": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1233": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1235": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1242": {
      "op": "SHL"
    },
    "1243": {
      "op": "SUB"
    },
    "1244": {
      "op": "SWAP1"
    },
    "1245": {
      "op": "SWAP2"
    },
    "1246": {
      "op": "AND"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "op": "ADD"
    },
    "1252": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1255": {
      "op": "JUMP"
    },
    "1256": {
      "offset": [
        2630,
        2665
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1257": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x51E"
    },
    "1260": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4F6"
    },
    "1263": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1264": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1266": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1269": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        2630,
        2665
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1270": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1271": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "1273": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1275": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1276": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1278": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1279": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1280": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1281": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1283": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1284": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1285": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1286": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1287": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1289": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1290": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1291": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "ADD",
      "path": "26"
    },
    "1292": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "SUB"
    },
    "1301": {
      "offset": [
        2630,
        2665
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1302": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1303": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "AND",
      "path": "26"
    },
    "1304": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1305": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "1307": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "AND",
      "path": "26"
    },
    "1308": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1309": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1310": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1311": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1313": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1314": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2630,
        2665
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "op": "SWAP1"
    },
    "1324": {
      "op": "SWAP4"
    },
    "1325": {
      "op": "AND"
    },
    "1326": {
      "op": "DUP4"
    },
    "1327": {
      "op": "MSTORE"
    },
    "1328": {
      "op": "SWAP1"
    },
    "1329": {
      "op": "ISZERO"
    },
    "1330": {
      "op": "ISZERO"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1333": {
      "op": "DUP4"
    },
    "1334": {
      "op": "ADD"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "ADD"
    },
    "1337": {
      "offset": [
        2630,
        2665
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1340": {
      "op": "JUMP"
    },
    "1341": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1342": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1345": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54B"
    },
    "1348": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1349": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1351": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D6"
    },
    "1354": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1355": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1356": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEE"
    },
    "1359": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1360": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1361": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3B7"
    },
    "1364": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x55E"
    },
    "1367": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1368": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1370": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x259E"
    },
    "1373": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7323,
        7767
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1374": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1375": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE2D"
    },
    "1378": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7323,
        7767
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1379": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1380": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x56B"
    },
    "1383": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF57"
    },
    "1386": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13232,
        13371
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1387": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1388": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1390": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1391": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1394": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1395": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1396": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x25E5"
    },
    "1399": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13232,
        13371
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1400": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1401": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1404": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x586"
    },
    "1407": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1408": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1410": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x25F8"
    },
    "1413": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        4901,
        5797
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1414": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1415": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFC9"
    },
    "1418": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        4901,
        5797
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1419": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1420": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "STOP",
      "path": "26"
    },
    "1421": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1422": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x374"
    },
    "1425": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x59B"
    },
    "1428": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1429": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1431": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2497"
    },
    "1434": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        13037,
        13226
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1435": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "op": "SUB"
    },
    "1444": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "AND",
      "path": "26"
    },
    "1445": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13101,
        13105
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1447": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1448": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1449": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1450": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13151
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7A"
    },
    "1452": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1454": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1455": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1456": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1457": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1459": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1460": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1461": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1462": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13131,
        13166
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1463": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13209,
        13219
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 2,
      "value": "0x70"
    },
    "1465": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13209,
        13219
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1466": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1467": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1468": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1469": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "1471": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1472": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1473": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1474": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1475": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1476": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13198
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1477": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1479": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13205
      ],
      "op": "ADD",
      "path": "26"
    },
    "1480": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13205
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1481": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13219
      ],
      "op": "LT",
      "path": "26"
    },
    "1482": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13219
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1483": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13183,
        13219
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1484": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13037,
        13226
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1485": {
      "offset": [
        576,
        601
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1486": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1489": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x69"
    },
    "1491": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1492": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1493": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1494": {
      "offset": [
        712,
        738
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1495": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        712,
        738
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1498": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        712,
        738
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6D"
    },
    "1500": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        712,
        738
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1501": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        712,
        738
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1502": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        712,
        738
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1503": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1504": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1507": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5ED"
    },
    "1510": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1511": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1513": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2497"
    },
    "1516": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "i",
      "offset": [
        12179,
        12473
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1517": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1518": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1167"
    },
    "1521": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "i",
      "offset": [
        12179,
        12473
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1522": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12936,
        13031
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1523": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12936,
        13031
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1526": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12936,
        13031
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11DE"
    },
    "1529": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        12936,
        13031
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1530": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1531": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1534": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x608"
    },
    "1537": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1538": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1540": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1543": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8735,
        8828
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1544": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1545": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x121E"
    },
    "1548": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8735,
        8828
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1549": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12580,
        12687
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1550": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12580,
        12687
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1553": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12580,
        12687
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x122B"
    },
    "1556": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12580,
        12687
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1557": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1558": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "1561": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x623"
    },
    "1564": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1565": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1567": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2497"
    },
    "1570": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1571": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "op": "SUB"
    },
    "1580": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 3
    },
    "1581": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1583": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1584": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1585": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1586": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1588": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1590": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1591": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1593": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1594": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1595": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1596": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1597": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1598": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1599": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1602": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x64C"
    },
    "1605": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1606": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1608": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1611": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1612": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1613": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x123C"
    },
    "1616": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1617": {
      "offset": [
        505,
        538
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1618": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1621": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x67"
    },
    "1623": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1624": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1625": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1626": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1627": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334"
    },
    "1630": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1442"
    },
    "1633": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1634": {
      "offset": [
        2140,
        2167
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1635": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2140,
        2167
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1638": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2140,
        2167
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "1640": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2140,
        2167
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1641": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2140,
        2167
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1642": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2140,
        2167
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1643": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1644": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1647": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x679"
    },
    "1650": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1651": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1653": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x261A"
    },
    "1656": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3039,
        3872
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1657": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1658": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1451"
    },
    "1661": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3039,
        3872
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1662": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1663": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1666": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x68C"
    },
    "1669": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1670": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1672": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2657"
    },
    "1675": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10316,
        11388
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1676": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1677": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15D4"
    },
    "1680": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10316,
        11388
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1681": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1682": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1685": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69F"
    },
    "1688": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1689": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1691": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D6"
    },
    "1694": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1695": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1696": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1746"
    },
    "1699": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1700": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1701": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1704": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B2"
    },
    "1707": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1708": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1710": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D6"
    },
    "1713": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1714": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1715": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17D8"
    },
    "1718": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1719": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1720": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1723": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6C5"
    },
    "1726": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1727": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1729": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1732": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4299,
        4776
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1733": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1734": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17E6"
    },
    "1737": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4299,
        4776
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1738": {
      "offset": [
        2332,
        2367
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1739": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2332,
        2367
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1742": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2332,
        2367
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x72"
    },
    "1744": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2332,
        2367
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1745": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2332,
        2367
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1746": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2332,
        2367
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1747": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12479,
        12574
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1748": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12479,
        12574
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1751": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12479,
        12574
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18CB"
    },
    "1754": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12479,
        12574
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1755": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1756": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6EE"
    },
    "1759": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6E9"
    },
    "1762": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1763": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1765": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1768": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        11677,
        12173
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1769": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1770": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18DC"
    },
    "1773": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        11677,
        12173
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1774": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1775": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1777": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1778": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1779": {
      "op": "SWAP4"
    },
    "1780": {
      "op": "ISZERO"
    },
    "1781": {
      "op": "ISZERO"
    },
    "1782": {
      "op": "DUP5"
    },
    "1783": {
      "op": "MSTORE"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1786": {
      "op": "DUP5"
    },
    "1787": {
      "op": "ADD"
    },
    "1788": {
      "op": "SWAP3"
    },
    "1789": {
      "op": "SWAP1"
    },
    "1790": {
      "op": "SWAP3"
    },
    "1791": {
      "op": "MSTORE"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "SUB"
    },
    "1800": {
      "op": "AND"
    },
    "1801": {
      "op": "SWAP1"
    },
    "1802": {
      "op": "DUP3"
    },
    "1803": {
      "op": "ADD"
    },
    "1804": {
      "op": "MSTORE"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1811": {
      "op": "JUMP"
    },
    "1812": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1813": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1816": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x722"
    },
    "1819": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1820": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1822": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1825": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7773,
        7971
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1826": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1827": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x19F1"
    },
    "1830": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7773,
        7971
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1831": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1832": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x56B"
    },
    "1835": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x735"
    },
    "1838": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1839": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1841": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1844": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11465,
        11671
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1845": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1846": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A6F"
    },
    "1849": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11465,
        11671
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1850": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12835,
        12930
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1851": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12911,
        12923
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 4,
      "value": "0x6F"
    },
    "1853": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12911,
        12923
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1854": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12835,
        12930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1857": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12835,
        12930
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1858": {
      "offset": [
        644,
        672
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1859": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1862": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6B"
    },
    "1864": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1865": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1866": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1867": {
      "offset": [
        2054,
        2076
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1868": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2054,
        2076
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1871": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2054,
        2076
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "1873": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2054,
        2076
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1874": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2054,
        2076
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1875": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2054,
        2076
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1876": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1877": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58B"
    },
    "1880": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x762"
    },
    "1883": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1884": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1886": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2497"
    },
    "1889": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        3878,
        4204
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1890": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1891": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1ADE"
    },
    "1894": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        3878,
        4204
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1895": {
      "offset": [
        2423,
        2460
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1896": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7A3"
    },
    "1899": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x775"
    },
    "1902": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1903": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1905": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "1908": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2423,
        2460
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1909": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1910": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x73"
    },
    "1912": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1914": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1915": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1917": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1918": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1919": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1920": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1922": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1923": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1924": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1925": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1926": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "1928": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1929": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "ADD",
      "path": "26"
    },
    "1930": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1931": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1933": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1934": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1935": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "ADD",
      "path": "26"
    },
    "1936": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1946": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1947": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "AND",
      "path": "26"
    },
    "1948": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1949": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1950": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "1952": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "AND",
      "path": "26"
    },
    "1953": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1954": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1955": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1956": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1958": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1959": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2423,
        2460
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "op": "SWAP1"
    },
    "1969": {
      "op": "SWAP5"
    },
    "1970": {
      "op": "AND"
    },
    "1971": {
      "op": "DUP5"
    },
    "1972": {
      "op": "MSTORE"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1975": {
      "op": "DUP5"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "SWAP3"
    },
    "1978": {
      "op": "SWAP1"
    },
    "1979": {
      "op": "SWAP3"
    },
    "1980": {
      "op": "MSTORE"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1983": {
      "op": "AND"
    },
    "1984": {
      "op": "SWAP1"
    },
    "1985": {
      "op": "DUP3"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "op": "MSTORE"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "offset": [
        2423,
        2460
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1994": {
      "op": "JUMP"
    },
    "1995": {
      "offset": [
        2729,
        2781
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1996": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1999": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7D9"
    },
    "2002": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "2003": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2005": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2497"
    },
    "2008": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2729,
        2781
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2009": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2010": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "2012": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2014": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2015": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2017": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2018": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2019": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2020": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2022": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2023": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2024": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2025": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2026": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2729,
        2781
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2027": {
      "offset": [
        607,
        638
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2028": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "2031": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6A"
    },
    "2033": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2034": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2035": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2036": {
      "offset": [
        2466,
        2508
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2037": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4D0"
    },
    "2040": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x802"
    },
    "2043": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "2044": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2046": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x243D"
    },
    "2049": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2466,
        2508
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2050": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2051": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x74"
    },
    "2053": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2055": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2056": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2058": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2059": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2060": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2061": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2063": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2064": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2065": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2072": {
      "op": "SHL"
    },
    "2073": {
      "op": "SUB"
    },
    "2074": {
      "offset": [
        2466,
        2508
      ],
      "op": "AND",
      "path": "26"
    },
    "2075": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2076": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2466,
        2508
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2077": {
      "offset": [
        2224,
        2249
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2078": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2224,
        2249
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "2081": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2224,
        2249
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x70"
    },
    "2083": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2224,
        2249
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2084": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2224,
        2249
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2085": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2224,
        2249
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2086": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2087": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "2090": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x834"
    },
    "2093": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2094": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2096": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273D"
    },
    "2099": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2100": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2107": {
      "op": "SHL"
    },
    "2108": {
      "op": "SUB"
    },
    "2109": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "2110": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2111": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "2112": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2114": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2115": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2116": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2117": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "2119": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2121": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2122": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2123": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2124": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2126": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2127": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2128": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2129": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2130": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2131": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2132": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "2133": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2134": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2135": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2136": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2137": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2138": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2139": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2140": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2141": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2142": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2143": {
      "offset": [
        544,
        570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2144": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "2147": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x68"
    },
    "2149": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2150": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2151": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2152": {
      "offset": [
        416,
        455
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2153": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "2155": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2156": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4D0"
    },
    "2159": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "op": "SUB"
    },
    "2168": {
      "offset": [
        416,
        455
      ],
      "op": "AND",
      "path": "26"
    },
    "2169": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2170": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2171": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2172": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2174": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x36"
    },
    "2176": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2177": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2178": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "2181": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2182": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2776"
    },
    "2185": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2186": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2187": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2188": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2190": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2191": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2193": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2194": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2195": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2196": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2197": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2199": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2200": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2202": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2203": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2204": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2205": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2206": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2208": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2209": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2210": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2211": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2212": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2213": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2214": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2215": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2216": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2218": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2219": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2220": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2221": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2222": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B6"
    },
    "2225": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2226": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2776"
    },
    "2229": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2230": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2231": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2232": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2233": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "2236": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2237": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2238": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2240": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "2241": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D8"
    },
    "2244": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2245": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2248": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2249": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2250": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2251": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2252": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2253": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2254": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2255": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2256": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2258": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2259": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2260": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "2263": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2264": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2265": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2266": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2267": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2268": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2269": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2271": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2272": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2274": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2276": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2277": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2278": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2279": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2280": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2281": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2282": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2283": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2284": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2286": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2287": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2288": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2290": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2291": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2292": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2293": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "2294": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E6"
    },
    "2297": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2298": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2299": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2300": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "2301": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2303": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "2304": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2305": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2306": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2307": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2308": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2309": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2310": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2311": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2312": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2313": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2314": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2315": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2316": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2317": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2318": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2320": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "2321": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x91B"
    },
    "2324": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2325": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2326": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2327": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B63"
    },
    "2330": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2331": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2332": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2334": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2335": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2336": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2337": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2338": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2339": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2340": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2341": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2342": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2343": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2344": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13444,
        13451
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2346": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13453,
        13460
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2347": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13462,
        13469
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2349": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13471,
        13487
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2351": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 10,
      "value": "0x65"
    },
    "2353": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2355": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2356": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2357": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2358": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100"
    },
    "2361": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "EXP",
      "path": "26"
    },
    "2362": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2363": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "DIV",
      "path": "26"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2370": {
      "op": "SHL"
    },
    "2371": {
      "op": "SUB"
    },
    "2372": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13536
      ],
      "op": "AND",
      "path": "26"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13545
      ],
      "op": "AND",
      "path": "26"
    },
    "2382": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13545
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1865C57D"
    },
    "2387": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2389": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2390": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2391": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "2396": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "AND",
      "path": "26"
    },
    "2397": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "2399": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "SHL",
      "path": "26"
    },
    "2400": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2401": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2402": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2404": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "ADD",
      "path": "26"
    },
    "2405": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2407": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2409": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2410": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2411": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2412": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "SUB",
      "path": "26"
    },
    "2413": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2414": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2415": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "GAS",
      "path": "26"
    },
    "2416": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "2417": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2418": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2419": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2420": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x981"
    },
    "2423": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2424": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2425": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2427": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2428": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2429": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2430": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2432": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2433": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2434": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2435": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2436": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2437": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2438": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2440": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2441": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2442": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2444": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2445": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2446": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2448": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2449": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2450": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2451": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "ADD",
      "path": "26"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2454": {
      "op": "NOT"
    },
    "2455": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "AND",
      "path": "26"
    },
    "2456": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2457": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "ADD",
      "path": "26"
    },
    "2458": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2460": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2461": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9A9"
    },
    "2464": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2465": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2466": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2467": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "ADD",
      "path": "26"
    },
    "2468": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2469": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2818"
    },
    "2472": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13510,
        13547
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2473": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13510,
        13547
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2474": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2475": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2476": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2477": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2478": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2479": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2480": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2481": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13503,
        13547
      ],
      "op": "POP",
      "path": "26"
    },
    "2482": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2483": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2484": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2485": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13377,
        13554
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2486": {
      "fn": "SmartnodesCore.getState",
      "jump": "o",
      "offset": [
        13377,
        13554
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2487": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2488": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        6157
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "2490": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        6157
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2491": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5988,
        6017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2493": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5988,
        6017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2500": {
      "op": "SHL"
    },
    "2501": {
      "op": "SUB"
    },
    "2502": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6133,
        6157
      ],
      "op": "AND",
      "path": "26"
    },
    "2503": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6119,
        6129
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2504": {
      "branch": 117,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6119,
        6157
      ],
      "op": "EQ",
      "path": "26"
    },
    "2505": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6115,
        6343
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9FC"
    },
    "2508": {
      "branch": 117,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6115,
        6343
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2509": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6195,
        6205
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2510": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6218,
        6219
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2512": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2513": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2514": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2515": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6194
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "2517": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2519": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2520": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2522": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2523": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2524": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6177,
        6206
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2525": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6173,
        6333
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9FC"
    },
    "2528": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6173,
        6333
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2529": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6240,
        6260
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 11,
      "value": "0x9E9"
    },
    "2532": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6251,
        6259
      ],
      "op": "DUP6",
      "path": "26"
    },
    "2533": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6240,
        6250
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17E6"
    },
    "2536": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6240,
        6260
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2537": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6240,
        6260
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2538": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6307,
        6317
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 12
    },
    "2539": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2541": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2542": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2543": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2544": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6306
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "2546": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2548": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2549": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2551": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2552": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2553": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2554": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6289,
        6318
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "2555": {
      "op": "POP"
    },
    "2556": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6173,
        6333
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2557": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6361,
        6369
      ],
      "op": "DUP5",
      "path": "26",
      "statement": 13
    },
    "2558": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "2561": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2562": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2564": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2573": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2576": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2578": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2579": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "ADD",
      "path": "26"
    },
    "2580": {
      "op": "MSTORE"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2585": {
      "op": "DUP3"
    },
    "2586": {
      "op": "ADD"
    },
    "2587": {
      "op": "MSTORE"
    },
    "2588": {
      "op": "PUSH20",
      "value": "0x55736572206E6F74207265676973746572656421"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2611": {
      "op": "SHL"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2621": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2623": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2624": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2625": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2626": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "SUB",
      "path": "26"
    },
    "2627": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2628": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "26"
    },
    "2629": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6353,
        6408
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2630": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6458,
        6459
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 14,
      "value": "0x0"
    },
    "2632": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2633": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2634": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2635": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6430
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "2637": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2639": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2640": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2642": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2643": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6439
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2644": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6446
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6446
      ],
      "op": "AND",
      "path": "26"
    },
    "2654": {
      "branch": 118,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6426,
        6460
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2655": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAA1"
    },
    "2658": {
      "branch": 118,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2659": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2661": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2668": {
      "op": "SHL"
    },
    "2669": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2670": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2673": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2675": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2676": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "ADD",
      "path": "26"
    },
    "2677": {
      "op": "MSTORE"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2682": {
      "op": "DUP3"
    },
    "2683": {
      "op": "ADD"
    },
    "2684": {
      "op": "MSTORE"
    },
    "2685": {
      "op": "PUSH20",
      "value": "0x2537B11030B63932B0B23C9031B932B0BA32B217"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2711": {
      "op": "DUP3"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "2720": {
      "op": "JUMP"
    },
    "2721": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6418,
        6485
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2722": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6631
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x65"
    },
    "2724": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6631
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2725": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2727": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2728": {
      "op": "PUSH4",
      "value": "0x71547B79"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2735": {
      "op": "SHL"
    },
    "2736": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2737": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2738": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6631
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2740": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2742": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2743": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "ADD",
      "path": "26"
    },
    "2744": {
      "op": "MSTORE"
    },
    "2745": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6570,
        6602
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2747": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6570,
        6602
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "op": "SUB"
    },
    "2756": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6631
      ],
      "op": "AND",
      "path": "26"
    },
    "2757": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6631
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2758": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6663
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xE2A8F6F2"
    },
    "2763": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6663
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2766": {
      "op": "ADD"
    },
    "2767": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2769": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2771": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2772": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2773": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2774": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "SUB",
      "path": "26"
    },
    "2775": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2776": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2777": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "GAS",
      "path": "26"
    },
    "2778": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "2779": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2780": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2781": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2782": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAEB"
    },
    "2785": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2786": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2787": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2789": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2790": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2791": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2792": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2794": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2795": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2796": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "POP",
      "path": "26"
    },
    "2797": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "POP",
      "path": "26"
    },
    "2798": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "POP",
      "path": "26"
    },
    "2799": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "POP",
      "path": "26"
    },
    "2800": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2802": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2803": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2804": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2806": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2807": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2808": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2810": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2811": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2812": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2813": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "ADD",
      "path": "26"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2816": {
      "op": "NOT"
    },
    "2817": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "AND",
      "path": "26"
    },
    "2818": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2819": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "ADD",
      "path": "26"
    },
    "2820": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2822": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2823": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB13"
    },
    "2826": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2827": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2828": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2829": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "ADD",
      "path": "26"
    },
    "2830": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2831": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2866"
    },
    "2834": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6605,
        6666
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2835": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6605,
        6666
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2836": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2838": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2839": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2840": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6723,
        6724
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2842": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2843": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2844": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2845": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2846": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2847": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "ADD",
      "path": "26"
    },
    "2848": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2849": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2850": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2851": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6570,
        6666
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2852": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6570,
        6666
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2853": {
      "op": "POP"
    },
    "2854": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6676,
        6706
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2856": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6676,
        6706
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2857": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2858": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2860": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2861": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2862": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "ADD",
      "path": "26"
    },
    "2863": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2864": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2865": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "2866": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2867": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "2868": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "ADD",
      "path": "26"
    },
    "2869": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6709,
        6725
      ],
      "op": "POP",
      "path": "26"
    },
    "2872": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6676,
        6725
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2873": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6676,
        6725
      ],
      "op": "POP",
      "path": "26"
    },
    "2874": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6770,
        6779
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2876": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6765,
        6902
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2877": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6789,
        6804
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2878": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6789,
        6811
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2879": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6785,
        6786
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2880": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6785,
        6811
      ],
      "op": "LT",
      "path": "26"
    },
    "2881": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6765,
        6902
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2882": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6765,
        6902
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBA9"
    },
    "2885": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6765,
        6902
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2886": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6871
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 15,
      "value": "0x7A"
    },
    "2888": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2890": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6887
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2891": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6888,
        6889
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2892": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2893": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2894": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2895": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "LT",
      "path": "26"
    },
    "2896": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB5B"
    },
    "2899": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2900": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB5B"
    },
    "2903": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x289B"
    },
    "2906": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6872,
        6890
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2907": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2908": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2910": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "MUL",
      "path": "26"
    },
    "2911": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2913": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "ADD",
      "path": "26"
    },
    "2914": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "ADD",
      "path": "26"
    },
    "2915": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6872,
        6890
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "op": "SUB"
    },
    "2924": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "AND",
      "path": "26"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2931": {
      "op": "SHL"
    },
    "2932": {
      "op": "SUB"
    },
    "2933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "AND",
      "path": "26"
    },
    "2934": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2935": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2936": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2938": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "ADD",
      "path": "26"
    },
    "2939": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2940": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2941": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2942": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2944": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "ADD",
      "path": "26"
    },
    "2945": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2947": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2948": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6851,
        6891
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2949": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6845
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2950": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6846,
        6847
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2951": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2952": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2953": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2954": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "LT",
      "path": "26"
    },
    "2955": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB96"
    },
    "2958": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB96"
    },
    "2962": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x289B"
    },
    "2965": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6832,
        6848
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2966": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2967": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2969": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2970": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2971": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "MUL",
      "path": "26"
    },
    "2972": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2973": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2974": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2975": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "ADD",
      "path": "26"
    },
    "2976": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6848
      ],
      "op": "ADD",
      "path": "26"
    },
    "2977": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6832,
        6891
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2978": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6813,
        6816
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 16,
      "value": "0x1"
    },
    "2980": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6813,
        6816
      ],
      "op": "ADD",
      "path": "26"
    },
    "2981": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6765,
        6902
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB3C"
    },
    "2984": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6765,
        6902
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2985": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6765,
        6902
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2986": {
      "op": "POP"
    },
    "2987": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 17,
      "value": "0x40"
    },
    "2989": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2990": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2991": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA0"
    },
    "2993": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2994": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "2995": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2996": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2997": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6999,
        7009
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2998": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2999": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3000": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3002": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3003": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3004": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3005": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3006": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3007": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3008": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3009": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3010": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7091,
        7102
      ],
      "op": "DUP6",
      "path": "26"
    },
    "3011": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3020": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3021": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "GT",
      "path": "26"
    },
    "3022": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3023": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBDA"
    },
    "3026": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3027": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBDA"
    },
    "3030": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24BB"
    },
    "3033": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7077,
        7110
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3034": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3035": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3037": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3038": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3039": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3040": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3041": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3042": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3043": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3045": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "MUL",
      "path": "26"
    },
    "3046": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3048": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "ADD",
      "path": "26"
    },
    "3049": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3050": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "ADD",
      "path": "26"
    },
    "3051": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3053": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3054": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3055": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3056": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC03"
    },
    "3059": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3060": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3061": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3063": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "ADD",
      "path": "26"
    },
    "3064": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3066": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3067": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "MUL",
      "path": "26"
    },
    "3068": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3069": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "3070": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3071": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "3072": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "ADD",
      "path": "26"
    },
    "3073": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3074": {
      "op": "POP"
    },
    "3075": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3076": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7077,
        7110
      ],
      "op": "POP",
      "path": "26"
    },
    "3077": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3078": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3079": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3081": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3082": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7136,
        7147
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3083": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7136,
        7147
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3084": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3085": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3086": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3088": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MUL",
      "path": "26"
    },
    "3089": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3091": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3092": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3094": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3095": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3096": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3097": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3098": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3100": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3101": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3102": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3103": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3104": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3105": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3106": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3107": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3108": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3109": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3111": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3112": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3113": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3114": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3116": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MUL",
      "path": "26"
    },
    "3117": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3118": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3119": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3120": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "3121": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3123": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3124": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3125": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3126": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3127": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3128": {
      "op": "POP"
    },
    "3129": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3130": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP6",
      "path": "26"
    },
    "3131": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7175
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3136": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3138": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3139": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3140": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3141": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3142": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3143": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6973,
        7186
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3144": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "DUP11",
      "path": "26"
    },
    "3145": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3146": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3147": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6961
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "3149": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3150": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3151": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3153": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3154": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3155": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3156": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3157": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3158": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3159": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "op": "SUB"
    },
    "3168": {
      "op": "NOT"
    },
    "3169": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "AND",
      "path": "26"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3176": {
      "op": "SHL"
    },
    "3177": {
      "op": "SUB"
    },
    "3178": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3179": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3180": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "AND",
      "path": "26"
    },
    "3181": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "OR",
      "path": "26"
    },
    "3182": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3183": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3184": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3185": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3186": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3187": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3188": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3189": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3190": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3191": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        6970
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3192": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC86"
    },
    "3195": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3196": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3197": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3198": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3199": {
      "op": "POP"
    },
    "3200": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3201": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3202": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21BD"
    },
    "3205": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6957,
        7186
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3206": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3207": {
      "op": "POP"
    },
    "3208": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3210": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3211": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3212": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3213": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3214": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3215": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCA2"
    },
    "3218": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3219": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "3221": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3222": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3223": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3224": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3226": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3227": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3228": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3229": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3230": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21BD"
    },
    "3233": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6957,
        7186
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3234": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3235": {
      "op": "POP"
    },
    "3236": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "3238": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3239": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3240": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3241": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3242": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3243": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCBE"
    },
    "3246": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3247": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "3249": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3250": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3251": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3252": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3254": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3255": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3256": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3257": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3258": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2222"
    },
    "3261": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6957,
        7186
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3262": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3263": {
      "op": "POP"
    },
    "3264": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "3266": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3267": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3268": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3269": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3270": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3271": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3273": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3274": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3275": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ADD",
      "path": "26"
    },
    "3276": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3277": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3280": {
      "op": "NOT"
    },
    "3281": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "AND",
      "path": "26"
    },
    "3282": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3283": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3284": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3285": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3286": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3287": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3288": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "OR",
      "path": "26"
    },
    "3289": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3290": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6957,
        7186
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3291": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 18,
      "value": "0x40"
    },
    "3293": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3294": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7215,
        7222
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3295": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7215,
        7222
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3296": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x5DD5AFF7B55A6D23DB5800AE74FAFB29F5F00976A85526C852C81900D14CF3E7"
    },
    "3329": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3330": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD0E"
    },
    "3333": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3334": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7224,
        7239
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "3335": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7224,
        7239
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3336": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7241,
        7256
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3337": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7241,
        7256
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3338": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28B1"
    },
    "3341": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7202,
        7257
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3342": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3343": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3345": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3346": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3347": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3348": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "SUB",
      "path": "26"
    },
    "3349": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3350": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7202,
        7257
      ],
      "op": "LOG2",
      "path": "26"
    },
    "3351": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7277
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 19,
      "value": "0x69"
    },
    "3353": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3354": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3355": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3356": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7277
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3358": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD26"
    },
    "3361": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3362": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28E0"
    },
    "3365": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7267,
        7279
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3366": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3367": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3368": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3369": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7267,
        7279
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3370": {
      "op": "POP"
    },
    "3371": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7297,
        7310
      ],
      "op": "SWAP1",
      "path": "26",
      "statement": 20
    },
    "3372": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7297,
        7310
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "3373": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5853,
        7317
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        5853,
        7317
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3382": {
      "offset": [
        2671,
        2698
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3383": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x78"
    },
    "3385": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3386": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3387": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3388": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3389": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "LT",
      "path": "26"
    },
    "3390": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD46"
    },
    "3393": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3394": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3396": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3397": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3398": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3399": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3401": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3402": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3403": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3404": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3406": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3407": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3408": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3409": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "ADD",
      "path": "26"
    },
    "3410": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3411": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2671,
        2698
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "offset": [
        2671,
        2698
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3414": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3415": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3416": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3418": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3419": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0xD65"
    },
    "3422": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3423": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3424": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3425": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C87"
    },
    "3428": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3429": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3430": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0xD70"
    },
    "3433": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3434": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3435": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3436": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D19"
    },
    "3439": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3440": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3441": {
      "op": "POP"
    },
    "3442": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x1"
    },
    "3444": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3445": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "op": "POP"
    },
    "3450": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3451": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12693,
        12829
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3452": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12803
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 24,
      "value": "0x65"
    },
    "3454": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12803
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3455": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3457": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3458": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3459": {
      "op": "PUSH4",
      "value": "0x48F17129"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3468": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3469": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3470": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3471": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12751,
        12758
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3473": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12751,
        12758
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3480": {
      "op": "SHL"
    },
    "3481": {
      "op": "SUB"
    },
    "3482": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12803
      ],
      "op": "AND",
      "path": "26"
    },
    "3483": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12803
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3484": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12820
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x91E2E252"
    },
    "3489": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12820
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3490": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3492": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3493": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3494": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "ADD",
      "path": "26"
    },
    "3495": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3496": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3498": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3499": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3500": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3501": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3502": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3503": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SUB",
      "path": "26"
    },
    "3504": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "ADD",
      "path": "26"
    },
    "3505": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3506": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12803
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3507": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "GAS",
      "path": "26"
    },
    "3508": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3509": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3510": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3511": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3512": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDC5"
    },
    "3515": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3516": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3517": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3519": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3520": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3521": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3522": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3524": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3525": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3526": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "POP",
      "path": "26"
    },
    "3527": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "POP",
      "path": "26"
    },
    "3528": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "POP",
      "path": "26"
    },
    "3529": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "POP",
      "path": "26"
    },
    "3530": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3532": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3533": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3534": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3536": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "NOT",
      "path": "26"
    },
    "3537": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3539": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3540": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "ADD",
      "path": "26"
    },
    "3541": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "AND",
      "path": "26"
    },
    "3542": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3543": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "ADD",
      "path": "26"
    },
    "3544": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3545": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3547": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3548": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "POP",
      "path": "26"
    },
    "3549": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3550": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "ADD",
      "path": "26"
    },
    "3551": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3552": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDE9"
    },
    "3555": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3556": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3557": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28F9"
    },
    "3560": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        12777,
        12822
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3561": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12777,
        12822
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3562": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12770,
        12822
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3563": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12770,
        12822
      ],
      "op": "POP",
      "path": "26"
    },
    "3564": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12693,
        12829
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3565": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "o",
      "offset": [
        12693,
        12829
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3566": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3567": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3568": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3570": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 25
    },
    "3571": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3572": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3573": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "3575": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3577": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3578": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3579": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3580": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3582": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3583": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3584": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3591": {
      "op": "SHL"
    },
    "3592": {
      "op": "SUB"
    },
    "3593": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3594": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "2"
    },
    "3595": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3596": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3597": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3598": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3599": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3600": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3601": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3602": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3603": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3604": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3605": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3606": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91B"
    },
    "3609": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3610": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3611": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3612": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3613": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3614": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE28"
    },
    "3617": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3618": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3619": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3620": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2912"
    },
    "3623": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3624": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3625": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B63"
    },
    "3628": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3629": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3630": {
      "offset": [
        2927,
        2951
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "3632": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2927,
        2951
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3633": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7450,
        7466
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "3635": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7450,
        7466
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3642": {
      "op": "SHL"
    },
    "3643": {
      "op": "SUB"
    },
    "3644": {
      "offset": [
        2927,
        2951
      ],
      "op": "AND",
      "path": "26"
    },
    "3645": {
      "offset": [
        2913,
        2923
      ],
      "op": "CALLER",
      "path": "26"
    },
    "3646": {
      "offset": [
        2913,
        2951
      ],
      "op": "EQ",
      "path": "26"
    },
    "3647": {
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE5A"
    },
    "3650": {
      "offset": [
        2892,
        3015
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3651": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3653": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3660": {
      "op": "SHL"
    },
    "3661": {
      "offset": [
        2892,
        3015
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3662": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3663": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3665": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "ADD",
      "path": "26"
    },
    "3666": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "3669": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3670": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2925"
    },
    "3673": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        2892,
        3015
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3674": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3675": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 26,
      "value": "0x0"
    },
    "3677": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3678": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3679": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3680": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7509
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "3682": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3684": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3685": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3687": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3688": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7518
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3689": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7529
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "3691": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7529
      ],
      "op": "ADD",
      "path": "26"
    },
    "3692": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7505,
        7536
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3693": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7486,
        7501
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3694": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7486,
        7501
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3695": {
      "branch": 119,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7486,
        7536
      ],
      "op": "EQ",
      "path": "26"
    },
    "3696": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7478,
        7537
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE78"
    },
    "3699": {
      "branch": 119,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7478,
        7537
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3700": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7478,
        7537
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3702": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7478,
        7537
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3703": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7478,
        7537
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3704": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7478,
        7537
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3705": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 27,
      "value": "0x0"
    },
    "3707": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3708": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3709": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3710": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7552
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "3712": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3714": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3715": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3716": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3717": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3719": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3720": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3721": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7561
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3722": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3723": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3724": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE9D"
    },
    "3727": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3728": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7569
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "3730": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7569
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3731": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7569
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3732": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7569
      ],
      "op": "ADD",
      "path": "26"
    },
    "3733": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7569
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3734": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "DUP6",
      "path": "26"
    },
    "3735": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "ADD",
      "path": "26"
    },
    "3736": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3737": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21BD"
    },
    "3740": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7548,
        7580
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3741": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7548,
        7580
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7615,
        7620
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 28,
      "value": "0x0"
    },
    "3745": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3746": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3747": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3748": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7594
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "3750": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3752": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3753": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3755": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3756": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3757": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3758": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7603
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3759": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7612
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3761": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7612
      ],
      "op": "ADD",
      "path": "26"
    },
    "3762": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7620
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3763": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7620
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3766": {
      "op": "NOT"
    },
    "3767": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7620
      ],
      "op": "AND",
      "path": "26"
    },
    "3768": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7620
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3769": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7590,
        7620
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3770": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "MLOAD",
      "path": "26",
      "statement": 29
    },
    "3771": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7595,
        7602
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3772": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7595,
        7602
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3773": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x9B5ED714C31DFCB1A9397710B6FC1842F37D94AB5DC0CCB528D9A2C97EA76F2A"
    },
    "3806": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3807": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xEEB"
    },
    "3810": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3811": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7717
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "3812": {
      "op": "DUP2"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "SWAP1"
    },
    "3818": {
      "op": "JUMP"
    },
    "3819": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3820": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3822": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3823": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3824": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3825": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "SUB",
      "path": "26"
    },
    "3826": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3827": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7680,
        7718
      ],
      "op": "LOG2",
      "path": "26"
    },
    "3828": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 30,
      "value": "0x0"
    },
    "3830": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3831": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3832": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3833": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7740
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "3835": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3837": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3838": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3839": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3840": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3842": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3843": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3844": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3845": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7749
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3846": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "3848": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3849": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3850": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3851": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3852": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3853": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3854": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3855": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "MUL",
      "path": "26"
    },
    "3856": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3857": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3858": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3859": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3860": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3861": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3862": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3863": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3864": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3865": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3866": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3867": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7760
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3868": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3869": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3870": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7736,
        7760
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3871": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3872": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3873": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3874": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF4A"
    },
    "3877": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3878": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3880": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "MUL",
      "path": "26"
    },
    "3881": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3882": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3883": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3884": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3885": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3887": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3888": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3890": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3892": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3893": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3894": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3895": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3896": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3897": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3898": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3899": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3901": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3902": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3903": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3905": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3906": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3907": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3908": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3909": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "GT",
      "path": "26"
    },
    "3910": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF36"
    },
    "3913": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3914": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3915": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "POP",
      "path": "26"
    },
    "3916": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "POP",
      "path": "26"
    },
    "3917": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "POP",
      "path": "26"
    },
    "3918": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "POP",
      "path": "26"
    },
    "3919": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "POP",
      "path": "26"
    },
    "3920": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3921": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7729,
        7760
      ],
      "op": "POP",
      "path": "26"
    },
    "3922": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3923": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3924": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "POP",
      "path": "26"
    },
    "3925": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7323,
        7767
      ],
      "op": "POP",
      "path": "26"
    },
    "3926": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        7323,
        7767
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3927": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13232,
        13371
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3928": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13340
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 31,
      "value": "0x65"
    },
    "3930": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13340
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3931": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3933": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3934": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3935": {
      "op": "PUSH4",
      "value": "0xFBCCA273"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3942": {
      "op": "SHL"
    },
    "3943": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3944": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3945": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3946": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3947": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13279,
        13295
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "3949": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13279,
        13295
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3956": {
      "op": "SHL"
    },
    "3957": {
      "op": "SUB"
    },
    "3958": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13340
      ],
      "op": "AND",
      "path": "26"
    },
    "3959": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13340
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3960": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13362
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFBCCA273"
    },
    "3965": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13362
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3966": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3968": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3969": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3970": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "ADD",
      "path": "26"
    },
    "3971": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3972": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13340
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3974": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13340
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3975": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3976": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3977": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3978": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3979": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SUB",
      "path": "26"
    },
    "3980": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "ADD",
      "path": "26"
    },
    "3981": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3982": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13340
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3983": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "GAS",
      "path": "26"
    },
    "3984": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3985": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3986": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3987": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3988": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFA1"
    },
    "3991": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3992": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3993": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3995": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3996": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3997": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3998": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4000": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4001": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4002": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "POP",
      "path": "26"
    },
    "4003": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "POP",
      "path": "26"
    },
    "4004": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "POP",
      "path": "26"
    },
    "4005": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "POP",
      "path": "26"
    },
    "4006": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4008": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4009": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4010": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4012": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4013": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4014": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4016": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4017": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4018": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4019": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "ADD",
      "path": "26"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4022": {
      "op": "NOT"
    },
    "4023": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "AND",
      "path": "26"
    },
    "4024": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4025": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "ADD",
      "path": "26"
    },
    "4026": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4028": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4029": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDE9"
    },
    "4032": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4033": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4034": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4035": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "ADD",
      "path": "26"
    },
    "4036": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4037": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13314,
        13364
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2866"
    },
    "4040": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13314,
        13364
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4041": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4042": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5054,
        5064
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 32
    },
    "4043": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4045": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4046": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4047": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4048": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5053
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7A"
    },
    "4050": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4052": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4053": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4055": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4056": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4057": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5065
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4058": {
      "branch": 120,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5033,
        5070
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4059": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1026"
    },
    "4062": {
      "branch": 120,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4063": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4065": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4072": {
      "op": "SHL"
    },
    "4073": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4074": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4077": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4079": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4080": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "ADD",
      "path": "26"
    },
    "4081": {
      "op": "MSTORE"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4086": {
      "op": "DUP3"
    },
    "4087": {
      "op": "ADD"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206578697374732E00000000000000"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4124": {
      "op": "DUP3"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "op": "MSTORE"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4129": {
      "op": "ADD"
    },
    "4130": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "4133": {
      "op": "JUMP"
    },
    "4134": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5012,
        5121
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4135": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5163,
        5173
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 33
    },
    "4136": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4138": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4139": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4140": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4141": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "4143": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4145": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4146": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4148": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4149": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4150": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4151": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5178,
        5189
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4152": {
      "op": "GT"
    },
    "4153": {
      "branch": 121,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5153,
        5189
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4154": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5153,
        5218
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4155": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5153,
        5218
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4156": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5153,
        5218
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1047"
    },
    "4159": {
      "branch": 121,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5153,
        5218
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4160": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5153,
        5218
      ],
      "op": "POP",
      "path": "26"
    },
    "4161": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5208,
        5218
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x70"
    },
    "4163": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5208,
        5218
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4164": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5193,
        5204
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4165": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5193,
        5218
      ],
      "op": "LT",
      "path": "26"
    },
    "4166": {
      "branch": 122,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5193,
        5218
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4167": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5153,
        5218
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4168": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1093"
    },
    "4171": {
      "branch": 122,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4172": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4174": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4181": {
      "op": "SHL"
    },
    "4182": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4183": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4186": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4188": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4189": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "ADD",
      "path": "26"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4195": {
      "op": "DUP3"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "op": "MSTORE"
    },
    "4198": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4233": {
      "op": "DUP3"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "MSTORE"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "4242": {
      "op": "JUMP"
    },
    "4243": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5271
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4244": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 34,
      "value": "0x40"
    },
    "4246": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4247": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4248": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA0"
    },
    "4250": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4251": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4252": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4253": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4254": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4255": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4256": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4257": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5446,
        5456
      ],
      "op": "CALLER",
      "path": "26"
    },
    "4258": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4260": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4261": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4262": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4263": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4264": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4265": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4266": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5488
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x70"
    },
    "4268": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5488
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4269": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5488
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4270": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4271": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP8",
      "path": "26"
    },
    "4272": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4273": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4274": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4275": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4278": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "4280": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP8",
      "path": "26"
    },
    "4281": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4282": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4283": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4284": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4285": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5541,
        5543
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x32"
    },
    "4287": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "4289": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP10",
      "path": "26"
    },
    "4290": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4291": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4292": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4293": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4294": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5339,
        5357
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x67"
    },
    "4296": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5339,
        5357
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4297": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5339,
        5357
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4298": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5358
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4299": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5358
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4300": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "4302": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5358
      ],
      "op": "DUP9",
      "path": "26"
    },
    "4303": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5358
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4304": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5358
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4305": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5358
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4306": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5358
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4307": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP10",
      "path": "26"
    },
    "4308": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4309": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4310": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4311": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "4312": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4313": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "4315": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4316": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4317": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4318": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4325": {
      "op": "SHL"
    },
    "4326": {
      "op": "SUB"
    },
    "4327": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4328": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4329": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "AND",
      "path": "26"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "op": "NOT"
    },
    "4339": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4340": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4341": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "AND",
      "path": "26"
    },
    "4342": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "OR",
      "path": "26"
    },
    "4343": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4344": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4345": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "4346": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4347": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "4349": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4350": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4351": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4352": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4353": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4354": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "4356": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "DUP10",
      "path": "26"
    },
    "4357": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4358": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4359": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4360": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4362": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4363": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "4364": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "ADD",
      "path": "26"
    },
    "4365": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4366": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4367": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5361,
        5554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "4369": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4370": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP9",
      "path": "26"
    },
    "4371": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "AND",
      "path": "26"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4374": {
      "op": "NOT"
    },
    "4375": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4376": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP9",
      "path": "26"
    },
    "4377": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "AND",
      "path": "26"
    },
    "4378": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "4379": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4380": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "4381": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "OR",
      "path": "26"
    },
    "4382": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4383": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "4384": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5328,
        5554
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4385": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5600,
        5618
      ],
      "op": "SWAP2",
      "path": "26",
      "statement": 35
    },
    "4386": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5600,
        5618
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4387": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4388": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4389": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4390": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5585
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7A"
    },
    "4392": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4393": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4394": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4395": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4396": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5597
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4397": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5565,
        5618
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4398": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "DUP8",
      "path": "26",
      "statement": 36
    },
    "4399": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4400": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4401": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5650
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "4403": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4404": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4405": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4406": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "4407": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4408": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4409": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5666
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4410": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4411": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4412": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4413": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "4414": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "AND",
      "path": "26"
    },
    "4415": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4416": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "OR",
      "path": "26"
    },
    "4417": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4418": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4419": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5628,
        5679
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4420": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5748,
        5758
      ],
      "op": "SLOAD",
      "path": "26",
      "statement": 37
    },
    "4421": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5724,
        5759
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x114E"
    },
    "4424": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5724,
        5759
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4425": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5446,
        5456
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4426": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5724,
        5735
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1EE7"
    },
    "4429": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5724,
        5759
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4430": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5724,
        5759
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4431": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5788
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 38,
      "value": "0x67"
    },
    "4433": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4434": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4435": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4436": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5788
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4438": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x115E"
    },
    "4441": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4442": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28E0"
    },
    "4445": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5770,
        5790
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4446": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4447": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4448": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4449": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "POP",
      "path": "26"
    },
    "4450": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4451": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5770,
        5790
      ],
      "op": "POP",
      "path": "26"
    },
    "4452": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "POP",
      "path": "26"
    },
    "4453": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4901,
        5797
      ],
      "op": "POP",
      "path": "26"
    },
    "4454": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        4901,
        5797
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4455": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4462": {
      "op": "SHL"
    },
    "4463": {
      "op": "SUB"
    },
    "4464": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4465": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "AND",
      "path": "26"
    },
    "4466": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12269,
        12276
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4468": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4469": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4470": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4471": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12330
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7A"
    },
    "4473": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4475": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4476": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4478": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4479": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4480": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12310,
        12348
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4481": {
      "branch": 123,
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12366,
        12381
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 39
    },
    "4482": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11C9"
    },
    "4485": {
      "branch": 123,
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4486": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4488": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4495": {
      "op": "SHL"
    },
    "4496": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4497": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4500": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4502": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4503": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "ADD",
      "path": "26"
    },
    "4504": {
      "op": "MSTORE"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4509": {
      "op": "DUP3"
    },
    "4510": {
      "op": "ADD"
    },
    "4511": {
      "op": "MSTORE"
    },
    "4512": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4540": {
      "op": "SHL"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4543": {
      "op": "DUP3"
    },
    "4544": {
      "op": "ADD"
    },
    "4545": {
      "op": "MSTORE"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4548": {
      "op": "ADD"
    },
    "4549": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "4552": {
      "op": "JUMP"
    },
    "4553": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12358,
        12411
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4554": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 40,
      "value": "0x0"
    },
    "4556": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4557": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4558": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4559": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12439
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "4561": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4563": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4564": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4566": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4567": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12452
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4568": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12466
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4569": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12429,
        12466
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4570": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12179,
        12473
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "op": "POP"
    },
    "4573": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "o",
      "offset": [
        12179,
        12473
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4574": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12936,
        13031
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4575": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12980,
        12987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4577": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13010
      ],
      "op": "ADDRESS",
      "path": "26",
      "statement": 41
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4584": {
      "op": "SHL"
    },
    "4585": {
      "op": "SUB"
    },
    "4586": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13022
      ],
      "op": "AND",
      "path": "26"
    },
    "4587": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13022
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x18160DDD"
    },
    "4592": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4594": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4595": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4596": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "4601": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "AND",
      "path": "26"
    },
    "4602": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "4604": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "SHL",
      "path": "26"
    },
    "4605": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4606": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4607": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4609": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "ADD",
      "path": "26"
    },
    "4610": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4612": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4614": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4615": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4616": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4617": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "SUB",
      "path": "26"
    },
    "4618": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4619": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4620": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "GAS",
      "path": "26"
    },
    "4621": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4622": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4623": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4624": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4625": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDC5"
    },
    "4628": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4629": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4630": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4632": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4633": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4634": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4635": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4637": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13006,
        13024
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4638": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4639": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8790,
        8821
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 42,
      "value": "0x1228"
    },
    "4642": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8802,
        8812
      ],
      "op": "CALLER",
      "path": "26"
    },
    "4643": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8814,
        8820
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4644": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8790,
        8801
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1EE7"
    },
    "4647": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8790,
        8821
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4648": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8790,
        8821
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4649": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8735,
        8828
      ],
      "op": "POP",
      "path": "26"
    },
    "4650": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        8735,
        8828
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4651": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12580,
        12687
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4652": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12632,
        12639
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4654": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12679,
        12680
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 43,
      "value": "0x1"
    },
    "4656": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12658,
        12676
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x67"
    },
    "4658": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12658,
        12676
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4659": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12658,
        12680
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDE9"
    },
    "4662": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12658,
        12680
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4663": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12658,
        12680
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4664": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12658,
        12680
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x296B"
    },
    "4667": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12658,
        12680
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4668": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4669": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8934,
        8944
      ],
      "op": "CALLER",
      "path": "26"
    },
    "4670": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8891,
        8910
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4672": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4673": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4674": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4675": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8933
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7A"
    },
    "4677": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4679": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4680": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4682": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4683": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4684": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8913,
        8945
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4685": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8963,
        8978
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 44
    },
    "4686": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1299"
    },
    "4689": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4690": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4692": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4699": {
      "op": "SHL"
    },
    "4700": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4701": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4704": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4706": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4707": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "ADD",
      "path": "26"
    },
    "4708": {
      "op": "MSTORE"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4713": {
      "op": "DUP3"
    },
    "4714": {
      "op": "ADD"
    },
    "4715": {
      "op": "MSTORE"
    },
    "4716": {
      "op": "PUSH32",
      "value": "0x4E6F74206120726567697374657265642076616C696461746F722E0000000000"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4751": {
      "op": "DUP3"
    },
    "4752": {
      "op": "ADD"
    },
    "4753": {
      "op": "MSTORE"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4756": {
      "op": "ADD"
    },
    "4757": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "4760": {
      "op": "JUMP"
    },
    "4761": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8955,
        9010
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4762": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9021,
        9048
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4764": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4765": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4766": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4767": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9061
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "4769": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4771": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4772": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4774": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4775": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9051,
        9074
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4776": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9103,
        9119
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 45,
      "value": "0x2"
    },
    "4778": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9103,
        9119
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4779": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9103,
        9119
      ],
      "op": "ADD",
      "path": "26"
    },
    "4780": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9103,
        9119
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4781": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9093,
        9119
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4782": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9093,
        9119
      ],
      "op": "GT",
      "path": "26"
    },
    "4783": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9093,
        9119
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4784": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x12FB"
    },
    "4787": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4788": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4790": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4797": {
      "op": "SHL"
    },
    "4798": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4799": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4802": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4804": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4805": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "ADD",
      "path": "26"
    },
    "4806": {
      "op": "MSTORE"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4811": {
      "op": "DUP3"
    },
    "4812": {
      "op": "ADD"
    },
    "4813": {
      "op": "MSTORE"
    },
    "4814": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4849": {
      "op": "DUP3"
    },
    "4850": {
      "op": "ADD"
    },
    "4851": {
      "op": "MSTORE"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "4858": {
      "op": "JUMP"
    },
    "4859": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9085,
        9154
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4860": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9181,
        9182
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 46,
      "value": "0x0"
    },
    "4862": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9172,
        9178
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4863": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9172,
        9182
      ],
      "op": "GT",
      "path": "26"
    },
    "4864": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x131B"
    },
    "4867": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4868": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4870": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4877": {
      "op": "SHL"
    },
    "4878": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4879": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4880": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4882": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "ADD",
      "path": "26"
    },
    "4883": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "4886": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4887": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x297E"
    },
    "4890": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9164,
        9220
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4891": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9164,
        9220
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4892": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9306,
        9315
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4893": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9306,
        9326
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "4895": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9306,
        9326
      ],
      "op": "ADD",
      "path": "26"
    },
    "4896": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9306,
        9326
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4897": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9330,
        9331
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4899": {
      "branch": 127,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9306,
        9331
      ],
      "op": "SUB",
      "path": "26"
    },
    "4900": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9302,
        10133
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1393"
    },
    "4903": {
      "branch": 127,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9302,
        10133
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4904": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9388,
        9400
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 47,
      "value": "0x71"
    },
    "4906": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9388,
        9400
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4907": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9370,
        9400
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1334"
    },
    "4910": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9370,
        9400
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4911": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9370,
        9385
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "4912": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9370,
        9400
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2912"
    },
    "4915": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9370,
        9400
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4916": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9370,
        9400
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4917": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9347,
        9356
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4918": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9347,
        9367
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "4920": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9347,
        9367
      ],
      "op": "ADD",
      "path": "26"
    },
    "4921": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9347,
        9400
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4922": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9347,
        9400
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4923": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9347,
        9400
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4924": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9347,
        9400
      ],
      "op": "POP",
      "path": "26"
    },
    "4925": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9556,
        9562
      ],
      "op": "DUP3",
      "path": "26",
      "statement": 48
    },
    "4926": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9552
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6D"
    },
    "4928": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9552
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4930": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4931": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4932": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4933": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x134E"
    },
    "4936": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4937": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4938": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x296B"
    },
    "4941": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9541,
        9562
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4942": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4943": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4944": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4945": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9541,
        9562
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4946": {
      "op": "POP"
    },
    "4947": {
      "op": "POP"
    },
    "4948": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9610,
        9630
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 49,
      "value": "0x3"
    },
    "4950": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9610,
        9630
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4951": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9610,
        9630
      ],
      "op": "ADD",
      "path": "26"
    },
    "4952": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9610,
        9630
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4953": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4955": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4956": {
      "op": "SWAP1"
    },
    "4957": {
      "op": "DUP2"
    },
    "4958": {
      "op": "MSTORE"
    },
    "4959": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9598,
        9608
      ],
      "op": "CALLER",
      "path": "26"
    },
    "4960": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9598,
        9608
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4961": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "4994": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4997": {
      "op": "ADD"
    },
    "4998": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4999": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5001": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5002": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5003": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5004": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "SUB",
      "path": "26"
    },
    "5005": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5006": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9582,
        9631
      ],
      "op": "LOG2",
      "path": "26"
    },
    "5007": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8881,
        10139
      ],
      "op": "POP",
      "path": "26"
    },
    "5008": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8881,
        10139
      ],
      "op": "POP",
      "path": "26"
    },
    "5009": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "POP",
      "path": "26"
    },
    "5010": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5011": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9302,
        10133
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5012": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9811,
        9820
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 50
    },
    "5013": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9811,
        9831
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "5015": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9811,
        9831
      ],
      "op": "ADD",
      "path": "26"
    },
    "5016": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9811,
        9831
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5017": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9792,
        9807
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "5018": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9792,
        9831
      ],
      "op": "LT",
      "path": "26"
    },
    "5019": {
      "branch": 128,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9792,
        9831
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5020": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13E7"
    },
    "5023": {
      "branch": 128,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5024": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5026": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5035": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5038": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5040": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5041": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "ADD",
      "path": "26"
    },
    "5042": {
      "op": "MSTORE"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5047": {
      "op": "DUP3"
    },
    "5048": {
      "op": "ADD"
    },
    "5049": {
      "op": "MSTORE"
    },
    "5050": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5085": {
      "op": "DUP3"
    },
    "5086": {
      "op": "ADD"
    },
    "5087": {
      "op": "MSTORE"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5090": {
      "op": "ADD"
    },
    "5091": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "5094": {
      "op": "JUMP"
    },
    "5095": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9767,
        9889
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5096": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9924,
        9930
      ],
      "op": "DUP3",
      "path": "26",
      "statement": 51
    },
    "5097": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9913
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5098": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9920
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "5100": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9920
      ],
      "op": "ADD",
      "path": "26"
    },
    "5101": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9920
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5103": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5104": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5105": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5106": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13FB"
    },
    "5109": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5110": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5111": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x296B"
    },
    "5114": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9904,
        9930
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5115": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5116": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5117": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5118": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9904,
        9930
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5119": {
      "op": "POP"
    },
    "5120": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9944,
        9969
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 52,
      "value": "0x140B"
    },
    "5123": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9944,
        9969
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5124": {
      "op": "POP"
    },
    "5125": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9950,
        9960
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5126": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9962,
        9968
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5127": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9944,
        9949
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2072"
    },
    "5130": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9944,
        9969
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5131": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9944,
        9969
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5132": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10070
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 53,
      "value": "0x40"
    },
    "5134": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10070
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5135": {
      "op": "DUP4"
    },
    "5136": {
      "op": "DUP2"
    },
    "5137": {
      "op": "MSTORE"
    },
    "5138": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10051,
        10061
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5139": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10051,
        10061
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5140": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10070
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "5173": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10070
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5176": {
      "op": "ADD"
    },
    "5177": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10070
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1386"
    },
    "5180": {
      "op": "JUMP"
    },
    "5181": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9302,
        10133
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5182": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8881,
        10139
      ],
      "op": "POP",
      "path": "26"
    },
    "5183": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8881,
        10139
      ],
      "op": "POP",
      "path": "26"
    },
    "5184": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "POP",
      "path": "26"
    },
    "5185": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5186": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5187": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5189": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x37"
    },
    "5191": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5192": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5193": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88A"
    },
    "5196": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5197": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2776"
    },
    "5200": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5201": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5202": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5204": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5205": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5208": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5209": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "5210": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5212": {
      "branch": 146,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "5213": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146C"
    },
    "5216": {
      "branch": 146,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5217": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5219": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5220": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5222": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "5223": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5224": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1470"
    },
    "5227": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5228": {
      "branch": 147,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5229": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 55
    },
    "5230": {
      "op": "EXTCODESIZE"
    },
    "5231": {
      "op": "ISZERO"
    },
    "5232": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5233": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D3"
    },
    "5236": {
      "branch": 147,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5237": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5239": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5246": {
      "op": "SHL"
    },
    "5247": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5248": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5251": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5253": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5254": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "5255": {
      "op": "MSTORE"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5260": {
      "op": "DUP3"
    },
    "5261": {
      "op": "ADD"
    },
    "5262": {
      "op": "MSTORE"
    },
    "5263": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "ADD"
    },
    "5300": {
      "op": "MSTORE"
    },
    "5301": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "5318": {
      "op": "SHL"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5321": {
      "op": "DUP3"
    },
    "5322": {
      "op": "ADD"
    },
    "5323": {
      "op": "MSTORE"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5326": {
      "op": "ADD"
    },
    "5327": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3C"
    },
    "5330": {
      "op": "JUMP"
    },
    "5331": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5332": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5334": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5335": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5338": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5339": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "5340": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5342": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "5343": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5344": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5345": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5346": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F5"
    },
    "5349": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5350": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5352": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5353": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5354": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5357": {
      "op": "NOT"
    },
    "5358": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "5359": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "5362": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "5363": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5364": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5365": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5366": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 56,
      "value": "0x153C"
    },
    "5369": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5371": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5372": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5373": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5375": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "ADD",
      "path": "26"
    },
    "5376": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5378": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5379": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5380": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "5382": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5383": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5384": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5386": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "ADD",
      "path": "26"
    },
    "5387": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5400": {
      "op": "SHL"
    },
    "5401": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5402": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5403": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "POP",
      "path": "26"
    },
    "5404": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5406": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5407": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5408": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5410": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "ADD",
      "path": "26"
    },
    "5411": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5413": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5414": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5415": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "5417": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5418": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5419": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5421": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "ADD",
      "path": "26"
    },
    "5422": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5428": {
      "op": "SHL"
    },
    "5429": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5430": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5431": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "POP",
      "path": "26"
    },
    "5432": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3132
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2151"
    },
    "5435": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3120,
        3153
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5436": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3120,
        3153
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5437": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3251,
        3252
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 57,
      "value": "0x1"
    },
    "5439": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3237,
        3248
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x68"
    },
    "5441": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3237,
        3252
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5442": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3237,
        3252
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5443": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3237,
        3252
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5444": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3272
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 58,
      "value": "0x69"
    },
    "5446": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3276
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5447": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3276
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5448": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3276
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5449": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3286,
        3304
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 59,
      "value": "0x67"
    },
    "5451": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3286,
        3308
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5452": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3372,
        3378
      ],
      "op": "PUSH9",
      "path": "26",
      "statement": 60,
      "value": "0xDE0B6B3A764000000"
    },
    "5462": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3357,
        3369
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "5464": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3357,
        3378
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5465": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3452,
        3462
      ],
      "op": "PUSH10",
      "path": "26",
      "statement": 61,
      "value": "0x152D02C7E14AF6800000"
    },
    "5476": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3439,
        3449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x70"
    },
    "5478": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3439,
        3462
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5479": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3526,
        3534
      ],
      "op": "PUSH4",
      "path": "26",
      "statement": 62,
      "value": "0x3205B7E"
    },
    "5484": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3516,
        3523
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "5486": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3516,
        3534
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5487": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3608,
        3617
      ],
      "op": "PUSH3",
      "path": "26",
      "statement": 63,
      "value": "0x127500"
    },
    "5491": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3593,
        3605
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x71"
    },
    "5493": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3593,
        3617
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5496": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3640,
        3660
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 64,
      "value": "0x72"
    },
    "5498": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3640,
        3664
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5499": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3640,
        3664
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5500": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3640,
        3664
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5501": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3675,
        3783
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5502": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3696,
        3709
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5503": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3696,
        3716
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5504": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3692,
        3693
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5505": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3692,
        3716
      ],
      "op": "LT",
      "path": "26"
    },
    "5506": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3675,
        3783
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5507": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3675,
        3783
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15B3"
    },
    "5510": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3675,
        3783
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5511": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3737,
        3772
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 65,
      "value": "0x15AB"
    },
    "5514": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3756
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5515": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3757,
        3758
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5516": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5517": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5518": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5519": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "LT",
      "path": "26"
    },
    "5520": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x159B"
    },
    "5523": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5524": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x159B"
    },
    "5527": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x289B"
    },
    "5530": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3743,
        3759
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5531": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5532": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5534": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "MUL",
      "path": "26"
    },
    "5535": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5537": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "ADD",
      "path": "26"
    },
    "5538": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "ADD",
      "path": "26"
    },
    "5539": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3743,
        3759
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5540": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3761,
        3771
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x70"
    },
    "5542": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3761,
        3771
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5543": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3737,
        3742
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2072"
    },
    "5546": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3737,
        3772
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5547": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3737,
        3772
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5548": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3718,
        3721
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 66,
      "value": "0x1"
    },
    "5550": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3718,
        3721
      ],
      "op": "ADD",
      "path": "26"
    },
    "5551": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3675,
        3783
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x157D"
    },
    "5554": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3675,
        3783
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5555": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3675,
        3783
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5556": {
      "op": "POP"
    },
    "5557": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3837,
        3838
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 67,
      "value": "0x1"
    },
    "5559": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3821,
        3834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6B"
    },
    "5561": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3821,
        3838
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5562": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3864,
        3865
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 68,
      "value": "0x5"
    },
    "5564": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3848,
        3861
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6C"
    },
    "5566": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3848,
        3865
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5567": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5568": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5569": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15D0"
    },
    "5572": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5573": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5575": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5576": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5577": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5580": {
      "op": "NOT"
    },
    "5581": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "5582": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5583": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5584": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5585": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "5586": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "POP",
      "path": "26"
    },
    "5587": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3039,
        3872
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5588": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5589": {
      "offset": [
        2927,
        2951
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "5591": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2927,
        2951
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5598": {
      "op": "SHL"
    },
    "5599": {
      "op": "SUB"
    },
    "5600": {
      "offset": [
        2927,
        2951
      ],
      "op": "AND",
      "path": "26"
    },
    "5601": {
      "offset": [
        2913,
        2923
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5602": {
      "offset": [
        2913,
        2951
      ],
      "op": "EQ",
      "path": "26"
    },
    "5603": {
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15FE"
    },
    "5606": {
      "offset": [
        2892,
        3015
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5607": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5609": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5616": {
      "op": "SHL"
    },
    "5617": {
      "offset": [
        2892,
        3015
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5618": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5619": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5621": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "ADD",
      "path": "26"
    },
    "5622": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "5625": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5626": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2925"
    },
    "5629": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        2892,
        3015
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5630": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2892,
        3015
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5631": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10565,
        10572
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "5633": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10565,
        10572
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5634": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10541,
        10561
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x72"
    },
    "5636": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10541,
        10561
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5637": {
      "branch": 129,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10541,
        10572
      ],
      "op": "LT",
      "path": "26"
    },
    "5638": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10537,
        10682
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1634"
    },
    "5641": {
      "branch": 129,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10537,
        10682
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5642": {
      "offset": [
        2043,
        2047
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0x1BC16D674EC80000"
    },
    "5651": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10592,
        10604
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "5653": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10592,
        10604
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5654": {
      "branch": 130,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10592,
        10620
      ],
      "op": "GT",
      "path": "26"
    },
    "5655": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10588,
        10672
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5656": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10588,
        10672
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1634"
    },
    "5659": {
      "branch": 130,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10588,
        10672
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5660": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10656,
        10657
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 69,
      "value": "0x2"
    },
    "5662": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10652
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "5664": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10652
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5666": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5667": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5668": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5669": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x162E"
    },
    "5672": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5673": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5674": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "5677": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10640,
        10657
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5678": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5679": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5680": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5681": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10640,
        10657
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "op": "POP"
    },
    "5684": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10588,
        10672
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5685": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10692,
        10720
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5687": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10745,
        10748
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x64"
    },
    "5689": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10724,
        10736
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "5691": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10724,
        10736
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5692": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10739,
        10741
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x14"
    },
    "5694": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10724,
        10741
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1647"
    },
    "5697": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10724,
        10741
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5698": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10724,
        10741
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5699": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10724,
        10741
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29E1"
    },
    "5702": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10724,
        10741
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5703": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10724,
        10741
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5704": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10723,
        10748
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1651"
    },
    "5707": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10723,
        10748
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5708": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10723,
        10748
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5709": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10723,
        10748
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "5712": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10723,
        10748
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5713": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10723,
        10748
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5714": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10692,
        10748
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5715": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10692,
        10748
      ],
      "op": "POP",
      "path": "26"
    },
    "5716": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10758,
        10783
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5718": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10808,
        10811
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x64"
    },
    "5720": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10787,
        10799
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "5722": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10787,
        10799
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5723": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10802,
        10804
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x50"
    },
    "5725": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10787,
        10804
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1666"
    },
    "5728": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10787,
        10804
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5729": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10787,
        10804
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5730": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10787,
        10804
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29E1"
    },
    "5733": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10787,
        10804
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5734": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10787,
        10804
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5735": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10786,
        10811
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1670"
    },
    "5738": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10786,
        10811
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5739": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10786,
        10811
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5740": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10786,
        10811
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "5743": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10786,
        10811
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5744": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10786,
        10811
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5745": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10758,
        10811
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5746": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10758,
        10811
      ],
      "op": "POP",
      "path": "26"
    },
    "5747": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10875,
        10898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5749": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10952
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5750": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10959
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5751": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10901,
        10921
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5752": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10901,
        10959
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1681"
    },
    "5755": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10901,
        10959
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5756": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10901,
        10959
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5757": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10901,
        10959
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "5760": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10901,
        10959
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5761": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10901,
        10959
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5762": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10875,
        10959
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5763": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10875,
        10959
      ],
      "op": "POP",
      "path": "26"
    },
    "5764": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10975,
        10984
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5766": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5767": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10994,
        11010
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5768": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10994,
        11017
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5769": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10990,
        10991
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5770": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10990,
        11017
      ],
      "op": "LT",
      "path": "26"
    },
    "5771": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5772": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16BA"
    },
    "5775": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5776": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11038,
        11081
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 70,
      "value": "0x16B2"
    },
    "5779": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11060
      ],
      "op": "DUP6",
      "path": "26"
    },
    "5780": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11061,
        11062
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5781": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5782": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5783": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5784": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "LT",
      "path": "26"
    },
    "5785": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16A4"
    },
    "5788": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5789": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16A4"
    },
    "5792": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x289B"
    },
    "5795": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11044,
        11063
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5796": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5797": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5799": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "MUL",
      "path": "26"
    },
    "5800": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5802": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "ADD",
      "path": "26"
    },
    "5803": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "ADD",
      "path": "26"
    },
    "5804": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11044,
        11063
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5805": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11065,
        11080
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5806": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11038,
        11043
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2072"
    },
    "5809": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11038,
        11081
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5810": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11038,
        11081
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5811": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11019,
        11022
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 71,
      "value": "0x1"
    },
    "5813": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11019,
        11022
      ],
      "op": "ADD",
      "path": "26"
    },
    "5814": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1686"
    },
    "5817": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5818": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5819": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10970,
        11092
      ],
      "op": "POP",
      "path": "26"
    },
    "5820": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11149,
        11158
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5822": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11144,
        11349
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5823": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11168,
        11176
      ],
      "op": "DUP8",
      "path": "26"
    },
    "5824": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11168,
        11183
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5825": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11164,
        11165
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5826": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11164,
        11183
      ],
      "op": "LT",
      "path": "26"
    },
    "5827": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11144,
        11349
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5828": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11144,
        11349
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1727"
    },
    "5831": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11144,
        11349
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5832": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11204,
        11218
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5834": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11283,
        11297
      ],
      "op": "DUP7",
      "path": "26"
    },
    "5835": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11246,
        11263
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5836": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11240
      ],
      "op": "DUP10",
      "path": "26"
    },
    "5837": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11241,
        11242
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5838": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5839": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5840": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5841": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "LT",
      "path": "26"
    },
    "5842": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16DD"
    },
    "5845": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5846": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16DD"
    },
    "5849": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x289B"
    },
    "5852": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11223,
        11243
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5853": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5854": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5856": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "MUL",
      "path": "26"
    },
    "5857": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5859": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "ADD",
      "path": "26"
    },
    "5860": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "ADD",
      "path": "26"
    },
    "5861": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11243
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5862": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11263
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16EF"
    },
    "5865": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11263
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5866": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11263
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5867": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11263
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29E1"
    },
    "5870": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11223,
        11263
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5871": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11263
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5872": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11222,
        11297
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16F9"
    },
    "5875": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11222,
        11297
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5876": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11222,
        11297
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5877": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11222,
        11297
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "5880": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11222,
        11297
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5881": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11222,
        11297
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5882": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11204,
        11298
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5883": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11204,
        11298
      ],
      "op": "POP",
      "path": "26"
    },
    "5884": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11312,
        11338
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 72,
      "value": "0x171E"
    },
    "5887": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11326
      ],
      "op": "DUP10",
      "path": "26"
    },
    "5888": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11327,
        11328
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5889": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5890": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5891": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5892": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "LT",
      "path": "26"
    },
    "5893": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1710"
    },
    "5896": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5897": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1710"
    },
    "5900": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x289B"
    },
    "5903": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11318,
        11329
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5904": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5905": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5907": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "MUL",
      "path": "26"
    },
    "5908": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5910": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "ADD",
      "path": "26"
    },
    "5911": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "ADD",
      "path": "26"
    },
    "5912": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11318,
        11329
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5913": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11331,
        11337
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5914": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11312,
        11317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2072"
    },
    "5917": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11312,
        11338
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5918": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11312,
        11338
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5919": {
      "op": "POP"
    },
    "5920": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11188
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 73,
      "value": "0x1"
    },
    "5922": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11188
      ],
      "op": "ADD",
      "path": "26"
    },
    "5923": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11144,
        11349
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16BE"
    },
    "5926": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11144,
        11349
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5927": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11144,
        11349
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11379
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 74,
      "value": "0x72"
    },
    "5931": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5932": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5933": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5934": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11379
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5936": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1738"
    },
    "5939": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5940": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28E0"
    },
    "5943": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11359,
        11381
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5944": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5945": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5946": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5947": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "POP",
      "path": "26"
    },
    "5948": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5949": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11359,
        11381
      ],
      "op": "POP",
      "path": "26"
    },
    "5950": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10527,
        11388
      ],
      "op": "POP",
      "path": "26"
    },
    "5951": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10527,
        11388
      ],
      "op": "POP",
      "path": "26"
    },
    "5952": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10527,
        11388
      ],
      "op": "POP",
      "path": "26"
    },
    "5953": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "POP",
      "path": "26"
    },
    "5954": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "POP",
      "path": "26"
    },
    "5955": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "POP",
      "path": "26"
    },
    "5956": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10316,
        11388
      ],
      "op": "POP",
      "path": "26"
    },
    "5957": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        10316,
        11388
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5958": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5959": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5960": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5962": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5963": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5964": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5965": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "5967": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5969": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5970": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5971": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5972": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5974": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5975": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5976": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "op": "SUB"
    },
    "5985": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5986": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "2"
    },
    "5987": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5988": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5989": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5990": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5991": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5992": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5993": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5994": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5995": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5996": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5997": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5998": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 75
    },
    "5999": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6000": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "2"
    },
    "6001": {
      "branch": 137,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6002": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CB"
    },
    "6005": {
      "branch": 137,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6006": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6008": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6015": {
      "op": "SHL"
    },
    "6016": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6017": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6020": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6022": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6023": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "2"
    },
    "6024": {
      "op": "MSTORE"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6029": {
      "op": "DUP3"
    },
    "6030": {
      "op": "ADD"
    },
    "6031": {
      "op": "MSTORE"
    },
    "6032": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6067": {
      "op": "DUP3"
    },
    "6068": {
      "op": "ADD"
    },
    "6069": {
      "op": "MSTORE"
    },
    "6070": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6078": {
      "op": "SHL"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6081": {
      "op": "DUP3"
    },
    "6082": {
      "op": "ADD"
    },
    "6083": {
      "op": "MSTORE"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6086": {
      "op": "ADD"
    },
    "6087": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "6090": {
      "op": "JUMP"
    },
    "6091": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6092": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 76,
      "value": "0xD70"
    },
    "6095": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6096": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6097": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6098": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6099": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "2"
    },
    "6100": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B63"
    },
    "6103": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6104": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6105": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6107": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6108": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0x91B"
    },
    "6111": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6112": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6113": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6114": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D19"
    },
    "6117": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6118": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6119": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4455,
        4465
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 78
    },
    "6120": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4478,
        4479
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6122": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6123": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6124": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6125": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4454
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "6127": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6129": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6130": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6132": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6133": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6134": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4466
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6135": {
      "branch": 131,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4437,
        4480
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6136": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1843"
    },
    "6139": {
      "branch": 131,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6140": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6142": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6149": {
      "op": "SHL"
    },
    "6150": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6151": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6154": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6156": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6157": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "ADD",
      "path": "26"
    },
    "6158": {
      "op": "MSTORE"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6163": {
      "op": "DUP3"
    },
    "6164": {
      "op": "ADD"
    },
    "6165": {
      "op": "MSTORE"
    },
    "6166": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6201": {
      "op": "DUP3"
    },
    "6202": {
      "op": "ADD"
    },
    "6203": {
      "op": "MSTORE"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6206": {
      "op": "ADD"
    },
    "6207": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "6210": {
      "op": "JUMP"
    },
    "6211": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4416,
        4530
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6212": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 79,
      "value": "0x40"
    },
    "6214": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6215": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6216": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "6218": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6219": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "ADD",
      "path": "26"
    },
    "6220": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6221": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6222": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4597,
        4607
      ],
      "op": "CALLER",
      "path": "26"
    },
    "6223": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6224": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6225": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6226": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6228": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6229": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6230": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "ADD",
      "path": "26"
    },
    "6231": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6232": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6233": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6234": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4676,
        4678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x32"
    },
    "6236": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6237": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6238": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "ADD",
      "path": "26"
    },
    "6239": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6240": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6241": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6244": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6245": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6246": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6247": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4546
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x73"
    },
    "6249": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6250": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6251": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6252": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6253": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4562
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6254": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "6255": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6256": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6257": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6264": {
      "op": "SHL"
    },
    "6265": {
      "op": "SUB"
    },
    "6266": {
      "op": "NOT"
    },
    "6267": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "AND",
      "path": "26"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6274": {
      "op": "SHL"
    },
    "6275": {
      "op": "SUB"
    },
    "6276": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6277": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6278": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "AND",
      "path": "26"
    },
    "6279": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "OR",
      "path": "26"
    },
    "6280": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6281": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6282": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6283": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6286": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6287": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "ADD",
      "path": "26"
    },
    "6288": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6289": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6290": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "6292": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6293": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6294": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "ADD",
      "path": "26"
    },
    "6295": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6296": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6299": {
      "op": "NOT"
    },
    "6300": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "AND",
      "path": "26"
    },
    "6301": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4565,
        4689
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "6303": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6304": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "6305": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "AND",
      "path": "26"
    },
    "6306": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6307": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6308": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6309": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "OR",
      "path": "26"
    },
    "6310": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6311": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6312": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4541,
        4689
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6313": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "SWAP1",
      "path": "26",
      "statement": 80
    },
    "6314": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6315": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6316": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4717
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "6318": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6319": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6320": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6321": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6322": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4729
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6323": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4746
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6324": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4746
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6325": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4700,
        4746
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6326": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4767
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 81,
      "value": "0x68"
    },
    "6328": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6329": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6330": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6331": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18C3"
    },
    "6334": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6335": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28E0"
    },
    "6338": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4756,
        4769
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6339": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6340": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6341": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6342": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "POP",
      "path": "26"
    },
    "6343": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6344": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4756,
        4769
      ],
      "op": "POP",
      "path": "26"
    },
    "6345": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4299,
        4776
      ],
      "op": "POP",
      "path": "26"
    },
    "6346": {
      "fn": "SmartnodesCore.createUser",
      "jump": "o",
      "offset": [
        4299,
        4776
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6347": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12479,
        12574
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6348": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12526,
        12533
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6350": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12566,
        12567
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 82,
      "value": "0x1"
    },
    "6352": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12552,
        12563
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x68"
    },
    "6354": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12552,
        12563
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6355": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12552,
        12567
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDE9"
    },
    "6358": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12552,
        12567
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6359": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12552,
        12567
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6360": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12552,
        12567
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x296B"
    },
    "6363": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12552,
        12567
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6364": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6365": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11762,
        11766
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6367": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11768,
        11775
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6368": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11777,
        11784
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6370": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11819,
        11837
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 83,
      "value": "0x67"
    },
    "6372": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11819,
        11837
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6373": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11804,
        11816
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6374": {
      "branch": 132,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11804,
        11837
      ],
      "op": "LT",
      "path": "26"
    },
    "6375": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1920"
    },
    "6378": {
      "branch": 132,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6379": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6381": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6382": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6388": {
      "op": "SHL"
    },
    "6389": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6390": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6393": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6395": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6396": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "ADD",
      "path": "26"
    },
    "6397": {
      "op": "MSTORE"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6402": {
      "op": "DUP3"
    },
    "6403": {
      "op": "ADD"
    },
    "6404": {
      "op": "MSTORE"
    },
    "6405": {
      "op": "PUSH11",
      "value": "0x24B73B30B634B21024A217"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6419": {
      "op": "SHL"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6422": {
      "op": "DUP3"
    },
    "6423": {
      "op": "ADD"
    },
    "6424": {
      "op": "MSTORE"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6427": {
      "op": "ADD"
    },
    "6428": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "6431": {
      "op": "JUMP"
    },
    "6432": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11796,
        11853
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6433": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11890
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6435": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6436": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6437": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6438": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11903
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "6440": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6442": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6443": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6444": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6445": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6447": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6448": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6449": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11893,
        11917
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6450": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6451": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6452": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA0"
    },
    "6454": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6455": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6456": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6457": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6458": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6459": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6460": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6461": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6462": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "6464": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6465": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6466": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6473": {
      "op": "SHL"
    },
    "6474": {
      "op": "SUB"
    },
    "6475": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6476": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6477": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "AND",
      "path": "26"
    },
    "6478": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6479": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6480": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6481": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6482": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6483": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6484": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "6486": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6487": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6488": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6489": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6490": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6491": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6492": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6493": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "6495": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6496": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6497": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6498": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "6500": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6501": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6502": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6503": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6505": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6506": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6507": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6508": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6509": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "6511": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "AND",
      "path": "26"
    },
    "6512": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "6514": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6515": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "ADD",
      "path": "26"
    },
    "6516": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6517": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11969
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x65"
    },
    "6519": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11969
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6520": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6521": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6522": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6529": {
      "op": "SHL"
    },
    "6530": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6531": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6532": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6533": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6534": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "ADD",
      "path": "26"
    },
    "6535": {
      "op": "SWAP5"
    },
    "6536": {
      "op": "SWAP1"
    },
    "6537": {
      "op": "SWAP5"
    },
    "6538": {
      "op": "MSTORE"
    },
    "6539": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11917
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6540": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11863,
        11890
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6541": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11969
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6542": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11969
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6543": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11969
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6544": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11969
      ],
      "op": "AND",
      "path": "26"
    },
    "6545": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11969
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6546": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11987
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x40550A1C"
    },
    "6551": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        11987
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6554": {
      "op": "ADD"
    },
    "6555": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6557": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6559": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6560": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6561": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6562": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "SUB",
      "path": "26"
    },
    "6563": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6564": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6565": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "GAS",
      "path": "26"
    },
    "6566": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "6567": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6568": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6569": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6570": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x19B7"
    },
    "6573": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6574": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6575": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6577": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6578": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "6579": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6580": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6582": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "REVERT",
      "path": "26"
    },
    "6583": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6584": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "POP",
      "path": "26"
    },
    "6585": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "POP",
      "path": "26"
    },
    "6586": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "POP",
      "path": "26"
    },
    "6587": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "POP",
      "path": "26"
    },
    "6588": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6590": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6591": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6592": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6594": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "NOT",
      "path": "26"
    },
    "6595": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6597": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6598": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "ADD",
      "path": "26"
    },
    "6599": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "AND",
      "path": "26"
    },
    "6600": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6601": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "ADD",
      "path": "26"
    },
    "6602": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6603": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6605": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6606": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "POP",
      "path": "26"
    },
    "6607": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6608": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "ADD",
      "path": "26"
    },
    "6609": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6610": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x19DB"
    },
    "6613": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6614": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6615": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29F8"
    },
    "6618": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        11943,
        12038
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6619": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11943,
        12038
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6620": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12091,
        12115
      ],
      "op": "DUP3",
      "path": "26",
      "statement": 84
    },
    "6621": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12091,
        12115
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6622": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12129,
        12156
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6624": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12129,
        12156
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6625": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12129,
        12156
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6626": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12129,
        12156
      ],
      "op": "ADD",
      "path": "26"
    },
    "6627": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12129,
        12156
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6628": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11927,
        12038
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6629": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11927,
        12038
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "6630": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12091,
        12115
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6631": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12091,
        12115
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "6632": {
      "op": "POP"
    },
    "6633": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12129,
        12156
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6636": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11677,
        12173
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "op": "POP"
    },
    "6639": {
      "op": "POP"
    },
    "6640": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        11677,
        12173
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6641": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6642": {
      "offset": [
        2927,
        2951
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "6644": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2927,
        2951
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6651": {
      "op": "SHL"
    },
    "6652": {
      "op": "SUB"
    },
    "6653": {
      "offset": [
        2927,
        2951
      ],
      "op": "AND",
      "path": "26"
    },
    "6654": {
      "offset": [
        2913,
        2923
      ],
      "op": "CALLER",
      "path": "26"
    },
    "6655": {
      "offset": [
        2913,
        2951
      ],
      "op": "EQ",
      "path": "26"
    },
    "6656": {
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A1B"
    },
    "6659": {
      "offset": [
        2892,
        3015
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6660": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6662": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6669": {
      "op": "SHL"
    },
    "6670": {
      "offset": [
        2892,
        3015
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6671": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6672": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6674": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "ADD",
      "path": "26"
    },
    "6675": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "6678": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6679": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2925"
    },
    "6682": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        2892,
        3015
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6683": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2892,
        3015
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6684": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7851,
        7866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6686": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6687": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6688": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6689": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7873
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "6691": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6693": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6694": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6695": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6696": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6698": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6699": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6700": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6701": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6702": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7904
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 85,
      "value": "0x4"
    },
    "6704": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7904
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6705": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7904
      ],
      "op": "ADD",
      "path": "26"
    },
    "6706": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7912
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6707": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7912
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6710": {
      "op": "NOT"
    },
    "6711": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7912
      ],
      "op": "AND",
      "path": "26"
    },
    "6712": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7912
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6713": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7892,
        7912
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6714": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "SWAP2",
      "path": "26",
      "statement": 86
    },
    "6715": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6716": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7948,
        7963
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "6717": {
      "op": "DUP2"
    },
    "6718": {
      "op": "MSTORE"
    },
    "6719": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6720": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7869,
        7882
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6721": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x6E04AA702F9AF7A9A398F10D27918152DF25AC0CDC6D74321B9F7496374387A7"
    },
    "6754": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6755": {
      "op": "ADD"
    },
    "6756": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6758": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6759": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6760": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6761": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "SUB",
      "path": "26"
    },
    "6762": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6763": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7927,
        7964
      ],
      "op": "LOG2",
      "path": "26"
    },
    "6764": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7841,
        7971
      ],
      "op": "POP",
      "path": "26"
    },
    "6765": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7773,
        7971
      ],
      "op": "POP",
      "path": "26"
    },
    "6766": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "o",
      "offset": [
        7773,
        7971
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6767": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6768": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11603
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6770": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6771": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6772": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6773": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11610
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "6775": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6777": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6778": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6779": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6780": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6782": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6783": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6784": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11619
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6785": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "6787": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11634
      ],
      "op": "ADD",
      "path": "26"
    },
    "6788": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6789": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6790": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6791": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6792": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6793": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6794": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "MUL",
      "path": "26"
    },
    "6795": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6796": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "ADD",
      "path": "26"
    },
    "6797": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6798": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "ADD",
      "path": "26"
    },
    "6799": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6800": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6801": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6802": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6803": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6804": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6805": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11545,
        11561
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "6807": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11545,
        11561
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6808": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11603
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6809": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6810": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "ADD",
      "path": "26"
    },
    "6811": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11606,
        11634
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6812": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6813": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6814": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6815": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1AD1"
    },
    "6818": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6819": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6821": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "MUL",
      "path": "26"
    },
    "6822": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6823": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "ADD",
      "path": "26"
    },
    "6824": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6825": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6826": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6828": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6829": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6831": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6833": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6834": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6835": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6836": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6837": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6844": {
      "op": "SHL"
    },
    "6845": {
      "op": "SUB"
    },
    "6846": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "AND",
      "path": "26"
    },
    "6847": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6848": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6849": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "6851": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6852": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6853": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "ADD",
      "path": "26"
    },
    "6854": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6855": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6857": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "ADD",
      "path": "26"
    },
    "6858": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6859": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6860": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "GT",
      "path": "26"
    },
    "6861": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1AB3"
    },
    "6864": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6865": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6866": {
      "op": "POP"
    },
    "6867": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6868": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11573,
        11634
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "6869": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11671
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "6870": {
      "op": "POP"
    },
    "6871": {
      "op": "POP"
    },
    "6872": {
      "op": "POP"
    },
    "6873": {
      "op": "POP"
    },
    "6874": {
      "op": "POP"
    },
    "6875": {
      "op": "POP"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "o",
      "offset": [
        11465,
        11671
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6878": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3878,
        4204
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6879": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3974,
        3998
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 87,
      "value": "0x66"
    },
    "6881": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3974,
        3998
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6888": {
      "op": "SHL"
    },
    "6889": {
      "op": "SUB"
    },
    "6890": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3974,
        3998
      ],
      "op": "AND",
      "path": "26"
    },
    "6891": {
      "branch": 133,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3974,
        4012
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6892": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B37"
    },
    "6895": {
      "branch": 133,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6896": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6898": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6905": {
      "op": "SHL"
    },
    "6906": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6907": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6910": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6912": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6913": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "ADD",
      "path": "26"
    },
    "6914": {
      "op": "MSTORE"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6919": {
      "op": "DUP3"
    },
    "6920": {
      "op": "ADD"
    },
    "6921": {
      "op": "MSTORE"
    },
    "6922": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6957": {
      "op": "DUP3"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "op": "MSTORE"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6962": {
      "op": "ADD"
    },
    "6963": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "6966": {
      "op": "JUMP"
    },
    "6967": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3953,
        4068
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6968": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4104
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 88,
      "value": "0x65"
    },
    "6970": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6971": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6978": {
      "op": "SHL"
    },
    "6979": {
      "op": "SUB"
    },
    "6980": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6981": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6982": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "AND",
      "path": "26"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6989": {
      "op": "SHL"
    },
    "6990": {
      "op": "SUB"
    },
    "6991": {
      "op": "NOT"
    },
    "6992": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6993": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6994": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "AND",
      "path": "26"
    },
    "6995": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6996": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "OR",
      "path": "26"
    },
    "6997": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6998": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6999": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4078,
        4144
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7000": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4178
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 89,
      "value": "0x66"
    },
    "7002": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7003": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7004": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7005": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7006": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "AND",
      "path": "26"
    },
    "7007": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "OR",
      "path": "26"
    },
    "7008": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7009": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4154,
        4197
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7010": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        3878,
        4204
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7011": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7018": {
      "op": "SHL"
    },
    "7019": {
      "op": "SUB"
    },
    "7020": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 90
    },
    "7021": {
      "branch": 138,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "2"
    },
    "7022": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC5"
    },
    "7025": {
      "branch": 138,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7026": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7028": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7035": {
      "op": "SHL"
    },
    "7036": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7037": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7040": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7042": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7043": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "2"
    },
    "7044": {
      "op": "MSTORE"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7047": {
      "op": "DUP1"
    },
    "7048": {
      "op": "DUP3"
    },
    "7049": {
      "op": "ADD"
    },
    "7050": {
      "op": "MSTORE"
    },
    "7051": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "7084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7086": {
      "op": "DUP3"
    },
    "7087": {
      "op": "ADD"
    },
    "7088": {
      "op": "MSTORE"
    },
    "7089": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7096": {
      "op": "SHL"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7099": {
      "op": "DUP3"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "MSTORE"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7104": {
      "op": "ADD"
    },
    "7105": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "7108": {
      "op": "JUMP"
    },
    "7109": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7116": {
      "op": "SHL"
    },
    "7117": {
      "op": "SUB"
    },
    "7118": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 91
    },
    "7119": {
      "branch": 139,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "2"
    },
    "7120": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C26"
    },
    "7123": {
      "branch": 139,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7124": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7126": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7133": {
      "op": "SHL"
    },
    "7134": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7135": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7138": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7140": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7141": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "2"
    },
    "7142": {
      "op": "MSTORE"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7147": {
      "op": "DUP3"
    },
    "7148": {
      "op": "ADD"
    },
    "7149": {
      "op": "MSTORE"
    },
    "7150": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7185": {
      "op": "DUP3"
    },
    "7186": {
      "op": "ADD"
    },
    "7187": {
      "op": "MSTORE"
    },
    "7188": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7193": {
      "op": "SHL"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7196": {
      "op": "DUP3"
    },
    "7197": {
      "op": "ADD"
    },
    "7198": {
      "op": "MSTORE"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7201": {
      "op": "ADD"
    },
    "7202": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "7205": {
      "op": "JUMP"
    },
    "7206": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7213": {
      "op": "SHL"
    },
    "7214": {
      "op": "SUB"
    },
    "7215": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 92
    },
    "7216": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7217": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "2"
    },
    "7218": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7220": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7221": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7222": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7223": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7225": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7227": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7228": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7229": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7230": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7232": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7233": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7234": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7235": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7236": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7237": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "7238": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7239": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7240": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7241": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7242": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7243": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7244": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7245": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7246": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7247": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7248": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7249": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7250": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7251": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 93
    },
    "7252": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7253": {
      "op": "DUP5"
    },
    "7254": {
      "op": "DUP2"
    },
    "7255": {
      "op": "MSTORE"
    },
    "7256": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7289": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7290": {
      "op": "ADD"
    },
    "7291": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7293": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7294": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7295": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7296": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "7297": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7298": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7299": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7300": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7301": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7302": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7303": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7310": {
      "op": "SHL"
    },
    "7311": {
      "op": "SUB"
    },
    "7312": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7313": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7314": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "7315": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7317": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7318": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7319": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7320": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7322": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7324": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7325": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7326": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7327": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7329": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7330": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7331": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7332": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7333": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7334": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "7335": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7336": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7337": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7338": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7339": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7340": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7341": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7344": {
      "op": "NOT"
    },
    "7345": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7346": {
      "branch": 140,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "7347": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D13"
    },
    "7350": {
      "branch": 140,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7351": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 94
    },
    "7352": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7353": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "7354": {
      "branch": 141,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7355": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D06"
    },
    "7358": {
      "branch": 141,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7359": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7361": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7368": {
      "op": "SHL"
    },
    "7369": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7370": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7373": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7375": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7376": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "7377": {
      "op": "MSTORE"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7382": {
      "op": "DUP3"
    },
    "7383": {
      "op": "ADD"
    },
    "7384": {
      "op": "MSTORE"
    },
    "7385": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7420": {
      "op": "DUP3"
    },
    "7421": {
      "op": "ADD"
    },
    "7422": {
      "op": "MSTORE"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7425": {
      "op": "ADD"
    },
    "7426": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "7429": {
      "op": "JUMP"
    },
    "7430": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7431": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 95,
      "value": "0x1D13"
    },
    "7434": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7435": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7436": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7437": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7438": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "7439": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B63"
    },
    "7442": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7443": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7444": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7445": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7446": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7447": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7448": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7449": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7456": {
      "op": "SHL"
    },
    "7457": {
      "op": "SUB"
    },
    "7458": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 96
    },
    "7459": {
      "branch": 142,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "2"
    },
    "7460": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7D"
    },
    "7463": {
      "branch": 142,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7464": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7466": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7473": {
      "op": "SHL"
    },
    "7474": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7475": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7478": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7480": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7481": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "2"
    },
    "7482": {
      "op": "MSTORE"
    },
    "7483": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7487": {
      "op": "DUP3"
    },
    "7488": {
      "op": "ADD"
    },
    "7489": {
      "op": "MSTORE"
    },
    "7490": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7525": {
      "op": "DUP3"
    },
    "7526": {
      "op": "ADD"
    },
    "7527": {
      "op": "MSTORE"
    },
    "7528": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7536": {
      "op": "SHL"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7539": {
      "op": "DUP3"
    },
    "7540": {
      "op": "ADD"
    },
    "7541": {
      "op": "MSTORE"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "7548": {
      "op": "JUMP"
    },
    "7549": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7556": {
      "op": "SHL"
    },
    "7557": {
      "op": "SUB"
    },
    "7558": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 97
    },
    "7559": {
      "branch": 143,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "2"
    },
    "7560": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DDF"
    },
    "7563": {
      "branch": 143,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7564": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7566": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7573": {
      "op": "SHL"
    },
    "7574": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7575": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7578": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7580": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7581": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "2"
    },
    "7582": {
      "op": "MSTORE"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7587": {
      "op": "DUP3"
    },
    "7588": {
      "op": "ADD"
    },
    "7589": {
      "op": "MSTORE"
    },
    "7590": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7625": {
      "op": "DUP3"
    },
    "7626": {
      "op": "ADD"
    },
    "7627": {
      "op": "MSTORE"
    },
    "7628": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7634": {
      "op": "SHL"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7637": {
      "op": "DUP3"
    },
    "7638": {
      "op": "ADD"
    },
    "7639": {
      "op": "MSTORE"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7642": {
      "op": "ADD"
    },
    "7643": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "7646": {
      "op": "JUMP"
    },
    "7647": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7654": {
      "op": "SHL"
    },
    "7655": {
      "op": "SUB"
    },
    "7656": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7657": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "2"
    },
    "7658": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7660": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7661": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7662": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7663": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7665": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7667": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7668": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7670": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7671": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7672": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7673": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 98
    },
    "7674": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7675": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "2"
    },
    "7676": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7677": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E57"
    },
    "7680": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7681": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7683": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7690": {
      "op": "SHL"
    },
    "7691": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7692": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7695": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7697": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7698": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "2"
    },
    "7699": {
      "op": "MSTORE"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7704": {
      "op": "DUP3"
    },
    "7705": {
      "op": "ADD"
    },
    "7706": {
      "op": "MSTORE"
    },
    "7707": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7742": {
      "op": "DUP3"
    },
    "7743": {
      "op": "ADD"
    },
    "7744": {
      "op": "MSTORE"
    },
    "7745": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7754": {
      "op": "SHL"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7757": {
      "op": "DUP3"
    },
    "7758": {
      "op": "ADD"
    },
    "7759": {
      "op": "MSTORE"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7762": {
      "op": "ADD"
    },
    "7763": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "7766": {
      "op": "JUMP"
    },
    "7767": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7774": {
      "op": "SHL"
    },
    "7775": {
      "op": "SUB"
    },
    "7776": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 99
    },
    "7777": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7778": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "7779": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7781": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7782": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7783": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7784": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7786": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7788": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7789": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7791": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7792": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7793": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7794": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7795": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7796": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "7797": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7798": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7799": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 100
    },
    "7800": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7801": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "2"
    },
    "7802": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7803": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7804": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7805": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7806": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7807": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7808": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7809": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7810": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7811": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7812": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E8E"
    },
    "7815": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7816": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7817": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7818": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2912"
    },
    "7821": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7822": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7823": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7824": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7825": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7826": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7827": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7828": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7829": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7830": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 101
    },
    "7831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7837": {
      "op": "SHL"
    },
    "7838": {
      "op": "SUB"
    },
    "7839": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7840": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7847": {
      "op": "SHL"
    },
    "7848": {
      "op": "SUB"
    },
    "7849": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7850": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7883": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7884": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7886": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7887": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EDA"
    },
    "7890": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7891": {
      "op": "DUP2"
    },
    "7892": {
      "op": "MSTORE"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7895": {
      "op": "ADD"
    },
    "7896": {
      "op": "SWAP1"
    },
    "7897": {
      "op": "JUMP"
    },
    "7898": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7899": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7901": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7902": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7903": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7904": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "2"
    },
    "7905": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7906": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7907": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 102,
      "value": "0x1D13"
    },
    "7910": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8834,
        10139
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7911": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8069,
        8648
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7912": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8158,
        8159
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 103,
      "value": "0x0"
    },
    "7914": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8149,
        8155
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7915": {
      "branch": 134,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8149,
        8159
      ],
      "op": "GT",
      "path": "26"
    },
    "7916": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F07"
    },
    "7919": {
      "branch": 134,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "7920": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7922": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7929": {
      "op": "SHL"
    },
    "7930": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7931": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7932": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "7934": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "ADD",
      "path": "26"
    },
    "7935": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "7938": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7939": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x297E"
    },
    "7942": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8141,
        8197
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7943": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8141,
        8197
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7944": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8236,
        8242
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 104
    },
    "7945": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8215,
        8232
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F27"
    },
    "7948": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8225,
        8231
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7955": {
      "op": "SHL"
    },
    "7956": {
      "op": "SUB"
    },
    "7957": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2"
    },
    "7958": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7960": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7961": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7962": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7963": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7965": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7967": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7968": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7970": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7971": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7972": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7973": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7974": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7975": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8215,
        8232
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7976": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8215,
        8242
      ],
      "op": "LT",
      "path": "26"
    },
    "7977": {
      "branch": 135,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8215,
        8242
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "7978": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F6D"
    },
    "7981": {
      "branch": 135,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "7982": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7984": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7991": {
      "op": "SHL"
    },
    "7992": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7993": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7996": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "7998": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7999": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "ADD",
      "path": "26"
    },
    "8000": {
      "op": "MSTORE"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8005": {
      "op": "DUP3"
    },
    "8006": {
      "op": "ADD"
    },
    "8007": {
      "op": "MSTORE"
    },
    "8008": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "8032": {
      "op": "SHL"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8035": {
      "op": "DUP3"
    },
    "8036": {
      "op": "ADD"
    },
    "8037": {
      "op": "MSTORE"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8040": {
      "op": "ADD"
    },
    "8041": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "8044": {
      "op": "JUMP"
    },
    "8045": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8207,
        8268
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8052": {
      "op": "SHL"
    },
    "8053": {
      "op": "SUB"
    },
    "8054": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8055": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "AND",
      "path": "26"
    },
    "8056": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8279,
        8298
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8058": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8059": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8060": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8061": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8321
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7A"
    },
    "8063": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8065": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8066": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8068": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8069": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "8070": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8071": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8301,
        8329
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8072": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8347,
        8363
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 105
    },
    "8073": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8347,
        8363
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8074": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8347,
        8363
      ],
      "op": "SUB",
      "path": "26"
    },
    "8075": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FD2"
    },
    "8078": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8079": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8081": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8088": {
      "op": "SHL"
    },
    "8089": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8090": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8093": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8095": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8096": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "ADD",
      "path": "26"
    },
    "8097": {
      "op": "MSTORE"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8102": {
      "op": "DUP3"
    },
    "8103": {
      "op": "ADD"
    },
    "8104": {
      "op": "MSTORE"
    },
    "8105": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "8133": {
      "op": "SHL"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8136": {
      "op": "DUP3"
    },
    "8137": {
      "op": "ADD"
    },
    "8138": {
      "op": "MSTORE"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8141": {
      "op": "ADD"
    },
    "8142": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA3C"
    },
    "8145": {
      "op": "JUMP"
    },
    "8146": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8339,
        8393
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8147": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8404,
        8447
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 106,
      "value": "0x1FDD"
    },
    "8150": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8417,
        8423
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8151": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8433,
        8437
      ],
      "op": "ADDRESS",
      "path": "26"
    },
    "8152": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8440,
        8446
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8153": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8404,
        8416
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD57"
    },
    "8156": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8404,
        8447
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8157": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8404,
        8447
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8158": {
      "op": "POP"
    },
    "8159": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 107,
      "value": "0x0"
    },
    "8161": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8162": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8163": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8164": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8467
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "8166": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8168": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8169": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8171": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8172": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "8173": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8487
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "8175": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8487
      ],
      "op": "ADD",
      "path": "26"
    },
    "8176": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8177": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8178": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8491,
        8497
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8179": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8491,
        8497
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "8180": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8480
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8181": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FFF"
    },
    "8184": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8185": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8491,
        8497
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8186": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8491,
        8497
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8187": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2912"
    },
    "8190": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8457,
        8497
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8191": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8192": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8193": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8194": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8457,
        8497
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "8195": {
      "op": "POP"
    },
    "8196": {
      "op": "POP"
    },
    "8197": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8507,
        8527
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8199": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8200": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8201": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8202": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8540
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "8204": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8206": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8207": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8209": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8210": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8553
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "8211": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "8213": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "ADD",
      "path": "26"
    },
    "8214": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8215": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8581
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 108,
      "value": "0x6D"
    },
    "8217": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8218": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8219": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8220": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "8221": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8222": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "8223": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2029"
    },
    "8226": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8227": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8228": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8530,
        8560
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8229": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2912"
    },
    "8232": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8570,
        8597
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8233": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8234": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8235": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8236": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8570,
        8597
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "8237": {
      "op": "POP"
    },
    "8238": {
      "op": "POP"
    },
    "8239": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 109,
      "value": "0x40"
    },
    "8241": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8242": {
      "op": "DUP4"
    },
    "8243": {
      "op": "DUP2"
    },
    "8244": {
      "op": "MSTORE"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8251": {
      "op": "SHL"
    },
    "8252": {
      "op": "SUB"
    },
    "8253": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "DUP6",
      "path": "26"
    },
    "8254": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "AND",
      "path": "26"
    },
    "8255": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8256": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "8289": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8292": {
      "op": "ADD"
    },
    "8293": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8295": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8296": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8297": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8298": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "SUB",
      "path": "26"
    },
    "8299": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8300": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8613,
        8641
      ],
      "op": "LOG2",
      "path": "26"
    },
    "8301": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8131,
        8648
      ],
      "op": "POP",
      "path": "26"
    },
    "8302": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8131,
        8648
      ],
      "op": "POP",
      "path": "26"
    },
    "8303": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8069,
        8648
      ],
      "op": "POP",
      "path": "26"
    },
    "8304": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8069,
        8648
      ],
      "op": "POP",
      "path": "26"
    },
    "8305": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "o",
      "offset": [
        8069,
        8648
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8306": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8313": {
      "op": "SHL"
    },
    "8314": {
      "op": "SUB"
    },
    "8315": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 110
    },
    "8316": {
      "branch": 145,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "2"
    },
    "8317": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C8"
    },
    "8320": {
      "branch": 145,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8321": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8323": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8330": {
      "op": "SHL"
    },
    "8331": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8332": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8335": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8337": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8338": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "2"
    },
    "8339": {
      "op": "MSTORE"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8344": {
      "op": "DUP3"
    },
    "8345": {
      "op": "ADD"
    },
    "8346": {
      "op": "MSTORE"
    },
    "8347": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8382": {
      "op": "DUP3"
    },
    "8383": {
      "op": "ADD"
    },
    "8384": {
      "op": "MSTORE"
    },
    "8385": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8387": {
      "op": "ADD"
    },
    "8388": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3C"
    },
    "8391": {
      "op": "JUMP"
    },
    "8392": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8393": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 111
    },
    "8394": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "8396": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8398": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8399": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8400": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8401": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20DA"
    },
    "8404": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8405": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8406": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2912"
    },
    "8409": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8410": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8411": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8412": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8413": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8414": {
      "op": "POP"
    },
    "8415": {
      "op": "POP"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8422": {
      "op": "SHL"
    },
    "8423": {
      "op": "SUB"
    },
    "8424": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 112
    },
    "8425": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "8426": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8428": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8429": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8430": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8431": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "8433": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8435": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8436": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8438": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8439": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8440": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8441": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8442": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8443": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8444": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8445": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2107"
    },
    "8448": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8449": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8450": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8451": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2912"
    },
    "8454": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8455": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8456": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8457": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8458": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8459": {
      "op": "POP"
    },
    "8460": {
      "op": "POP"
    },
    "8461": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 113,
      "value": "0x40"
    },
    "8463": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8464": {
      "op": "DUP2"
    },
    "8465": {
      "op": "DUP2"
    },
    "8466": {
      "op": "MSTORE"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8473": {
      "op": "SHL"
    },
    "8474": {
      "op": "SUB"
    },
    "8475": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8476": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "2"
    },
    "8477": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8478": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8480": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8481": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8514": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8517": {
      "op": "ADD"
    },
    "8518": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8520": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8521": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8522": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8523": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "2"
    },
    "8524": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8525": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8526": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "8527": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3039,
        3872
      ],
      "op": "POP",
      "path": "26"
    },
    "8528": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3039,
        3872
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8529": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8530": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8532": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8533": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8536": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8537": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8538": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8540": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8541": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2178"
    },
    "8544": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8545": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8547": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8554": {
      "op": "SHL"
    },
    "8555": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8556": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8557": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8559": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8560": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3C"
    },
    "8563": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8564": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A1A"
    },
    "8567": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8568": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8569": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 114,
      "value": "0x15D0"
    },
    "8572": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8573": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8574": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8576": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8577": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8580": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8581": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8582": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8584": {
      "branch": 148,
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8585": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21A4"
    },
    "8588": {
      "branch": 148,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8589": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8591": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8598": {
      "op": "SHL"
    },
    "8599": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8600": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8601": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8603": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8604": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3C"
    },
    "8607": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8608": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A1A"
    },
    "8611": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8612": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8613": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 115,
      "value": "0x36"
    },
    "8615": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B0"
    },
    "8618": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8619": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8620": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AB5"
    },
    "8623": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8624": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8625": {
      "op": "POP"
    },
    "8626": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 116,
      "value": "0x37"
    },
    "8628": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x143D"
    },
    "8631": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8632": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8633": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AB5"
    },
    "8636": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8637": {
      "op": "JUMPDEST"
    },
    "8638": {
      "op": "DUP3"
    },
    "8639": {
      "op": "DUP1"
    },
    "8640": {
      "op": "SLOAD"
    },
    "8641": {
      "op": "DUP3"
    },
    "8642": {
      "op": "DUP3"
    },
    "8643": {
      "op": "SSTORE"
    },
    "8644": {
      "op": "SWAP1"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8647": {
      "op": "MSTORE"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8652": {
      "op": "KECCAK256"
    },
    "8653": {
      "op": "SWAP1"
    },
    "8654": {
      "op": "DUP2"
    },
    "8655": {
      "op": "ADD"
    },
    "8656": {
      "op": "SWAP3"
    },
    "8657": {
      "op": "DUP3"
    },
    "8658": {
      "op": "ISZERO"
    },
    "8659": {
      "op": "PUSH2",
      "value": "0x2212"
    },
    "8662": {
      "op": "JUMPI"
    },
    "8663": {
      "op": "SWAP2"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8666": {
      "op": "MUL"
    },
    "8667": {
      "op": "DUP3"
    },
    "8668": {
      "op": "ADD"
    },
    "8669": {
      "op": "JUMPDEST"
    },
    "8670": {
      "op": "DUP3"
    },
    "8671": {
      "op": "DUP2"
    },
    "8672": {
      "op": "GT"
    },
    "8673": {
      "op": "ISZERO"
    },
    "8674": {
      "op": "PUSH2",
      "value": "0x2212"
    },
    "8677": {
      "op": "JUMPI"
    },
    "8678": {
      "op": "DUP3"
    },
    "8679": {
      "op": "MLOAD"
    },
    "8680": {
      "op": "DUP3"
    },
    "8681": {
      "op": "SLOAD"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8688": {
      "op": "SHL"
    },
    "8689": {
      "op": "SUB"
    },
    "8690": {
      "op": "NOT"
    },
    "8691": {
      "op": "AND"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8698": {
      "op": "SHL"
    },
    "8699": {
      "op": "SUB"
    },
    "8700": {
      "op": "SWAP1"
    },
    "8701": {
      "op": "SWAP2"
    },
    "8702": {
      "op": "AND"
    },
    "8703": {
      "op": "OR"
    },
    "8704": {
      "op": "DUP3"
    },
    "8705": {
      "op": "SSTORE"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8708": {
      "op": "SWAP1"
    },
    "8709": {
      "op": "SWAP3"
    },
    "8710": {
      "op": "ADD"
    },
    "8711": {
      "op": "SWAP2"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8714": {
      "op": "SWAP1"
    },
    "8715": {
      "op": "SWAP2"
    },
    "8716": {
      "op": "ADD"
    },
    "8717": {
      "op": "SWAP1"
    },
    "8718": {
      "op": "PUSH2",
      "value": "0x21DD"
    },
    "8721": {
      "op": "JUMP"
    },
    "8722": {
      "op": "JUMPDEST"
    },
    "8723": {
      "op": "POP"
    },
    "8724": {
      "op": "PUSH2",
      "value": "0x221E"
    },
    "8727": {
      "op": "SWAP3"
    },
    "8728": {
      "op": "SWAP2"
    },
    "8729": {
      "op": "POP"
    },
    "8730": {
      "op": "PUSH2",
      "value": "0x225D"
    },
    "8733": {
      "jump": "i",
      "op": "JUMP"
    },
    "8734": {
      "op": "JUMPDEST"
    },
    "8735": {
      "op": "POP"
    },
    "8736": {
      "op": "SWAP1"
    },
    "8737": {
      "jump": "o",
      "op": "JUMP"
    },
    "8738": {
      "op": "JUMPDEST"
    },
    "8739": {
      "op": "DUP3"
    },
    "8740": {
      "op": "DUP1"
    },
    "8741": {
      "op": "SLOAD"
    },
    "8742": {
      "op": "DUP3"
    },
    "8743": {
      "op": "DUP3"
    },
    "8744": {
      "op": "SSTORE"
    },
    "8745": {
      "op": "SWAP1"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8748": {
      "op": "MSTORE"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8753": {
      "op": "KECCAK256"
    },
    "8754": {
      "op": "SWAP1"
    },
    "8755": {
      "op": "DUP2"
    },
    "8756": {
      "op": "ADD"
    },
    "8757": {
      "op": "SWAP3"
    },
    "8758": {
      "op": "DUP3"
    },
    "8759": {
      "op": "ISZERO"
    },
    "8760": {
      "op": "PUSH2",
      "value": "0x2212"
    },
    "8763": {
      "op": "JUMPI"
    },
    "8764": {
      "op": "SWAP2"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8767": {
      "op": "MUL"
    },
    "8768": {
      "op": "DUP3"
    },
    "8769": {
      "op": "ADD"
    },
    "8770": {
      "op": "JUMPDEST"
    },
    "8771": {
      "op": "DUP3"
    },
    "8772": {
      "op": "DUP2"
    },
    "8773": {
      "op": "GT"
    },
    "8774": {
      "op": "ISZERO"
    },
    "8775": {
      "op": "PUSH2",
      "value": "0x2212"
    },
    "8778": {
      "op": "JUMPI"
    },
    "8779": {
      "op": "DUP3"
    },
    "8780": {
      "op": "MLOAD"
    },
    "8781": {
      "op": "DUP3"
    },
    "8782": {
      "op": "SSTORE"
    },
    "8783": {
      "op": "SWAP2"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8786": {
      "op": "ADD"
    },
    "8787": {
      "op": "SWAP2"
    },
    "8788": {
      "op": "SWAP1"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8791": {
      "op": "ADD"
    },
    "8792": {
      "op": "SWAP1"
    },
    "8793": {
      "op": "PUSH2",
      "value": "0x2242"
    },
    "8796": {
      "op": "JUMP"
    },
    "8797": {
      "op": "JUMPDEST"
    },
    "8798": {
      "op": "JUMPDEST"
    },
    "8799": {
      "op": "DUP1"
    },
    "8800": {
      "op": "DUP3"
    },
    "8801": {
      "op": "GT"
    },
    "8802": {
      "op": "ISZERO"
    },
    "8803": {
      "op": "PUSH2",
      "value": "0x221E"
    },
    "8806": {
      "op": "JUMPI"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8809": {
      "op": "DUP2"
    },
    "8810": {
      "op": "SSTORE"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8813": {
      "op": "ADD"
    },
    "8814": {
      "op": "PUSH2",
      "value": "0x225E"
    },
    "8817": {
      "op": "JUMP"
    },
    "8818": {
      "op": "JUMPDEST"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8823": {
      "op": "DUP1"
    },
    "8824": {
      "op": "DUP4"
    },
    "8825": {
      "op": "MSTORE"
    },
    "8826": {
      "op": "DUP4"
    },
    "8827": {
      "op": "MLOAD"
    },
    "8828": {
      "op": "DUP1"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8831": {
      "op": "DUP6"
    },
    "8832": {
      "op": "ADD"
    },
    "8833": {
      "op": "MSTORE"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8836": {
      "op": "JUMPDEST"
    },
    "8837": {
      "op": "DUP2"
    },
    "8838": {
      "op": "DUP2"
    },
    "8839": {
      "op": "LT"
    },
    "8840": {
      "op": "ISZERO"
    },
    "8841": {
      "op": "PUSH2",
      "value": "0x22A0"
    },
    "8844": {
      "op": "JUMPI"
    },
    "8845": {
      "op": "DUP6"
    },
    "8846": {
      "op": "DUP2"
    },
    "8847": {
      "op": "ADD"
    },
    "8848": {
      "op": "DUP4"
    },
    "8849": {
      "op": "ADD"
    },
    "8850": {
      "op": "MLOAD"
    },
    "8851": {
      "op": "DUP6"
    },
    "8852": {
      "op": "DUP3"
    },
    "8853": {
      "op": "ADD"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8856": {
      "op": "ADD"
    },
    "8857": {
      "op": "MSTORE"
    },
    "8858": {
      "op": "DUP3"
    },
    "8859": {
      "op": "ADD"
    },
    "8860": {
      "op": "PUSH2",
      "value": "0x2284"
    },
    "8863": {
      "op": "JUMP"
    },
    "8864": {
      "op": "JUMPDEST"
    },
    "8865": {
      "op": "POP"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8870": {
      "op": "DUP3"
    },
    "8871": {
      "op": "DUP7"
    },
    "8872": {
      "op": "ADD"
    },
    "8873": {
      "op": "ADD"
    },
    "8874": {
      "op": "MSTORE"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8879": {
      "op": "NOT"
    },
    "8880": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8882": {
      "op": "DUP4"
    },
    "8883": {
      "op": "ADD"
    },
    "8884": {
      "op": "AND"
    },
    "8885": {
      "op": "DUP6"
    },
    "8886": {
      "op": "ADD"
    },
    "8887": {
      "op": "ADD"
    },
    "8888": {
      "op": "SWAP3"
    },
    "8889": {
      "op": "POP"
    },
    "8890": {
      "op": "POP"
    },
    "8891": {
      "op": "POP"
    },
    "8892": {
      "op": "SWAP3"
    },
    "8893": {
      "op": "SWAP2"
    },
    "8894": {
      "op": "POP"
    },
    "8895": {
      "op": "POP"
    },
    "8896": {
      "jump": "o",
      "op": "JUMP"
    },
    "8897": {
      "op": "JUMPDEST"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8904": {
      "op": "SHL"
    },
    "8905": {
      "op": "SUB"
    },
    "8906": {
      "op": "DUP2"
    },
    "8907": {
      "op": "AND"
    },
    "8908": {
      "op": "DUP2"
    },
    "8909": {
      "op": "EQ"
    },
    "8910": {
      "op": "PUSH2",
      "value": "0x1228"
    },
    "8913": {
      "op": "JUMPI"
    },
    "8914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8916": {
      "op": "DUP1"
    },
    "8917": {
      "op": "REVERT"
    },
    "8918": {
      "op": "JUMPDEST"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8921": {
      "op": "DUP1"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8924": {
      "op": "DUP4"
    },
    "8925": {
      "op": "DUP6"
    },
    "8926": {
      "op": "SUB"
    },
    "8927": {
      "op": "SLT"
    },
    "8928": {
      "op": "ISZERO"
    },
    "8929": {
      "op": "PUSH2",
      "value": "0x22E9"
    },
    "8932": {
      "op": "JUMPI"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8935": {
      "op": "DUP1"
    },
    "8936": {
      "op": "REVERT"
    },
    "8937": {
      "op": "JUMPDEST"
    },
    "8938": {
      "op": "DUP3"
    },
    "8939": {
      "op": "CALLDATALOAD"
    },
    "8940": {
      "op": "PUSH2",
      "value": "0x22F4"
    },
    "8943": {
      "op": "DUP2"
    },
    "8944": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "8947": {
      "jump": "i",
      "op": "JUMP"
    },
    "8948": {
      "op": "JUMPDEST"
    },
    "8949": {
      "op": "SWAP5"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8952": {
      "op": "SWAP4"
    },
    "8953": {
      "op": "SWAP1"
    },
    "8954": {
      "op": "SWAP4"
    },
    "8955": {
      "op": "ADD"
    },
    "8956": {
      "op": "CALLDATALOAD"
    },
    "8957": {
      "op": "SWAP4"
    },
    "8958": {
      "op": "POP"
    },
    "8959": {
      "op": "POP"
    },
    "8960": {
      "op": "POP"
    },
    "8961": {
      "jump": "o",
      "op": "JUMP"
    },
    "8962": {
      "op": "JUMPDEST"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8965": {
      "op": "DUP2"
    },
    "8966": {
      "op": "MLOAD"
    },
    "8967": {
      "op": "DUP1"
    },
    "8968": {
      "op": "DUP5"
    },
    "8969": {
      "op": "MSTORE"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8972": {
      "op": "DUP1"
    },
    "8973": {
      "op": "DUP6"
    },
    "8974": {
      "op": "ADD"
    },
    "8975": {
      "op": "SWAP5"
    },
    "8976": {
      "op": "POP"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8979": {
      "op": "DUP5"
    },
    "8980": {
      "op": "ADD"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8983": {
      "op": "JUMPDEST"
    },
    "8984": {
      "op": "DUP4"
    },
    "8985": {
      "op": "DUP2"
    },
    "8986": {
      "op": "LT"
    },
    "8987": {
      "op": "ISZERO"
    },
    "8988": {
      "op": "PUSH2",
      "value": "0x233C"
    },
    "8991": {
      "op": "JUMPI"
    },
    "8992": {
      "op": "DUP2"
    },
    "8993": {
      "op": "MLOAD"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9000": {
      "op": "SHL"
    },
    "9001": {
      "op": "SUB"
    },
    "9002": {
      "op": "AND"
    },
    "9003": {
      "op": "DUP8"
    },
    "9004": {
      "op": "MSTORE"
    },
    "9005": {
      "op": "SWAP6"
    },
    "9006": {
      "op": "DUP3"
    },
    "9007": {
      "op": "ADD"
    },
    "9008": {
      "op": "SWAP6"
    },
    "9009": {
      "op": "SWAP1"
    },
    "9010": {
      "op": "DUP3"
    },
    "9011": {
      "op": "ADD"
    },
    "9012": {
      "op": "SWAP1"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9015": {
      "op": "ADD"
    },
    "9016": {
      "op": "PUSH2",
      "value": "0x2317"
    },
    "9019": {
      "op": "JUMP"
    },
    "9020": {
      "op": "JUMPDEST"
    },
    "9021": {
      "op": "POP"
    },
    "9022": {
      "op": "SWAP5"
    },
    "9023": {
      "op": "SWAP6"
    },
    "9024": {
      "op": "SWAP5"
    },
    "9025": {
      "op": "POP"
    },
    "9026": {
      "op": "POP"
    },
    "9027": {
      "op": "POP"
    },
    "9028": {
      "op": "POP"
    },
    "9029": {
      "op": "POP"
    },
    "9030": {
      "jump": "o",
      "op": "JUMP"
    },
    "9031": {
      "op": "JUMPDEST"
    },
    "9032": {
      "op": "DUP5"
    },
    "9033": {
      "op": "DUP2"
    },
    "9034": {
      "op": "MSTORE"
    },
    "9035": {
      "op": "DUP4"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9038": {
      "op": "DUP3"
    },
    "9039": {
      "op": "ADD"
    },
    "9040": {
      "op": "MSTORE"
    },
    "9041": {
      "op": "DUP3"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9044": {
      "op": "DUP3"
    },
    "9045": {
      "op": "ADD"
    },
    "9046": {
      "op": "MSTORE"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9051": {
      "op": "DUP3"
    },
    "9052": {
      "op": "ADD"
    },
    "9053": {
      "op": "MSTORE"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9056": {
      "op": "PUSH2",
      "value": "0x236C"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9061": {
      "op": "DUP4"
    },
    "9062": {
      "op": "ADD"
    },
    "9063": {
      "op": "DUP5"
    },
    "9064": {
      "op": "PUSH2",
      "value": "0x2302"
    },
    "9067": {
      "jump": "i",
      "op": "JUMP"
    },
    "9068": {
      "op": "JUMPDEST"
    },
    "9069": {
      "op": "SWAP7"
    },
    "9070": {
      "op": "SWAP6"
    },
    "9071": {
      "op": "POP"
    },
    "9072": {
      "op": "POP"
    },
    "9073": {
      "op": "POP"
    },
    "9074": {
      "op": "POP"
    },
    "9075": {
      "op": "POP"
    },
    "9076": {
      "op": "POP"
    },
    "9077": {
      "jump": "o",
      "op": "JUMP"
    },
    "9078": {
      "op": "JUMPDEST"
    },
    "9079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9081": {
      "op": "DUP1"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9084": {
      "op": "DUP1"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9087": {
      "op": "DUP6"
    },
    "9088": {
      "op": "DUP8"
    },
    "9089": {
      "op": "SUB"
    },
    "9090": {
      "op": "SLT"
    },
    "9091": {
      "op": "ISZERO"
    },
    "9092": {
      "op": "PUSH2",
      "value": "0x238C"
    },
    "9095": {
      "op": "JUMPI"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9098": {
      "op": "DUP1"
    },
    "9099": {
      "op": "REVERT"
    },
    "9100": {
      "op": "JUMPDEST"
    },
    "9101": {
      "op": "DUP5"
    },
    "9102": {
      "op": "CALLDATALOAD"
    },
    "9103": {
      "op": "SWAP4"
    },
    "9104": {
      "op": "POP"
    },
    "9105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9107": {
      "op": "DUP6"
    },
    "9108": {
      "op": "ADD"
    },
    "9109": {
      "op": "CALLDATALOAD"
    },
    "9110": {
      "op": "SWAP3"
    },
    "9111": {
      "op": "POP"
    },
    "9112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9114": {
      "op": "DUP6"
    },
    "9115": {
      "op": "ADD"
    },
    "9116": {
      "op": "CALLDATALOAD"
    },
    "9117": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9126": {
      "op": "DUP1"
    },
    "9127": {
      "op": "DUP3"
    },
    "9128": {
      "op": "GT"
    },
    "9129": {
      "op": "ISZERO"
    },
    "9130": {
      "op": "PUSH2",
      "value": "0x23B2"
    },
    "9133": {
      "op": "JUMPI"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9136": {
      "op": "DUP1"
    },
    "9137": {
      "op": "REVERT"
    },
    "9138": {
      "op": "JUMPDEST"
    },
    "9139": {
      "op": "DUP2"
    },
    "9140": {
      "op": "DUP8"
    },
    "9141": {
      "op": "ADD"
    },
    "9142": {
      "op": "SWAP2"
    },
    "9143": {
      "op": "POP"
    },
    "9144": {
      "op": "DUP8"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9147": {
      "op": "DUP4"
    },
    "9148": {
      "op": "ADD"
    },
    "9149": {
      "op": "SLT"
    },
    "9150": {
      "op": "PUSH2",
      "value": "0x23C6"
    },
    "9153": {
      "op": "JUMPI"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9156": {
      "op": "DUP1"
    },
    "9157": {
      "op": "REVERT"
    },
    "9158": {
      "op": "JUMPDEST"
    },
    "9159": {
      "op": "DUP2"
    },
    "9160": {
      "op": "CALLDATALOAD"
    },
    "9161": {
      "op": "DUP2"
    },
    "9162": {
      "op": "DUP2"
    },
    "9163": {
      "op": "GT"
    },
    "9164": {
      "op": "ISZERO"
    },
    "9165": {
      "op": "PUSH2",
      "value": "0x23D5"
    },
    "9168": {
      "op": "JUMPI"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9171": {
      "op": "DUP1"
    },
    "9172": {
      "op": "REVERT"
    },
    "9173": {
      "op": "JUMPDEST"
    },
    "9174": {
      "op": "DUP9"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9177": {
      "op": "DUP3"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9180": {
      "op": "SHL"
    },
    "9181": {
      "op": "DUP6"
    },
    "9182": {
      "op": "ADD"
    },
    "9183": {
      "op": "ADD"
    },
    "9184": {
      "op": "GT"
    },
    "9185": {
      "op": "ISZERO"
    },
    "9186": {
      "op": "PUSH2",
      "value": "0x23EA"
    },
    "9189": {
      "op": "JUMPI"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9192": {
      "op": "DUP1"
    },
    "9193": {
      "op": "REVERT"
    },
    "9194": {
      "op": "JUMPDEST"
    },
    "9195": {
      "op": "SWAP6"
    },
    "9196": {
      "op": "SWAP9"
    },
    "9197": {
      "op": "SWAP5"
    },
    "9198": {
      "op": "SWAP8"
    },
    "9199": {
      "op": "POP"
    },
    "9200": {
      "op": "POP"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9203": {
      "op": "ADD"
    },
    "9204": {
      "op": "SWAP5"
    },
    "9205": {
      "op": "POP"
    },
    "9206": {
      "op": "POP"
    },
    "9207": {
      "op": "POP"
    },
    "9208": {
      "jump": "o",
      "op": "JUMP"
    },
    "9209": {
      "op": "JUMPDEST"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9212": {
      "op": "DUP1"
    },
    "9213": {
      "op": "DUP3"
    },
    "9214": {
      "op": "MSTORE"
    },
    "9215": {
      "op": "DUP3"
    },
    "9216": {
      "op": "MLOAD"
    },
    "9217": {
      "op": "DUP3"
    },
    "9218": {
      "op": "DUP3"
    },
    "9219": {
      "op": "ADD"
    },
    "9220": {
      "op": "DUP2"
    },
    "9221": {
      "op": "SWAP1"
    },
    "9222": {
      "op": "MSTORE"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9225": {
      "op": "SWAP2"
    },
    "9226": {
      "op": "SWAP1"
    },
    "9227": {
      "op": "DUP5"
    },
    "9228": {
      "op": "DUP3"
    },
    "9229": {
      "op": "ADD"
    },
    "9230": {
      "op": "SWAP1"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9233": {
      "op": "DUP6"
    },
    "9234": {
      "op": "ADD"
    },
    "9235": {
      "op": "SWAP1"
    },
    "9236": {
      "op": "DUP5"
    },
    "9237": {
      "op": "JUMPDEST"
    },
    "9238": {
      "op": "DUP2"
    },
    "9239": {
      "op": "DUP2"
    },
    "9240": {
      "op": "LT"
    },
    "9241": {
      "op": "ISZERO"
    },
    "9242": {
      "op": "PUSH2",
      "value": "0x2431"
    },
    "9245": {
      "op": "JUMPI"
    },
    "9246": {
      "op": "DUP4"
    },
    "9247": {
      "op": "MLOAD"
    },
    "9248": {
      "op": "DUP4"
    },
    "9249": {
      "op": "MSTORE"
    },
    "9250": {
      "op": "SWAP3"
    },
    "9251": {
      "op": "DUP5"
    },
    "9252": {
      "op": "ADD"
    },
    "9253": {
      "op": "SWAP3"
    },
    "9254": {
      "op": "SWAP2"
    },
    "9255": {
      "op": "DUP5"
    },
    "9256": {
      "op": "ADD"
    },
    "9257": {
      "op": "SWAP2"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9260": {
      "op": "ADD"
    },
    "9261": {
      "op": "PUSH2",
      "value": "0x2415"
    },
    "9264": {
      "op": "JUMP"
    },
    "9265": {
      "op": "JUMPDEST"
    },
    "9266": {
      "op": "POP"
    },
    "9267": {
      "op": "SWAP1"
    },
    "9268": {
      "op": "SWAP7"
    },
    "9269": {
      "op": "SWAP6"
    },
    "9270": {
      "op": "POP"
    },
    "9271": {
      "op": "POP"
    },
    "9272": {
      "op": "POP"
    },
    "9273": {
      "op": "POP"
    },
    "9274": {
      "op": "POP"
    },
    "9275": {
      "op": "POP"
    },
    "9276": {
      "jump": "o",
      "op": "JUMP"
    },
    "9277": {
      "op": "JUMPDEST"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9282": {
      "op": "DUP3"
    },
    "9283": {
      "op": "DUP5"
    },
    "9284": {
      "op": "SUB"
    },
    "9285": {
      "op": "SLT"
    },
    "9286": {
      "op": "ISZERO"
    },
    "9287": {
      "op": "PUSH2",
      "value": "0x244F"
    },
    "9290": {
      "op": "JUMPI"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9293": {
      "op": "DUP1"
    },
    "9294": {
      "op": "REVERT"
    },
    "9295": {
      "op": "JUMPDEST"
    },
    "9296": {
      "op": "POP"
    },
    "9297": {
      "op": "CALLDATALOAD"
    },
    "9298": {
      "op": "SWAP2"
    },
    "9299": {
      "op": "SWAP1"
    },
    "9300": {
      "op": "POP"
    },
    "9301": {
      "jump": "o",
      "op": "JUMP"
    },
    "9302": {
      "op": "JUMPDEST"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9305": {
      "op": "DUP1"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9310": {
      "op": "DUP5"
    },
    "9311": {
      "op": "DUP7"
    },
    "9312": {
      "op": "SUB"
    },
    "9313": {
      "op": "SLT"
    },
    "9314": {
      "op": "ISZERO"
    },
    "9315": {
      "op": "PUSH2",
      "value": "0x246B"
    },
    "9318": {
      "op": "JUMPI"
    },
    "9319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9321": {
      "op": "DUP1"
    },
    "9322": {
      "op": "REVERT"
    },
    "9323": {
      "op": "JUMPDEST"
    },
    "9324": {
      "op": "DUP4"
    },
    "9325": {
      "op": "CALLDATALOAD"
    },
    "9326": {
      "op": "PUSH2",
      "value": "0x2476"
    },
    "9329": {
      "op": "DUP2"
    },
    "9330": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "9333": {
      "jump": "i",
      "op": "JUMP"
    },
    "9334": {
      "op": "JUMPDEST"
    },
    "9335": {
      "op": "SWAP3"
    },
    "9336": {
      "op": "POP"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9339": {
      "op": "DUP5"
    },
    "9340": {
      "op": "ADD"
    },
    "9341": {
      "op": "CALLDATALOAD"
    },
    "9342": {
      "op": "PUSH2",
      "value": "0x2486"
    },
    "9345": {
      "op": "DUP2"
    },
    "9346": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "9349": {
      "jump": "i",
      "op": "JUMP"
    },
    "9350": {
      "op": "JUMPDEST"
    },
    "9351": {
      "op": "SWAP3"
    },
    "9352": {
      "op": "SWAP6"
    },
    "9353": {
      "op": "SWAP3"
    },
    "9354": {
      "op": "SWAP5"
    },
    "9355": {
      "op": "POP"
    },
    "9356": {
      "op": "POP"
    },
    "9357": {
      "op": "POP"
    },
    "9358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9360": {
      "op": "SWAP2"
    },
    "9361": {
      "op": "SWAP1"
    },
    "9362": {
      "op": "SWAP2"
    },
    "9363": {
      "op": "ADD"
    },
    "9364": {
      "op": "CALLDATALOAD"
    },
    "9365": {
      "op": "SWAP1"
    },
    "9366": {
      "jump": "o",
      "op": "JUMP"
    },
    "9367": {
      "op": "JUMPDEST"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9372": {
      "op": "DUP3"
    },
    "9373": {
      "op": "DUP5"
    },
    "9374": {
      "op": "SUB"
    },
    "9375": {
      "op": "SLT"
    },
    "9376": {
      "op": "ISZERO"
    },
    "9377": {
      "op": "PUSH2",
      "value": "0x24A9"
    },
    "9380": {
      "op": "JUMPI"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9383": {
      "op": "DUP1"
    },
    "9384": {
      "op": "REVERT"
    },
    "9385": {
      "op": "JUMPDEST"
    },
    "9386": {
      "op": "DUP2"
    },
    "9387": {
      "op": "CALLDATALOAD"
    },
    "9388": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9391": {
      "op": "DUP2"
    },
    "9392": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "9395": {
      "jump": "i",
      "op": "JUMP"
    },
    "9396": {
      "op": "JUMPDEST"
    },
    "9397": {
      "op": "SWAP4"
    },
    "9398": {
      "op": "SWAP3"
    },
    "9399": {
      "op": "POP"
    },
    "9400": {
      "op": "POP"
    },
    "9401": {
      "op": "POP"
    },
    "9402": {
      "jump": "o",
      "op": "JUMP"
    },
    "9403": {
      "op": "JUMPDEST"
    },
    "9404": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9411": {
      "op": "SHL"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9414": {
      "op": "MSTORE"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9419": {
      "op": "MSTORE"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9424": {
      "op": "REVERT"
    },
    "9425": {
      "op": "JUMPDEST"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9428": {
      "op": "MLOAD"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9431": {
      "op": "DUP3"
    },
    "9432": {
      "op": "ADD"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9435": {
      "op": "NOT"
    },
    "9436": {
      "op": "AND"
    },
    "9437": {
      "op": "DUP2"
    },
    "9438": {
      "op": "ADD"
    },
    "9439": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9448": {
      "op": "DUP2"
    },
    "9449": {
      "op": "GT"
    },
    "9450": {
      "op": "DUP3"
    },
    "9451": {
      "op": "DUP3"
    },
    "9452": {
      "op": "LT"
    },
    "9453": {
      "op": "OR"
    },
    "9454": {
      "op": "ISZERO"
    },
    "9455": {
      "op": "PUSH2",
      "value": "0x24FA"
    },
    "9458": {
      "op": "JUMPI"
    },
    "9459": {
      "op": "PUSH2",
      "value": "0x24FA"
    },
    "9462": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "9465": {
      "jump": "i",
      "op": "JUMP"
    },
    "9466": {
      "op": "JUMPDEST"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9469": {
      "op": "MSTORE"
    },
    "9470": {
      "op": "SWAP2"
    },
    "9471": {
      "op": "SWAP1"
    },
    "9472": {
      "op": "POP"
    },
    "9473": {
      "jump": "o",
      "op": "JUMP"
    },
    "9474": {
      "op": "JUMPDEST"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9477": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9486": {
      "op": "DUP3"
    },
    "9487": {
      "op": "GT"
    },
    "9488": {
      "op": "ISZERO"
    },
    "9489": {
      "op": "PUSH2",
      "value": "0x251C"
    },
    "9492": {
      "op": "JUMPI"
    },
    "9493": {
      "op": "PUSH2",
      "value": "0x251C"
    },
    "9496": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "9499": {
      "jump": "i",
      "op": "JUMP"
    },
    "9500": {
      "op": "JUMPDEST"
    },
    "9501": {
      "op": "POP"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9504": {
      "op": "SHL"
    },
    "9505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9507": {
      "op": "ADD"
    },
    "9508": {
      "op": "SWAP1"
    },
    "9509": {
      "jump": "o",
      "op": "JUMP"
    },
    "9510": {
      "op": "JUMPDEST"
    },
    "9511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9513": {
      "op": "DUP3"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9516": {
      "op": "DUP4"
    },
    "9517": {
      "op": "ADD"
    },
    "9518": {
      "op": "SLT"
    },
    "9519": {
      "op": "PUSH2",
      "value": "0x2537"
    },
    "9522": {
      "op": "JUMPI"
    },
    "9523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9525": {
      "op": "DUP1"
    },
    "9526": {
      "op": "REVERT"
    },
    "9527": {
      "op": "JUMPDEST"
    },
    "9528": {
      "op": "DUP2"
    },
    "9529": {
      "op": "CALLDATALOAD"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9532": {
      "op": "PUSH2",
      "value": "0x254C"
    },
    "9535": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9538": {
      "op": "DUP4"
    },
    "9539": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "9542": {
      "jump": "i",
      "op": "JUMP"
    },
    "9543": {
      "op": "JUMPDEST"
    },
    "9544": {
      "op": "PUSH2",
      "value": "0x24D1"
    },
    "9547": {
      "jump": "i",
      "op": "JUMP"
    },
    "9548": {
      "op": "JUMPDEST"
    },
    "9549": {
      "op": "DUP1"
    },
    "9550": {
      "op": "DUP4"
    },
    "9551": {
      "op": "DUP3"
    },
    "9552": {
      "op": "MSTORE"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9555": {
      "op": "DUP3"
    },
    "9556": {
      "op": "ADD"
    },
    "9557": {
      "op": "SWAP2"
    },
    "9558": {
      "op": "POP"
    },
    "9559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9561": {
      "op": "DUP5"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9564": {
      "op": "SHL"
    },
    "9565": {
      "op": "DUP8"
    },
    "9566": {
      "op": "ADD"
    },
    "9567": {
      "op": "ADD"
    },
    "9568": {
      "op": "SWAP4"
    },
    "9569": {
      "op": "POP"
    },
    "9570": {
      "op": "DUP7"
    },
    "9571": {
      "op": "DUP5"
    },
    "9572": {
      "op": "GT"
    },
    "9573": {
      "op": "ISZERO"
    },
    "9574": {
      "op": "PUSH2",
      "value": "0x256E"
    },
    "9577": {
      "op": "JUMPI"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9580": {
      "op": "DUP1"
    },
    "9581": {
      "op": "REVERT"
    },
    "9582": {
      "op": "JUMPDEST"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9585": {
      "op": "DUP7"
    },
    "9586": {
      "op": "ADD"
    },
    "9587": {
      "op": "JUMPDEST"
    },
    "9588": {
      "op": "DUP5"
    },
    "9589": {
      "op": "DUP2"
    },
    "9590": {
      "op": "LT"
    },
    "9591": {
      "op": "ISZERO"
    },
    "9592": {
      "op": "PUSH2",
      "value": "0x2593"
    },
    "9595": {
      "op": "JUMPI"
    },
    "9596": {
      "op": "DUP1"
    },
    "9597": {
      "op": "CALLDATALOAD"
    },
    "9598": {
      "op": "PUSH2",
      "value": "0x2586"
    },
    "9601": {
      "op": "DUP2"
    },
    "9602": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "9605": {
      "jump": "i",
      "op": "JUMP"
    },
    "9606": {
      "op": "JUMPDEST"
    },
    "9607": {
      "op": "DUP4"
    },
    "9608": {
      "op": "MSTORE"
    },
    "9609": {
      "op": "SWAP2"
    },
    "9610": {
      "op": "DUP4"
    },
    "9611": {
      "op": "ADD"
    },
    "9612": {
      "op": "SWAP2"
    },
    "9613": {
      "op": "DUP4"
    },
    "9614": {
      "op": "ADD"
    },
    "9615": {
      "op": "PUSH2",
      "value": "0x2573"
    },
    "9618": {
      "op": "JUMP"
    },
    "9619": {
      "op": "JUMPDEST"
    },
    "9620": {
      "op": "POP"
    },
    "9621": {
      "op": "SWAP7"
    },
    "9622": {
      "op": "SWAP6"
    },
    "9623": {
      "op": "POP"
    },
    "9624": {
      "op": "POP"
    },
    "9625": {
      "op": "POP"
    },
    "9626": {
      "op": "POP"
    },
    "9627": {
      "op": "POP"
    },
    "9628": {
      "op": "POP"
    },
    "9629": {
      "jump": "o",
      "op": "JUMP"
    },
    "9630": {
      "op": "JUMPDEST"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9633": {
      "op": "DUP1"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9636": {
      "op": "DUP4"
    },
    "9637": {
      "op": "DUP6"
    },
    "9638": {
      "op": "SUB"
    },
    "9639": {
      "op": "SLT"
    },
    "9640": {
      "op": "ISZERO"
    },
    "9641": {
      "op": "PUSH2",
      "value": "0x25B1"
    },
    "9644": {
      "op": "JUMPI"
    },
    "9645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9647": {
      "op": "DUP1"
    },
    "9648": {
      "op": "REVERT"
    },
    "9649": {
      "op": "JUMPDEST"
    },
    "9650": {
      "op": "DUP3"
    },
    "9651": {
      "op": "CALLDATALOAD"
    },
    "9652": {
      "op": "SWAP2"
    },
    "9653": {
      "op": "POP"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9656": {
      "op": "DUP4"
    },
    "9657": {
      "op": "ADD"
    },
    "9658": {
      "op": "CALLDATALOAD"
    },
    "9659": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9668": {
      "op": "DUP2"
    },
    "9669": {
      "op": "GT"
    },
    "9670": {
      "op": "ISZERO"
    },
    "9671": {
      "op": "PUSH2",
      "value": "0x25CF"
    },
    "9674": {
      "op": "JUMPI"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9677": {
      "op": "DUP1"
    },
    "9678": {
      "op": "REVERT"
    },
    "9679": {
      "op": "JUMPDEST"
    },
    "9680": {
      "op": "PUSH2",
      "value": "0x25DB"
    },
    "9683": {
      "op": "DUP6"
    },
    "9684": {
      "op": "DUP3"
    },
    "9685": {
      "op": "DUP7"
    },
    "9686": {
      "op": "ADD"
    },
    "9687": {
      "op": "PUSH2",
      "value": "0x2526"
    },
    "9690": {
      "jump": "i",
      "op": "JUMP"
    },
    "9691": {
      "op": "JUMPDEST"
    },
    "9692": {
      "op": "SWAP2"
    },
    "9693": {
      "op": "POP"
    },
    "9694": {
      "op": "POP"
    },
    "9695": {
      "op": "SWAP3"
    },
    "9696": {
      "op": "POP"
    },
    "9697": {
      "op": "SWAP3"
    },
    "9698": {
      "op": "SWAP1"
    },
    "9699": {
      "op": "POP"
    },
    "9700": {
      "jump": "o",
      "op": "JUMP"
    },
    "9701": {
      "op": "JUMPDEST"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9704": {
      "op": "DUP2"
    },
    "9705": {
      "op": "MSTORE"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9708": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9713": {
      "op": "DUP4"
    },
    "9714": {
      "op": "ADD"
    },
    "9715": {
      "op": "DUP5"
    },
    "9716": {
      "op": "PUSH2",
      "value": "0x2302"
    },
    "9719": {
      "jump": "i",
      "op": "JUMP"
    },
    "9720": {
      "op": "JUMPDEST"
    },
    "9721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9723": {
      "op": "DUP1"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9726": {
      "op": "DUP4"
    },
    "9727": {
      "op": "DUP6"
    },
    "9728": {
      "op": "SUB"
    },
    "9729": {
      "op": "SLT"
    },
    "9730": {
      "op": "ISZERO"
    },
    "9731": {
      "op": "PUSH2",
      "value": "0x260B"
    },
    "9734": {
      "op": "JUMPI"
    },
    "9735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9737": {
      "op": "DUP1"
    },
    "9738": {
      "op": "REVERT"
    },
    "9739": {
      "op": "JUMPDEST"
    },
    "9740": {
      "op": "POP"
    },
    "9741": {
      "op": "POP"
    },
    "9742": {
      "op": "DUP1"
    },
    "9743": {
      "op": "CALLDATALOAD"
    },
    "9744": {
      "op": "SWAP3"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9747": {
      "op": "SWAP1"
    },
    "9748": {
      "op": "SWAP2"
    },
    "9749": {
      "op": "ADD"
    },
    "9750": {
      "op": "CALLDATALOAD"
    },
    "9751": {
      "op": "SWAP2"
    },
    "9752": {
      "op": "POP"
    },
    "9753": {
      "jump": "o",
      "op": "JUMP"
    },
    "9754": {
      "op": "JUMPDEST"
    },
    "9755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9759": {
      "op": "DUP3"
    },
    "9760": {
      "op": "DUP5"
    },
    "9761": {
      "op": "SUB"
    },
    "9762": {
      "op": "SLT"
    },
    "9763": {
      "op": "ISZERO"
    },
    "9764": {
      "op": "PUSH2",
      "value": "0x262C"
    },
    "9767": {
      "op": "JUMPI"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9770": {
      "op": "DUP1"
    },
    "9771": {
      "op": "REVERT"
    },
    "9772": {
      "op": "JUMPDEST"
    },
    "9773": {
      "op": "DUP2"
    },
    "9774": {
      "op": "CALLDATALOAD"
    },
    "9775": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9784": {
      "op": "DUP2"
    },
    "9785": {
      "op": "GT"
    },
    "9786": {
      "op": "ISZERO"
    },
    "9787": {
      "op": "PUSH2",
      "value": "0x2643"
    },
    "9790": {
      "op": "JUMPI"
    },
    "9791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9793": {
      "op": "DUP1"
    },
    "9794": {
      "op": "REVERT"
    },
    "9795": {
      "op": "JUMPDEST"
    },
    "9796": {
      "op": "PUSH2",
      "value": "0x264F"
    },
    "9799": {
      "op": "DUP5"
    },
    "9800": {
      "op": "DUP3"
    },
    "9801": {
      "op": "DUP6"
    },
    "9802": {
      "op": "ADD"
    },
    "9803": {
      "op": "PUSH2",
      "value": "0x2526"
    },
    "9806": {
      "jump": "i",
      "op": "JUMP"
    },
    "9807": {
      "op": "JUMPDEST"
    },
    "9808": {
      "op": "SWAP5"
    },
    "9809": {
      "op": "SWAP4"
    },
    "9810": {
      "op": "POP"
    },
    "9811": {
      "op": "POP"
    },
    "9812": {
      "op": "POP"
    },
    "9813": {
      "op": "POP"
    },
    "9814": {
      "jump": "o",
      "op": "JUMP"
    },
    "9815": {
      "op": "JUMPDEST"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9818": {
      "op": "DUP1"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9821": {
      "op": "DUP1"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9824": {
      "op": "DUP6"
    },
    "9825": {
      "op": "DUP8"
    },
    "9826": {
      "op": "SUB"
    },
    "9827": {
      "op": "SLT"
    },
    "9828": {
      "op": "ISZERO"
    },
    "9829": {
      "op": "PUSH2",
      "value": "0x266D"
    },
    "9832": {
      "op": "JUMPI"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9835": {
      "op": "DUP1"
    },
    "9836": {
      "op": "REVERT"
    },
    "9837": {
      "op": "JUMPDEST"
    },
    "9838": {
      "op": "DUP5"
    },
    "9839": {
      "op": "CALLDATALOAD"
    },
    "9840": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9849": {
      "op": "DUP1"
    },
    "9850": {
      "op": "DUP3"
    },
    "9851": {
      "op": "GT"
    },
    "9852": {
      "op": "ISZERO"
    },
    "9853": {
      "op": "PUSH2",
      "value": "0x2685"
    },
    "9856": {
      "op": "JUMPI"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9859": {
      "op": "DUP1"
    },
    "9860": {
      "op": "REVERT"
    },
    "9861": {
      "op": "JUMPDEST"
    },
    "9862": {
      "op": "PUSH2",
      "value": "0x2691"
    },
    "9865": {
      "op": "DUP9"
    },
    "9866": {
      "op": "DUP4"
    },
    "9867": {
      "op": "DUP10"
    },
    "9868": {
      "op": "ADD"
    },
    "9869": {
      "op": "PUSH2",
      "value": "0x2526"
    },
    "9872": {
      "jump": "i",
      "op": "JUMP"
    },
    "9873": {
      "op": "JUMPDEST"
    },
    "9874": {
      "op": "SWAP6"
    },
    "9875": {
      "op": "POP"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9878": {
      "op": "SWAP2"
    },
    "9879": {
      "op": "POP"
    },
    "9880": {
      "op": "DUP2"
    },
    "9881": {
      "op": "DUP8"
    },
    "9882": {
      "op": "ADD"
    },
    "9883": {
      "op": "CALLDATALOAD"
    },
    "9884": {
      "op": "DUP2"
    },
    "9885": {
      "op": "DUP2"
    },
    "9886": {
      "op": "GT"
    },
    "9887": {
      "op": "ISZERO"
    },
    "9888": {
      "op": "PUSH2",
      "value": "0x26A8"
    },
    "9891": {
      "op": "JUMPI"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9894": {
      "op": "DUP1"
    },
    "9895": {
      "op": "REVERT"
    },
    "9896": {
      "op": "JUMPDEST"
    },
    "9897": {
      "op": "DUP8"
    },
    "9898": {
      "op": "ADD"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9901": {
      "op": "DUP2"
    },
    "9902": {
      "op": "ADD"
    },
    "9903": {
      "op": "DUP10"
    },
    "9904": {
      "op": "SGT"
    },
    "9905": {
      "op": "PUSH2",
      "value": "0x26B9"
    },
    "9908": {
      "op": "JUMPI"
    },
    "9909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9911": {
      "op": "DUP1"
    },
    "9912": {
      "op": "REVERT"
    },
    "9913": {
      "op": "JUMPDEST"
    },
    "9914": {
      "op": "DUP1"
    },
    "9915": {
      "op": "CALLDATALOAD"
    },
    "9916": {
      "op": "PUSH2",
      "value": "0x26C7"
    },
    "9919": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9922": {
      "op": "DUP3"
    },
    "9923": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "9926": {
      "jump": "i",
      "op": "JUMP"
    },
    "9927": {
      "op": "JUMPDEST"
    },
    "9928": {
      "op": "DUP2"
    },
    "9929": {
      "op": "DUP2"
    },
    "9930": {
      "op": "MSTORE"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9933": {
      "op": "SWAP2"
    },
    "9934": {
      "op": "SWAP1"
    },
    "9935": {
      "op": "SWAP2"
    },
    "9936": {
      "op": "SHL"
    },
    "9937": {
      "op": "DUP3"
    },
    "9938": {
      "op": "ADD"
    },
    "9939": {
      "op": "DUP5"
    },
    "9940": {
      "op": "ADD"
    },
    "9941": {
      "op": "SWAP1"
    },
    "9942": {
      "op": "DUP5"
    },
    "9943": {
      "op": "DUP2"
    },
    "9944": {
      "op": "ADD"
    },
    "9945": {
      "op": "SWAP1"
    },
    "9946": {
      "op": "DUP12"
    },
    "9947": {
      "op": "DUP4"
    },
    "9948": {
      "op": "GT"
    },
    "9949": {
      "op": "ISZERO"
    },
    "9950": {
      "op": "PUSH2",
      "value": "0x26E6"
    },
    "9953": {
      "op": "JUMPI"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9956": {
      "op": "DUP1"
    },
    "9957": {
      "op": "REVERT"
    },
    "9958": {
      "op": "JUMPDEST"
    },
    "9959": {
      "op": "SWAP3"
    },
    "9960": {
      "op": "DUP6"
    },
    "9961": {
      "op": "ADD"
    },
    "9962": {
      "op": "SWAP3"
    },
    "9963": {
      "op": "JUMPDEST"
    },
    "9964": {
      "op": "DUP3"
    },
    "9965": {
      "op": "DUP5"
    },
    "9966": {
      "op": "LT"
    },
    "9967": {
      "op": "ISZERO"
    },
    "9968": {
      "op": "PUSH2",
      "value": "0x2704"
    },
    "9971": {
      "op": "JUMPI"
    },
    "9972": {
      "op": "DUP4"
    },
    "9973": {
      "op": "CALLDATALOAD"
    },
    "9974": {
      "op": "DUP3"
    },
    "9975": {
      "op": "MSTORE"
    },
    "9976": {
      "op": "SWAP3"
    },
    "9977": {
      "op": "DUP6"
    },
    "9978": {
      "op": "ADD"
    },
    "9979": {
      "op": "SWAP3"
    },
    "9980": {
      "op": "SWAP1"
    },
    "9981": {
      "op": "DUP6"
    },
    "9982": {
      "op": "ADD"
    },
    "9983": {
      "op": "SWAP1"
    },
    "9984": {
      "op": "PUSH2",
      "value": "0x26EB"
    },
    "9987": {
      "op": "JUMP"
    },
    "9988": {
      "op": "JUMPDEST"
    },
    "9989": {
      "op": "SWAP8"
    },
    "9990": {
      "op": "POP"
    },
    "9991": {
      "op": "POP"
    },
    "9992": {
      "op": "POP"
    },
    "9993": {
      "op": "POP"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9996": {
      "op": "DUP8"
    },
    "9997": {
      "op": "ADD"
    },
    "9998": {
      "op": "CALLDATALOAD"
    },
    "9999": {
      "op": "SWAP4"
    },
    "10000": {
      "op": "POP"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10003": {
      "op": "DUP8"
    },
    "10004": {
      "op": "ADD"
    },
    "10005": {
      "op": "CALLDATALOAD"
    },
    "10006": {
      "op": "SWAP2"
    },
    "10007": {
      "op": "POP"
    },
    "10008": {
      "op": "DUP1"
    },
    "10009": {
      "op": "DUP3"
    },
    "10010": {
      "op": "GT"
    },
    "10011": {
      "op": "ISZERO"
    },
    "10012": {
      "op": "PUSH2",
      "value": "0x2724"
    },
    "10015": {
      "op": "JUMPI"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10018": {
      "op": "DUP1"
    },
    "10019": {
      "op": "REVERT"
    },
    "10020": {
      "op": "JUMPDEST"
    },
    "10021": {
      "op": "POP"
    },
    "10022": {
      "op": "PUSH2",
      "value": "0x2731"
    },
    "10025": {
      "op": "DUP8"
    },
    "10026": {
      "op": "DUP3"
    },
    "10027": {
      "op": "DUP9"
    },
    "10028": {
      "op": "ADD"
    },
    "10029": {
      "op": "PUSH2",
      "value": "0x2526"
    },
    "10032": {
      "jump": "i",
      "op": "JUMP"
    },
    "10033": {
      "op": "JUMPDEST"
    },
    "10034": {
      "op": "SWAP2"
    },
    "10035": {
      "op": "POP"
    },
    "10036": {
      "op": "POP"
    },
    "10037": {
      "op": "SWAP3"
    },
    "10038": {
      "op": "SWAP6"
    },
    "10039": {
      "op": "SWAP2"
    },
    "10040": {
      "op": "SWAP5"
    },
    "10041": {
      "op": "POP"
    },
    "10042": {
      "op": "SWAP3"
    },
    "10043": {
      "op": "POP"
    },
    "10044": {
      "jump": "o",
      "op": "JUMP"
    },
    "10045": {
      "op": "JUMPDEST"
    },
    "10046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10048": {
      "op": "DUP1"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10051": {
      "op": "DUP4"
    },
    "10052": {
      "op": "DUP6"
    },
    "10053": {
      "op": "SUB"
    },
    "10054": {
      "op": "SLT"
    },
    "10055": {
      "op": "ISZERO"
    },
    "10056": {
      "op": "PUSH2",
      "value": "0x2750"
    },
    "10059": {
      "op": "JUMPI"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10062": {
      "op": "DUP1"
    },
    "10063": {
      "op": "REVERT"
    },
    "10064": {
      "op": "JUMPDEST"
    },
    "10065": {
      "op": "DUP3"
    },
    "10066": {
      "op": "CALLDATALOAD"
    },
    "10067": {
      "op": "PUSH2",
      "value": "0x275B"
    },
    "10070": {
      "op": "DUP2"
    },
    "10071": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "10074": {
      "jump": "i",
      "op": "JUMP"
    },
    "10075": {
      "op": "JUMPDEST"
    },
    "10076": {
      "op": "SWAP2"
    },
    "10077": {
      "op": "POP"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10080": {
      "op": "DUP4"
    },
    "10081": {
      "op": "ADD"
    },
    "10082": {
      "op": "CALLDATALOAD"
    },
    "10083": {
      "op": "PUSH2",
      "value": "0x276B"
    },
    "10086": {
      "op": "DUP2"
    },
    "10087": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "10090": {
      "jump": "i",
      "op": "JUMP"
    },
    "10091": {
      "op": "JUMPDEST"
    },
    "10092": {
      "op": "DUP1"
    },
    "10093": {
      "op": "SWAP2"
    },
    "10094": {
      "op": "POP"
    },
    "10095": {
      "op": "POP"
    },
    "10096": {
      "op": "SWAP3"
    },
    "10097": {
      "op": "POP"
    },
    "10098": {
      "op": "SWAP3"
    },
    "10099": {
      "op": "SWAP1"
    },
    "10100": {
      "op": "POP"
    },
    "10101": {
      "jump": "o",
      "op": "JUMP"
    },
    "10102": {
      "op": "JUMPDEST"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10105": {
      "op": "DUP2"
    },
    "10106": {
      "op": "DUP2"
    },
    "10107": {
      "op": "SHR"
    },
    "10108": {
      "op": "SWAP1"
    },
    "10109": {
      "op": "DUP3"
    },
    "10110": {
      "op": "AND"
    },
    "10111": {
      "op": "DUP1"
    },
    "10112": {
      "op": "PUSH2",
      "value": "0x278A"
    },
    "10115": {
      "op": "JUMPI"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10118": {
      "op": "DUP3"
    },
    "10119": {
      "op": "AND"
    },
    "10120": {
      "op": "SWAP2"
    },
    "10121": {
      "op": "POP"
    },
    "10122": {
      "op": "JUMPDEST"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10125": {
      "op": "DUP3"
    },
    "10126": {
      "op": "LT"
    },
    "10127": {
      "op": "DUP2"
    },
    "10128": {
      "op": "SUB"
    },
    "10129": {
      "op": "PUSH2",
      "value": "0x27AA"
    },
    "10132": {
      "op": "JUMPI"
    },
    "10133": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10140": {
      "op": "SHL"
    },
    "10141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10143": {
      "op": "MSTORE"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10148": {
      "op": "MSTORE"
    },
    "10149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10153": {
      "op": "REVERT"
    },
    "10154": {
      "op": "JUMPDEST"
    },
    "10155": {
      "op": "POP"
    },
    "10156": {
      "op": "SWAP2"
    },
    "10157": {
      "op": "SWAP1"
    },
    "10158": {
      "op": "POP"
    },
    "10159": {
      "jump": "o",
      "op": "JUMP"
    },
    "10160": {
      "op": "JUMPDEST"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10163": {
      "op": "DUP3"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10166": {
      "op": "DUP4"
    },
    "10167": {
      "op": "ADD"
    },
    "10168": {
      "op": "SLT"
    },
    "10169": {
      "op": "PUSH2",
      "value": "0x27C1"
    },
    "10172": {
      "op": "JUMPI"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10175": {
      "op": "DUP1"
    },
    "10176": {
      "op": "REVERT"
    },
    "10177": {
      "op": "JUMPDEST"
    },
    "10178": {
      "op": "DUP2"
    },
    "10179": {
      "op": "MLOAD"
    },
    "10180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10182": {
      "op": "PUSH2",
      "value": "0x27D1"
    },
    "10185": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "10188": {
      "op": "DUP4"
    },
    "10189": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "10192": {
      "jump": "i",
      "op": "JUMP"
    },
    "10193": {
      "op": "JUMPDEST"
    },
    "10194": {
      "op": "DUP1"
    },
    "10195": {
      "op": "DUP4"
    },
    "10196": {
      "op": "DUP3"
    },
    "10197": {
      "op": "MSTORE"
    },
    "10198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10200": {
      "op": "DUP3"
    },
    "10201": {
      "op": "ADD"
    },
    "10202": {
      "op": "SWAP2"
    },
    "10203": {
      "op": "POP"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10206": {
      "op": "DUP5"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10209": {
      "op": "SHL"
    },
    "10210": {
      "op": "DUP8"
    },
    "10211": {
      "op": "ADD"
    },
    "10212": {
      "op": "ADD"
    },
    "10213": {
      "op": "SWAP4"
    },
    "10214": {
      "op": "POP"
    },
    "10215": {
      "op": "DUP7"
    },
    "10216": {
      "op": "DUP5"
    },
    "10217": {
      "op": "GT"
    },
    "10218": {
      "op": "ISZERO"
    },
    "10219": {
      "op": "PUSH2",
      "value": "0x27F3"
    },
    "10222": {
      "op": "JUMPI"
    },
    "10223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10225": {
      "op": "DUP1"
    },
    "10226": {
      "op": "REVERT"
    },
    "10227": {
      "op": "JUMPDEST"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10230": {
      "op": "DUP7"
    },
    "10231": {
      "op": "ADD"
    },
    "10232": {
      "op": "JUMPDEST"
    },
    "10233": {
      "op": "DUP5"
    },
    "10234": {
      "op": "DUP2"
    },
    "10235": {
      "op": "LT"
    },
    "10236": {
      "op": "ISZERO"
    },
    "10237": {
      "op": "PUSH2",
      "value": "0x2593"
    },
    "10240": {
      "op": "JUMPI"
    },
    "10241": {
      "op": "DUP1"
    },
    "10242": {
      "op": "MLOAD"
    },
    "10243": {
      "op": "PUSH2",
      "value": "0x280B"
    },
    "10246": {
      "op": "DUP2"
    },
    "10247": {
      "op": "PUSH2",
      "value": "0x22C1"
    },
    "10250": {
      "jump": "i",
      "op": "JUMP"
    },
    "10251": {
      "op": "JUMPDEST"
    },
    "10252": {
      "op": "DUP4"
    },
    "10253": {
      "op": "MSTORE"
    },
    "10254": {
      "op": "SWAP2"
    },
    "10255": {
      "op": "DUP4"
    },
    "10256": {
      "op": "ADD"
    },
    "10257": {
      "op": "SWAP2"
    },
    "10258": {
      "op": "DUP4"
    },
    "10259": {
      "op": "ADD"
    },
    "10260": {
      "op": "PUSH2",
      "value": "0x27F8"
    },
    "10263": {
      "op": "JUMP"
    },
    "10264": {
      "op": "JUMPDEST"
    },
    "10265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10267": {
      "op": "DUP1"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10270": {
      "op": "DUP1"
    },
    "10271": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10273": {
      "op": "DUP6"
    },
    "10274": {
      "op": "DUP8"
    },
    "10275": {
      "op": "SUB"
    },
    "10276": {
      "op": "SLT"
    },
    "10277": {
      "op": "ISZERO"
    },
    "10278": {
      "op": "PUSH2",
      "value": "0x282E"
    },
    "10281": {
      "op": "JUMPI"
    },
    "10282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10284": {
      "op": "DUP1"
    },
    "10285": {
      "op": "REVERT"
    },
    "10286": {
      "op": "JUMPDEST"
    },
    "10287": {
      "op": "DUP5"
    },
    "10288": {
      "op": "MLOAD"
    },
    "10289": {
      "op": "SWAP4"
    },
    "10290": {
      "op": "POP"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10293": {
      "op": "DUP6"
    },
    "10294": {
      "op": "ADD"
    },
    "10295": {
      "op": "MLOAD"
    },
    "10296": {
      "op": "SWAP3"
    },
    "10297": {
      "op": "POP"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10300": {
      "op": "DUP6"
    },
    "10301": {
      "op": "ADD"
    },
    "10302": {
      "op": "MLOAD"
    },
    "10303": {
      "op": "SWAP2"
    },
    "10304": {
      "op": "POP"
    },
    "10305": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10307": {
      "op": "DUP6"
    },
    "10308": {
      "op": "ADD"
    },
    "10309": {
      "op": "MLOAD"
    },
    "10310": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10319": {
      "op": "DUP2"
    },
    "10320": {
      "op": "GT"
    },
    "10321": {
      "op": "ISZERO"
    },
    "10322": {
      "op": "PUSH2",
      "value": "0x285A"
    },
    "10325": {
      "op": "JUMPI"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10328": {
      "op": "DUP1"
    },
    "10329": {
      "op": "REVERT"
    },
    "10330": {
      "op": "JUMPDEST"
    },
    "10331": {
      "op": "PUSH2",
      "value": "0x2731"
    },
    "10334": {
      "op": "DUP8"
    },
    "10335": {
      "op": "DUP3"
    },
    "10336": {
      "op": "DUP9"
    },
    "10337": {
      "op": "ADD"
    },
    "10338": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10341": {
      "jump": "i",
      "op": "JUMP"
    },
    "10342": {
      "op": "JUMPDEST"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10347": {
      "op": "DUP3"
    },
    "10348": {
      "op": "DUP5"
    },
    "10349": {
      "op": "SUB"
    },
    "10350": {
      "op": "SLT"
    },
    "10351": {
      "op": "ISZERO"
    },
    "10352": {
      "op": "PUSH2",
      "value": "0x2878"
    },
    "10355": {
      "op": "JUMPI"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10358": {
      "op": "DUP1"
    },
    "10359": {
      "op": "REVERT"
    },
    "10360": {
      "op": "JUMPDEST"
    },
    "10361": {
      "op": "DUP2"
    },
    "10362": {
      "op": "MLOAD"
    },
    "10363": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10372": {
      "op": "DUP2"
    },
    "10373": {
      "op": "GT"
    },
    "10374": {
      "op": "ISZERO"
    },
    "10375": {
      "op": "PUSH2",
      "value": "0x288F"
    },
    "10378": {
      "op": "JUMPI"
    },
    "10379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10381": {
      "op": "DUP1"
    },
    "10382": {
      "op": "REVERT"
    },
    "10383": {
      "op": "JUMPDEST"
    },
    "10384": {
      "op": "PUSH2",
      "value": "0x264F"
    },
    "10387": {
      "op": "DUP5"
    },
    "10388": {
      "op": "DUP3"
    },
    "10389": {
      "op": "DUP6"
    },
    "10390": {
      "op": "ADD"
    },
    "10391": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10394": {
      "jump": "i",
      "op": "JUMP"
    },
    "10395": {
      "op": "JUMPDEST"
    },
    "10396": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10403": {
      "op": "SHL"
    },
    "10404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10406": {
      "op": "MSTORE"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10409": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10411": {
      "op": "MSTORE"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10416": {
      "op": "REVERT"
    },
    "10417": {
      "op": "JUMPDEST"
    },
    "10418": {
      "op": "DUP3"
    },
    "10419": {
      "op": "DUP2"
    },
    "10420": {
      "op": "MSTORE"
    },
    "10421": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10425": {
      "op": "DUP3"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "MSTORE"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10430": {
      "op": "PUSH2",
      "value": "0x264F"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10435": {
      "op": "DUP4"
    },
    "10436": {
      "op": "ADD"
    },
    "10437": {
      "op": "DUP5"
    },
    "10438": {
      "op": "PUSH2",
      "value": "0x2302"
    },
    "10441": {
      "jump": "i",
      "op": "JUMP"
    },
    "10442": {
      "op": "JUMPDEST"
    },
    "10443": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10450": {
      "op": "SHL"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10453": {
      "op": "MSTORE"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10458": {
      "op": "MSTORE"
    },
    "10459": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10463": {
      "op": "REVERT"
    },
    "10464": {
      "op": "JUMPDEST"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10469": {
      "op": "DUP3"
    },
    "10470": {
      "op": "ADD"
    },
    "10471": {
      "op": "PUSH2",
      "value": "0x28F2"
    },
    "10474": {
      "op": "JUMPI"
    },
    "10475": {
      "op": "PUSH2",
      "value": "0x28F2"
    },
    "10478": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10481": {
      "jump": "i",
      "op": "JUMP"
    },
    "10482": {
      "op": "JUMPDEST"
    },
    "10483": {
      "op": "POP"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10486": {
      "op": "ADD"
    },
    "10487": {
      "op": "SWAP1"
    },
    "10488": {
      "jump": "o",
      "op": "JUMP"
    },
    "10489": {
      "op": "JUMPDEST"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10494": {
      "op": "DUP3"
    },
    "10495": {
      "op": "DUP5"
    },
    "10496": {
      "op": "SUB"
    },
    "10497": {
      "op": "SLT"
    },
    "10498": {
      "op": "ISZERO"
    },
    "10499": {
      "op": "PUSH2",
      "value": "0x290B"
    },
    "10502": {
      "op": "JUMPI"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10505": {
      "op": "DUP1"
    },
    "10506": {
      "op": "REVERT"
    },
    "10507": {
      "op": "JUMPDEST"
    },
    "10508": {
      "op": "POP"
    },
    "10509": {
      "op": "MLOAD"
    },
    "10510": {
      "op": "SWAP2"
    },
    "10511": {
      "op": "SWAP1"
    },
    "10512": {
      "op": "POP"
    },
    "10513": {
      "jump": "o",
      "op": "JUMP"
    },
    "10514": {
      "op": "JUMPDEST"
    },
    "10515": {
      "op": "DUP1"
    },
    "10516": {
      "op": "DUP3"
    },
    "10517": {
      "op": "ADD"
    },
    "10518": {
      "op": "DUP1"
    },
    "10519": {
      "op": "DUP3"
    },
    "10520": {
      "op": "GT"
    },
    "10521": {
      "op": "ISZERO"
    },
    "10522": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "10525": {
      "op": "JUMPI"
    },
    "10526": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "10529": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10532": {
      "jump": "i",
      "op": "JUMP"
    },
    "10533": {
      "op": "JUMPDEST"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10536": {
      "op": "DUP1"
    },
    "10537": {
      "op": "DUP3"
    },
    "10538": {
      "op": "MSTORE"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10541": {
      "op": "SWAP1"
    },
    "10542": {
      "op": "DUP3"
    },
    "10543": {
      "op": "ADD"
    },
    "10544": {
      "op": "MSTORE"
    },
    "10545": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "10578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10580": {
      "op": "DUP3"
    },
    "10581": {
      "op": "ADD"
    },
    "10582": {
      "op": "MSTORE"
    },
    "10583": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10592": {
      "op": "SHL"
    },
    "10593": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10595": {
      "op": "DUP3"
    },
    "10596": {
      "op": "ADD"
    },
    "10597": {
      "op": "MSTORE"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10600": {
      "op": "ADD"
    },
    "10601": {
      "op": "SWAP1"
    },
    "10602": {
      "jump": "o",
      "op": "JUMP"
    },
    "10603": {
      "op": "JUMPDEST"
    },
    "10604": {
      "op": "DUP2"
    },
    "10605": {
      "op": "DUP2"
    },
    "10606": {
      "op": "SUB"
    },
    "10607": {
      "op": "DUP2"
    },
    "10608": {
      "op": "DUP2"
    },
    "10609": {
      "op": "GT"
    },
    "10610": {
      "op": "ISZERO"
    },
    "10611": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "10614": {
      "op": "JUMPI"
    },
    "10615": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "10618": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10621": {
      "jump": "i",
      "op": "JUMP"
    },
    "10622": {
      "op": "JUMPDEST"
    },
    "10623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10625": {
      "op": "DUP1"
    },
    "10626": {
      "op": "DUP3"
    },
    "10627": {
      "op": "MSTORE"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10630": {
      "op": "SWAP1"
    },
    "10631": {
      "op": "DUP3"
    },
    "10632": {
      "op": "ADD"
    },
    "10633": {
      "op": "MSTORE"
    },
    "10634": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10669": {
      "op": "DUP3"
    },
    "10670": {
      "op": "ADD"
    },
    "10671": {
      "op": "MSTORE"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10676": {
      "op": "SHL"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10679": {
      "op": "DUP3"
    },
    "10680": {
      "op": "ADD"
    },
    "10681": {
      "op": "MSTORE"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10684": {
      "op": "ADD"
    },
    "10685": {
      "op": "SWAP1"
    },
    "10686": {
      "jump": "o",
      "op": "JUMP"
    },
    "10687": {
      "op": "JUMPDEST"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10690": {
      "op": "DUP3"
    },
    "10691": {
      "op": "PUSH2",
      "value": "0x29DC"
    },
    "10694": {
      "op": "JUMPI"
    },
    "10695": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10702": {
      "op": "SHL"
    },
    "10703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10705": {
      "op": "MSTORE"
    },
    "10706": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10708": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10710": {
      "op": "MSTORE"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10715": {
      "op": "REVERT"
    },
    "10716": {
      "op": "JUMPDEST"
    },
    "10717": {
      "op": "POP"
    },
    "10718": {
      "op": "DIV"
    },
    "10719": {
      "op": "SWAP1"
    },
    "10720": {
      "jump": "o",
      "op": "JUMP"
    },
    "10721": {
      "op": "JUMPDEST"
    },
    "10722": {
      "op": "DUP1"
    },
    "10723": {
      "op": "DUP3"
    },
    "10724": {
      "op": "MUL"
    },
    "10725": {
      "op": "DUP2"
    },
    "10726": {
      "op": "ISZERO"
    },
    "10727": {
      "op": "DUP3"
    },
    "10728": {
      "op": "DUP3"
    },
    "10729": {
      "op": "DIV"
    },
    "10730": {
      "op": "DUP5"
    },
    "10731": {
      "op": "EQ"
    },
    "10732": {
      "op": "OR"
    },
    "10733": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "10736": {
      "op": "JUMPI"
    },
    "10737": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "10740": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10743": {
      "jump": "i",
      "op": "JUMP"
    },
    "10744": {
      "op": "JUMPDEST"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10749": {
      "op": "DUP3"
    },
    "10750": {
      "op": "DUP5"
    },
    "10751": {
      "op": "SUB"
    },
    "10752": {
      "op": "SLT"
    },
    "10753": {
      "op": "ISZERO"
    },
    "10754": {
      "op": "PUSH2",
      "value": "0x2A0A"
    },
    "10757": {
      "op": "JUMPI"
    },
    "10758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10760": {
      "op": "DUP1"
    },
    "10761": {
      "op": "REVERT"
    },
    "10762": {
      "op": "JUMPDEST"
    },
    "10763": {
      "op": "DUP2"
    },
    "10764": {
      "op": "MLOAD"
    },
    "10765": {
      "op": "DUP1"
    },
    "10766": {
      "op": "ISZERO"
    },
    "10767": {
      "op": "ISZERO"
    },
    "10768": {
      "op": "DUP2"
    },
    "10769": {
      "op": "EQ"
    },
    "10770": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "10773": {
      "op": "JUMPI"
    },
    "10774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10776": {
      "op": "DUP1"
    },
    "10777": {
      "op": "REVERT"
    },
    "10778": {
      "op": "JUMPDEST"
    },
    "10779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10781": {
      "op": "DUP1"
    },
    "10782": {
      "op": "DUP3"
    },
    "10783": {
      "op": "MSTORE"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10786": {
      "op": "SWAP1"
    },
    "10787": {
      "op": "DUP3"
    },
    "10788": {
      "op": "ADD"
    },
    "10789": {
      "op": "MSTORE"
    },
    "10790": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "10823": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10825": {
      "op": "DUP3"
    },
    "10826": {
      "op": "ADD"
    },
    "10827": {
      "op": "MSTORE"
    },
    "10828": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "10840": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10842": {
      "op": "SHL"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10845": {
      "op": "DUP3"
    },
    "10846": {
      "op": "ADD"
    },
    "10847": {
      "op": "MSTORE"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10850": {
      "op": "ADD"
    },
    "10851": {
      "op": "SWAP1"
    },
    "10852": {
      "jump": "o",
      "op": "JUMP"
    },
    "10853": {
      "op": "JUMPDEST"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10856": {
      "op": "DUP3"
    },
    "10857": {
      "op": "GT"
    },
    "10858": {
      "op": "ISZERO"
    },
    "10859": {
      "op": "PUSH2",
      "value": "0x143D"
    },
    "10862": {
      "op": "JUMPI"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10865": {
      "op": "DUP2"
    },
    "10866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10868": {
      "op": "MSTORE"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10873": {
      "op": "KECCAK256"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10876": {
      "op": "DUP6"
    },
    "10877": {
      "op": "ADD"
    },
    "10878": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10880": {
      "op": "SHR"
    },
    "10881": {
      "op": "DUP2"
    },
    "10882": {
      "op": "ADD"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10885": {
      "op": "DUP7"
    },
    "10886": {
      "op": "LT"
    },
    "10887": {
      "op": "ISZERO"
    },
    "10888": {
      "op": "PUSH2",
      "value": "0x2A8E"
    },
    "10891": {
      "op": "JUMPI"
    },
    "10892": {
      "op": "POP"
    },
    "10893": {
      "op": "DUP1"
    },
    "10894": {
      "op": "JUMPDEST"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10897": {
      "op": "DUP6"
    },
    "10898": {
      "op": "ADD"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10901": {
      "op": "SHR"
    },
    "10902": {
      "op": "DUP3"
    },
    "10903": {
      "op": "ADD"
    },
    "10904": {
      "op": "SWAP2"
    },
    "10905": {
      "op": "POP"
    },
    "10906": {
      "op": "JUMPDEST"
    },
    "10907": {
      "op": "DUP2"
    },
    "10908": {
      "op": "DUP2"
    },
    "10909": {
      "op": "LT"
    },
    "10910": {
      "op": "ISZERO"
    },
    "10911": {
      "op": "PUSH2",
      "value": "0x2AAD"
    },
    "10914": {
      "op": "JUMPI"
    },
    "10915": {
      "op": "DUP3"
    },
    "10916": {
      "op": "DUP2"
    },
    "10917": {
      "op": "SSTORE"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10920": {
      "op": "ADD"
    },
    "10921": {
      "op": "PUSH2",
      "value": "0x2A9A"
    },
    "10924": {
      "op": "JUMP"
    },
    "10925": {
      "op": "JUMPDEST"
    },
    "10926": {
      "op": "POP"
    },
    "10927": {
      "op": "POP"
    },
    "10928": {
      "op": "POP"
    },
    "10929": {
      "op": "POP"
    },
    "10930": {
      "op": "POP"
    },
    "10931": {
      "op": "POP"
    },
    "10932": {
      "jump": "o",
      "op": "JUMP"
    },
    "10933": {
      "op": "JUMPDEST"
    },
    "10934": {
      "op": "DUP2"
    },
    "10935": {
      "op": "MLOAD"
    },
    "10936": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10945": {
      "op": "DUP2"
    },
    "10946": {
      "op": "GT"
    },
    "10947": {
      "op": "ISZERO"
    },
    "10948": {
      "op": "PUSH2",
      "value": "0x2ACF"
    },
    "10951": {
      "op": "JUMPI"
    },
    "10952": {
      "op": "PUSH2",
      "value": "0x2ACF"
    },
    "10955": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "10958": {
      "jump": "i",
      "op": "JUMP"
    },
    "10959": {
      "op": "JUMPDEST"
    },
    "10960": {
      "op": "PUSH2",
      "value": "0x2AE3"
    },
    "10963": {
      "op": "DUP2"
    },
    "10964": {
      "op": "PUSH2",
      "value": "0x2ADD"
    },
    "10967": {
      "op": "DUP5"
    },
    "10968": {
      "op": "SLOAD"
    },
    "10969": {
      "op": "PUSH2",
      "value": "0x2776"
    },
    "10972": {
      "jump": "i",
      "op": "JUMP"
    },
    "10973": {
      "op": "JUMPDEST"
    },
    "10974": {
      "op": "DUP5"
    },
    "10975": {
      "op": "PUSH2",
      "value": "0x2A65"
    },
    "10978": {
      "jump": "i",
      "op": "JUMP"
    },
    "10979": {
      "op": "JUMPDEST"
    },
    "10980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10982": {
      "op": "DUP1"
    },
    "10983": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10985": {
      "op": "DUP4"
    },
    "10986": {
      "op": "GT"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10989": {
      "op": "DUP2"
    },
    "10990": {
      "op": "EQ"
    },
    "10991": {
      "op": "PUSH2",
      "value": "0x2B18"
    },
    "10994": {
      "op": "JUMPI"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10997": {
      "op": "DUP5"
    },
    "10998": {
      "op": "ISZERO"
    },
    "10999": {
      "op": "PUSH2",
      "value": "0x2B00"
    },
    "11002": {
      "op": "JUMPI"
    },
    "11003": {
      "op": "POP"
    },
    "11004": {
      "op": "DUP6"
    },
    "11005": {
      "op": "DUP4"
    },
    "11006": {
      "op": "ADD"
    },
    "11007": {
      "op": "MLOAD"
    },
    "11008": {
      "op": "JUMPDEST"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11011": {
      "op": "NOT"
    },
    "11012": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11014": {
      "op": "DUP7"
    },
    "11015": {
      "op": "SWAP1"
    },
    "11016": {
      "op": "SHL"
    },
    "11017": {
      "op": "SHR"
    },
    "11018": {
      "op": "NOT"
    },
    "11019": {
      "op": "AND"
    },
    "11020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11022": {
      "op": "DUP6"
    },
    "11023": {
      "op": "SWAP1"
    },
    "11024": {
      "op": "SHL"
    },
    "11025": {
      "op": "OR"
    },
    "11026": {
      "op": "DUP6"
    },
    "11027": {
      "op": "SSTORE"
    },
    "11028": {
      "op": "PUSH2",
      "value": "0x2AAD"
    },
    "11031": {
      "op": "JUMP"
    },
    "11032": {
      "op": "JUMPDEST"
    },
    "11033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11035": {
      "op": "DUP6"
    },
    "11036": {
      "op": "DUP2"
    },
    "11037": {
      "op": "MSTORE"
    },
    "11038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11040": {
      "op": "DUP2"
    },
    "11041": {
      "op": "KECCAK256"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11044": {
      "op": "NOT"
    },
    "11045": {
      "op": "DUP7"
    },
    "11046": {
      "op": "AND"
    },
    "11047": {
      "op": "SWAP2"
    },
    "11048": {
      "op": "JUMPDEST"
    },
    "11049": {
      "op": "DUP3"
    },
    "11050": {
      "op": "DUP2"
    },
    "11051": {
      "op": "LT"
    },
    "11052": {
      "op": "ISZERO"
    },
    "11053": {
      "op": "PUSH2",
      "value": "0x2B47"
    },
    "11056": {
      "op": "JUMPI"
    },
    "11057": {
      "op": "DUP9"
    },
    "11058": {
      "op": "DUP7"
    },
    "11059": {
      "op": "ADD"
    },
    "11060": {
      "op": "MLOAD"
    },
    "11061": {
      "op": "DUP3"
    },
    "11062": {
      "op": "SSTORE"
    },
    "11063": {
      "op": "SWAP5"
    },
    "11064": {
      "op": "DUP5"
    },
    "11065": {
      "op": "ADD"
    },
    "11066": {
      "op": "SWAP5"
    },
    "11067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11069": {
      "op": "SWAP1"
    },
    "11070": {
      "op": "SWAP2"
    },
    "11071": {
      "op": "ADD"
    },
    "11072": {
      "op": "SWAP1"
    },
    "11073": {
      "op": "DUP5"
    },
    "11074": {
      "op": "ADD"
    },
    "11075": {
      "op": "PUSH2",
      "value": "0x2B28"
    },
    "11078": {
      "op": "JUMP"
    },
    "11079": {
      "op": "JUMPDEST"
    },
    "11080": {
      "op": "POP"
    },
    "11081": {
      "op": "DUP6"
    },
    "11082": {
      "op": "DUP3"
    },
    "11083": {
      "op": "LT"
    },
    "11084": {
      "op": "ISZERO"
    },
    "11085": {
      "op": "PUSH2",
      "value": "0x2B65"
    },
    "11088": {
      "op": "JUMPI"
    },
    "11089": {
      "op": "DUP8"
    },
    "11090": {
      "op": "DUP6"
    },
    "11091": {
      "op": "ADD"
    },
    "11092": {
      "op": "MLOAD"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11095": {
      "op": "NOT"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11098": {
      "op": "DUP9"
    },
    "11099": {
      "op": "SWAP1"
    },
    "11100": {
      "op": "SHL"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11103": {
      "op": "AND"
    },
    "11104": {
      "op": "SHR"
    },
    "11105": {
      "op": "NOT"
    },
    "11106": {
      "op": "AND"
    },
    "11107": {
      "op": "DUP2"
    },
    "11108": {
      "op": "SSTORE"
    },
    "11109": {
      "op": "JUMPDEST"
    },
    "11110": {
      "op": "POP"
    },
    "11111": {
      "op": "POP"
    },
    "11112": {
      "op": "POP"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "op": "POP"
    },
    "11115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11117": {
      "op": "SWAP1"
    },
    "11118": {
      "op": "DUP2"
    },
    "11119": {
      "op": "SHL"
    },
    "11120": {
      "op": "ADD"
    },
    "11121": {
      "op": "SWAP1"
    },
    "11122": {
      "op": "SSTORE"
    },
    "11123": {
      "op": "POP"
    },
    "11124": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "84bbfe82f1ecfb568192ed89e03dcba863e0c396",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\n/**\n * @title SmartNodes\n * @dev An ERC20 contract for managing off-chain networks\n */\ncontract SmartnodesCore is ERC20Upgradeable {\n    // Validator multi-sig address\n    ISmartnodesMultiSig private _validatorContractInstance;\n    address public validatorContractAddress;\n\n    // Counters for storage indexing / IDs\n    uint256 public validatorIdCounter;\n    uint256 public userCounter;\n    uint256 public jobCounter;\n    uint256 public activeValidators;\n    uint256 public minValidators;\n    uint256 public maxValidators;\n    uint256 public totalLocked;\n\n    // Events\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validtor, uint256 amount);\n    event JobRequested(\n        bytes32 indexed jobHash,\n        uint256 timestamp,\n        address[] seedValidators\n    );\n    event JobCompleted(bytes32 indexed jobId, uint256 timestamp);\n    event JobDisputed(bytes32 indexed jobId, uint256 timestamp);\n\n    // User data with key information (address, RSA key hash, reputation)\n    struct User {\n        address userAddress;\n        bytes32 publicKeyHash;\n        uint8 reputation;\n    }\n\n    // Validator data with key information (address, RSA key hash, locked value, reputation, activity)\n    struct Validator {\n        bytes32 publicKeyHash;\n        address validatorAddress;\n        uint256 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n    }\n\n    // Information for  a generic off-chain job (job hash [key for kademlia lookup], seed validators, participants, author, etc)\n    struct Job {\n        address author;\n        address[] seedValidators;\n        address[] workers;\n        uint256[] capacities;\n        bool activity;\n    }\n\n    // ERC20 token supply metrics\n    uint256 constant TAIL_EMISSION = 2e18;\n\n    uint256 public halving; // number of state updates until next halving (~3 months)\n    uint256 public emissionRate; // amount of tokens to be emitted per state update\n    uint256 public lockAmount; // minimum validator locked tokens required\n    uint256 public unlockPeriod;\n    uint256 public timeSinceLastHalving;\n\n    // Main datastructure mappings via id lookup\n    mapping(bytes32 => User) public users;\n    mapping(bytes32 => address) public workers;\n    mapping(bytes32 => address) public validatorAddressByHash;\n    mapping(uint256 => Validator) public validators;\n    mapping(bytes32 => Job) public jobs;\n    uint256[] public activeJobs;\n\n    // Helpful mappings\n    mapping(address => bytes32) public userHashByAddress;\n    mapping(address => uint256) public validatorIdByAddress;\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == validatorContractAddress,\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    function initialize(address[] memory _genesisNodes) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n\n        // Set all counters to 1 (when looking up values, 0 = Not found)\n        userCounter = 1;\n        jobCounter = 1;\n        validatorIdCounter = 1;\n\n        // Set ERC20 token parameters\n        emissionRate = 256e18; // amount of tokens to be emitted per state update\n        lockAmount = 100_000e18; // minimum validator locked tokens required\n        halving = 52452222; // Number of state updates before reward halving\n        unlockPeriod = 1_209_600; // (seconds)\n        timeSinceLastHalving = 0;\n\n        for (uint i = 0; i < _genesisNodes.length; i++) {\n            _mint(_genesisNodes[i], lockAmount);\n        }\n\n        // Other parameters\n        minValidators = 1;\n        maxValidators = 5;\n    }\n\n    function setValidatorContract(address validatorAddress) external {\n        require(\n            validatorContractAddress == address(0),\n            \"Validator address already set.\"\n        );\n        _validatorContractInstance = ISmartnodesMultiSig(validatorAddress);\n        validatorContractAddress = validatorAddress;\n    }\n\n    /**\n     * @dev Create a User, limit one per address & public key hash (RSA)\n     */\n    function createUser(bytes32 _publicKeyHash) public {\n        // Only one address & public key hash per user.\n        require(\n            userHashByAddress[msg.sender] == bytes32(0),\n            \"User already registered.\"\n        );\n\n        users[_publicKeyHash] = User({\n            userAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            reputation: 50\n        });\n\n        userHashByAddress[msg.sender] = _publicKeyHash;\n        userCounter++;\n    }\n\n    /**\n     * @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno\n     */\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already exists.\"\n        );\n\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n\n        // Create validator on SmartnodesCore\n        validators[validatorIdCounter] = Validator({\n            publicKeyHash: _publicKeyHash,\n            validatorAddress: msg.sender,\n            locked: lockAmount,\n            unlockTime: 0,\n            reputation: 50\n        });\n\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n        validatorAddressByHash[_publicKeyHash] = msg.sender;\n\n        // Lock token in contract\n        _lockTokens(msg.sender, lockAmount);\n\n        validatorIdCounter++;\n    }\n\n    // User Job Requesting Via Chainlink VRF TODO\n    function requestJob(\n        bytes32 userHash,\n        bytes32 jobHash,\n        uint256[] calldata _capacities\n    ) external returns (uint256[] memory validatorIds) {\n        // If user directly requests a job, register if they have not already done so\n        if (msg.sender != validatorContractAddress) {\n            if (userHashByAddress[msg.sender] == bytes32(0)) {\n                createUser(userHash);\n                userHash = userHashByAddress[msg.sender];\n            }\n        }\n\n        require(userHash != bytes32(0), \"User not registered!\");\n        require(jobs[jobHash].author == address(0), \"Job already created.\");\n        // require(_capacities[0] > 0, \"Capacity must be greater zero.\");\n\n        address[] memory _seedValidators = _validatorContractInstance\n            .generateValidators(1);\n        uint256[] memory _validatorIds = new uint256[](1); // (_seedValidators.length);\n\n        for (uint256 i = 0; i < _seedValidators.length; i++) {\n            _validatorIds[i] = validatorIdByAddress[_seedValidators[i]];\n        }\n\n        // Store the job in the jobs mapping\n        jobs[jobHash] = Job({\n            author: msg.sender,\n            seedValidators: _seedValidators,\n            workers: new address[](_capacities.length),\n            capacities: _capacities,\n            activity: true\n        });\n\n        emit JobRequested(jobHash, block.timestamp, _seedValidators);\n        jobCounter++;\n\n        return _validatorIds;\n    }\n\n    function completeJob(\n        bytes32 jobHash,\n        address[] memory _workers\n    ) external onlyValidatorMultiSig returns (uint256[] memory) {\n        require(_workers.length == jobs[jobHash].capacities.length);\n\n        jobs[jobHash].workers = _workers;\n        jobs[jobHash].activity = false;\n        // jobIdByUserHash[userIdHash] = 0;\n\n        emit JobCompleted(jobHash, block.timestamp);\n\n        return jobs[jobHash].capacities;\n    }\n\n    function disputeJob(bytes32 jobHash) external onlyValidatorMultiSig {\n        Job storage job = jobs[jobHash];\n        job.activity = false;\n        emit JobDisputed(jobHash, block.timestamp);\n    }\n\n    /**\n     * @dev Internal function to lock tokens, callable from other functions\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(sender, address(this), amount);\n        validators[validatorId].locked += amount;\n        uint256 _totalLocked = validators[validatorId].locked;\n        totalLocked += _totalLocked;\n\n        emit TokensLocked(sender, amount);\n    }\n\n    /**\n     * @dev Validator token unlocking, 30 day withdrawal period.\n     */\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId > 0, \"Not a registered validator.\");\n\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            // uint256 _totalLocked = validator.locked - amount;\n            totalLocked -= amount;\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    /**\n     * @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n     * Updates the emission rate and halving accordingly\n     */\n    function mintTokens(\n        address[] memory _workers,\n        uint256[] memory _workerCapacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted\n    ) external onlyValidatorMultiSig {\n        if (timeSinceLastHalving >= halving) {\n            if (emissionRate > TAIL_EMISSION) {\n                emissionRate /= 2;\n            }\n        }\n\n        uint256 validatorRewardTotal = (emissionRate * 20) / 100;\n        uint256 workerRewardTotal = (emissionRate * 80) / 100;\n\n        // Distribute rewards for validators equally\n        uint256 validatorReward = validatorRewardTotal /\n            _validatorsVoted.length;\n\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            _mint(_validatorsVoted[v], validatorReward);\n        }\n\n        // Distribute rewards for workers\n        for (uint256 w = 0; w < _workers.length; w++) {\n            uint256 reward = ((_workerCapacities[w] * workerRewardTotal) /\n                _totalCapacity);\n            _mint(_workers[w], reward);\n        }\n\n        timeSinceLastHalving++;\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobValidators(\n        bytes32 jobHash\n    ) external view returns (address[] memory) {\n        address[] memory jobValidators = jobs[jobHash].seedValidators;\n        return jobValidators;\n    }\n\n    function getValidatorInfo(\n        uint256 _validatorId\n    ) external view returns (bool, bytes32, address) {\n        require(_validatorId < validatorIdCounter, \"Invalid ID.\");\n        Validator memory _validator = validators[_validatorId];\n        bool isActive = _validatorContractInstance.isActiveValidator(\n            _validator.validatorAddress\n        );\n        return (\n            isActive,\n            _validator.publicKeyHash,\n            _validator.validatorAddress\n        );\n    }\n\n    function getValidatorBytes(\n        address validatorAddress\n    ) external view returns (bytes32) {\n        uint256 validatorId = validatorIdByAddress[validatorAddress];\n        require(validatorId > 0, \"Validator does not exist.\");\n\n        return validators[validatorId].publicKeyHash;\n    }\n\n    function getUserCount() external view returns (uint256) {\n        return userCounter - 1;\n    }\n\n    function getValidatorCount() external view returns (uint256) {\n        return validatorIdCounter - 1;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return _validatorContractInstance.getNumValidators();\n    }\n\n    function getEmissionRate() external view returns (uint256) {\n        return emissionRate;\n    }\n\n    function getSupply() external view returns (uint256) {\n        return this.totalSupply();\n    }\n\n    function isLocked(address validatorAddr) external view returns (bool) {\n        uint256 _id = validatorIdByAddress[validatorAddr];\n        return validators[_id].locked >= lockAmount;\n    }\n\n    function getProposees() external view returns (address[] memory) {\n        return _validatorContractInstance.getSelectedValidators();\n    }\n\n    function getState()\n        external\n        view\n        returns (uint256, uint256, uint256, address[] memory)\n    {\n        return _validatorContractInstance.getState();\n    }\n}\n",
  "sourceMap": "271:13285:26:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}