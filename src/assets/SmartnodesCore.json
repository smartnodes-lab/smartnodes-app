{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "seedValidators",
          "type": "address[]"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeJobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "disputeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "getJobValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposees",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "getValidatorBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_genesisNodes",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddr",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activity",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_workerCapacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "userHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        }
      ],
      "name": "requestJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "validatorIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userHashByAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "validatorAddressByHash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "workers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "10": "contracts/SmartnodesCore.sol",
    "13": "contracts/interfaces/ISmartnodesMultiSig.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "4": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3993
      ],
      "ContextUpgradeable": [
        3750
      ],
      "ERC20Upgradeable": [
        3053
      ],
      "IERC20MetadataUpgradeable": [
        3708
      ],
      "IERC20Upgradeable": [
        3683
      ],
      "ISmartnodesMultiSig": [
        3174
      ],
      "Initializable": [
        3251
      ],
      "SmartnodesCore": [
        1055
      ]
    },
    "id": 1056,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1056,
        "sourceUnit": 3054,
        "src": "57:78:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1056,
        "sourceUnit": 3175,
        "src": "136:46:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "298:16:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3053,
              "src": "298:16:10"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:10"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "184:86:10",
          "text": " @title SmartNodes\n @dev An ERC20 contract for managing off-chain networks"
        },
        "fullyImplemented": true,
        "id": 1055,
        "linearizedBaseContracts": [
          1055,
          3053,
          3708,
          3683,
          3750,
          3251
        ],
        "name": "SmartnodesCore",
        "nameLocation": "280:14:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "_validatorContractInstance",
            "nameLocation": "384:26:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "356:54:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "356:19:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3174,
                "src": "356:19:10"
              },
              "referencedDeclaration": 3174,
              "src": "356:19:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f79621bd",
            "id": 11,
            "mutability": "mutable",
            "name": "validatorContractAddress",
            "nameLocation": "431:24:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "416:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 13,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "520:18:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "505:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0c37a59",
            "id": 15,
            "mutability": "mutable",
            "name": "userCounter",
            "nameLocation": "559:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "544:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 17,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "591:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "576:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2d49c4b",
            "id": 19,
            "mutability": "mutable",
            "name": "activeValidators",
            "nameLocation": "622:16:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "607:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 21,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "659:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "644:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 23,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "693:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "678:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 29,
            "name": "TokensLocked",
            "nameLocation": "733:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "762:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "746:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "781:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "773:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "745:43:10"
            },
            "src": "727:62:10"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 35,
            "name": "UnlockInitiated",
            "nameLocation": "800:15:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "832:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "816:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "851:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "843:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:47:10"
            },
            "src": "794:69:10"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 41,
            "name": "TokensUnlocked",
            "nameLocation": "874:14:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "905:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "889:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "924:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "916:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "888:43:10"
            },
            "src": "868:64:10"
          },
          {
            "anonymous": false,
            "eventSelector": "5dd5aff7b55a6d23db5800ae74fafb29f5f00976a85526c852c81900d14cf3e7",
            "id": 50,
            "name": "JobRequested",
            "nameLocation": "943:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "981:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "965:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1006:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "998:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seedValidators",
                  "nameLocation": "1035:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1025:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1025:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 47,
                    "nodeType": "ArrayTypeName",
                    "src": "1025:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:100:10"
            },
            "src": "937:119:10"
          },
          {
            "anonymous": false,
            "eventSelector": "9b5ed714c31dfcb1a9397710b6fc1842f37d94ab5dc0ccb528d9a2c97ea76f2a",
            "id": 56,
            "name": "JobCompleted",
            "nameLocation": "1067:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1096:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1080:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1111:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1103:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1079:42:10"
            },
            "src": "1061:61:10"
          },
          {
            "anonymous": false,
            "eventSelector": "6e04aa702f9af7a9a398f10d27918152df25ac0cdc6d74321b9f7496374387a7",
            "id": 62,
            "name": "JobDisputed",
            "nameLocation": "1133:11:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1161:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1145:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1176:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1168:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:42:10"
            },
            "src": "1127:60:10"
          },
          {
            "canonicalName": "SmartnodesCore.User",
            "id": 69,
            "members": [
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "1297:11:10",
                "nodeType": "VariableDeclaration",
                "scope": 69,
                "src": "1289:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 63,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1289:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1326:13:10",
                "nodeType": "VariableDeclaration",
                "scope": 69,
                "src": "1318:21:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 65,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1355:10:10",
                "nodeType": "VariableDeclaration",
                "scope": 69,
                "src": "1349:16:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1349:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1274:4:10",
            "nodeType": "StructDefinition",
            "scope": 1055,
            "src": "1267:105:10",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 80,
            "members": [
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1516:13:10",
                "nodeType": "VariableDeclaration",
                "scope": 80,
                "src": "1508:21:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 70,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1508:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "1547:16:10",
                "nodeType": "VariableDeclaration",
                "scope": 80,
                "src": "1539:24:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 72,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1539:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "1581:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 80,
                "src": "1573:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1573:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "1605:10:10",
                "nodeType": "VariableDeclaration",
                "scope": 80,
                "src": "1597:18:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1597:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1631:10:10",
                "nodeType": "VariableDeclaration",
                "scope": 80,
                "src": "1625:16:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 78,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1625:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "1488:9:10",
            "nodeType": "StructDefinition",
            "scope": 1055,
            "src": "1481:167:10",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 94,
            "members": [
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "author",
                "nameLocation": "1812:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 94,
                "src": "1804:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 81,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1804:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "seedValidators",
                "nameLocation": "1838:14:10",
                "nodeType": "VariableDeclaration",
                "scope": 94,
                "src": "1828:24:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 84,
                  "nodeType": "ArrayTypeName",
                  "src": "1828:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "workers",
                "nameLocation": "1872:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 94,
                "src": "1862:17:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87,
                  "nodeType": "ArrayTypeName",
                  "src": "1862:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "1899:10:10",
                "nodeType": "VariableDeclaration",
                "scope": 94,
                "src": "1889:20:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ArrayTypeName",
                  "src": "1889:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 93,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "1924:8:10",
                "nodeType": "VariableDeclaration",
                "scope": 94,
                "src": "1919:13:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 92,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1919:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "1790:3:10",
            "nodeType": "StructDefinition",
            "scope": 1055,
            "src": "1783:156:10",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 97,
            "mutability": "constant",
            "name": "TAIL_EMISSION",
            "nameLocation": "1996:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "1979:37:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 95,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1979:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32653138",
              "id": 96,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2012:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000000000000000_by_1",
                "typeString": "int_const 2000000000000000000"
              },
              "value": "2e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c8df245a",
            "id": 99,
            "mutability": "mutable",
            "name": "halving",
            "nameLocation": "2038:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2023:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2023:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 101,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "2124:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2109:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2109:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 103,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "2208:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2193:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 102,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2193:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 105,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "2283:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2268:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2268:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b115f50d",
            "id": 107,
            "mutability": "mutable",
            "name": "timeSinceLastHalving",
            "nameLocation": "2316:20:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2301:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 106,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2301:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cea6ab98",
            "id": 112,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "2424:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2392:37:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$69_storage_$",
              "typeString": "mapping(bytes32 => struct SmartnodesCore.User)"
            },
            "typeName": {
              "id": 111,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 108,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2400:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2392:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$69_storage_$",
                "typeString": "mapping(bytes32 => struct SmartnodesCore.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 110,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 109,
                  "name": "User",
                  "nameLocations": [
                    "2411:4:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69,
                  "src": "2411:4:10"
                },
                "referencedDeclaration": 69,
                "src": "2411:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$69_storage_ptr",
                  "typeString": "struct SmartnodesCore.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d3eece97",
            "id": 116,
            "mutability": "mutable",
            "name": "workers",
            "nameLocation": "2470:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2435:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 115,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 113,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2443:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2435:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 114,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2454:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38e56261",
            "id": 120,
            "mutability": "mutable",
            "name": "validatorAddressByHash",
            "nameLocation": "2518:22:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2483:57:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 119,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 117,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2491:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2483:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 118,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2502:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 125,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "2583:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2546:47:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 124,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 121,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2554:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2546:29:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 123,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 122,
                  "name": "Validator",
                  "nameLocations": [
                    "2565:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 80,
                  "src": "2565:9:10"
                },
                "referencedDeclaration": 80,
                "src": "2565:9:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38ed7cfc",
            "id": 130,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "2630:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2599:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
              "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 129,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 126,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2607:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2599:23:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 128,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 127,
                  "name": "Job",
                  "nameLocations": [
                    "2618:3:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 94,
                  "src": "2618:3:10"
                },
                "referencedDeclaration": 94,
                "src": "2618:3:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$94_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21b0908b",
            "id": 133,
            "mutability": "mutable",
            "name": "activeJobs",
            "nameLocation": "2657:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2640:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 131,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2640:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 132,
              "nodeType": "ArrayTypeName",
              "src": "2640:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d057fc19",
            "id": 137,
            "mutability": "mutable",
            "name": "userHashByAddress",
            "nameLocation": "2733:17:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2698:52:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 136,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 134,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2706:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2698:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 135,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2717:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 141,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "2791:20:10",
            "nodeType": "VariableDeclaration",
            "scope": 1055,
            "src": "2756:55:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 140,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 138,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2764:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2756:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 139,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2775:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "2851:151:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2882:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2886:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2882:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 146,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2896:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2882:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2861:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:123:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:123:10"
                },
                {
                  "id": 151,
                  "nodeType": "PlaceholderStatement",
                  "src": "2994:1:10"
                }
              ]
            },
            "id": 153,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "2827:21:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2848:2:10"
            },
            "src": "2818:184:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "3079:762:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3102:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3116:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 161,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2487,
                      "src": "3089:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3089:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:33:10"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3206:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3220:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3206:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:15:10"
                },
                {
                  "expression": {
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3231:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3244:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3231:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "3231:14:10"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3255:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3276:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3255:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:22:10"
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 178,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "3326:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "323536653138",
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3341:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256000000000000000000_by_1",
                        "typeString": "int_const 256000000000000000000"
                      },
                      "value": "256e18"
                    },
                    "src": "3326:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "3326:21:10"
                },
                {
                  "expression": {
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 182,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "3408:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130305f303030653138",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3421:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      },
                      "value": "100_000e18"
                    },
                    "src": "3408:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "3408:23:10"
                },
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 186,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "3485:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3532343532323232",
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3495:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_52452222_by_1",
                        "typeString": "int_const 52452222"
                      },
                      "value": "52452222"
                    },
                    "src": "3485:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:18:10"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 190,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3562:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "315f3230395f363030",
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3577:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1209600_by_1",
                        "typeString": "int_const 1209600"
                      },
                      "value": "1_209_600"
                    },
                    "src": "3562:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:24:10"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 194,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3609:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3632:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3609:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:24:10"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "3692:60:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 210,
                                "name": "_genesisNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "3712:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 212,
                              "indexExpression": {
                                "id": 211,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 199,
                                "src": "3726:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3712:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 213,
                              "name": "lockAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "3730:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 209,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2865,
                            "src": "3706:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3706:35:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "3706:35:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 202,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "3661:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 203,
                        "name": "_genesisNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "3665:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3679:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3665:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3661:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "initializationExpression": {
                    "assignments": [
                      199
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3654:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "3649:6:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3649:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 201,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3658:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3649:10:10"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3687:3:10",
                      "subExpression": {
                        "id": 206,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "3687:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 208,
                    "nodeType": "ExpressionStatement",
                    "src": "3687:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3644:108:10"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 218,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3790:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3806:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3790:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:17:10"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 222,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3817:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3833:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "3817:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:17:10"
                }
              ]
            },
            "functionSelector": "a224cee7",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 158,
                  "name": "initializer",
                  "nameLocations": [
                    "3067:11:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3225,
                  "src": "3067:11:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3067:11:10"
              }
            ],
            "name": "initialize",
            "nameLocation": "3017:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "_genesisNodes",
                  "nameLocation": "3045:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "3028:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 154,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3028:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 155,
                    "nodeType": "ArrayTypeName",
                    "src": "3028:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3027:32:10"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3079:0:10"
            },
            "scope": 1055,
            "src": "3008:833:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "3912:261:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 233,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "3943:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3979:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3971:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3971:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3971:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3943:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3995:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3922:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3922:115:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:115:10"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 242,
                      "name": "_validatorContractInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "4047:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 244,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "4096:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 243,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3174,
                        "src": "4076:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$3174_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4076:37:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "4047:66:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:66:10"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 248,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "4123:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 249,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "4150:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4123:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "4123:43:10"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "3856:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "3885:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3877:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3876:26:10"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3912:0:10"
            },
            "scope": 1055,
            "src": "3847:326:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "4319:426:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 260,
                            "name": "userHashByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "4406:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 263,
                          "indexExpression": {
                            "expression": {
                              "id": 261,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4424:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4428:6:10",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4424:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4406:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4447:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4439:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 264,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4439:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4439:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4406:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4463:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4385:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4385:114:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4385:114:10"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 272,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "4510:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$69_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.User storage ref)"
                        }
                      },
                      "id": 274,
                      "indexExpression": {
                        "id": 273,
                        "name": "_publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "4516:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4510:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$69_storage",
                        "typeString": "struct SmartnodesCore.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 276,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4566:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4570:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4566:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 278,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "4605:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3530",
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4645:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 275,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "4534:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$69_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.User storage pointer)"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4553:11:10",
                        "4590:13:10",
                        "4633:10:10"
                      ],
                      "names": [
                        "userAddress",
                        "publicKeyHash",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4534:124:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$69_memory_ptr",
                        "typeString": "struct SmartnodesCore.User memory"
                      }
                    },
                    "src": "4510:148:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$69_storage",
                      "typeString": "struct SmartnodesCore.User storage ref"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "4510:148:10"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 283,
                        "name": "userHashByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4669:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "expression": {
                          "id": 284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4687:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4691:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4687:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4669:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "_publicKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "4701:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4669:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:46:10"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4725:13:10",
                    "subExpression": {
                      "id": 290,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "4725:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "4725:13:10"
                }
              ]
            },
            "documentation": {
              "id": 254,
              "nodeType": "StructuredDocumentation",
              "src": "4179:84:10",
              "text": " @dev Create a User, limit one per address & public key hash (RSA)"
            },
            "functionSelector": "abf7bfd8",
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "4277:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4296:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "4288:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4288:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4287:24:10"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4319:0:10"
            },
            "scope": 1055,
            "src": "4268:477:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "4971:795:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 303,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "5002:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 306,
                          "indexExpression": {
                            "expression": {
                              "id": 304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5023:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5027:6:10",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5023:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5002:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5038:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5002:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206578697374732e",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5053:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        },
                        "value": "Validator already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4981:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4981:109:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "4981:109:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 314,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5132:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5136:6:10",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5132:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 313,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "5122:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5122:21:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 317,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "5147:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5122:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 319,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "5162:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 320,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "5177:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5162:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5122:65:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5201:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5101:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5101:139:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:139:10"
                },
                {
                  "expression": {
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 326,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "5297:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 328,
                      "indexExpression": {
                        "id": 327,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "5308:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5297:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$80_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 330,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "5369:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 331,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5415:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5419:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5415:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 333,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "5447:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5483:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5510:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 329,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "5330:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$80_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5354:13:10",
                        "5397:16:10",
                        "5439:6:10",
                        "5471:10:10",
                        "5498:10:10"
                      ],
                      "names": [
                        "publicKeyHash",
                        "validatorAddress",
                        "locked",
                        "unlockTime",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5330:193:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$80_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "5297:226:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$80_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "5297:226:10"
                },
                {
                  "expression": {
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 339,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "5534:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 342,
                      "indexExpression": {
                        "expression": {
                          "id": 340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5555:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5559:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5555:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5534:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 343,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "5569:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5534:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "5534:53:10"
                },
                {
                  "expression": {
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 346,
                        "name": "validatorAddressByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "5597:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 348,
                      "indexExpression": {
                        "id": 347,
                        "name": "_publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "5620:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5597:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 349,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5638:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5642:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5638:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5597:51:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5597:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 354,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5705:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5709:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5705:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 356,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "5717:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 353,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "5693:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5693:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "5693:35:10"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5739:20:10",
                    "subExpression": {
                      "id": 359,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "5739:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "5739:20:10"
                }
              ]
            },
            "documentation": {
              "id": 295,
              "nodeType": "StructuredDocumentation",
              "src": "4751:114:10",
              "text": " @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
            },
            "functionSelector": "497dfe63",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "4879:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4912:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4904:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "4944:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4936:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4936:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4894:67:10"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4971:0:10"
            },
            "scope": 1055,
            "src": "4870:896:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "5988:1298:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 376,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6088:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6092:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6088:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 378,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "6102:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6088:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 403,
                  "nodeType": "IfStatement",
                  "src": "6084:228:10",
                  "trueBody": {
                    "id": 402,
                    "nodeType": "Block",
                    "src": "6128:184:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 380,
                              "name": "userHashByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "6146:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                "typeString": "mapping(address => bytes32)"
                              }
                            },
                            "id": 383,
                            "indexExpression": {
                              "expression": {
                                "id": 381,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6164:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6168:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6164:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6146:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6187:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6179:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 384,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "6179:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6179:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6146:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 401,
                        "nodeType": "IfStatement",
                        "src": "6142:160:10",
                        "trueBody": {
                          "id": 400,
                          "nodeType": "Block",
                          "src": "6191:111:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 390,
                                    "name": "userHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 365,
                                    "src": "6220:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 389,
                                  "name": "createUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "6209:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6209:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 392,
                              "nodeType": "ExpressionStatement",
                              "src": "6209:20:10"
                            },
                            {
                              "expression": {
                                "id": 398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 393,
                                  "name": "userHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 365,
                                  "src": "6247:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 394,
                                    "name": "userHashByAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "6258:17:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                      "typeString": "mapping(address => bytes32)"
                                    }
                                  },
                                  "id": 397,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 395,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6276:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6280:6:10",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6276:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6258:29:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "6247:40:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 399,
                              "nodeType": "ExpressionStatement",
                              "src": "6247:40:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 405,
                          "name": "userHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "6330:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6350:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6342:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 406,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6342:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6342:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6330:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f74207265676973746572656421",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6354:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2662cfe69e59afcc0e4be6b0ffe6f1fda50fc8b79c94ddf5a5c98e71a845f489",
                          "typeString": "literal_string \"User not registered!\""
                        },
                        "value": "User not registered!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2662cfe69e59afcc0e4be6b0ffe6f1fda50fc8b79c94ddf5a5c98e71a845f489",
                          "typeString": "literal_string \"User not registered!\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6322:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6322:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "6322:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 415,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "6395:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                                "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                              }
                            },
                            "id": 417,
                            "indexExpression": {
                              "id": 416,
                              "name": "jobHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "6400:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6395:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$94_storage",
                              "typeString": "struct SmartnodesCore.Job storage ref"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6409:6:10",
                          "memberName": "author",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "6395:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6427:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6419:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 419,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6419:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6419:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6395:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f6220616c726561647920637265617465642e",
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6431:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42ad34d022cd5c2f061afe8c5fe6f6360c9e039f0bd4289af315d9f5963f4f28",
                          "typeString": "literal_string \"Job already created.\""
                        },
                        "value": "Job already created."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42ad34d022cd5c2f061afe8c5fe6f6360c9e039f0bd4289af315d9f5963f4f28",
                          "typeString": "literal_string \"Job already created.\""
                        }
                      ],
                      "id": 414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6387:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6387:67:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "6387:67:10"
                },
                {
                  "assignments": [
                    431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 431,
                      "mutability": "mutable",
                      "name": "_seedValidators",
                      "nameLocation": "6556:15:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "6539:32:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6539:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 430,
                        "nodeType": "ArrayTypeName",
                        "src": "6539:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6633:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 432,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6574:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6614:18:10",
                      "memberName": "generateValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3097,
                      "src": "6574:58:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (address[] memory)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6574:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6539:96:10"
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "mutability": "mutable",
                      "name": "_validatorIds",
                      "nameLocation": "6662:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "6645:30:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 439,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6645:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 440,
                        "nodeType": "ArrayTypeName",
                        "src": "6645:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6692:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6678:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6682:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 443,
                        "nodeType": "ArrayTypeName",
                        "src": "6682:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6678:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6645:49:10"
                },
                {
                  "body": {
                    "id": 469,
                    "nodeType": "Block",
                    "src": "6787:84:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 459,
                              "name": "_validatorIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "6801:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 461,
                            "indexExpression": {
                              "id": 460,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 449,
                              "src": "6815:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6801:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 462,
                              "name": "validatorIdByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "6820:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 466,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 463,
                                "name": "_seedValidators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 431,
                                "src": "6841:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 465,
                              "indexExpression": {
                                "id": 464,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 449,
                                "src": "6857:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6841:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6820:40:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6801:59:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 468,
                        "nodeType": "ExpressionStatement",
                        "src": "6801:59:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 452,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "6754:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 453,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "6758:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6774:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6758:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6754:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 470,
                  "initializationExpression": {
                    "assignments": [
                      449
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 449,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6747:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "6739:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6739:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 451,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6751:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6739:13:10"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6782:3:10",
                      "subExpression": {
                        "id": 456,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "6782:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 458,
                    "nodeType": "ExpressionStatement",
                    "src": "6782:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "6734:137:10"
                },
                {
                  "expression": {
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 471,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "6926:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 473,
                      "indexExpression": {
                        "id": 472,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "6931:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6926:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$94_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 475,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6968:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6972:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6968:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 477,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "7008:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 481,
                                "name": "_capacities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "7060:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7072:6:10",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7060:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7046:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 478,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7050:7:10",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 479,
                              "nodeType": "ArrayTypeName",
                              "src": "7050:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7046:33:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 484,
                          "name": "_capacities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "7105:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7140:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 474,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6942:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$94_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Job storage pointer)"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "6960:6:10",
                        "6992:14:10",
                        "7037:7:10",
                        "7093:10:10",
                        "7130:8:10"
                      ],
                      "names": [
                        "author",
                        "seedValidators",
                        "workers",
                        "capacities",
                        "activity"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6942:213:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$94_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "src": "6926:229:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$94_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "6926:229:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 490,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "7184:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 491,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7193:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7199:9:10",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7193:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 493,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "7210:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 489,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "7171:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,address[] memory)"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7171:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "EmitStatement",
                  "src": "7166:60:10"
                },
                {
                  "expression": {
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7236:12:10",
                    "subExpression": {
                      "id": 496,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "7236:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "7236:12:10"
                },
                {
                  "expression": {
                    "id": 499,
                    "name": "_validatorIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 441,
                    "src": "7266:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 375,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "7259:20:10"
                }
              ]
            },
            "functionSelector": "1d4e7793",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "5831:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "userHash",
                  "nameLocation": "5859:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "5851:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5851:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "5885:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "5877:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5877:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "5921:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "5902:30:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 368,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5902:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 369,
                    "nodeType": "ArrayTypeName",
                    "src": "5902:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5841:97:10"
            },
            "returnParameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "validatorIds",
                  "nameLocation": "5974:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "5957:29:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 372,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5957:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 373,
                    "nodeType": "ArrayTypeName",
                    "src": "5957:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5956:31:10"
            },
            "scope": 1055,
            "src": "5822:1464:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 551,
              "nodeType": "Block",
              "src": "7437:299:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 516,
                            "name": "_workers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "7455:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7464:6:10",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7455:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 518,
                                "name": "jobs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130,
                                "src": "7474:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                                  "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                                }
                              },
                              "id": 520,
                              "indexExpression": {
                                "id": 519,
                                "name": "jobHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 504,
                                "src": "7479:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7474:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$94_storage",
                                "typeString": "struct SmartnodesCore.Job storage ref"
                              }
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7488:10:10",
                            "memberName": "capacities",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 91,
                            "src": "7474:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7499:6:10",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7474:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7455:50:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7447:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7447:59:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "7447:59:10"
                },
                {
                  "expression": {
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 526,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "7517:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                            "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 528,
                        "indexExpression": {
                          "id": 527,
                          "name": "jobHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "7522:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7517:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$94_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7531:7:10",
                      "memberName": "workers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "7517:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 530,
                      "name": "_workers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "7541:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "7517:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "7517:32:10"
                },
                {
                  "expression": {
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 533,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "7559:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                            "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 535,
                        "indexExpression": {
                          "id": 534,
                          "name": "jobHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "7564:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7559:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$94_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7573:8:10",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93,
                      "src": "7559:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7584:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7559:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "7559:30:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 541,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "7662:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 542,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7671:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7677:9:10",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7671:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 540,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "7649:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7649:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "EmitStatement",
                  "src": "7644:43:10"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 546,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "7705:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 548,
                      "indexExpression": {
                        "id": 547,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "7710:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7705:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$94_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7719:10:10",
                    "memberName": "capacities",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 91,
                    "src": "7705:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 514,
                  "id": 550,
                  "nodeType": "Return",
                  "src": "7698:31:10"
                }
              ]
            },
            "functionSelector": "43a8d914",
            "id": 552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 510,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 509,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7388:21:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153,
                  "src": "7388:21:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "7388:21:10"
              }
            ],
            "name": "completeJob",
            "nameLocation": "7301:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "7330:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "7322:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7322:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "7364:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "7347:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 505,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7347:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 506,
                    "nodeType": "ArrayTypeName",
                    "src": "7347:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7312:66:10"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "7419:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 511,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7419:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 512,
                    "nodeType": "ArrayTypeName",
                    "src": "7419:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7418:18:10"
            },
            "scope": 1055,
            "src": "7292:444:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "7810:130:10",
              "statements": [
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "7832:3:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "7820:15:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$94_storage_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 560,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 559,
                          "name": "Job",
                          "nameLocations": [
                            "7820:3:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 94,
                          "src": "7820:3:10"
                        },
                        "referencedDeclaration": 94,
                        "src": "7820:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$94_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": {
                    "baseExpression": {
                      "id": 562,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "7838:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                        "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 564,
                    "indexExpression": {
                      "id": 563,
                      "name": "jobHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "7843:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7838:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$94_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7820:31:10"
                },
                {
                  "expression": {
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 566,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "7861:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$94_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job storage pointer"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7865:8:10",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93,
                      "src": "7861:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7876:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7861:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "7861:20:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 573,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7908:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 574,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7917:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7923:9:10",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7917:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 572,
                      "name": "JobDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "7896:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7896:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "EmitStatement",
                  "src": "7891:42:10"
                }
              ]
            },
            "functionSelector": "ba3f5443",
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 557,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 556,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7788:21:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153,
                  "src": "7788:21:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "7788:21:10"
              }
            ],
            "name": "disputeJob",
            "nameLocation": "7751:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "7770:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "7762:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7762:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7761:17:10"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7810:0:10"
            },
            "scope": 1055,
            "src": "7742:198:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "8100:479:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 588,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "8118:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8127:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8118:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8130:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8110:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8110:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "8110:56:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 596,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "8194:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 595,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2559,
                            "src": "8184:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8184:17:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 598,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "8205:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8184:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8213:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8176:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8176:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "8176:61:10"
                },
                {
                  "assignments": [
                    604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 604,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "8256:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 644,
                      "src": "8248:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 603,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8248:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "baseExpression": {
                      "id": 605,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "8270:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 607,
                    "indexExpression": {
                      "id": 606,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "8291:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8270:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8248:50:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 610,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "8316:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8331:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8316:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8334:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8308:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8308:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "8308:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 617,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "8386:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 620,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8402:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1055",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1055",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8394:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 618,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8394:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8394:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 622,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "8409:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 616,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2660,
                      "src": "8373:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8373:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "8373:43:10"
                },
                {
                  "expression": {
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 625,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "8426:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 627,
                        "indexExpression": {
                          "id": 626,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "8437:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8426:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$80_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8450:6:10",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "8426:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 629,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "8460:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8426:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "8426:40:10"
                },
                {
                  "assignments": [
                    633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 633,
                      "mutability": "mutable",
                      "name": "totalLocked",
                      "nameLocation": "8484:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 644,
                      "src": "8476:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8476:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 638,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 634,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "8498:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 636,
                      "indexExpression": {
                        "id": 635,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "8509:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8498:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$80_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8522:6:10",
                    "memberName": "locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 75,
                    "src": "8498:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8476:52:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 640,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "8557:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 641,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "8565:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 639,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "8544:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8544:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 643,
                  "nodeType": "EmitStatement",
                  "src": "8539:33:10"
                }
              ]
            },
            "documentation": {
              "id": 580,
              "nodeType": "StructuredDocumentation",
              "src": "7946:87:10",
              "text": " @dev Internal function to lock tokens, callable from other functions"
            },
            "id": 645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "8047:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8067:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "8059:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8059:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8083:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "8075:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8075:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8058:32:10"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8100:0:10"
            },
            "scope": 1055,
            "src": "8038:541:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "8711:48:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 652,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8733:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8737:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8733:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 654,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "8745:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 651,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "8721:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8721:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "8721:31:10"
                }
              ]
            },
            "documentation": {
              "id": 646,
              "nodeType": "StructuredDocumentation",
              "src": "8585:76:10",
              "text": " @dev Validator token unlocking, 30 day withdrawal period."
            },
            "functionSelector": "6e27d889",
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "8675:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8694:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "8686:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8686:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8685:16:10"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8711:0:10"
            },
            "scope": 1055,
            "src": "8666:93:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "8812:1219:10",
              "statements": [
                {
                  "assignments": [
                    664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 664,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "8830:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 756,
                      "src": "8822:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8822:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 669,
                  "initialValue": {
                    "baseExpression": {
                      "id": 665,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "8844:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 668,
                    "indexExpression": {
                      "expression": {
                        "id": 666,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8865:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8869:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8865:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8844:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8822:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 671,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "8894:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8908:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8894:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120726567697374657265642076616c696461746f722e",
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8911:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        },
                        "value": "Not a registered validator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        }
                      ],
                      "id": 670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8886:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8886:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "8886:55:10"
                },
                {
                  "assignments": [
                    679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 679,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "8970:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 756,
                      "src": "8952:27:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 678,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 677,
                          "name": "Validator",
                          "nameLocations": [
                            "8952:9:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80,
                          "src": "8952:9:10"
                        },
                        "referencedDeclaration": 80,
                        "src": "8952:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 683,
                  "initialValue": {
                    "baseExpression": {
                      "id": 680,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "8982:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 682,
                    "indexExpression": {
                      "id": 681,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "8993:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8982:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$80_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8952:53:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 685,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "9024:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 686,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "9034:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9044:6:10",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "9034:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9024:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9052:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9016:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9016:69:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "9016:69:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 693,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "9103:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9112:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9103:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9115:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9095:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9095:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "9095:56:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 699,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "9237:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9247:10:10",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "9237:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9261:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9237:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 754,
                    "nodeType": "Block",
                    "src": "9567:458:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 728,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9684:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9690:9:10",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9684:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 730,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "9703:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9713:10:10",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 77,
                                "src": "9703:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9684:39:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9741:26:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 727,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9659:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9659:122:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 735,
                        "nodeType": "ExpressionStatement",
                        "src": "9659:122:10"
                      },
                      {
                        "expression": {
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 736,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "9796:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 738,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9806:6:10",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75,
                            "src": "9796:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 739,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "9816:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9796:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 741,
                        "nodeType": "ExpressionStatement",
                        "src": "9796:26:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 743,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9842:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9846:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9842:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 745,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "9854:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 742,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2865,
                            "src": "9836:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9836:25:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 747,
                        "nodeType": "ExpressionStatement",
                        "src": "9836:25:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 749,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9943:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9947:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9943:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 751,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "9955:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 748,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "9928:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9928:34:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 753,
                        "nodeType": "EmitStatement",
                        "src": "9923:39:10"
                      }
                    ]
                  },
                  "id": 755,
                  "nodeType": "IfStatement",
                  "src": "9233:792:10",
                  "trueBody": {
                    "id": 726,
                    "nodeType": "Block",
                    "src": "9264:297:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 703,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "9278:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9288:10:10",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77,
                            "src": "9278:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 706,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9301:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9307:9:10",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9301:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 708,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "9319:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9301:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9278:53:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 711,
                        "nodeType": "ExpressionStatement",
                        "src": "9278:53:10"
                      },
                      {
                        "assignments": [
                          713
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 713,
                            "mutability": "mutable",
                            "name": "totalLocked",
                            "nameLocation": "9415:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 726,
                            "src": "9407:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 712,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9407:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 718,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 714,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "9429:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 715,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9439:6:10",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75,
                            "src": "9429:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 716,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "9448:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9429:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9407:47:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 720,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9490:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9494:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9490:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 722,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 679,
                                "src": "9502:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9512:10:10",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77,
                              "src": "9502:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 719,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "9474:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9474:49:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 725,
                        "nodeType": "EmitStatement",
                        "src": "9469:54:10"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "8774:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8795:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "8787:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8787:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8786:16:10"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8812:0:10"
            },
            "scope": 1055,
            "src": "8765:1266:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "10419:861:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 774,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "10433:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 775,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "10457:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10433:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 787,
                  "nodeType": "IfStatement",
                  "src": "10429:145:10",
                  "trueBody": {
                    "id": 786,
                    "nodeType": "Block",
                    "src": "10466:108:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 777,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "10484:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 778,
                            "name": "TAIL_EMISSION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "10499:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 785,
                        "nodeType": "IfStatement",
                        "src": "10480:84:10",
                        "trueBody": {
                          "id": 784,
                          "nodeType": "Block",
                          "src": "10514:50:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 780,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101,
                                  "src": "10532:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 781,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10548:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "10532:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 783,
                              "nodeType": "ExpressionStatement",
                              "src": "10532:17:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 789,
                      "mutability": "mutable",
                      "name": "validatorRewardTotal",
                      "nameLocation": "10592:20:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 868,
                      "src": "10584:28:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 788,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10584:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 790,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "10616:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10631:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "10616:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 793,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10615:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10637:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10615:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10584:56:10"
                },
                {
                  "assignments": [
                    798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "workerRewardTotal",
                      "nameLocation": "10658:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 868,
                      "src": "10650:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10650:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 799,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "10679:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3830",
                            "id": 800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10694:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_80_by_1",
                              "typeString": "int_const 80"
                            },
                            "value": "80"
                          },
                          "src": "10679:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 802,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10678:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10700:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10678:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10650:53:10"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "10775:15:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 868,
                      "src": "10767:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10767:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 812,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 808,
                      "name": "validatorRewardTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 789,
                      "src": "10793:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 809,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "10828:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10845:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10828:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10793:58:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10767:84:10"
                },
                {
                  "body": {
                    "id": 831,
                    "nodeType": "Block",
                    "src": "10916:68:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 825,
                                "name": "_validatorsVoted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 769,
                                "src": "10936:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 827,
                              "indexExpression": {
                                "id": 826,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 814,
                                "src": "10953:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10936:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 828,
                              "name": "validatorReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "10957:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 824,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2865,
                            "src": "10930:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10930:43:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 830,
                        "nodeType": "ExpressionStatement",
                        "src": "10930:43:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 817,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "10882:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 818,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "10886:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10903:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10886:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10882:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 832,
                  "initializationExpression": {
                    "assignments": [
                      814
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 814,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "10875:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "10867:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10867:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 816,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10879:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10867:13:10"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10911:3:10",
                      "subExpression": {
                        "id": 821,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "10911:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 823,
                    "nodeType": "ExpressionStatement",
                    "src": "10911:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "10862:122:10"
                },
                {
                  "body": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "11082:159:10",
                    "statements": [
                      {
                        "assignments": [
                          845
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 845,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "11104:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 863,
                            "src": "11096:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 844,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11096:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 855,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 846,
                                        "name": "_workerCapacities",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 764,
                                        "src": "11115:17:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 848,
                                      "indexExpression": {
                                        "id": 847,
                                        "name": "w",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 834,
                                        "src": "11133:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11115:20:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 849,
                                      "name": "workerRewardTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 798,
                                      "src": "11138:17:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11115:40:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 851,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11114:42:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 852,
                                "name": "_totalCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 766,
                                "src": "11175:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11114:75:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 854,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11113:77:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11096:94:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 857,
                                "name": "_workers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 761,
                                "src": "11210:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 859,
                              "indexExpression": {
                                "id": 858,
                                "name": "w",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 834,
                                "src": "11219:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11210:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 860,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "11223:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 856,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2865,
                            "src": "11204:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11204:26:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 862,
                        "nodeType": "ExpressionStatement",
                        "src": "11204:26:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 837,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 834,
                      "src": "11056:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 838,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "11060:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11069:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11060:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11056:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 864,
                  "initializationExpression": {
                    "assignments": [
                      834
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 834,
                        "mutability": "mutable",
                        "name": "w",
                        "nameLocation": "11049:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "11041:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11041:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 836,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11053:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11041:13:10"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11077:3:10",
                      "subExpression": {
                        "id": 841,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "11077:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 843,
                    "nodeType": "ExpressionStatement",
                    "src": "11077:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "11036:205:10"
                },
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11251:22:10",
                    "subExpression": {
                      "id": 865,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "11251:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "11251:22:10"
                }
              ]
            },
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "10037:166:10",
              "text": " @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n Updates the emission rate and halving accordingly"
            },
            "functionSelector": "a3273d22",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 772,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 771,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "10397:21:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153,
                  "src": "10397:21:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "10397:21:10"
              }
            ],
            "name": "mintTokens",
            "nameLocation": "10217:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "10254:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "10237:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 759,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10237:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 760,
                    "nodeType": "ArrayTypeName",
                    "src": "10237:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "_workerCapacities",
                  "nameLocation": "10289:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "10272:34:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 762,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10272:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 763,
                    "nodeType": "ArrayTypeName",
                    "src": "10272:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "10324:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "10316:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10316:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "10365:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "10348:33:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 767,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10348:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 768,
                    "nodeType": "ArrayTypeName",
                    "src": "10348:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10227:160:10"
            },
            "returnParameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10419:0:10"
            },
            "scope": 1055,
            "src": "10208:1072:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "11455:108:10",
              "statements": [
                {
                  "assignments": [
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 881,
                      "mutability": "mutable",
                      "name": "jobValidators",
                      "nameLocation": "11482:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 889,
                      "src": "11465:30:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 879,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11465:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 880,
                        "nodeType": "ArrayTypeName",
                        "src": "11465:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 886,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 882,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "11498:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$94_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 884,
                      "indexExpression": {
                        "id": 883,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "11503:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11498:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$94_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11512:14:10",
                    "memberName": "seedValidators",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 85,
                    "src": "11498:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11465:61:10"
                },
                {
                  "expression": {
                    "id": 887,
                    "name": "jobValidators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 881,
                    "src": "11543:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 876,
                  "id": 888,
                  "nodeType": "Return",
                  "src": "11536:20:10"
                }
              ]
            },
            "functionSelector": "bc1d82a1",
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobValidators",
            "nameLocation": "11366:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "11400:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "11392:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11392:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11382:31:10"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "11437:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 873,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11437:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 874,
                    "nodeType": "ArrayTypeName",
                    "src": "11437:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11436:18:10"
            },
            "scope": 1055,
            "src": "11357:206:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 930,
              "nodeType": "Block",
              "src": "11678:387:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 902,
                          "name": "_validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "11696:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 903,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "11711:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11696:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642049442e",
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11731:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        },
                        "value": "Invalid ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        }
                      ],
                      "id": 901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11688:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11688:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "11688:57:10"
                },
                {
                  "assignments": [
                    910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 910,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "11772:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 930,
                      "src": "11755:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$80_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 909,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 908,
                          "name": "Validator",
                          "nameLocations": [
                            "11755:9:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80,
                          "src": "11755:9:10"
                        },
                        "referencedDeclaration": 80,
                        "src": "11755:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$80_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 914,
                  "initialValue": {
                    "baseExpression": {
                      "id": 911,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "11785:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 913,
                    "indexExpression": {
                      "id": 912,
                      "name": "_validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "11796:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11785:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$80_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11755:54:10"
                },
                {
                  "assignments": [
                    916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 916,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "11824:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 930,
                      "src": "11819:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 915,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11819:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 922,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 919,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "11893:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$80_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11904:16:10",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73,
                        "src": "11893:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 917,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "11835:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11862:17:10",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3104,
                      "src": "11835:44:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11835:95:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11819:111:10"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 923,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "11961:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 924,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "11983:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$80_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 925,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11994:13:10",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71,
                        "src": "11983:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 926,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "12021:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$80_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 927,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12032:16:10",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73,
                        "src": "12021:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 928,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11947:111:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(bool,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 900,
                  "id": 929,
                  "nodeType": "Return",
                  "src": "11940:118:10"
                }
              ]
            },
            "functionSelector": "b7797537",
            "id": 931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "11578:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "_validatorId",
                  "nameLocation": "11612:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11604:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11604:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11594:36:10"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11654:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11654:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11660:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11660:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11669:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11669:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11653:24:10"
            },
            "scope": 1055,
            "src": "11569:496:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 956,
              "nodeType": "Block",
              "src": "12170:195:10",
              "statements": [
                {
                  "assignments": [
                    939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 939,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "12188:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 956,
                      "src": "12180:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 938,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12180:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 943,
                  "initialValue": {
                    "baseExpression": {
                      "id": 940,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "12202:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 942,
                    "indexExpression": {
                      "id": 941,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "12223:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12202:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12180:60:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 945,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "12258:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12272:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12258:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12275:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 944,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12250:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12250:53:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "12250:53:10"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 951,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "12321:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 953,
                      "indexExpression": {
                        "id": 952,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "12332:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12321:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$80_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12345:13:10",
                    "memberName": "publicKeyHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 71,
                    "src": "12321:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 937,
                  "id": 955,
                  "nodeType": "Return",
                  "src": "12314:44:10"
                }
              ]
            },
            "functionSelector": "62fb00fc",
            "id": 957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorBytes",
            "nameLocation": "12080:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "12115:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 957,
                  "src": "12107:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12107:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12097:40:10"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 957,
                  "src": "12161:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12161:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12160:9:10"
            },
            "scope": 1055,
            "src": "12071:294:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "12427:39:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 962,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "12444:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12458:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12444:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 961,
                  "id": 965,
                  "nodeType": "Return",
                  "src": "12437:22:10"
                }
              ]
            },
            "functionSelector": "b5cb15f7",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCount",
            "nameLocation": "12380:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12392:2:10"
            },
            "returnParameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "12418:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12418:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12417:9:10"
            },
            "scope": 1055,
            "src": "12371:95:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 976,
              "nodeType": "Block",
              "src": "12533:46:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 972,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "12550:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12571:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12550:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 971,
                  "id": 975,
                  "nodeType": "Return",
                  "src": "12543:29:10"
                }
              ]
            },
            "functionSelector": "7071688a",
            "id": 977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorCount",
            "nameLocation": "12481:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12498:2:10"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 977,
                  "src": "12524:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12524:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12523:9:10"
            },
            "scope": 1055,
            "src": "12472:107:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 986,
              "nodeType": "Block",
              "src": "12652:69:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 982,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "12669:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12696:16:10",
                      "memberName": "getNumValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3109,
                      "src": "12669:43:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12669:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 981,
                  "id": 985,
                  "nodeType": "Return",
                  "src": "12662:52:10"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "12594:23:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12617:2:10"
            },
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "12643:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12643:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12642:9:10"
            },
            "scope": 1055,
            "src": "12585:136:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "12786:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 992,
                    "name": "emissionRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 101,
                    "src": "12803:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 991,
                  "id": 993,
                  "nodeType": "Return",
                  "src": "12796:19:10"
                }
              ]
            },
            "functionSelector": "c0a77da9",
            "id": 995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmissionRate",
            "nameLocation": "12736:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12751:2:10"
            },
            "returnParameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "12777:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12777:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12776:9:10"
            },
            "scope": 1055,
            "src": "12727:95:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "12881:42:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1000,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "12898:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartnodesCore_$1055",
                          "typeString": "contract SmartnodesCore"
                        }
                      },
                      "id": 1001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12903:11:10",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2545,
                      "src": "12898:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12898:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 999,
                  "id": 1003,
                  "nodeType": "Return",
                  "src": "12891:25:10"
                }
              ]
            },
            "functionSelector": "6c9c2faf",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSupply",
            "nameLocation": "12837:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12846:2:10"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "12872:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12872:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12871:9:10"
            },
            "scope": 1055,
            "src": "12828:95:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1025,
              "nodeType": "Block",
              "src": "12999:119:10",
              "statements": [
                {
                  "assignments": [
                    1013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1013,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "13017:3:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1025,
                      "src": "13009:11:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13009:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1017,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1014,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "13023:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1016,
                    "indexExpression": {
                      "id": 1015,
                      "name": "validatorAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "13044:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13023:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13009:49:10"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1018,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "13075:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$80_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 1020,
                        "indexExpression": {
                          "id": 1019,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1013,
                          "src": "13086:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13075:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$80_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13091:6:10",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "13075:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1022,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "13101:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13075:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1011,
                  "id": 1024,
                  "nodeType": "Return",
                  "src": "13068:43:10"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 1026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "12938:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "validatorAddr",
                  "nameLocation": "12955:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "12947:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12947:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12946:23:10"
            },
            "returnParameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "12993:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12993:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12992:6:10"
            },
            "scope": 1055,
            "src": "12929:189:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1036,
              "nodeType": "Block",
              "src": "13189:74:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1032,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "13206:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13233:21:10",
                      "memberName": "getSelectedValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3115,
                      "src": "13206:48:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13206:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1031,
                  "id": 1035,
                  "nodeType": "Return",
                  "src": "13199:57:10"
                }
              ]
            },
            "functionSelector": "4966d086",
            "id": 1037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposees",
            "nameLocation": "13133:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13145:2:10"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "13171:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1028,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13171:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1029,
                    "nodeType": "ArrayTypeName",
                    "src": "13171:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13170:18:10"
            },
            "scope": 1055,
            "src": "13124:139:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "13385:61:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1049,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "13402:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3174",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13429:8:10",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3138,
                      "src": "13402:35:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13402:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,address[] memory)"
                    }
                  },
                  "functionReturnParameters": 1048,
                  "id": 1052,
                  "nodeType": "Return",
                  "src": "13395:44:10"
                }
              ]
            },
            "functionSelector": "1865c57d",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "13278:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13286:2:10"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "13336:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13336:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "13345:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13345:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "13354:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13354:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "13363:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1045,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13363:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1046,
                    "nodeType": "ArrayTypeName",
                    "src": "13363:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13335:45:10"
            },
            "scope": 1055,
            "src": "13269:177:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1056,
        "src": "271:13177:10",
        "usedErrors": [],
        "usedEvents": [
          29,
          35,
          41,
          50,
          56,
          62,
          3673,
          3682
        ]
      }
    ],
    "src": "32:13417:10"
  },
  "bytecode": "",
  "bytecodeSha1": "7e31f75dffba33a4e2cdb7114dcfb6a4e7c67971",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20Upgradeable.__ERC20_init": {
          "146": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "144": [
            2369,
            2382,
            true
          ],
          "145": [
            2369,
            2417,
            true
          ]
        }
      },
      "10": {
        "SmartnodesCore._lockTokens": {
          "132": [
            8118,
            8128,
            true
          ],
          "133": [
            8184,
            8211,
            true
          ],
          "134": [
            8316,
            8332,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "117": [
            7455,
            7505,
            true
          ]
        },
        "SmartnodesCore.createUser": {
          "129": [
            4406,
            4449,
            true
          ]
        },
        "SmartnodesCore.createValidator": {
          "118": [
            5002,
            5039,
            true
          ],
          "119": [
            5122,
            5158,
            false
          ],
          "120": [
            5162,
            5187,
            true
          ]
        },
        "SmartnodesCore.getValidatorBytes": {
          "121": [
            12258,
            12273,
            true
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "130": [
            11696,
            11729,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "127": [
            10433,
            10464,
            false
          ],
          "128": [
            10484,
            10512,
            false
          ]
        },
        "SmartnodesCore.requestJob": {
          "115": [
            6088,
            6126,
            false
          ],
          "116": [
            6395,
            6429,
            true
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "131": [
            3943,
            3981,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "122": [
            8894,
            8909,
            true
          ],
          "123": [
            9024,
            9050,
            true
          ],
          "124": [
            9103,
            9113,
            true
          ],
          "125": [
            9237,
            9262,
            false
          ],
          "126": [
            9684,
            9723,
            true
          ]
        }
      },
      "13": {},
      "2": {
        "ERC20Upgradeable._approve": {
          "136": [
            10591,
            10610,
            true
          ],
          "137": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "143": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "138": [
            11303,
            11340,
            false
          ],
          "139": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "140": [
            7951,
            7969,
            true
          ],
          "141": [
            8029,
            8045,
            true
          ],
          "142": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "135": [
            7152,
            7187,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {
        "Initializable._isConstructor": {
          "54": [
            3101,
            3153
          ]
        }
      },
      "10": {
        "SmartnodesCore._lockTokens": {
          "102": [
            8110,
            8166
          ],
          "103": [
            8176,
            8237
          ],
          "104": [
            8308,
            8362
          ],
          "105": [
            8373,
            8416
          ],
          "106": [
            8426,
            8466
          ],
          "107": [
            8539,
            8572
          ]
        },
        "SmartnodesCore.completeJob": {
          "26": [
            7447,
            7506
          ],
          "27": [
            7517,
            7549
          ],
          "28": [
            7559,
            7589
          ],
          "29": [
            7644,
            7687
          ],
          "30": [
            7698,
            7729
          ]
        },
        "SmartnodesCore.createUser": {
          "77": [
            4385,
            4499
          ],
          "78": [
            4510,
            4658
          ],
          "79": [
            4669,
            4715
          ],
          "80": [
            4725,
            4738
          ]
        },
        "SmartnodesCore.createValidator": {
          "32": [
            4981,
            5090
          ],
          "33": [
            5101,
            5240
          ],
          "34": [
            5297,
            5523
          ],
          "35": [
            5534,
            5587
          ],
          "36": [
            5597,
            5648
          ],
          "37": [
            5693,
            5728
          ],
          "38": [
            5739,
            5759
          ]
        },
        "SmartnodesCore.disputeJob": {
          "84": [
            7861,
            7881
          ],
          "85": [
            7891,
            7933
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "24": [
            12662,
            12714
          ]
        },
        "SmartnodesCore.getEmissionRate": {
          "4": [
            12796,
            12815
          ]
        },
        "SmartnodesCore.getProposees": {
          "31": [
            13199,
            13256
          ]
        },
        "SmartnodesCore.getState": {
          "10": [
            13395,
            13439
          ]
        },
        "SmartnodesCore.getSupply": {
          "41": [
            12891,
            12916
          ]
        },
        "SmartnodesCore.getUserCount": {
          "81": [
            12437,
            12459
          ]
        },
        "SmartnodesCore.getValidatorBytes": {
          "39": [
            12250,
            12303
          ],
          "40": [
            12314,
            12358
          ]
        },
        "SmartnodesCore.getValidatorCount": {
          "43": [
            12543,
            12572
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "82": [
            11688,
            11745
          ],
          "83": [
            11940,
            12058
          ]
        },
        "SmartnodesCore.initialize": {
          "55": [
            3089,
            3122
          ],
          "56": [
            3206,
            3221
          ],
          "57": [
            3231,
            3245
          ],
          "58": [
            3255,
            3277
          ],
          "59": [
            3326,
            3347
          ],
          "60": [
            3408,
            3431
          ],
          "61": [
            3485,
            3503
          ],
          "62": [
            3562,
            3586
          ],
          "63": [
            3609,
            3633
          ],
          "64": [
            3706,
            3741
          ],
          "65": [
            3687,
            3690
          ],
          "66": [
            3790,
            3807
          ],
          "67": [
            3817,
            3834
          ]
        },
        "SmartnodesCore.isLocked": {
          "2": [
            13068,
            13111
          ]
        },
        "SmartnodesCore.lockTokens": {
          "42": [
            8721,
            8752
          ]
        },
        "SmartnodesCore.mintTokens": {
          "68": [
            10532,
            10549
          ],
          "69": [
            10930,
            10973
          ],
          "70": [
            10911,
            10914
          ],
          "71": [
            11204,
            11230
          ],
          "72": [
            11077,
            11080
          ],
          "73": [
            11251,
            11273
          ]
        },
        "SmartnodesCore.requestJob": {
          "11": [
            6209,
            6229
          ],
          "12": [
            6247,
            6287
          ],
          "13": [
            6322,
            6377
          ],
          "14": [
            6387,
            6454
          ],
          "15": [
            6801,
            6860
          ],
          "16": [
            6782,
            6785
          ],
          "17": [
            6926,
            7155
          ],
          "18": [
            7166,
            7226
          ],
          "19": [
            7236,
            7248
          ],
          "20": [
            7259,
            7279
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "86": [
            3922,
            4037
          ],
          "87": [
            4047,
            4113
          ],
          "88": [
            4123,
            4166
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "44": [
            8886,
            8941
          ],
          "45": [
            9016,
            9085
          ],
          "46": [
            9095,
            9151
          ],
          "47": [
            9278,
            9331
          ],
          "48": [
            9469,
            9523
          ],
          "49": [
            9659,
            9781
          ],
          "50": [
            9796,
            9822
          ],
          "51": [
            9836,
            9861
          ],
          "52": [
            9923,
            9962
          ]
        }
      },
      "13": {},
      "2": {
        "ERC20Upgradeable.__ERC20_init": {
          "112": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "113": [
            2381,
            2394
          ],
          "114": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "89": [
            10583,
            10651
          ],
          "90": [
            10661,
            10729
          ],
          "91": [
            10740,
            10776
          ],
          "92": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "108": [
            8827,
            8892
          ],
          "109": [
            8963,
            8985
          ],
          "110": [
            8995,
            9023
          ],
          "111": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "93": [
            11356,
            11424
          ],
          "94": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "95": [
            7943,
            8011
          ],
          "96": [
            8021,
            8085
          ],
          "97": [
            8192,
            8264
          ],
          "98": [
            8298,
            8336
          ],
          "99": [
            8356,
            8379
          ],
          "100": [
            8390,
            8421
          ],
          "101": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "5": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "8": [
            4907,
            4939
          ],
          "9": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "74": [
            7144,
            7229
          ],
          "75": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "25": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "6": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "53": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "76": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "21": [
            5712,
            5750
          ],
          "22": [
            5760,
            5787
          ],
          "23": [
            5797,
            5808
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "7": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061030c5760003560e01c80637c4053251161019d578063bc1d82a1116100e9578063d057fc19116100a2578063d8df5dc11161007c578063d8df5dc1146107f9578063dd62ed3e14610802578063f0c37a591461083b578063f79621bd1461084457600080fd5b8063d057fc19146107a7578063d2d49c4b146107c7578063d3eece97146107d057600080fd5b8063bc1d82a114610703578063c0a77da914610716578063c5ab22411461071e578063c8df245a14610727578063cdf64a7614610730578063cea6ab981461074357600080fd5b8063a457c2d711610156578063b115f50d11610130578063b115f50d146106a6578063b5cb15f7146106af578063b7797537146106b7578063ba3f5443146106f057600080fd5b8063a457c2d71461066d578063a9059cbb14610680578063abf7bfd81461069357600080fd5b80637c4053251461061a5780638f029d5e1461062d57806395d89b411461063657806396afc4501461063e578063a224cee714610647578063a3273d221461065a57600080fd5b806338e562611161025c5780634a4fbeec116102155780636c9c2faf116101ef5780636c9c2faf146105ce5780636e27d889146105d65780637071688a146105e957806370a08231146105f157600080fd5b80634a4fbeec1461057257806350355d76146105b257806362fb00fc146105bb57600080fd5b806338e562611461048c57806338ed7cfc146104cd578063395093511461052257806343a8d914146105355780634966d08614610548578063497dfe631461055d57600080fd5b806320d3a0b4116102c957806327764547116102a357806327764547146103d8578063313ce567146103f857806335aa2e441461040757806337deea701461048457600080fd5b806320d3a0b4146103a957806321b0908b146103b257806323b872dd146103c557600080fd5b806306fdde031461031157806308ac52561461032f578063095ea7b31461034657806318160ddd146103695780631865c57d146103715780631d4e779314610389575b600080fd5b610319610857565b604051610326919061223a565b60405180910390f35b610338606c5481565b604051908152602001610326565b61035961035436600461229e565b6108e9565b6040519015158152602001610326565b603554610338565b610379610903565b604051610326949392919061230f565b61039c61039736600461233e565b610993565b60405161032691906123c1565b61033860705481565b6103386103c0366004612405565b610d12565b6103596103d336600461241e565b610d33565b6103386103e636600461245f565b60796020526000908152604090205481565b60405160128152602001610326565b610451610415366004612405565b6075602052600090815260409020805460018201546002830154600384015460049094015492936001600160a01b039092169290919060ff1685565b604080519586526001600160a01b03909416602086015292840191909152606083015260ff16608082015260a001610326565b610338610d57565b6104b561049a366004612405565b6074602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610326565b6105036104db366004612405565b607660205260009081526040902080546004909101546001600160a01b039091169060ff1682565b604080516001600160a01b039093168352901515602083015201610326565b61035961053036600461229e565b610dca565b61039c610543366004612566565b610e09565b610550610f33565b60405161032691906125ad565b61057061056b3660046125c0565b610fa5565b005b61035961058036600461245f565b6001600160a01b0316600090815260796020908152604080832054606f54908452607590925290912060020154101590565b61033860695481565b6103386105c936600461245f565b611143565b6103386111ba565b6105706105e4366004612405565b6111fa565b610338611207565b6103386105ff36600461245f565b6001600160a01b031660009081526033602052604090205490565b610570610628366004612405565b611218565b61033860675481565b61031961142a565b610338606e5481565b6105706106553660046125e2565b611439565b61057061066836600461261f565b6115bc565b61035961067b36600461229e565b61172e565b61035961068e36600461229e565b6117c0565b6105706106a1366004612405565b6117ce565b61033860715481565b6103386118b3565b6106ca6106c5366004612405565b6118c4565b60408051931515845260208401929092526001600160a01b031690820152606001610326565b6105706106fe366004612405565b6119d9565b610550610711366004612405565b611a57565b606e54610338565b610338606b5481565b610338606d5481565b61057061073e36600461245f565b611ac6565b61077f610751366004612405565b6072602052600090815260409020805460018201546002909201546001600160a01b03909116919060ff1683565b604080516001600160a01b039094168452602084019290925260ff1690820152606001610326565b6103386107b536600461245f565b60786020526000908152604090205481565b610338606a5481565b6104b56107de366004612405565b6073602052600090815260409020546001600160a01b031681565b610338606f5481565b610338610810366004612705565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61033860685481565b6066546104b5906001600160a01b031681565b6060603680546108669061273e565b80601f01602080910402602001604051908101604052809291908181526020018280546108929061273e565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b5050505050905090565b6000336108f7818585611b4b565b60019150505b92915050565b60008060006060606560009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261098591908101906127e0565b935093509350935090919293565b6066546060906001600160a01b031633146109d857336000908152607860205260409020546109d8576109c5856117ce565b3360009081526078602052604090205494505b84610a215760405162461bcd60e51b815260206004820152601460248201527355736572206e6f7420726567697374657265642160601b60448201526064015b60405180910390fd5b6000848152607660205260409020546001600160a01b031615610a7d5760405162461bcd60e51b81526020600482015260146024820152732537b11030b63932b0b23c9031b932b0ba32b21760611b6044820152606401610a18565b6065546040516371547b7960e11b8152600160048201526000916001600160a01b03169063e2a8f6f290602401600060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aef919081019061282e565b604080516001808252818301909252919250600091906020808301908036833701905050905060005b8251811015610b855760796000848381518110610b3757610b37612863565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610b7257610b72612863565b6020908102919091010152600101610b18565b506040805160a081018252338152602081018490529081018567ffffffffffffffff811115610bb657610bb6612483565b604051908082528060200260200182016040528015610bdf578160200160208202803683370190505b50815260200186868080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509385525050600160209384018190528a8352607684526040909220845181546001600160a01b0319166001600160a01b039091161781558484015180519194610c6294860193500190612185565b5060408201518051610c7e916002840191602090910190612185565b5060608201518051610c9a9160038401916020909101906121ea565b50608091909101516004909101805460ff191691151591909117905560405186907f5dd5aff7b55a6d23db5800ae74fafb29f5f00976a85526c852c81900d14cf3e790610cea9042908690612879565b60405180910390a260698054906000610d02836128a8565b9091555090979650505050505050565b60778181548110610d2257600080fd5b600091825260209091200154905081565b600033610d41858285611c6f565b610d4c858585611d01565b506001949350505050565b606554604080516348f1712960e11b815290516000926001600160a01b0316916391e2e2529160048083019260209291908290030181865afa158015610da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc591906128c1565b905090565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906108f79082908690610e049087906128da565b611b4b565b6066546060906001600160a01b03163314610e365760405162461bcd60e51b8152600401610a18906128ed565b600083815260766020526040902060030154825114610e5457600080fd5b60008381526076602090815260409091208351610e7992600290920191850190612185565b5060008381526076602052604090819020600401805460ff191690555183907f9b5ed714c31dfcb1a9397710b6fc1842f37d94ab5dc0ccb528d9a2c97ea76f2a90610ec79042815260200190565b60405180910390a260008381526076602090815260409182902060030180548351818402810184019094528084529091830182828015610f2657602002820191906000526020600020905b815481526020019060010190808311610f12575b5050505050905092915050565b6065546040805163fbcca27360e01b815290516060926001600160a01b03169163fbcca2739160048083019260009291908290030181865afa158015610f7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dc5919081019061282e565b33600090815260796020526040902054156110025760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220616c7265616479206578697374732e000000000000006044820152606401610a18565b3360009081526033602052604090205481111580156110235750606f548110155b61106f5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e00000000006044820152606401610a18565b6040805160a081018252838152336020808301828152606f8054858701908152600060608701818152603260808901908152606780548452607588528a842099518a55955160018a0180546001600160a01b039092166001600160a01b0319928316179055935160028a015590516003890155516004909701805460ff90981660ff199098169790971790965591548486526079845286862055878552607490925293909220805490931681179092555461112a9190611ecf565b6067805490600061113a836128a8565b91905055505050565b6001600160a01b038116600090815260796020526040812054806111a55760405162461bcd60e51b81526020600482015260196024820152782b30b634b230ba37b9103237b2b9903737ba1032bc34b9ba1760391b6044820152606401610a18565b60009081526075602052604090205492915050565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da1573d6000803e3d6000fd5b6112043382611ecf565b50565b60006001606754610dc59190612933565b33600090815260796020526040902054806112755760405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120726567697374657265642076616c696461746f722e00000000006044820152606401610a18565b600081815260756020526040902060028101548311156112d75760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e00006044820152606401610a18565b600083116112f75760405162461bcd60e51b8152600401610a1890612946565b80600301546000036113775760705461131090426128da565b60038201556002810154600090611328908590612933565b9050336001600160a01b03167f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2836003015460405161136991815260200190565b60405180910390a250505050565b80600301544210156113cb5760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e00000000000000006044820152606401610a18565b828160020160008282546113df9190612933565b909155506113ef9050338461203a565b60405183815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958889060200160405180910390a25b505050565b6060603780546108669061273e565b600054610100900460ff166114545760005460ff1615611458565b303b155b6114bb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610a18565b600054610100900460ff161580156114dd576000805461ffff19166101011790555b6115246040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250612119565b600160688190556069819055606755680de0b6b3a764000000606e5569152d02c7e14af6800000606f556303205b7e606d5562127500607055600060718190555b825181101561159b5761159383828151811061158357611583612863565b6020026020010151606f5461203a565b600101611565565b506001606b556005606c5580156115b8576000805461ff00191690555b5050565b6066546001600160a01b031633146115e65760405162461bcd60e51b8152600401610a18906128ed565b606d546071541061161c57671bc16d674ec80000606e54111561161c576002606e60008282546116169190612987565b90915550505b60006064606e54601461162f91906129a9565b6116399190612987565b905060006064606e54605061164e91906129a9565b6116589190612987565b905060008351836116699190612987565b905060005b84518110156116a25761169a85828151811061168c5761168c612863565b60200260200101518361203a565b60010161166e565b5060005b875181101561170f57600086848984815181106116c5576116c5612863565b60200260200101516116d791906129a9565b6116e19190612987565b90506117068983815181106116f8576116f8612863565b60200260200101518261203a565b506001016116a6565b5060718054906000611720836128a8565b919050555050505050505050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156117b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610a18565b610d4c8286868403611b4b565b6000336108f7818585611d01565b336000908152607860205260409020541561182b5760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642e00000000000000006044820152606401610a18565b604080516060810182523380825260208083018581526032848601908152600087815260728452868120955186546001600160a01b0319166001600160a01b0390911617865591516001860155516002909401805460ff191660ff909516949094179093559082526078905290812082905560688054916118ab836128a8565b919050555050565b60006001606854610dc59190612933565b600080600060675484106119085760405162461bcd60e51b815260206004820152600b60248201526a24b73b30b634b21024a21760a91b6044820152606401610a18565b6000848152607560209081526040808320815160a0810183528154815260018201546001600160a01b039081169482018590526002830154828501526003830154606083015260049283015460ff1660808301526065549351631015428760e21b815292830194909452939291909116906340550a1c90602401602060405180830381865afa15801561199f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c391906129c0565b8251602090930151909792965094509092505050565b6066546001600160a01b03163314611a035760405162461bcd60e51b8152600401610a18906128ed565b60008181526076602090815260409182902060048101805460ff19169055915142815283917f6e04aa702f9af7a9a398f10d27918152df25ac0cdc6d74321b9f7496374387a7910160405180910390a25050565b6000818152607660209081526040808320600101805482518185028101850190935280835260609493830182828015611ab957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a9b575b5093979650505050505050565b6066546001600160a01b031615611b1f5760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e00006044820152606401610a18565b606580546001600160a01b039092166001600160a01b0319928316811790915560668054909216179055565b6001600160a01b038316611bad5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610a18565b6001600160a01b038216611c0e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610a18565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611cfb5781811015611cee5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610a18565b611cfb8484848403611b4b565b50505050565b6001600160a01b038316611d655760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610a18565b6001600160a01b038216611dc75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610a18565b6001600160a01b03831660009081526033602052604090205481811015611e3f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610a18565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611e769084906128da565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611ec291815260200190565b60405180910390a3611cfb565b60008111611eef5760405162461bcd60e51b8152600401610a1890612946565b80611f0f836001600160a01b031660009081526033602052604090205490565b1015611f555760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610a18565b6001600160a01b03821660009081526079602052604081205490819003611fba5760405162461bcd60e51b81526020600482015260196024820152782b30b634b230ba37b9103237b2b9903737ba1032bc34b9ba1760391b6044820152606401610a18565b611fc5833084610d33565b5060008181526075602052604081206002018054849290611fe79084906128da565b90915550506000818152607560209081526040918290206002015491518481526001600160a01b038616917fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c9101611369565b6001600160a01b0382166120905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610a18565b80603560008282546120a291906128da565b90915550506001600160a01b038216600090815260336020526040812080548392906120cf9084906128da565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff166121405760405162461bcd60e51b8152600401610a18906129e2565b6115b88282600054610100900460ff1661216c5760405162461bcd60e51b8152600401610a18906129e2565b60366121788382612a7d565b5060376114258282612a7d565b8280548282559060005260206000209081019282156121da579160200282015b828111156121da57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906121a5565b506121e6929150612225565b5090565b8280548282559060005260206000209081019282156121da579160200282015b828111156121da57825182559160200191906001019061220a565b5b808211156121e65760008155600101612226565b60006020808352835180602085015260005b818110156122685785810183015185820160400152820161224c565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461120457600080fd5b600080604083850312156122b157600080fd5b82356122bc81612289565b946020939093013593505050565b60008151808452602080850194506020840160005b838110156123045781516001600160a01b0316875295820195908201906001016122df565b509495945050505050565b84815283602082015282604082015260806060820152600061233460808301846122ca565b9695505050505050565b6000806000806060858703121561235457600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561237a57600080fd5b818701915087601f83011261238e57600080fd5b81358181111561239d57600080fd5b8860208260051b85010111156123b257600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b818110156123f9578351835292840192918401916001016123dd565b50909695505050505050565b60006020828403121561241757600080fd5b5035919050565b60008060006060848603121561243357600080fd5b833561243e81612289565b9250602084013561244e81612289565b929592945050506040919091013590565b60006020828403121561247157600080fd5b813561247c81612289565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156124c2576124c2612483565b604052919050565b600067ffffffffffffffff8211156124e4576124e4612483565b5060051b60200190565b600082601f8301126124ff57600080fd5b8135602061251461250f836124ca565b612499565b8083825260208201915060208460051b87010193508684111561253657600080fd5b602086015b8481101561255b57803561254e81612289565b835291830191830161253b565b509695505050505050565b6000806040838503121561257957600080fd5b82359150602083013567ffffffffffffffff81111561259757600080fd5b6125a3858286016124ee565b9150509250929050565b60208152600061247c60208301846122ca565b600080604083850312156125d357600080fd5b50508035926020909101359150565b6000602082840312156125f457600080fd5b813567ffffffffffffffff81111561260b57600080fd5b612617848285016124ee565b949350505050565b6000806000806080858703121561263557600080fd5b843567ffffffffffffffff8082111561264d57600080fd5b612659888389016124ee565b955060209150818701358181111561267057600080fd5b8701601f8101891361268157600080fd5b803561268f61250f826124ca565b81815260059190911b8201840190848101908b8311156126ae57600080fd5b928501925b828410156126cc578335825292850192908501906126b3565b97505050506040870135935060608701359150808211156126ec57600080fd5b506126f9878288016124ee565b91505092959194509250565b6000806040838503121561271857600080fd5b823561272381612289565b9150602083013561273381612289565b809150509250929050565b600181811c9082168061275257607f821691505b60208210810361277257634e487b7160e01b600052602260045260246000fd5b50919050565b600082601f83011261278957600080fd5b8151602061279961250f836124ca565b8083825260208201915060208460051b8701019350868411156127bb57600080fd5b602086015b8481101561255b5780516127d381612289565b83529183019183016127c0565b600080600080608085870312156127f657600080fd5b845193506020850151925060408501519150606085015167ffffffffffffffff81111561282257600080fd5b6126f987828801612778565b60006020828403121561284057600080fd5b815167ffffffffffffffff81111561285757600080fd5b61261784828501612778565b634e487b7160e01b600052603260045260246000fd5b82815260406020820152600061261760408301846122ca565b634e487b7160e01b600052601160045260246000fd5b6000600182016128ba576128ba612892565b5060010190565b6000602082840312156128d357600080fd5b5051919050565b808201808211156108fd576108fd612892565b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b818103818111156108fd576108fd612892565b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b6000826129a457634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176108fd576108fd612892565b6000602082840312156129d257600080fd5b8151801515811461247c57600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115611425576000816000526020600020601f850160051c81016020861015612a565750805b601f850160051c820191505b81811015612a7557828155600101612a62565b505050505050565b815167ffffffffffffffff811115612a9757612a97612483565b612aab81612aa5845461273e565b84612a2d565b602080601f831160018114612ae05760008415612ac85750858301515b600019600386901b1c1916600185901b178555612a75565b600085815260208120601f198616915b82811015612b0f57888601518255948401946001909101908401612af0565b5085821015612b2d5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212209acf261ebba31596c46cc2f80937b3f7a988bda9ad97e5cb38930fc6cc74157864736f6c63430008190033",
  "deployedSourceMap": "271:13177:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:28:10;;;;;;;;;713:25:14;;;701:2;686:18;678:28:10;567:177:14;4770:197:2;;;;;;:::i;:::-;;:::i;:::-;;;1370:14:14;;1363:22;1345:41;;1333:2;1318:18;4770:197:2;1205:187:14;3581:106:2;3668:12;;3581:106;;13269:177:10;;;:::i;:::-;;;;;;;;;;:::i;5822:1464::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2268:27::-;;;;;;2640;;;;;;:::i;:::-;;:::i;5529:286:2:-;;;;;;:::i;:::-;;:::i;2756:55:10:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3430:91:2;;;3512:2;4781:36:14;;4769:2;4754:18;3430:91:2;4639:184:14;2546:47:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2546:47:10;;;;;;;;;;;;;;;5083:25:14;;;-1:-1:-1;;;;;5144:32:14;;;5139:2;5124:18;;5117:60;5193:18;;;5186:34;;;;5251:2;5236:18;;5229:34;5312:4;5300:17;5294:3;5279:19;;5272:46;5070:3;5055:19;2546:47:10;4828:496:14;12585:136:10;;;:::i;2483:57::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2483:57:10;;;;;;-1:-1:-1;;;;;5678:32:14;;;5660:51;;5648:2;5633:18;2483:57:10;5514:203:14;2599:35:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2599:35:10;;;;;;;;;;;;-1:-1:-1;;;;;5908:32:14;;;5890:51;;5984:14;;5977:22;5972:2;5957:18;;5950:50;5863:18;2599:35:10;5722:284:14;6210:236:2;;;;;;:::i;:::-;;:::i;7292:444:10:-;;;;;;:::i;:::-;;:::i;13124:139::-;;;:::i;:::-;;;;;;;:::i;4870:896::-;;;;;;:::i;:::-;;:::i;:::-;;12929:189;;;;;;:::i;:::-;-1:-1:-1;;;;;13023:35:10;12993:4;13023:35;;;:20;:35;;;;;;;;;13101:10;;13075:15;;;:10;:15;;;;;;:22;;;:36;;;12929:189;576:25;;;;;;12071:294;;;;;;:::i;:::-;;:::i;12828:95::-;;;:::i;8666:93::-;;;;;;:::i;:::-;;:::i;12472:107::-;;;:::i;3745:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;8765:1266:10;;;;;;:::i;:::-;;:::i;505:33::-;;;;;;2704:102:2;;;:::i;2109:27:10:-;;;;;;3008:833;;;;;;:::i;:::-;;:::i;10208:1072::-;;;;;;:::i;:::-;;:::i;6933:429:2:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4268:477:10:-;;;;;;:::i;:::-;;:::i;2301:35::-;;;;;;12371:95;;;:::i;11569:496::-;;;;;;:::i;:::-;;:::i;:::-;;;;10493:14:14;;10486:22;10468:41;;10540:2;10525:18;;10518:34;;;;-1:-1:-1;;;;;10588:32:14;10568:18;;;10561:60;10456:2;10441:18;11569:496:10;10272:355:14;7742:198:10;;;;;;:::i;:::-;;:::i;11357:206::-;;;;;;:::i;:::-;;:::i;12727:95::-;12803:12;;12727:95;;644:28;;;;;;2023:22;;;;;;3847:326;;;;;;:::i;:::-;;:::i;2392:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2392:37:10;;;;;;;;;;;;;-1:-1:-1;;;;;10848:32:14;;;10830:51;;10912:2;10897:18;;10890:34;;;;10972:4;10960:17;10940:18;;;10933:45;10818:2;10803:18;2392:37:10;10632:352:14;2698:52:10;;;;;;:::i;:::-;;;;;;;;;;;;;;607:31;;;;;;2435:42;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2435:42:10;;;2193:25;;;;;;4313:149:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;544:26:10;;;;;;416:39;;;;;-1:-1:-1;;;;;416:39:10;;;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;13269:177:10:-;13336:7;13345;13354;13363:16;13402:26;;;;;;;;;-1:-1:-1;;;;;13402:26:10;-1:-1:-1;;;;;13402:35:10;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13402:37:10;;;;;;;;;;;;:::i;:::-;13395:44;;;;;;;;13269:177;;;;:::o;5822:1464::-;6102:24;;5957:29;;-1:-1:-1;;;;;6102:24:10;6088:10;:38;6084:228;;6164:10;6187:1;6146:29;;;:17;:29;;;;;;6142:160;;6209:20;6220:8;6209:10;:20::i;:::-;6276:10;6258:29;;;;:17;:29;;;;;;;-1:-1:-1;6142:160:10;6330:8;6322:55;;;;-1:-1:-1;;;6322:55:10;;13266:2:14;6322:55:10;;;13248:21:14;13305:2;13285:18;;;13278:30;-1:-1:-1;;;13324:18:14;;;13317:50;13384:18;;6322:55:10;;;;;;;;;6427:1;6395:13;;;:4;:13;;;;;:20;-1:-1:-1;;;;;6395:20:10;:34;6387:67;;;;-1:-1:-1;;;6387:67:10;;13615:2:14;6387:67:10;;;13597:21:14;13654:2;13634:18;;;13627:30;-1:-1:-1;;;13673:18:14;;;13666:50;13733:18;;6387:67:10;13413:344:14;6387:67:10;6574:26;;:61;;-1:-1:-1;;;6574:61:10;;:26;:61;;;713:25:14;6539:32:10;;-1:-1:-1;;;;;6574:26:10;;:58;;686:18:14;;6574:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6574:61:10;;;;;;;;;;;;:::i;:::-;6678:16;;;6692:1;6678:16;;;;;;;;;6539:96;;-1:-1:-1;6645:30:10;;6678:16;;;;;;;;;;;;-1:-1:-1;6678:16:10;6645:49;;6739:9;6734:137;6758:15;:22;6754:1;:26;6734:137;;;6820:20;:40;6841:15;6857:1;6841:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6820:40:10;-1:-1:-1;;;;;6820:40:10;;;;;;;;;;;;;6801:13;6815:1;6801:16;;;;;;;;:::i;:::-;;;;;;;;;;:59;6782:3;;6734:137;;;-1:-1:-1;6942:213:10;;;;;;;;6968:10;6942:213;;;;;;;;;;;7060:11;7046:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7046:33:10;;6942:213;;;;7105:11;;6942:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6942:213:10;;;-1:-1:-1;;7140:4:10;6942:213;;;;;;;6926:13;;;:4;:13;;;;;;:229;;;;-1:-1:-1;;;;;;6926:229:10;-1:-1:-1;;;;;6926:229:10;;;;;;;;;;;;:13;;:229;;;;;-1:-1:-1;6926:229:10;;;:::i;:::-;-1:-1:-1;6926:229:10;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6926:229:10;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6926:229:10;;;;;;;;;;;;-1:-1:-1;;6926:229:10;;;;;;;;;;7171:55;;7184:7;;7171:55;;;;7193:15;;7210;;7171:55;:::i;:::-;;;;;;;;7236:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;7266:13:10;;5822:1464;-1:-1:-1;;;;;;;5822:1464:10:o;2640:27::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2640:27:10;:::o;5529:286:2:-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;12585:136:10:-;12669:26;;:45;;;-1:-1:-1;;;12669:45:10;;;;12643:7;;-1:-1:-1;;;;;12669:26:10;;:43;;:45;;;;;;;;;;;;;;:26;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12662:52;;12585:136;:::o;6210:236:2:-;929:10:6;6298:4:2;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:2;;;;;;;;;;6298:4;;929:10:6;6352:66:2;;929:10:6;;6377:27:2;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;7292:444:10:-;2896:24;;7419:16;;-1:-1:-1;;;;;2896:24:10;2882:10;:38;2861:123;;;;-1:-1:-1;;;2861:123:10;;;;;;;:::i;:::-;7474:13:::1;::::0;;;:4:::1;:13;::::0;;;;:24:::1;;:31:::0;7455:15;;:50:::1;7447:59;;;::::0;::::1;;7517:13;::::0;;;:4:::1;:13;::::0;;;;;;;:32;;::::1;::::0;:21:::1;::::0;;::::1;::::0;:32;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7584:5:10::1;7559:13:::0;;;:4:::1;:13;::::0;;;;;;:22:::1;;:30:::0;;-1:-1:-1;;7559:30:10::1;::::0;;7649:38;7564:7;;7649:38:::1;::::0;::::1;::::0;7671:15:::1;713:25:14::0;;701:2;686:18;;567:177;7649:38:10::1;;;;;;;;7705:13;::::0;;;:4:::1;:13;::::0;;;;;;;;:24:::1;;7698:31:::0;;;;;;::::1;::::0;;;;;;;;;;7705:24;;7698:31;::::1;7705:24:::0;7698:31;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7292:444:::0;;;;:::o;13124:139::-;13206:26;;:50;;;-1:-1:-1;;;13206:50:10;;;;13171:16;;-1:-1:-1;;;;;13206:26:10;;:48;;:50;;;;;:26;;:50;;;;;;;:26;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13206:50:10;;;;;;;;;;;;:::i;4870:896::-;5023:10;5002:32;;;;:20;:32;;;;;;:37;4981:109;;;;-1:-1:-1;;;4981:109:10;;15989:2:14;4981:109:10;;;15971:21:14;16028:2;16008:18;;;16001:30;16067:27;16047:18;;;16040:55;16112:18;;4981:109:10;15787:349:14;4981:109:10;5132:10;3819:7:2;3845:18;;;:9;:18;;;;;;5147:11:10;-1:-1:-1;5122:36:10;:65;;;;;5177:10;;5162:11;:25;;5122:65;5101:139;;;;-1:-1:-1;;;5101:139:10;;16343:2:14;5101:139:10;;;16325:21:14;16382:2;16362:18;;;16355:30;16421:29;16401:18;;;16394:57;16468:18;;5101:139:10;16141:351:14;5101:139:10;5330:193;;;;;;;;;;;5415:10;5330:193;;;;;;;5447:10;;;5330:193;;;;;;-1:-1:-1;5330:193:10;;;;;;5510:2;5330:193;;;;;;5308:18;;;5297:30;;:10;:30;;;;;:226;;;;;;;;;;;-1:-1:-1;;;;;5297:226:10;;;-1:-1:-1;;;;;;5297:226:10;;;;;;;;;;;;;;;;;;;;;;;;;5330:193;5297:226;;;-1:-1:-1;;5297:226:10;;;;;;;;;;5569:18;;5534:32;;;:20;:32;;;;;:53;5597:38;;;:22;:38;;;;;;;:51;;;;;;;;;;5717:10;5693:35;;5415:10;5693:11;:35::i;:::-;5739:18;:20;;;:18;:20;;;:::i;:::-;;;;;;4870:896;;:::o;12071:294::-;-1:-1:-1;;;;;12202:38:10;;12161:7;12202:38;;;:20;:38;;;;;;12258:15;12250:53;;;;-1:-1:-1;;;12250:53:10;;16699:2:14;12250:53:10;;;16681:21:14;16738:2;16718:18;;;16711:30;-1:-1:-1;;;16757:18:14;;;16750:55;16822:18;;12250:53:10;16497:349:14;12250:53:10;12321:23;;;;:10;:23;;;;;:37;;12071:294;-1:-1:-1;;12071:294:10:o;12828:95::-;12872:7;12898:4;-1:-1:-1;;;;;12898:16:10;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:93;8721:31;8733:10;8745:6;8721:11;:31::i;:::-;8666:93;:::o;12472:107::-;12524:7;12571:1;12550:18;;:22;;;;:::i;8765:1266::-;8865:10;8822:19;8844:32;;;:20;:32;;;;;;8894:15;8886:55;;;;-1:-1:-1;;;8886:55:10;;17186:2:14;8886:55:10;;;17168:21:14;17225:2;17205:18;;;17198:30;17264:29;17244:18;;;17237:57;17311:18;;8886:55:10;16984:351:14;8886:55:10;8952:27;8982:23;;;:10;:23;;;;;9034:16;;;;9024:26;;;9016:69;;;;-1:-1:-1;;;9016:69:10;;17542:2:14;9016:69:10;;;17524:21:14;17581:2;17561:18;;;17554:30;17620:32;17600:18;;;17593:60;17670:18;;9016:69:10;17340:354:14;9016:69:10;9112:1;9103:6;:10;9095:56;;;;-1:-1:-1;;;9095:56:10;;;;;;;:::i;:::-;9237:9;:20;;;9261:1;9237:25;9233:792;;9319:12;;9301:30;;:15;:30;:::i;:::-;9278:20;;;:53;9429:16;;;;9407:19;;9429:25;;9448:6;;9429:25;:::i;:::-;9407:47;;9490:10;-1:-1:-1;;;;;9474:49:10;;9502:9;:20;;;9474:49;;;;713:25:14;;701:2;686:18;;567:177;9474:49:10;;;;;;;;9264:297;8812:1219;;8765:1266;:::o;9233:792::-;9703:9;:20;;;9684:15;:39;;9659:122;;;;-1:-1:-1;;;9659:122:10;;18303:2:14;9659:122:10;;;18285:21:14;18342:2;18322:18;;;18315:30;18381:26;18361:18;;;18354:54;18425:18;;9659:122:10;18101:348:14;9659:122:10;9816:6;9796:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;9836:25:10;;-1:-1:-1;9842:10:10;9854:6;9836:5;:25::i;:::-;9928:34;;713:25:14;;;9943:10:10;;9928:34;;701:2:14;686:18;9928:34:10;;;;;;;9233:792;8812:1219;;8765:1266;:::o;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;3008:833:10:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;18656:2:14;2361:107:1;;;18638:21:14;18695:2;18675:18;;;18668:30;18734:34;18714:18;;;18707:62;-1:-1:-1;;;18785:18:14;;;18778:44;18839:19;;2361:107:1;18454:410:14;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;3089:33:10::1;;;;;;;;;;;;;;-1:-1:-1::0;;;3089:33:10::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;3089:33:10::1;;::::0;:12:::1;:33::i;:::-;3220:1;3206:11;:15:::0;;;3231:10:::1;:14:::0;;;3255:18:::1;:22:::0;3341:6:::1;3326:12;:21:::0;3421:10:::1;3408;:23:::0;3495:8:::1;3485:7;:18:::0;3577:9:::1;3562:12;:24:::0;-1:-1:-1;3609:20:10::1;:24:::0;;;3644:108:::1;3665:13;:20;3661:1;:24;3644:108;;;3706:35;3712:13;3726:1;3712:16;;;;;;;;:::i;:::-;;;;;;;3730:10;;3706:5;:35::i;:::-;3687:3;;3644:108;;;-1:-1:-1::0;3806:1:10::1;3790:13;:17:::0;3833:1:::1;3817:13;:17:::0;2645:66:1;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;3008:833:10;:::o;10208:1072::-;2896:24;;-1:-1:-1;;;;;2896:24:10;2882:10;:38;2861:123;;;;-1:-1:-1;;;2861:123:10;;;;;;;:::i;:::-;10457:7:::1;;10433:20;;:31;10429:145;;2012:4;10484:12;;:28;10480:84;;;10548:1;10532:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10480:84:10::1;10584:28;10637:3;10616:12;;10631:2;10616:17;;;;:::i;:::-;10615:25;;;;:::i;:::-;10584:56;;10650:25;10700:3;10679:12;;10694:2;10679:17;;;;:::i;:::-;10678:25;;;;:::i;:::-;10650:53;;10767:23;10828:16;:23;10793:20;:58;;;;:::i;:::-;10767:84;;10867:9;10862:122;10886:16;:23;10882:1;:27;10862:122;;;10930:43;10936:16;10953:1;10936:19;;;;;;;;:::i;:::-;;;;;;;10957:15;10930:5;:43::i;:::-;10911:3;;10862:122;;;;11041:9;11036:205;11060:8;:15;11056:1;:19;11036:205;;;11096:14;11175;11138:17;11115;11133:1;11115:20;;;;;;;;:::i;:::-;;;;;;;:40;;;;:::i;:::-;11114:75;;;;:::i;:::-;11096:94;;11204:26;11210:8;11219:1;11210:11;;;;;;;;:::i;:::-;;;;;;;11223:6;11204:5;:26::i;:::-;-1:-1:-1::0;11077:3:10::1;;11036:205;;;-1:-1:-1::0;11251:20:10::1;:22:::0;;;:20:::1;:22;::::0;::::1;:::i;:::-;;;;;;10419:861;;;10208:1072:::0;;;;:::o;6933:429:2:-;929:10:6;7026:4:2;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:2;;;;;;;;;;7026:4;;929:10:6;7152:35:2;;;;7144:85;;;;-1:-1:-1;;;7144:85:2;;19466:2:14;7144:85:2;;;19448:21:14;19505:2;19485:18;;;19478:30;19544:34;19524:18;;;19517:62;-1:-1:-1;;;19595:18:14;;;19588:35;19640:19;;7144:85:2;19264:401:14;7144:85:2;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;4268:477:10:-;4424:10;4447:1;4406:29;;;:17;:29;;;;;;:43;4385:114;;;;-1:-1:-1;;;4385:114:10;;19872:2:14;4385:114:10;;;19854:21:14;19911:2;19891:18;;;19884:30;19950:26;19930:18;;;19923:54;19994:18;;4385:114:10;19670:348:14;4385:114:10;4534:124;;;;;;;;4566:10;4534:124;;;;;;;;;;4645:2;4534:124;;;;;;-1:-1:-1;4510:21:10;;;:5;:21;;;;;:148;;;;-1:-1:-1;;;;;;4510:148:10;-1:-1:-1;;;;;4510:148:10;;;;;;;;-1:-1:-1;4510:148:10;;;;;;;;;;-1:-1:-1;;4510:148:10;4534:124;4510:148;;;;;;;;;;4669:29;;;:17;:29;;;;;:46;;;4725:11;:13;;;;;;:::i;:::-;;;;;;4268:477;:::o;12371:95::-;12418:7;12458:1;12444:11;;:15;;;;:::i;11569:496::-;11654:4;11660:7;11669;11711:18;;11696:12;:33;11688:57;;;;-1:-1:-1;;;11688:57:10;;20225:2:14;11688:57:10;;;20207:21:14;20264:2;20244:18;;;20237:30;-1:-1:-1;;;20283:18:14;;;20276:41;20334:18;;11688:57:10;20023:335:14;11688:57:10;11755:27;11785:24;;;:10;:24;;;;;;;;11755:54;;;;;;;;;;;;;;;-1:-1:-1;;;;;11755:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11835:26;;:95;;-1:-1:-1;;;11835:95:10;;;;;5660:51:14;;;;11755:54:10;:27;11835:26;;;;;:44;;5633:18:14;;11835:95:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11983:24;;12021:27;;;;;11819:111;;11983:24;;-1:-1:-1;12021:27:10;-1:-1:-1;11569:496:10;;-1:-1:-1;;;11569:496:10:o;7742:198::-;2896:24;;-1:-1:-1;;;;;2896:24:10;2882:10;:38;2861:123;;;;-1:-1:-1;;;2861:123:10;;;;;;;:::i;:::-;7820:15:::1;7838:13:::0;;;:4:::1;:13;::::0;;;;;;;;7861:12:::1;::::0;::::1;:20:::0;;-1:-1:-1;;7861:20:10::1;::::0;;7896:37;;7917:15:::1;713:25:14::0;;7838:13:10;;7896:37:::1;::::0;686:18:14;7896:37:10::1;;;;;;;7810:130;7742:198:::0;:::o;11357:206::-;11465:30;11498:13;;;:4;:13;;;;;;;;:28;;11465:61;;;;;;;;;;;;;;;;;11437:16;;11465:30;:61;;11498:28;11465:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11465:61:10;;;;;;;;;;;;;;;;-1:-1:-1;11465:61:10;;11357:206;-1:-1:-1;;;;;;;11357:206:10:o;3847:326::-;3943:24;;-1:-1:-1;;;;;3943:24:10;:38;3922:115;;;;-1:-1:-1;;;3922:115:10;;20847:2:14;3922:115:10;;;20829:21:14;20886:2;20866:18;;;20859:30;20925:32;20905:18;;;20898:60;20975:18;;3922:115:10;20645:354:14;3922:115:10;4047:26;:66;;-1:-1:-1;;;;;4047:66:10;;;-1:-1:-1;;;;;;4047:66:10;;;;;;;;4123:24;:43;;;;;;;;3847:326::o;10460:370:2:-;-1:-1:-1;;;;;10591:19:2;;10583:68;;;;-1:-1:-1;;;10583:68:2;;21206:2:14;10583:68:2;;;21188:21:14;21245:2;21225:18;;;21218:30;21284:34;21264:18;;;21257:62;-1:-1:-1;;;21335:18:14;;;21328:34;21379:19;;10583:68:2;21004:400:14;10583:68:2;-1:-1:-1;;;;;10669:21:2;;10661:68;;;;-1:-1:-1;;;10661:68:2;;21611:2:14;10661:68:2;;;21593:21:14;21650:2;21630:18;;;21623:30;21689:34;21669:18;;;21662:62;-1:-1:-1;;;21740:18:14;;;21733:32;21782:19;;10661:68:2;21409:398:14;10661:68:2;-1:-1:-1;;;;;10740:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;713:25:14;;;10791:32:2;;686:18:14;10791:32:2;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:2;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:2;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;22014:2:14;11356:68:2;;;21996:21:14;22053:2;22033:18;;;22026:30;22092:31;22072:18;;;22065:59;22141:18;;11356:68:2;21812:353:14;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:2;;7943:68;;;;-1:-1:-1;;;7943:68:2;;22372:2:14;7943:68:2;;;22354:21:14;22411:2;22391:18;;;22384:30;22450:34;22430:18;;;22423:62;-1:-1:-1;;;22501:18:14;;;22494:35;22546:19;;7943:68:2;22170:401:14;7943:68:2;-1:-1:-1;;;;;8029:16:2;;8021:64;;;;-1:-1:-1;;;8021:64:2;;22778:2:14;8021:64:2;;;22760:21:14;22817:2;22797:18;;;22790:30;22856:34;22836:18;;;22829:62;-1:-1:-1;;;22907:18:14;;;22900:33;22950:19;;8021:64:2;22576:399:14;8021:64:2;-1:-1:-1;;;;;8167:15:2;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:2;;23182:2:14;8192:72:2;;;23164:21:14;23221:2;23201:18;;;23194:30;23260:34;23240:18;;;23233:62;-1:-1:-1;;;23311:18:14;;;23304:36;23357:19;;8192:72:2;22980:402:14;8192:72:2;-1:-1:-1;;;;;8298:15:2;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:2;8404:4;-1:-1:-1;;;;;8395:26:2;;8414:6;8395:26;;;;713:25:14;;701:2;686:18;;567:177;8395:26:2;;;;;;;;8432:37;8765:1266:10;8038:541;8127:1;8118:6;:10;8110:56;;;;-1:-1:-1;;;8110:56:10;;;;;;;:::i;:::-;8205:6;8184:17;8194:6;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;8184:17:10;:27;;8176:61;;;;-1:-1:-1;;;8176:61:10;;23589:2:14;8176:61:10;;;23571:21:14;23628:2;23608:18;;;23601:30;-1:-1:-1;;;23647:18:14;;;23640:51;23708:18;;8176:61:10;23387:345:14;8176:61:10;-1:-1:-1;;;;;8270:28:10;;8248:19;8270:28;;;:20;:28;;;;;;;8316:16;;;8308:54;;;;-1:-1:-1;;;8308:54:10;;16699:2:14;8308:54:10;;;16681:21:14;16738:2;16718:18;;;16711:30;-1:-1:-1;;;16757:18:14;;;16750:55;16822:18;;8308:54:10;16497:349:14;8308:54:10;8373:43;8386:6;8402:4;8409:6;8373:12;:43::i;:::-;-1:-1:-1;8426:23:10;;;;:10;:23;;;;;:30;;:40;;8460:6;;8426:23;:40;;8460:6;;8426:40;:::i;:::-;;;;-1:-1:-1;;8476:19:10;8498:23;;;:10;:23;;;;;;;;;:30;;;8544:28;;713:25:14;;;-1:-1:-1;;;;;8544:28:10;;;;;686:18:14;8544:28:10;567:177:14;8752:389:2;-1:-1:-1;;;;;8835:21:2;;8827:65;;;;-1:-1:-1;;;8827:65:2;;23939:2:14;8827:65:2;;;23921:21:14;23978:2;23958:18;;;23951:30;24017:33;23997:18;;;23990:61;24068:18;;8827:65:2;23737:355:14;8827:65:2;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:2;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:2;;713:25:14;;;-1:-1:-1;;;;;9038:37:2;;;9055:1;;9038:37;;701:2:14;686:18;9038:37:2;;;;;;;2080:637:1;3008:833:10;:::o;2116:147:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2952:13:1::0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2381:5:2::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:2::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:548:14;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:131::-;-1:-1:-1;;;;;824:31:14;;814:42;;804:70;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:14:o;1397:465::-;1450:3;1488:5;1482:12;1515:6;1510:3;1503:19;1541:4;1570;1565:3;1561:14;1554:21;;1609:4;1602:5;1598:16;1632:1;1642:195;1656:6;1653:1;1650:13;1642:195;;;1721:13;;-1:-1:-1;;;;;1717:39:14;1705:52;;1777:12;;;;1812:15;;;;1753:1;1671:9;1642:195;;;-1:-1:-1;1853:3:14;;1397:465;-1:-1:-1;;;;;1397:465:14:o;1867:476::-;2130:6;2119:9;2112:25;2173:6;2168:2;2157:9;2153:18;2146:34;2216:6;2211:2;2200:9;2196:18;2189:34;2259:3;2254:2;2243:9;2239:18;2232:31;2093:4;2280:57;2332:3;2321:9;2317:19;2309:6;2280:57;:::i;:::-;2272:65;1867:476;-1:-1:-1;;;;;;1867:476:14:o;2348:751::-;2452:6;2460;2468;2476;2529:2;2517:9;2508:7;2504:23;2500:32;2497:52;;;2545:1;2542;2535:12;2497:52;2581:9;2568:23;2558:33;;2638:2;2627:9;2623:18;2610:32;2600:42;;2693:2;2682:9;2678:18;2665:32;2716:18;2757:2;2749:6;2746:14;2743:34;;;2773:1;2770;2763:12;2743:34;2811:6;2800:9;2796:22;2786:32;;2856:7;2849:4;2845:2;2841:13;2837:27;2827:55;;2878:1;2875;2868:12;2827:55;2918:2;2905:16;2944:2;2936:6;2933:14;2930:34;;;2960:1;2957;2950:12;2930:34;3013:7;3008:2;2998:6;2995:1;2991:14;2987:2;2983:23;2979:32;2976:45;2973:65;;;3034:1;3031;3024:12;2973:65;2348:751;;;;-1:-1:-1;;3065:2:14;3057:11;;-1:-1:-1;;;2348:751:14:o;3104:632::-;3275:2;3327:21;;;3397:13;;3300:18;;;3419:22;;;3246:4;;3275:2;3498:15;;;;3472:2;3457:18;;;3246:4;3541:169;3555:6;3552:1;3549:13;3541:169;;;3616:13;;3604:26;;3685:15;;;;3650:12;;;;3577:1;3570:9;3541:169;;;-1:-1:-1;3727:3:14;;3104:632;-1:-1:-1;;;;;;3104:632:14:o;3741:180::-;3800:6;3853:2;3841:9;3832:7;3828:23;3824:32;3821:52;;;3869:1;3866;3859:12;3821:52;-1:-1:-1;3892:23:14;;3741:180;-1:-1:-1;3741:180:14:o;3926:456::-;4003:6;4011;4019;4072:2;4060:9;4051:7;4047:23;4043:32;4040:52;;;4088:1;4085;4078:12;4040:52;4127:9;4114:23;4146:31;4171:5;4146:31;:::i;:::-;4196:5;-1:-1:-1;4253:2:14;4238:18;;4225:32;4266:33;4225:32;4266:33;:::i;:::-;3926:456;;4318:7;;-1:-1:-1;;;4372:2:14;4357:18;;;;4344:32;;3926:456::o;4387:247::-;4446:6;4499:2;4487:9;4478:7;4474:23;4470:32;4467:52;;;4515:1;4512;4505:12;4467:52;4554:9;4541:23;4573:31;4598:5;4573:31;:::i;:::-;4623:5;4387:247;-1:-1:-1;;;4387:247:14:o;6011:127::-;6072:10;6067:3;6063:20;6060:1;6053:31;6103:4;6100:1;6093:15;6127:4;6124:1;6117:15;6143:275;6214:2;6208:9;6279:2;6260:13;;-1:-1:-1;;6256:27:14;6244:40;;6314:18;6299:34;;6335:22;;;6296:62;6293:88;;;6361:18;;:::i;:::-;6397:2;6390:22;6143:275;;-1:-1:-1;6143:275:14:o;6423:183::-;6483:4;6516:18;6508:6;6505:30;6502:56;;;6538:18;;:::i;:::-;-1:-1:-1;6583:1:14;6579:14;6595:4;6575:25;;6423:183::o;6611:743::-;6665:5;6718:3;6711:4;6703:6;6699:17;6695:27;6685:55;;6736:1;6733;6726:12;6685:55;6772:6;6759:20;6798:4;6822:60;6838:43;6878:2;6838:43;:::i;:::-;6822:60;:::i;:::-;6904:3;6928:2;6923:3;6916:15;6956:4;6951:3;6947:14;6940:21;;7013:4;7007:2;7004:1;7000:10;6992:6;6988:23;6984:34;6970:48;;7041:3;7033:6;7030:15;7027:35;;;7058:1;7055;7048:12;7027:35;7094:4;7086:6;7082:17;7108:217;7124:6;7119:3;7116:15;7108:217;;;7204:3;7191:17;7221:31;7246:5;7221:31;:::i;:::-;7265:18;;7303:12;;;;7141;;7108:217;;;-1:-1:-1;7343:5:14;6611:743;-1:-1:-1;;;;;;6611:743:14:o;7359:416::-;7452:6;7460;7513:2;7501:9;7492:7;7488:23;7484:32;7481:52;;;7529:1;7526;7519:12;7481:52;7565:9;7552:23;7542:33;;7626:2;7615:9;7611:18;7598:32;7653:18;7645:6;7642:30;7639:50;;;7685:1;7682;7675:12;7639:50;7708:61;7761:7;7752:6;7741:9;7737:22;7708:61;:::i;:::-;7698:71;;;7359:416;;;;;:::o;7780:261::-;7959:2;7948:9;7941:21;7922:4;7979:56;8031:2;8020:9;8016:18;8008:6;7979:56;:::i;8046:248::-;8114:6;8122;8175:2;8163:9;8154:7;8150:23;8146:32;8143:52;;;8191:1;8188;8181:12;8143:52;-1:-1:-1;;8214:23:14;;;8284:2;8269:18;;;8256:32;;-1:-1:-1;8046:248:14:o;8481:348::-;8565:6;8618:2;8606:9;8597:7;8593:23;8589:32;8586:52;;;8634:1;8631;8624:12;8586:52;8674:9;8661:23;8707:18;8699:6;8696:30;8693:50;;;8739:1;8736;8729:12;8693:50;8762:61;8815:7;8806:6;8795:9;8791:22;8762:61;:::i;:::-;8752:71;8481:348;-1:-1:-1;;;;8481:348:14:o;8834:1433::-;8995:6;9003;9011;9019;9072:3;9060:9;9051:7;9047:23;9043:33;9040:53;;;9089:1;9086;9079:12;9040:53;9129:9;9116:23;9158:18;9199:2;9191:6;9188:14;9185:34;;;9215:1;9212;9205:12;9185:34;9238:61;9291:7;9282:6;9271:9;9267:22;9238:61;:::i;:::-;9228:71;;9318:2;9308:12;;9373:2;9362:9;9358:18;9345:32;9402:2;9392:8;9389:16;9386:36;;;9418:1;9415;9408:12;9386:36;9441:24;;9496:4;9488:13;;9484:27;-1:-1:-1;9474:55:14;;9525:1;9522;9515:12;9474:55;9561:2;9548:16;9584:60;9600:43;9640:2;9600:43;:::i;9584:60::-;9678:15;;;9760:1;9756:10;;;;9748:19;;9744:28;;;9709:12;;;;9784:19;;;9781:39;;;9816:1;9813;9806:12;9781:39;9840:11;;;;9860:142;9876:6;9871:3;9868:15;9860:142;;;9942:17;;9930:30;;9893:12;;;;9980;;;;9860:142;;;10021:5;-1:-1:-1;;;;10073:2:14;10058:18;;10045:32;;-1:-1:-1;10130:2:14;10115:18;;10102:32;;-1:-1:-1;10146:16:14;;;10143:36;;;10175:1;10172;10165:12;10143:36;;10198:63;10253:7;10242:8;10231:9;10227:24;10198:63;:::i;:::-;10188:73;;;8834:1433;;;;;;;:::o;10989:388::-;11057:6;11065;11118:2;11106:9;11097:7;11093:23;11089:32;11086:52;;;11134:1;11131;11124:12;11086:52;11173:9;11160:23;11192:31;11217:5;11192:31;:::i;:::-;11242:5;-1:-1:-1;11299:2:14;11284:18;;11271:32;11312:33;11271:32;11312:33;:::i;:::-;11364:7;11354:17;;;10989:388;;;;;:::o;11382:380::-;11461:1;11457:12;;;;11504;;;11525:61;;11579:4;11571:6;11567:17;11557:27;;11525:61;11632:2;11624:6;11621:14;11601:18;11598:38;11595:161;;11678:10;11673:3;11669:20;11666:1;11659:31;11713:4;11710:1;11703:15;11741:4;11738:1;11731:15;11595:161;;11382:380;;;:::o;11767:740::-;11832:5;11885:3;11878:4;11870:6;11866:17;11862:27;11852:55;;11903:1;11900;11893:12;11852:55;11932:6;11926:13;11958:4;11982:60;11998:43;12038:2;11998:43;:::i;11982:60::-;12064:3;12088:2;12083:3;12076:15;12116:4;12111:3;12107:14;12100:21;;12173:4;12167:2;12164:1;12160:10;12152:6;12148:23;12144:34;12130:48;;12201:3;12193:6;12190:15;12187:35;;;12218:1;12215;12208:12;12187:35;12254:4;12246:6;12242:17;12268:210;12284:6;12279:3;12276:15;12268:210;;;12357:3;12351:10;12374:31;12399:5;12374:31;:::i;:::-;12418:18;;12456:12;;;;12301;;12268:210;;12512:547;12634:6;12642;12650;12658;12711:3;12699:9;12690:7;12686:23;12682:33;12679:53;;;12728:1;12725;12718:12;12679:53;12757:9;12751:16;12741:26;;12807:2;12796:9;12792:18;12786:25;12776:35;;12851:2;12840:9;12836:18;12830:25;12820:35;;12899:2;12888:9;12884:18;12878:25;12926:18;12918:6;12915:30;12912:50;;;12958:1;12955;12948:12;12912:50;12981:72;13045:7;13036:6;13025:9;13021:22;12981:72;:::i;13952:363::-;14047:6;14100:2;14088:9;14079:7;14075:23;14071:32;14068:52;;;14116:1;14113;14106:12;14068:52;14149:9;14143:16;14182:18;14174:6;14171:30;14168:50;;;14214:1;14211;14204:12;14168:50;14237:72;14301:7;14292:6;14281:9;14277:22;14237:72;:::i;14320:127::-;14381:10;14376:3;14372:20;14369:1;14362:31;14412:4;14409:1;14402:15;14436:4;14433:1;14426:15;14452:332;14659:6;14648:9;14641:25;14702:2;14697;14686:9;14682:18;14675:30;14622:4;14722:56;14774:2;14763:9;14759:18;14751:6;14722:56;:::i;14789:127::-;14850:10;14845:3;14841:20;14838:1;14831:31;14881:4;14878:1;14871:15;14905:4;14902:1;14895:15;14921:135;14960:3;14981:17;;;14978:43;;15001:18;;:::i;:::-;-1:-1:-1;15048:1:14;15037:13;;14921:135::o;15061:184::-;15131:6;15184:2;15172:9;15163:7;15159:23;15155:32;15152:52;;;15200:1;15197;15190:12;15152:52;-1:-1:-1;15223:16:14;;15061:184;-1:-1:-1;15061:184:14:o;15250:125::-;15315:9;;;15336:10;;;15333:36;;;15349:18;;:::i;15380:402::-;15582:2;15564:21;;;15621:2;15601:18;;;15594:30;15660:34;15655:2;15640:18;;15633:62;-1:-1:-1;;;15726:2:14;15711:18;;15704:36;15772:3;15757:19;;15380:402::o;16851:128::-;16918:9;;;16939:11;;;16936:37;;;16953:18;;:::i;17699:397::-;17901:2;17883:21;;;17940:2;17920:18;;;17913:30;17979:34;17974:2;17959:18;;17952:62;-1:-1:-1;;;18045:2:14;18030:18;;18023:31;18086:3;18071:19;;17699:397::o;18869:217::-;18909:1;18935;18925:132;;18979:10;18974:3;18970:20;18967:1;18960:31;19014:4;19011:1;19004:15;19042:4;19039:1;19032:15;18925:132;-1:-1:-1;19071:9:14;;18869:217::o;19091:168::-;19164:9;;;19195;;19212:15;;;19206:22;;19192:37;19182:71;;19233:18;;:::i;20363:277::-;20430:6;20483:2;20471:9;20462:7;20458:23;20454:32;20451:52;;;20499:1;20496;20489:12;20451:52;20531:9;20525:16;20584:5;20577:13;20570:21;20563:5;20560:32;20550:60;;20606:1;20603;20596:12;24097:407;24299:2;24281:21;;;24338:2;24318:18;;;24311:30;24377:34;24372:2;24357:18;;24350:62;-1:-1:-1;;;24443:2:14;24428:18;;24421:41;24494:3;24479:19;;24097:407::o;24635:543::-;24737:2;24732:3;24729:11;24726:446;;;24773:1;24797:5;24794:1;24787:16;24841:4;24838:1;24828:18;24911:2;24899:10;24895:19;24892:1;24888:27;24882:4;24878:38;24947:4;24935:10;24932:20;24929:47;;;-1:-1:-1;24970:4:14;24929:47;25025:2;25020:3;25016:12;25013:1;25009:20;25003:4;24999:31;24989:41;;25080:82;25098:2;25091:5;25088:13;25080:82;;;25143:17;;;25124:1;25113:13;25080:82;;;25084:3;;;24635:543;;;:::o;25354:1345::-;25480:3;25474:10;25507:18;25499:6;25496:30;25493:56;;;25529:18;;:::i;:::-;25558:97;25648:6;25608:38;25640:4;25634:11;25608:38;:::i;:::-;25602:4;25558:97;:::i;:::-;25710:4;;25767:2;25756:14;;25784:1;25779:663;;;;26486:1;26503:6;26500:89;;;-1:-1:-1;26555:19:14;;;26549:26;26500:89;-1:-1:-1;;25311:1:14;25307:11;;;25303:24;25299:29;25289:40;25335:1;25331:11;;;25286:57;26602:81;;25749:944;;25779:663;24582:1;24575:14;;;24619:4;24606:18;;-1:-1:-1;;25815:20:14;;;25933:236;25947:7;25944:1;25941:14;25933:236;;;26036:19;;;26030:26;26015:42;;26128:27;;;;26096:1;26084:14;;;;25963:19;;25933:236;;;25937:3;26197:6;26188:7;26185:19;26182:201;;;26258:19;;;26252:26;-1:-1:-1;;26341:1:14;26337:14;;;26353:3;26333:24;26329:37;26325:42;26310:58;26295:74;;26182:201;-1:-1:-1;;;;;26429:1:14;26413:14;;;26409:22;26396:36;;-1:-1:-1;25354:1345:14:o",
  "language": "Solidity",
  "natspec": {
    "details": "An ERC20 contract for managing off-chain networks",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createUser(bytes32)": {
        "details": "Create a User, limit one per address & public key hash (RSA)"
      },
      "createValidator(bytes32,uint256)": {
        "details": "Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint256)": {
        "details": "Validator token unlocking, 30 day withdrawal period."
      },
      "mintTokens(address[],uint256[],uint256,address[])": {
        "details": "Mint tokens for updating state rewards, distribute 40/60 among validators and workers Updates the emission rate and halving accordingly"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "title": "SmartNodes",
    "version": 1
  },
  "offset": [
    271,
    13448
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x30C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C405325 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xBC1D82A1 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xD057FC19 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD8DF5DC1 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x802 JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x83B JUMPI DUP1 PUSH4 0xF79621BD EQ PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD057FC19 EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x7C7 JUMPI DUP1 PUSH4 0xD3EECE97 EQ PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC1D82A1 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xC0A77DA9 EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x71E JUMPI DUP1 PUSH4 0xC8DF245A EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xCEA6AB98 EQ PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xB115F50D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB115F50D EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xB7797537 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0xBA3F5443 EQ PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xABF7BFD8 EQ PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C405325 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0xA3273D22 EQ PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38E56261 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x4A4FBEEC GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x6C9C2FAF GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x7071688A EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x62FB00FC EQ PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38E56261 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x38ED7CFC EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x43A8D914 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x4966D086 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20D3A0B4 GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x27764547 GT PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x21B0908B EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x1D4E7793 EQ PUSH2 0x389 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x319 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x338 JUMP JUMPDEST PUSH2 0x379 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x230F JUMP JUMPDEST PUSH2 0x39C PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x233E JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x23C1 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x241E JUMP JUMPDEST PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x338 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x4B5 PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x503 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x229E JUMP JUMPDEST PUSH2 0xDCA JUMP JUMPDEST PUSH2 0x39C PUSH2 0x543 CALLDATASIZE PUSH1 0x4 PUSH2 0x2566 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x550 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x25AD JUMP JUMPDEST PUSH2 0x570 PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH2 0x580 CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6F SLOAD SWAP1 DUP5 MSTORE PUSH1 0x75 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x5C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x570 PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x338 PUSH2 0x1207 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x5FF CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x1218 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x319 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x338 PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x655 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x668 CALLDATASIZE PUSH1 0x4 PUSH2 0x261F JUMP JUMPDEST PUSH2 0x15BC JUMP JUMPDEST PUSH2 0x359 PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x172E JUMP JUMPDEST PUSH2 0x359 PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x6A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x17CE JUMP JUMPDEST PUSH2 0x338 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x6FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x19D9 JUMP JUMPDEST PUSH2 0x550 PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x338 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x570 PUSH2 0x73E CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x77F PUSH2 0x751 CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x72 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x7B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4B5 PUSH2 0x7DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x810 CALLDATASIZE PUSH1 0x4 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x4B5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x866 SWAP1 PUSH2 0x273E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x892 SWAP1 PUSH2 0x273E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8F7 DUP2 DUP6 DUP6 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1865C57D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x985 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x27E0 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9D8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9D8 JUMPI PUSH2 0x9C5 DUP6 PUSH2 0x17CE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 POP JUMPDEST DUP5 PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x55736572206E6F74207265676973746572656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2537B11030B63932B0B23C9031B932B0BA32B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x71547B79 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE2A8F6F2 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xAEF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x79 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB72 JUMPI PUSH2 0xB72 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xB18 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB6 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE DUP11 DUP4 MSTORE PUSH1 0x76 DUP5 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP5 DUP5 ADD MLOAD DUP1 MLOAD SWAP2 SWAP5 PUSH2 0xC62 SWAP5 DUP7 ADD SWAP4 POP ADD SWAP1 PUSH2 0x2185 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xC7E SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2185 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xC9A SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21EA JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH32 0x5DD5AFF7B55A6D23DB5800AE74FAFB29F5F00976A85526C852C81900D14CF3E7 SWAP1 PUSH2 0xCEA SWAP1 TIMESTAMP SWAP1 DUP7 SWAP1 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x69 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD02 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x77 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xD41 DUP6 DUP3 DUP6 PUSH2 0x1C6F JUMP JUMPDEST PUSH2 0xD4C DUP6 DUP6 DUP6 PUSH2 0x1D01 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x48F17129 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x91E2E252 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x8F7 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xE04 SWAP1 DUP8 SWAP1 PUSH2 0x28DA JUMP JUMPDEST PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x28ED JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 MLOAD EQ PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xE79 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x2185 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH32 0x9B5ED714C31DFCB1A9397710B6FC1842F37D94AB5DC0CCB528D9A2C97EA76F2A SWAP1 PUSH2 0xEC7 SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xF26 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xF12 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFBCCA273 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFBCCA273 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDC5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x282E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206578697374732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x1023 JUMPI POP PUSH1 0x6F SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x6F DUP1 SLOAD DUP6 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x80 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x67 DUP1 SLOAD DUP5 MSTORE PUSH1 0x75 DUP9 MSTORE DUP11 DUP5 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP6 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP4 MLOAD PUSH1 0x2 DUP11 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP10 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH1 0xFF NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE SWAP2 SLOAD DUP5 DUP7 MSTORE PUSH1 0x79 DUP5 MSTORE DUP7 DUP7 KECCAK256 SSTORE DUP8 DUP6 MSTORE PUSH1 0x74 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND DUP2 OR SWAP1 SWAP3 SSTORE SLOAD PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x113A DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x11A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1204 CALLER DUP3 PUSH2 0x1ECF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x67 SLOAD PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642076616C696461746F722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x12F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x2946 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x1377 JUMPI PUSH1 0x70 SLOAD PUSH2 0x1310 SWAP1 TIMESTAMP PUSH2 0x28DA JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1328 SWAP1 DUP6 SWAP1 PUSH2 0x2933 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 DUP4 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1369 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x13CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13DF SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x13EF SWAP1 POP CALLER DUP5 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x866 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1454 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1458 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x14BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1524 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x68 DUP2 SWAP1 SSTORE PUSH1 0x69 DUP2 SWAP1 SSTORE PUSH1 0x67 SSTORE PUSH9 0xDE0B6B3A764000000 PUSH1 0x6E SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x6F SSTORE PUSH4 0x3205B7E PUSH1 0x6D SSTORE PUSH3 0x127500 PUSH1 0x70 SSTORE PUSH1 0x0 PUSH1 0x71 DUP2 SWAP1 SSTORE JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x159B JUMPI PUSH2 0x1593 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6F SLOAD PUSH2 0x203A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1565 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6B SSTORE PUSH1 0x5 PUSH1 0x6C SSTORE DUP1 ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x28ED JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x71 SLOAD LT PUSH2 0x161C JUMPI PUSH8 0x1BC16D674EC80000 PUSH1 0x6E SLOAD GT ISZERO PUSH2 0x161C JUMPI PUSH1 0x2 PUSH1 0x6E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x14 PUSH2 0x162F SWAP2 SWAP1 PUSH2 0x29A9 JUMP JUMPDEST PUSH2 0x1639 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x50 PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x29A9 JUMP JUMPDEST PUSH2 0x1658 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 MLOAD DUP4 PUSH2 0x1669 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x169A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x168C JUMPI PUSH2 0x168C PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x166E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP7 DUP5 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x16C5 JUMPI PUSH2 0x16C5 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x16D7 SWAP2 SWAP1 PUSH2 0x29A9 JUMP JUMPDEST PUSH2 0x16E1 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST SWAP1 POP PUSH2 0x1706 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16F8 JUMPI PUSH2 0x16F8 PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x203A JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x16A6 JUMP JUMPDEST POP PUSH1 0x71 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1720 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH2 0xD4C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8F7 DUP2 DUP6 DUP6 PUSH2 0x1D01 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x32 DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x72 DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP1 DUP3 MSTORE PUSH1 0x78 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP2 PUSH2 0x18AB DUP4 PUSH2 0x28A8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x68 SLOAD PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x67 SLOAD DUP5 LT PUSH2 0x1908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x24B73B30B634B21024A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP3 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x65 SLOAD SWAP4 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19C3 SWAP2 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP8 SWAP3 SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x28ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 MLOAD TIMESTAMP DUP2 MSTORE DUP4 SWAP2 PUSH32 0x6E04AA702F9AF7A9A398F10D27918152DF25AC0CDC6D74321B9F7496374387A7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1AB9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A9B JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1B1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1BAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1CFB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1CEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x1CFB DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1B4B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1E3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E76 SWAP1 DUP5 SWAP1 PUSH2 0x28DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1EC2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1EEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x2946 JUMP JUMPDEST DUP1 PUSH2 0x1F0F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x1F55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x1FBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x1FC5 DUP4 ADDRESS DUP5 PUSH2 0xD33 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1FE7 SWAP1 DUP5 SWAP1 PUSH2 0x28DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP2 ADD PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2090 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA18 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20A2 SWAP2 SWAP1 PUSH2 0x28DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x20CF SWAP1 DUP5 SWAP1 PUSH2 0x28DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2140 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x29E2 JUMP JUMPDEST PUSH2 0x15B8 DUP3 DUP3 PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x216C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x29E2 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x2178 DUP4 DUP3 PUSH2 0x2A7D JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x1425 DUP3 DUP3 PUSH2 0x2A7D JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x21DA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x21DA JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21A5 JUMP JUMPDEST POP PUSH2 0x21E6 SWAP3 SWAP2 POP PUSH2 0x2225 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x21DA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x21DA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x220A JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x21E6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2226 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2268 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x224C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x22BC DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2304 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22DF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2334 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x22CA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x237A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x238E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x239D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x23B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23F9 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x23DD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x243E DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x244E DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x247C DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x24C2 JUMPI PUSH2 0x24C2 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E4 PUSH2 0x2483 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2514 PUSH2 0x250F DUP4 PUSH2 0x24CA JUMP JUMPDEST PUSH2 0x2499 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x2536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x255B JUMPI DUP1 CALLDATALOAD PUSH2 0x254E DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x253B JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25A3 DUP6 DUP3 DUP7 ADD PUSH2 0x24EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x247C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x24EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x264D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2659 DUP9 DUP4 DUP10 ADD PUSH2 0x24EE JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x2681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x268F PUSH2 0x250F DUP3 PUSH2 0x24CA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP12 DUP4 GT ISZERO PUSH2 0x26AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x26CC JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x26B3 JUMP JUMPDEST SWAP8 POP POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26F9 DUP8 DUP3 DUP9 ADD PUSH2 0x24EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2723 DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2733 DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2752 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2772 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2799 PUSH2 0x250F DUP4 PUSH2 0x24CA JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x27BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x255B JUMPI DUP1 MLOAD PUSH2 0x27D3 DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F9 DUP8 DUP3 DUP9 ADD PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x2778 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2617 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x28BA JUMPI PUSH2 0x28BA PUSH2 0x2892 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x2892 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x2892 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x2892 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x247C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2A56 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A75 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A62 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A97 JUMPI PUSH2 0x2A97 PUSH2 0x2483 JUMP JUMPDEST PUSH2 0x2AAB DUP2 PUSH2 0x2AA5 DUP5 SLOAD PUSH2 0x273E JUMP JUMPDEST DUP5 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2AE0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2AC8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2A75 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B0F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2AF0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2B2D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xCF 0x26 0x1E 0xBB LOG3 ISZERO SWAP7 0xC4 PUSH13 0xC2F80937B3F7A988BDA9AD97E5 0xCB CODESIZE SWAP4 0xF 0xC6 0xCC PUSH21 0x157864736F6C634300081900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30C"
    },
    "25": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7C405325"
    },
    "38": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19D"
    },
    "42": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBC1D82A1"
    },
    "49": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE9"
    },
    "53": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD057FC19"
    },
    "60": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD8DF5DC1"
    },
    "71": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD8DF5DC1"
    },
    "82": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7F9"
    },
    "86": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x802"
    },
    "97": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF0C37A59"
    },
    "104": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x83B"
    },
    "108": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF79621BD"
    },
    "115": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "116": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x844"
    },
    "119": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "120": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "123": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "124": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD057FC19"
    },
    "131": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A7"
    },
    "135": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD2D49C4B"
    },
    "142": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C7"
    },
    "146": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD3EECE97"
    },
    "153": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7D0"
    },
    "157": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "161": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "162": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "164": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBC1D82A1"
    },
    "169": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x703"
    },
    "173": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC0A77DA9"
    },
    "180": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x716"
    },
    "184": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC5AB2241"
    },
    "191": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71E"
    },
    "195": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC8DF245A"
    },
    "202": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x727"
    },
    "206": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xCDF64A76"
    },
    "213": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "214": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x730"
    },
    "217": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "218": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xCEA6AB98"
    },
    "224": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "225": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x743"
    },
    "228": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "229": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "232": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "233": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "234": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "235": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA457C2D7"
    },
    "240": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "241": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x156"
    },
    "244": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "245": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "246": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB115F50D"
    },
    "251": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "252": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x130"
    },
    "255": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "256": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "257": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB115F50D"
    },
    "262": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "263": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6A6"
    },
    "266": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "267": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "268": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB5CB15F7"
    },
    "273": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "274": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6AF"
    },
    "277": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "278": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "279": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB7797537"
    },
    "284": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "285": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6B7"
    },
    "288": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "289": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "290": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBA3F5443"
    },
    "295": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "296": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6F0"
    },
    "299": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "300": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "303": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "304": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "305": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "306": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA457C2D7"
    },
    "311": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "312": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66D"
    },
    "315": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "316": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "317": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA9059CBB"
    },
    "322": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "323": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x680"
    },
    "326": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "327": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "328": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xABF7BFD8"
    },
    "333": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "334": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x693"
    },
    "337": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "338": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "340": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "341": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "342": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "343": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "344": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7C405325"
    },
    "349": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "350": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x61A"
    },
    "353": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "354": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "355": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8F029D5E"
    },
    "360": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "361": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x62D"
    },
    "364": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "365": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "366": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "371": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "372": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x636"
    },
    "375": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "376": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "377": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x96AFC450"
    },
    "382": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "383": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x63E"
    },
    "386": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "387": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "388": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA224CEE7"
    },
    "393": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "394": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x647"
    },
    "397": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "398": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "399": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA3273D22"
    },
    "404": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "405": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x65A"
    },
    "408": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "409": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "412": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "413": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "414": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "415": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x38E56261"
    },
    "420": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "421": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25C"
    },
    "424": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "425": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "426": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4A4FBEEC"
    },
    "431": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "432": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x215"
    },
    "435": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "436": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "437": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6C9C2FAF"
    },
    "442": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "443": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EF"
    },
    "446": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "447": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "448": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6C9C2FAF"
    },
    "453": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "454": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5CE"
    },
    "457": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "458": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "459": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6E27D889"
    },
    "464": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "465": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5D6"
    },
    "468": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "469": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "470": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7071688A"
    },
    "475": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "476": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E9"
    },
    "479": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "480": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "481": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "486": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "487": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F1"
    },
    "490": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "491": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "494": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "495": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "496": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "497": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4A4FBEEC"
    },
    "502": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "503": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x572"
    },
    "506": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "507": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "508": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x50355D76"
    },
    "513": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "514": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B2"
    },
    "517": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "518": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "519": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x62FB00FC"
    },
    "524": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "525": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5BB"
    },
    "528": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "529": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "531": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "532": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "533": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "534": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "535": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x38E56261"
    },
    "540": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "541": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x48C"
    },
    "544": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "545": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "546": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x38ED7CFC"
    },
    "551": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "552": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4CD"
    },
    "555": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "556": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "557": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x39509351"
    },
    "562": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "563": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x522"
    },
    "566": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "567": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "568": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x43A8D914"
    },
    "573": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "574": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x535"
    },
    "577": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "578": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "579": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4966D086"
    },
    "584": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "585": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x548"
    },
    "588": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "589": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "590": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x497DFE63"
    },
    "595": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "596": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x55D"
    },
    "599": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "600": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "602": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "603": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "604": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "605": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "606": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x20D3A0B4"
    },
    "611": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "612": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C9"
    },
    "615": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "616": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "617": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x27764547"
    },
    "622": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "GT",
      "path": "10"
    },
    "623": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A3"
    },
    "626": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "627": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "628": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x27764547"
    },
    "633": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "634": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D8"
    },
    "637": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "638": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "639": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x313CE567"
    },
    "644": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "645": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "648": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "649": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "650": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x35AA2E44"
    },
    "655": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "656": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x407"
    },
    "659": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "660": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "661": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x37DEEA70"
    },
    "666": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "667": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x484"
    },
    "670": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "671": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "673": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "674": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "675": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "676": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "677": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x20D3A0B4"
    },
    "682": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "683": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A9"
    },
    "686": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "687": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "688": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x21B0908B"
    },
    "693": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "694": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B2"
    },
    "697": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "698": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "699": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "704": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "705": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3C5"
    },
    "708": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "709": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "711": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "712": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "713": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "714": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "715": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6FDDE03"
    },
    "720": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "721": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x311"
    },
    "724": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "725": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "726": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8AC5256"
    },
    "731": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "732": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32F"
    },
    "735": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "736": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "737": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "742": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "743": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x346"
    },
    "746": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "747": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "748": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "753": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "754": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x369"
    },
    "757": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "758": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "759": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1865C57D"
    },
    "764": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "765": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x371"
    },
    "768": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "769": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "770": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1D4E7793"
    },
    "775": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "EQ",
      "path": "10"
    },
    "776": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x389"
    },
    "779": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "780": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "781": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "783": {
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "784": {
      "first_revert": true,
      "fn": null,
      "offset": [
        271,
        13448
      ],
      "op": "REVERT",
      "path": "10"
    },
    "785": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "786": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319"
    },
    "789": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x857"
    },
    "792": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "793": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "794": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "796": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "797": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x326"
    },
    "800": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "801": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "802": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x223A"
    },
    "805": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "806": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "807": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "809": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "810": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "811": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "812": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "813": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "814": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "815": {
      "offset": [
        678,
        706
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "816": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "819": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6C"
    },
    "821": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "822": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "DUP2",
      "path": "10"
    },
    "823": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "JUMP",
      "path": "10"
    },
    "824": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "825": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "827": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "828": {
      "op": "SWAP1"
    },
    "829": {
      "op": "DUP2"
    },
    "830": {
      "op": "MSTORE"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "offset": [
        678,
        706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "837": {
      "op": "JUMP"
    },
    "838": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "839": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "842": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "845": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "846": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "848": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229E"
    },
    "851": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "852": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E9"
    },
    "856": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "857": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "858": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "861": {
      "op": "SWAP1"
    },
    "862": {
      "op": "ISZERO"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "DUP2"
    },
    "865": {
      "op": "MSTORE"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x326"
    },
    "872": {
      "op": "JUMP"
    },
    "873": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "874": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "876": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "877": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338"
    },
    "880": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "881": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "882": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x379"
    },
    "885": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x903"
    },
    "888": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13269,
        13446
      ],
      "op": "JUMP",
      "path": "10"
    },
    "889": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "890": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "892": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "893": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "896": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "897": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "898": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "899": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "900": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "901": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x230F"
    },
    "904": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13269,
        13446
      ],
      "op": "JUMP",
      "path": "10"
    },
    "905": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "906": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39C"
    },
    "909": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x397"
    },
    "912": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "913": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "915": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x233E"
    },
    "918": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMP",
      "path": "10"
    },
    "919": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "920": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x993"
    },
    "923": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMP",
      "path": "10"
    },
    "924": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "925": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "927": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "928": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "931": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "932": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23C1"
    },
    "936": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMP",
      "path": "10"
    },
    "937": {
      "offset": [
        2268,
        2295
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "938": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2268,
        2295
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "941": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2268,
        2295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x70"
    },
    "943": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2268,
        2295
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "944": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2268,
        2295
      ],
      "op": "DUP2",
      "path": "10"
    },
    "945": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2268,
        2295
      ],
      "op": "JUMP",
      "path": "10"
    },
    "946": {
      "offset": [
        2640,
        2667
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "947": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "950": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3C0"
    },
    "953": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "954": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "956": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "959": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        2640,
        2667
      ],
      "op": "JUMP",
      "path": "10"
    },
    "960": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "961": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD12"
    },
    "964": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        2640,
        2667
      ],
      "op": "JUMP",
      "path": "10"
    },
    "965": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "966": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "969": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D3"
    },
    "972": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "973": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "975": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241E"
    },
    "978": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "979": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "980": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD33"
    },
    "983": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "984": {
      "offset": [
        2756,
        2811
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "985": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "988": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E6"
    },
    "991": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "992": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "994": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245F"
    },
    "997": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        2756,
        2811
      ],
      "op": "JUMP",
      "path": "10"
    },
    "998": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "999": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x79"
    },
    "1001": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1003": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1004": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1006": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1007": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1008": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1009": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1011": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1012": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1013": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1014": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1015": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2756,
        2811
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1016": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1017": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1019": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1020": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "1022": {
      "op": "DUP2"
    },
    "1023": {
      "op": "MSTORE"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x326"
    },
    "1030": {
      "op": "JUMP"
    },
    "1031": {
      "offset": [
        2546,
        2593
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1032": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x451"
    },
    "1035": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x415"
    },
    "1038": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1039": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1041": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1044": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2546,
        2593
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1045": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1046": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "1048": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1050": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1051": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1053": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1054": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1055": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1056": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1058": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1059": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1060": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1061": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1062": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1064": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1065": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "ADD",
      "path": "10"
    },
    "1066": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1067": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1069": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1070": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "ADD",
      "path": "10"
    },
    "1071": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1072": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1074": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1075": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "ADD",
      "path": "10"
    },
    "1076": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1077": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1079": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1080": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1081": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "ADD",
      "path": "10"
    },
    "1082": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1083": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1084": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1094": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1095": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "AND",
      "path": "10"
    },
    "1096": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1097": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1098": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1099": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1100": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1102": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "AND",
      "path": "10"
    },
    "1103": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1104": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1105": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1106": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1108": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1109": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2546,
        2593
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1110": {
      "op": "SWAP6"
    },
    "1111": {
      "op": "DUP7"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1119": {
      "op": "SHL"
    },
    "1120": {
      "op": "SUB"
    },
    "1121": {
      "op": "SWAP1"
    },
    "1122": {
      "op": "SWAP5"
    },
    "1123": {
      "op": "AND"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1126": {
      "op": "DUP7"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "SWAP3"
    },
    "1130": {
      "op": "DUP5"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "SWAP2"
    },
    "1133": {
      "op": "SWAP1"
    },
    "1134": {
      "op": "SWAP2"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1138": {
      "op": "DUP4"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1143": {
      "op": "AND"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1146": {
      "op": "DUP3"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "op": "MSTORE"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "ADD"
    },
    "1152": {
      "offset": [
        2546,
        2593
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "1155": {
      "op": "JUMP"
    },
    "1156": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12585,
        12721
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1157": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12585,
        12721
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1160": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12585,
        12721
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD57"
    },
    "1163": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        12585,
        12721
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1164": {
      "offset": [
        2483,
        2540
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1165": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B5"
    },
    "1168": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x49A"
    },
    "1171": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1172": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1174": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1177": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        2483,
        2540
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1178": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1179": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x74"
    },
    "1181": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1183": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1184": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1186": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1187": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1188": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1189": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1191": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1192": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1193": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1200": {
      "op": "SHL"
    },
    "1201": {
      "op": "SUB"
    },
    "1202": {
      "offset": [
        2483,
        2540
      ],
      "op": "AND",
      "path": "10"
    },
    "1203": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1204": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1205": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1206": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1208": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2483,
        2540
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "op": "SUB"
    },
    "1217": {
      "op": "SWAP1"
    },
    "1218": {
      "op": "SWAP2"
    },
    "1219": {
      "op": "AND"
    },
    "1220": {
      "op": "DUP2"
    },
    "1221": {
      "op": "MSTORE"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "offset": [
        2483,
        2540
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "1228": {
      "op": "JUMP"
    },
    "1229": {
      "offset": [
        2599,
        2634
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1230": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x503"
    },
    "1233": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4DB"
    },
    "1236": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1237": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1239": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1242": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        2599,
        2634
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1243": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1244": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "1246": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1248": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1249": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1251": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1252": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1253": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1254": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1256": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1257": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1258": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1259": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1260": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1262": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1263": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1264": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "ADD",
      "path": "10"
    },
    "1265": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "op": "SUB"
    },
    "1274": {
      "offset": [
        2599,
        2634
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1275": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1276": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "AND",
      "path": "10"
    },
    "1277": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1278": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1280": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "AND",
      "path": "10"
    },
    "1281": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1282": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1283": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1284": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1286": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1287": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2599,
        2634
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "op": "SUB"
    },
    "1296": {
      "op": "SWAP1"
    },
    "1297": {
      "op": "SWAP4"
    },
    "1298": {
      "op": "AND"
    },
    "1299": {
      "op": "DUP4"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "SWAP1"
    },
    "1302": {
      "op": "ISZERO"
    },
    "1303": {
      "op": "ISZERO"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1306": {
      "op": "DUP4"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "offset": [
        2599,
        2634
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "1313": {
      "op": "JUMP"
    },
    "1314": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1315": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "1318": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x530"
    },
    "1321": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1322": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1324": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229E"
    },
    "1327": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1328": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1329": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDCA"
    },
    "1332": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1333": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1334": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39C"
    },
    "1337": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x543"
    },
    "1340": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1341": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1343": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2566"
    },
    "1346": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7292,
        7736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1347": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1348": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE09"
    },
    "1351": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7292,
        7736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1352": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1353": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x550"
    },
    "1356": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF33"
    },
    "1359": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13124,
        13263
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1360": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1361": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1363": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1364": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "1367": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1368": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1369": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25AD"
    },
    "1372": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13124,
        13263
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1373": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1374": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1377": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x56B"
    },
    "1380": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1381": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1383": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25C0"
    },
    "1386": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        4870,
        5766
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1387": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1388": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFA5"
    },
    "1391": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        4870,
        5766
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1392": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1393": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "STOP",
      "path": "10"
    },
    "1394": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1395": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x359"
    },
    "1398": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x580"
    },
    "1401": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1402": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1404": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245F"
    },
    "1407": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        12929,
        13118
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1408": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "AND",
      "path": "10"
    },
    "1418": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12993,
        12997
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1420": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1421": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1422": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1423": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13043
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x79"
    },
    "1425": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1427": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1428": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1429": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1430": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1432": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1433": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1434": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1435": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13023,
        13058
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1436": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13101,
        13111
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x6F"
    },
    "1438": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13101,
        13111
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1439": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1440": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1441": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1442": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "1444": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1445": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1446": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1447": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1448": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1449": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13090
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1450": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13097
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1452": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13097
      ],
      "op": "ADD",
      "path": "10"
    },
    "1453": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13097
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1454": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13111
      ],
      "op": "LT",
      "path": "10"
    },
    "1455": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13111
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1456": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13075,
        13111
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1457": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        12929,
        13118
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1458": {
      "offset": [
        576,
        601
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1459": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1462": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x69"
    },
    "1464": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1465": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1466": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1467": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1468": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1471": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C9"
    },
    "1474": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1475": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1477": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245F"
    },
    "1480": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "i",
      "offset": [
        12071,
        12365
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1481": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1482": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1143"
    },
    "1485": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "i",
      "offset": [
        12071,
        12365
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1486": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12828,
        12923
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1487": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12828,
        12923
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1490": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12828,
        12923
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11BA"
    },
    "1493": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        12828,
        12923
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1494": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1495": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1498": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E4"
    },
    "1501": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1502": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1504": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1507": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8666,
        8759
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1508": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1509": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11FA"
    },
    "1512": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8666,
        8759
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1513": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12472,
        12579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1514": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12472,
        12579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1517": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12472,
        12579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1207"
    },
    "1520": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12472,
        12579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1521": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1522": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338"
    },
    "1525": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FF"
    },
    "1528": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1529": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1531": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245F"
    },
    "1534": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1535": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 3
    },
    "1545": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1547": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1548": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1549": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1550": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1552": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1554": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1555": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1557": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1558": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1559": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1560": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1561": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1562": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1563": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1566": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x628"
    },
    "1569": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1570": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1572": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1575": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1576": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1577": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1218"
    },
    "1580": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1581": {
      "offset": [
        505,
        538
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1582": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1585": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x67"
    },
    "1587": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1588": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1589": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1590": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1591": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319"
    },
    "1594": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x142A"
    },
    "1597": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1598": {
      "offset": [
        2109,
        2136
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1599": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2109,
        2136
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1602": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2109,
        2136
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6E"
    },
    "1604": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2109,
        2136
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1605": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2109,
        2136
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1606": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2109,
        2136
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1607": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1608": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1611": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x655"
    },
    "1614": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1615": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1617": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25E2"
    },
    "1620": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3008,
        3841
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1621": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1622": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1439"
    },
    "1625": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3008,
        3841
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1626": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1627": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1630": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x668"
    },
    "1633": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1634": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1636": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x261F"
    },
    "1639": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10208,
        11280
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1640": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1641": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15BC"
    },
    "1644": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10208,
        11280
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1645": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1646": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "1649": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67B"
    },
    "1652": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1653": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1655": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229E"
    },
    "1658": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1659": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1660": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172E"
    },
    "1663": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1664": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1665": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "1668": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x68E"
    },
    "1671": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1672": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1674": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229E"
    },
    "1677": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1678": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1679": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17C0"
    },
    "1682": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1683": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1684": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1687": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6A1"
    },
    "1690": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1691": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1693": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1696": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4268,
        4745
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1697": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1698": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17CE"
    },
    "1701": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4268,
        4745
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1702": {
      "offset": [
        2301,
        2336
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1703": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2301,
        2336
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1706": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2301,
        2336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x71"
    },
    "1708": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2301,
        2336
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1709": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2301,
        2336
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1710": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2301,
        2336
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1711": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12371,
        12466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1712": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12371,
        12466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1715": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12371,
        12466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18B3"
    },
    "1718": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12371,
        12466
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1719": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1720": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6CA"
    },
    "1723": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6C5"
    },
    "1726": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1727": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1729": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1732": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        11569,
        12065
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1733": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1734": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18C4"
    },
    "1737": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        11569,
        12065
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1738": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1739": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1741": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1742": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1743": {
      "op": "SWAP4"
    },
    "1744": {
      "op": "ISZERO"
    },
    "1745": {
      "op": "ISZERO"
    },
    "1746": {
      "op": "DUP5"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1750": {
      "op": "DUP5"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "SWAP3"
    },
    "1753": {
      "op": "SWAP1"
    },
    "1754": {
      "op": "SWAP3"
    },
    "1755": {
      "op": "MSTORE"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "op": "SUB"
    },
    "1764": {
      "op": "AND"
    },
    "1765": {
      "op": "SWAP1"
    },
    "1766": {
      "op": "DUP3"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1771": {
      "op": "ADD"
    },
    "1772": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "1775": {
      "op": "JUMP"
    },
    "1776": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1777": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1780": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FE"
    },
    "1783": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1784": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1786": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1789": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7742,
        7940
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1790": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1791": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19D9"
    },
    "1794": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7742,
        7940
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1795": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1796": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x550"
    },
    "1799": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x711"
    },
    "1802": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1803": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1805": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1808": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11357,
        11563
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1809": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1810": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A57"
    },
    "1813": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11357,
        11563
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1814": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12727,
        12822
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1815": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12803,
        12815
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x6E"
    },
    "1817": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12803,
        12815
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1818": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12727,
        12822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1821": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        12727,
        12822
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1822": {
      "offset": [
        644,
        672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1823": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1826": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6B"
    },
    "1828": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1829": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1830": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1831": {
      "offset": [
        2023,
        2045
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1832": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2023,
        2045
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1835": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2023,
        2045
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6D"
    },
    "1837": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2023,
        2045
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1838": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2023,
        2045
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1839": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2023,
        2045
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1840": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1841": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1844": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x73E"
    },
    "1847": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1848": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1850": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245F"
    },
    "1853": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        3847,
        4173
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1854": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1855": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AC6"
    },
    "1858": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        3847,
        4173
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1859": {
      "offset": [
        2392,
        2429
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1860": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x77F"
    },
    "1863": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x751"
    },
    "1866": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1867": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1869": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "1872": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2392,
        2429
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1873": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1874": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x72"
    },
    "1876": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1878": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1879": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1881": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1882": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1883": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1884": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1886": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1887": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1888": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1889": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1890": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1892": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1893": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "ADD",
      "path": "10"
    },
    "1894": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1895": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1897": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1898": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1899": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "ADD",
      "path": "10"
    },
    "1900": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1907": {
      "op": "SHL"
    },
    "1908": {
      "op": "SUB"
    },
    "1909": {
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1910": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1911": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "AND",
      "path": "10"
    },
    "1912": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1913": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1914": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1916": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "AND",
      "path": "10"
    },
    "1917": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1918": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1919": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1920": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1922": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1923": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2392,
        2429
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "op": "SWAP1"
    },
    "1933": {
      "op": "SWAP5"
    },
    "1934": {
      "op": "AND"
    },
    "1935": {
      "op": "DUP5"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1939": {
      "op": "DUP5"
    },
    "1940": {
      "op": "ADD"
    },
    "1941": {
      "op": "SWAP3"
    },
    "1942": {
      "op": "SWAP1"
    },
    "1943": {
      "op": "SWAP3"
    },
    "1944": {
      "op": "MSTORE"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1947": {
      "op": "AND"
    },
    "1948": {
      "op": "SWAP1"
    },
    "1949": {
      "op": "DUP3"
    },
    "1950": {
      "op": "ADD"
    },
    "1951": {
      "op": "MSTORE"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "offset": [
        2392,
        2429
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "1958": {
      "op": "JUMP"
    },
    "1959": {
      "offset": [
        2698,
        2750
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1960": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1963": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7B5"
    },
    "1966": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1967": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1969": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245F"
    },
    "1972": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2698,
        2750
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1973": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1974": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x78"
    },
    "1976": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1978": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1979": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1981": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1982": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1983": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1984": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1986": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1987": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1988": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1989": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1990": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2698,
        2750
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1991": {
      "offset": [
        607,
        638
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1992": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "1995": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6A"
    },
    "1997": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1998": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1999": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2000": {
      "offset": [
        2435,
        2477
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2001": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B5"
    },
    "2004": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DE"
    },
    "2007": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2008": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2010": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2405"
    },
    "2013": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2435,
        2477
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2014": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2015": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x73"
    },
    "2017": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2019": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2020": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2022": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2023": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2024": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2025": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2027": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2028": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2029": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2036": {
      "op": "SHL"
    },
    "2037": {
      "op": "SUB"
    },
    "2038": {
      "offset": [
        2435,
        2477
      ],
      "op": "AND",
      "path": "10"
    },
    "2039": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2040": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2435,
        2477
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2041": {
      "offset": [
        2193,
        2218
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2042": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2193,
        2218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "2045": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2193,
        2218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6F"
    },
    "2047": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2193,
        2218
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2048": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2193,
        2218
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2049": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2193,
        2218
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2050": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2051": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338"
    },
    "2054": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x810"
    },
    "2057": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2058": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2060": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "2063": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2064": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "op": "SUB"
    },
    "2073": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "2074": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2075": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "2076": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2078": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2079": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2080": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2081": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "2083": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2085": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2086": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2087": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2088": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2090": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2091": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2092": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2093": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2094": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2095": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2096": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "2097": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2098": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2099": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2100": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2101": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2102": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2103": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2104": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2105": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2106": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2107": {
      "offset": [
        544,
        570
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2108": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "2111": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x68"
    },
    "2113": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2114": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2115": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2116": {
      "offset": [
        416,
        455
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2117": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x66"
    },
    "2119": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2120": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B5"
    },
    "2123": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "op": "SUB"
    },
    "2132": {
      "offset": [
        416,
        455
      ],
      "op": "AND",
      "path": "10"
    },
    "2133": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2134": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2135": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2136": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2138": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x36"
    },
    "2140": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2141": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2142": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x866"
    },
    "2145": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2146": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273E"
    },
    "2149": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2150": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2151": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2152": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2154": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2155": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2157": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2158": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2159": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2160": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2161": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2163": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2164": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2166": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2167": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2168": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2169": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2170": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2172": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2173": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2174": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2175": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2176": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2177": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2178": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2179": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2180": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2182": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2183": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2184": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2185": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2186": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x892"
    },
    "2189": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2190": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273E"
    },
    "2193": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2194": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2195": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2196": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2197": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DF"
    },
    "2200": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2201": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2202": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2204": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "2205": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B4"
    },
    "2208": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2209": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2212": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2213": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2214": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2215": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2216": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2217": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2218": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2219": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2220": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2222": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2223": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2224": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DF"
    },
    "2227": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2228": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2229": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2230": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2231": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2232": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2233": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2235": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2236": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2238": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2240": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2241": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2242": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2243": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2244": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2245": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2246": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2247": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2248": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2250": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2251": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2252": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2254": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2255": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2256": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2257": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "2258": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C2"
    },
    "2261": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2262": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2263": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2264": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "2265": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2267": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "2268": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2269": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2270": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2271": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2272": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2273": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2274": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2275": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2276": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2277": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2278": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2279": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2280": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2281": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2282": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2284": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "2285": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x8F7"
    },
    "2288": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2289": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2290": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2291": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4B"
    },
    "2294": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2295": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2296": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2298": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2299": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2300": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2301": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2302": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2303": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2304": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2305": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2306": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2307": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2308": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13336,
        13343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2310": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13345,
        13352
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2311": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13354,
        13361
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2313": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13363,
        13379
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2315": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 10,
      "value": "0x65"
    },
    "2317": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2319": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2320": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2321": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2322": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "2325": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "EXP",
      "path": "10"
    },
    "2326": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2327": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "DIV",
      "path": "10"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13428
      ],
      "op": "AND",
      "path": "10"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "SUB"
    },
    "2345": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13437
      ],
      "op": "AND",
      "path": "10"
    },
    "2346": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13437
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1865C57D"
    },
    "2351": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2353": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2354": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2355": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2360": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "AND",
      "path": "10"
    },
    "2361": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "2363": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "SHL",
      "path": "10"
    },
    "2364": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2365": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2366": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2368": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "ADD",
      "path": "10"
    },
    "2369": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2371": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2373": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2374": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2375": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2376": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "SUB",
      "path": "10"
    },
    "2377": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2378": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2379": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "GAS",
      "path": "10"
    },
    "2380": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "2381": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2382": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2383": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2384": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x95D"
    },
    "2387": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2388": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2389": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2391": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2392": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2393": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2394": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2396": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2397": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2398": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2399": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2400": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2401": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2402": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2404": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2405": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2406": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2408": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2409": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2410": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2412": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2413": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2414": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2415": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "ADD",
      "path": "10"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2418": {
      "op": "NOT"
    },
    "2419": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "AND",
      "path": "10"
    },
    "2420": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2421": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "ADD",
      "path": "10"
    },
    "2422": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2424": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2425": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x985"
    },
    "2428": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2429": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2430": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2431": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "ADD",
      "path": "10"
    },
    "2432": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2433": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27E0"
    },
    "2436": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13402,
        13439
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2437": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13402,
        13439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2438": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2439": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2440": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2441": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2442": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2443": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2444": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2445": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13395,
        13439
      ],
      "op": "POP",
      "path": "10"
    },
    "2446": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2447": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2448": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2449": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13269,
        13446
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2450": {
      "fn": "SmartnodesCore.getState",
      "jump": "o",
      "offset": [
        13269,
        13446
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2451": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2452": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6102,
        6126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x66"
    },
    "2454": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6102,
        6126
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2455": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5957,
        5986
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2457": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5957,
        5986
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2464": {
      "op": "SHL"
    },
    "2465": {
      "op": "SUB"
    },
    "2466": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6102,
        6126
      ],
      "op": "AND",
      "path": "10"
    },
    "2467": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6088,
        6098
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2468": {
      "branch": 115,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6088,
        6126
      ],
      "op": "EQ",
      "path": "10"
    },
    "2469": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6084,
        6312
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9D8"
    },
    "2472": {
      "branch": 115,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6084,
        6312
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2473": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6164,
        6174
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2474": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6187,
        6188
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2476": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2477": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2478": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2479": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6163
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x78"
    },
    "2481": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2483": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2484": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2486": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2487": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2488": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6146,
        6175
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2489": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6142,
        6302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9D8"
    },
    "2492": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6142,
        6302
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2493": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6209,
        6229
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 11,
      "value": "0x9C5"
    },
    "2496": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6220,
        6228
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2497": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6209,
        6219
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17CE"
    },
    "2500": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6209,
        6229
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2501": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6209,
        6229
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2502": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6276,
        6286
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 12
    },
    "2503": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2505": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2506": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2507": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2508": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x78"
    },
    "2510": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2512": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2513": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2515": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2516": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2517": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2518": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6258,
        6287
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6142,
        6302
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2521": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6330,
        6338
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 13
    },
    "2522": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA21"
    },
    "2525": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2526": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2528": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2529": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2535": {
      "op": "SHL"
    },
    "2536": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2537": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2540": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2542": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2543": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "ADD",
      "path": "10"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2549": {
      "op": "DUP3"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "op": "MSTORE"
    },
    "2552": {
      "op": "PUSH20",
      "value": "0x55736572206E6F74207265676973746572656421"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2578": {
      "op": "DUP3"
    },
    "2579": {
      "op": "ADD"
    },
    "2580": {
      "op": "MSTORE"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2583": {
      "op": "ADD"
    },
    "2584": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2585": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2587": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2588": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2589": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2590": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "SUB",
      "path": "10"
    },
    "2591": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2592": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "2593": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6322,
        6377
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2594": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6427,
        6428
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 14,
      "value": "0x0"
    },
    "2596": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2597": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2598": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2599": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6399
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "2601": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2603": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2604": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2606": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2607": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6408
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2608": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6415
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2615": {
      "op": "SHL"
    },
    "2616": {
      "op": "SUB"
    },
    "2617": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6415
      ],
      "op": "AND",
      "path": "10"
    },
    "2618": {
      "branch": 116,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6395,
        6429
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2619": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA7D"
    },
    "2622": {
      "branch": 116,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2623": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2625": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2626": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2632": {
      "op": "SHL"
    },
    "2633": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2634": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2637": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2639": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2640": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "ADD",
      "path": "10"
    },
    "2641": {
      "op": "MSTORE"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2646": {
      "op": "DUP3"
    },
    "2647": {
      "op": "ADD"
    },
    "2648": {
      "op": "MSTORE"
    },
    "2649": {
      "op": "PUSH20",
      "value": "0x2537B11030B63932B0B23C9031B932B0BA32B217"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2672": {
      "op": "SHL"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2675": {
      "op": "DUP3"
    },
    "2676": {
      "op": "ADD"
    },
    "2677": {
      "op": "MSTORE"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2680": {
      "op": "ADD"
    },
    "2681": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "2684": {
      "op": "JUMP"
    },
    "2685": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2686": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x65"
    },
    "2688": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6600
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2689": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2691": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2692": {
      "op": "PUSH4",
      "value": "0x71547B79"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2701": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2702": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2704": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2706": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2707": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "ADD",
      "path": "10"
    },
    "2708": {
      "op": "MSTORE"
    },
    "2709": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6539,
        6571
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2711": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6539,
        6571
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2718": {
      "op": "SHL"
    },
    "2719": {
      "op": "SUB"
    },
    "2720": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6600
      ],
      "op": "AND",
      "path": "10"
    },
    "2721": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6600
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2722": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6632
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE2A8F6F2"
    },
    "2727": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2733": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2735": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2736": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2737": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2738": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "SUB",
      "path": "10"
    },
    "2739": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2740": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2741": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "GAS",
      "path": "10"
    },
    "2742": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "2743": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2744": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2745": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2746": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAC7"
    },
    "2749": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2750": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2751": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2753": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2754": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2755": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2756": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2758": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2759": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2760": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "POP",
      "path": "10"
    },
    "2761": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "POP",
      "path": "10"
    },
    "2762": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "POP",
      "path": "10"
    },
    "2763": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "POP",
      "path": "10"
    },
    "2764": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2766": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2767": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2768": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2770": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2771": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2772": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2774": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2775": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2776": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2777": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "ADD",
      "path": "10"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2780": {
      "op": "NOT"
    },
    "2781": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "AND",
      "path": "10"
    },
    "2782": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2783": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "ADD",
      "path": "10"
    },
    "2784": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2786": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2787": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAEF"
    },
    "2790": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2791": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2792": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2793": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "ADD",
      "path": "10"
    },
    "2794": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2795": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x282E"
    },
    "2798": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6574,
        6635
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2799": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6574,
        6635
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2800": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2802": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2803": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2804": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6692,
        6693
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2806": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2807": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2808": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2809": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2810": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2811": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "ADD",
      "path": "10"
    },
    "2812": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2813": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2814": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2815": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6539,
        6635
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2816": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6539,
        6635
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2817": {
      "op": "POP"
    },
    "2818": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6645,
        6675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2820": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6645,
        6675
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2821": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2822": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2824": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2825": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2826": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "ADD",
      "path": "10"
    },
    "2827": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2828": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2829": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2830": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2831": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "2832": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "ADD",
      "path": "10"
    },
    "2833": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6678,
        6694
      ],
      "op": "POP",
      "path": "10"
    },
    "2836": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6645,
        6694
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2837": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6645,
        6694
      ],
      "op": "POP",
      "path": "10"
    },
    "2838": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6739,
        6748
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2840": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6734,
        6871
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2841": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6758,
        6773
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2842": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6758,
        6780
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2843": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6754,
        6755
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2844": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "10"
    },
    "2845": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6734,
        6871
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2846": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6734,
        6871
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB85"
    },
    "2849": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6734,
        6871
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2850": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6840
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 15,
      "value": "0x79"
    },
    "2852": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2854": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6856
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2855": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6857,
        6858
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2856": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2857": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2858": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2859": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "LT",
      "path": "10"
    },
    "2860": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB37"
    },
    "2863": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2864": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB37"
    },
    "2867": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2863"
    },
    "2870": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6841,
        6859
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2871": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2872": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2874": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "MUL",
      "path": "10"
    },
    "2875": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2877": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "ADD",
      "path": "10"
    },
    "2878": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "ADD",
      "path": "10"
    },
    "2879": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6841,
        6859
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "op": "SUB"
    },
    "2888": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "AND",
      "path": "10"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "op": "SUB"
    },
    "2897": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "AND",
      "path": "10"
    },
    "2898": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2899": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2900": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2902": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "ADD",
      "path": "10"
    },
    "2903": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2904": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2905": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2906": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2908": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "ADD",
      "path": "10"
    },
    "2909": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2911": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2912": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6820,
        6860
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2913": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6814
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2914": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6815,
        6816
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2915": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2916": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2917": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2918": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "LT",
      "path": "10"
    },
    "2919": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB72"
    },
    "2922": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2923": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB72"
    },
    "2926": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2863"
    },
    "2929": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6801,
        6817
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2930": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2931": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2934": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2935": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "MUL",
      "path": "10"
    },
    "2936": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2937": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2938": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2939": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "ADD",
      "path": "10"
    },
    "2940": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6817
      ],
      "op": "ADD",
      "path": "10"
    },
    "2941": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6860
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2942": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6782,
        6785
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 16,
      "value": "0x1"
    },
    "2944": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6782,
        6785
      ],
      "op": "ADD",
      "path": "10"
    },
    "2945": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6734,
        6871
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB18"
    },
    "2948": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6734,
        6871
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2949": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6734,
        6871
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x40"
    },
    "2953": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2954": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2955": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA0"
    },
    "2957": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2958": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "2959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2960": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2961": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6968,
        6978
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2962": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2963": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2964": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2966": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2967": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "2968": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2969": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2970": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2971": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2972": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2973": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "2974": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7071
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2975": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2984": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2985": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "GT",
      "path": "10"
    },
    "2986": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2987": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBB6"
    },
    "2990": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2991": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBB6"
    },
    "2994": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2483"
    },
    "2997": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7046,
        7079
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2998": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2999": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3001": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3002": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3003": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3004": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3005": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3006": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3007": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3009": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "MUL",
      "path": "10"
    },
    "3010": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3012": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "ADD",
      "path": "10"
    },
    "3013": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3014": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "ADD",
      "path": "10"
    },
    "3015": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3017": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3018": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3019": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3020": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBDF"
    },
    "3023": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3024": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3025": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3027": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "ADD",
      "path": "10"
    },
    "3028": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3030": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3031": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "MUL",
      "path": "10"
    },
    "3032": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3033": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "3034": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3035": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "3036": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "ADD",
      "path": "10"
    },
    "3037": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3040": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7079
      ],
      "op": "POP",
      "path": "10"
    },
    "3041": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3042": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3043": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3045": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3046": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7105,
        7116
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3047": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7105,
        7116
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3048": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3049": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3050": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3052": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MUL",
      "path": "10"
    },
    "3053": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3055": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3056": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3058": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3059": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3060": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3061": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3062": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3064": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3065": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3066": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3067": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3068": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3069": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3070": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3071": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3072": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3073": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3075": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3076": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3077": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3078": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3080": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MUL",
      "path": "10"
    },
    "3081": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3082": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3083": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3084": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "3085": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3087": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3088": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3089": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3090": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3091": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3092": {
      "op": "POP"
    },
    "3093": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3094": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3095": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7140,
        7144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3100": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3102": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3103": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3104": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3105": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3106": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3107": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6942,
        7155
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3108": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "DUP11",
      "path": "10"
    },
    "3109": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3110": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3111": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "3113": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3114": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3115": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3117": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3118": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3119": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3120": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3121": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3122": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3123": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "op": "SUB"
    },
    "3132": {
      "op": "NOT"
    },
    "3133": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "AND",
      "path": "10"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "op": "SUB"
    },
    "3142": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3143": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3144": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "AND",
      "path": "10"
    },
    "3145": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "OR",
      "path": "10"
    },
    "3146": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3147": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3148": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3149": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3150": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3151": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3152": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3153": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3154": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3155": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        6939
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3156": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC62"
    },
    "3159": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3160": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3161": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3162": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3165": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3166": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2185"
    },
    "3169": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6926,
        7155
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3170": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3171": {
      "op": "POP"
    },
    "3172": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3174": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3175": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3176": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3177": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3178": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3179": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC7E"
    },
    "3182": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3183": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3185": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3186": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3187": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3188": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3190": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3191": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3192": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3193": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3194": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2185"
    },
    "3197": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6926,
        7155
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3198": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3199": {
      "op": "POP"
    },
    "3200": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "3202": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3203": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3204": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3205": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3206": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3207": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC9A"
    },
    "3210": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3211": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3213": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3214": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3215": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3216": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3218": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3219": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3220": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3221": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3222": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21EA"
    },
    "3225": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6926,
        7155
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3226": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3227": {
      "op": "POP"
    },
    "3228": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "3230": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3231": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3232": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3233": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3234": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3235": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3237": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3238": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3239": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3240": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3241": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3244": {
      "op": "NOT"
    },
    "3245": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "AND",
      "path": "10"
    },
    "3246": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3247": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3248": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3249": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3250": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3251": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3252": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "OR",
      "path": "10"
    },
    "3253": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3254": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6926,
        7155
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3255": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 18,
      "value": "0x40"
    },
    "3257": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3258": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7184,
        7191
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3259": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7184,
        7191
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3260": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5DD5AFF7B55A6D23DB5800AE74FAFB29F5F00976A85526C852C81900D14CF3E7"
    },
    "3293": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3294": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCEA"
    },
    "3297": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3298": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7193,
        7208
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "3299": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7193,
        7208
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3300": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7210,
        7225
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3301": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7210,
        7225
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3302": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2879"
    },
    "3305": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7171,
        7226
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3306": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3307": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3309": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3310": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3311": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3312": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "SUB",
      "path": "10"
    },
    "3313": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3314": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7171,
        7226
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3315": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7246
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 19,
      "value": "0x69"
    },
    "3317": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3318": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3319": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3320": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7246
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3322": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD02"
    },
    "3325": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3326": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28A8"
    },
    "3329": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7236,
        7248
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3330": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3331": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3332": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3333": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7236,
        7248
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3334": {
      "op": "POP"
    },
    "3335": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7266,
        7279
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 20
    },
    "3336": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7266,
        7279
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "3337": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5822,
        7286
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "3338": {
      "op": "POP"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "op": "POP"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        5822,
        7286
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3346": {
      "offset": [
        2640,
        2667
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3347": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x77"
    },
    "3349": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3350": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3351": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3352": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3353": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "LT",
      "path": "10"
    },
    "3354": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD22"
    },
    "3357": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3358": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3360": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3361": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3362": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3363": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3365": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3366": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3367": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3368": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3370": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3371": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3372": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3373": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "ADD",
      "path": "10"
    },
    "3374": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3375": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2640,
        2667
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "offset": [
        2640,
        2667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3378": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        2640,
        2667
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3379": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3380": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3382": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3383": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0xD41"
    },
    "3386": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3387": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3388": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3389": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6F"
    },
    "3392": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3393": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3394": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0xD4C"
    },
    "3397": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3398": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3399": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3400": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D01"
    },
    "3403": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3404": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3405": {
      "op": "POP"
    },
    "3406": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x1"
    },
    "3408": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3409": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3410": {
      "op": "POP"
    },
    "3411": {
      "op": "POP"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3415": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12585,
        12721
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3416": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12695
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x65"
    },
    "3418": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12695
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3419": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3421": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3422": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3423": {
      "op": "PUSH4",
      "value": "0x48F17129"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3432": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3433": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3434": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3435": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12643,
        12650
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3437": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12643,
        12650
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3444": {
      "op": "SHL"
    },
    "3445": {
      "op": "SUB"
    },
    "3446": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12695
      ],
      "op": "AND",
      "path": "10"
    },
    "3447": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12695
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3448": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12712
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x91E2E252"
    },
    "3453": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12712
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3454": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3456": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3457": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3458": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "ADD",
      "path": "10"
    },
    "3459": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3460": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3462": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3463": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3464": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3465": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3466": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3467": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SUB",
      "path": "10"
    },
    "3468": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "ADD",
      "path": "10"
    },
    "3469": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3470": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12695
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3471": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "GAS",
      "path": "10"
    },
    "3472": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3473": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3474": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3475": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3476": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDA1"
    },
    "3479": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3480": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3481": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3483": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3484": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3485": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3486": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3488": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3489": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3490": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "POP",
      "path": "10"
    },
    "3491": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "POP",
      "path": "10"
    },
    "3492": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "POP",
      "path": "10"
    },
    "3493": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "POP",
      "path": "10"
    },
    "3494": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3496": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3497": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3498": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3500": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "NOT",
      "path": "10"
    },
    "3501": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3503": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3504": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "ADD",
      "path": "10"
    },
    "3505": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "AND",
      "path": "10"
    },
    "3506": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3507": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "ADD",
      "path": "10"
    },
    "3508": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3509": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3511": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3512": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "POP",
      "path": "10"
    },
    "3513": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3514": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "ADD",
      "path": "10"
    },
    "3515": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3516": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC5"
    },
    "3519": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3520": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3521": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28C1"
    },
    "3524": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        12669,
        12714
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3525": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12669,
        12714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3526": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12662,
        12714
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3527": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12662,
        12714
      ],
      "op": "POP",
      "path": "10"
    },
    "3528": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12585,
        12721
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3529": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "o",
      "offset": [
        12585,
        12721
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3530": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3531": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3532": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3534": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 25
    },
    "3535": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3536": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3537": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "3539": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3541": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3542": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3543": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3544": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3546": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3547": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3548": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3555": {
      "op": "SHL"
    },
    "3556": {
      "op": "SUB"
    },
    "3557": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3558": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "2"
    },
    "3559": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3560": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3561": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3562": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3563": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3564": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3565": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3566": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3567": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3568": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3569": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3570": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F7"
    },
    "3573": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3574": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3575": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3576": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3577": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3578": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE04"
    },
    "3581": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3582": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3583": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3584": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28DA"
    },
    "3587": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3588": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3589": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4B"
    },
    "3592": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3593": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3594": {
      "offset": [
        2896,
        2920
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x66"
    },
    "3596": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2896,
        2920
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3597": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7419,
        7435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "3599": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7419,
        7435
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3606": {
      "op": "SHL"
    },
    "3607": {
      "op": "SUB"
    },
    "3608": {
      "offset": [
        2896,
        2920
      ],
      "op": "AND",
      "path": "10"
    },
    "3609": {
      "offset": [
        2882,
        2892
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3610": {
      "offset": [
        2882,
        2920
      ],
      "op": "EQ",
      "path": "10"
    },
    "3611": {
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE36"
    },
    "3614": {
      "offset": [
        2861,
        2984
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3615": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3617": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3624": {
      "op": "SHL"
    },
    "3625": {
      "offset": [
        2861,
        2984
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3626": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3627": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3629": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "ADD",
      "path": "10"
    },
    "3630": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "3633": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3634": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28ED"
    },
    "3637": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        2861,
        2984
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3638": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3639": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 26,
      "value": "0x0"
    },
    "3641": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3642": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3643": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3644": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7478
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "3646": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3648": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3649": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3651": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3652": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7487
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3653": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3655": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7498
      ],
      "op": "ADD",
      "path": "10"
    },
    "3656": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7474,
        7505
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3657": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7455,
        7470
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3658": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7455,
        7470
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3659": {
      "branch": 117,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7455,
        7505
      ],
      "op": "EQ",
      "path": "10"
    },
    "3660": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7447,
        7506
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE54"
    },
    "3663": {
      "branch": 117,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7447,
        7506
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3664": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7447,
        7506
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3666": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7447,
        7506
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3667": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7447,
        7506
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3668": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7447,
        7506
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3669": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 27,
      "value": "0x0"
    },
    "3671": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3672": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3673": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3674": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "3676": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3678": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3679": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3680": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3681": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3683": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3684": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3685": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7530
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3686": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3687": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3688": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE79"
    },
    "3691": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3692": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7538
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3694": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3695": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7538
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3696": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7538
      ],
      "op": "ADD",
      "path": "10"
    },
    "3697": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7538
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3698": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3699": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "ADD",
      "path": "10"
    },
    "3700": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3701": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2185"
    },
    "3704": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7517,
        7549
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3705": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7517,
        7549
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7584,
        7589
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 28,
      "value": "0x0"
    },
    "3709": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3710": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3711": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3712": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "3714": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3716": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3717": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3719": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3720": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3721": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3722": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7572
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3723": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7581
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3725": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7581
      ],
      "op": "ADD",
      "path": "10"
    },
    "3726": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7589
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3727": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7589
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3730": {
      "op": "NOT"
    },
    "3731": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7589
      ],
      "op": "AND",
      "path": "10"
    },
    "3732": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3733": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7559,
        7589
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3734": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "MLOAD",
      "path": "10",
      "statement": 29
    },
    "3735": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7564,
        7571
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3736": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7564,
        7571
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3737": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x9B5ED714C31DFCB1A9397710B6FC1842F37D94AB5DC0CCB528D9A2C97EA76F2A"
    },
    "3770": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3771": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEC7"
    },
    "3774": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3775": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7671,
        7686
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "3776": {
      "op": "DUP2"
    },
    "3777": {
      "op": "MSTORE"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "SWAP1"
    },
    "3782": {
      "op": "JUMP"
    },
    "3783": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3784": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3786": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3787": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3788": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3789": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "SUB",
      "path": "10"
    },
    "3790": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3791": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7649,
        7687
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3792": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 30,
      "value": "0x0"
    },
    "3794": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3795": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3796": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3797": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7709
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "3799": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3801": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3802": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3803": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3804": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3806": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3807": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3808": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3809": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7718
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3810": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3812": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7729
      ],
      "op": "ADD",
      "path": "10"
    },
    "3813": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3814": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3815": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3816": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3817": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3818": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3819": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "MUL",
      "path": "10"
    },
    "3820": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3821": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "ADD",
      "path": "10"
    },
    "3822": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3823": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "ADD",
      "path": "10"
    },
    "3824": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3825": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3826": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3827": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3828": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3829": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3830": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3831": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7729
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3832": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3833": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "ADD",
      "path": "10"
    },
    "3834": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7705,
        7729
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3835": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3836": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3837": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3838": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF26"
    },
    "3841": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3842": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3844": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "MUL",
      "path": "10"
    },
    "3845": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3846": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "ADD",
      "path": "10"
    },
    "3847": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3848": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3849": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3851": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3852": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3854": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3856": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3857": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3858": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3859": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3860": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3861": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3862": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3863": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3865": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "ADD",
      "path": "10"
    },
    "3866": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3867": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3869": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "ADD",
      "path": "10"
    },
    "3870": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3871": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3872": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3873": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "GT",
      "path": "10"
    },
    "3874": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF12"
    },
    "3877": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3878": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3879": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "POP",
      "path": "10"
    },
    "3880": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "POP",
      "path": "10"
    },
    "3881": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "POP",
      "path": "10"
    },
    "3882": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "POP",
      "path": "10"
    },
    "3883": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "POP",
      "path": "10"
    },
    "3884": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3885": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7698,
        7729
      ],
      "op": "POP",
      "path": "10"
    },
    "3886": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3887": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3888": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "POP",
      "path": "10"
    },
    "3889": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7292,
        7736
      ],
      "op": "POP",
      "path": "10"
    },
    "3890": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        7292,
        7736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3891": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13124,
        13263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3892": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13232
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 31,
      "value": "0x65"
    },
    "3894": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13232
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3895": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3897": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3898": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3899": {
      "op": "PUSH4",
      "value": "0xFBCCA273"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3906": {
      "op": "SHL"
    },
    "3907": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3908": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3909": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3910": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3911": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13171,
        13187
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "3913": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13171,
        13187
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3920": {
      "op": "SHL"
    },
    "3921": {
      "op": "SUB"
    },
    "3922": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13232
      ],
      "op": "AND",
      "path": "10"
    },
    "3923": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13232
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3924": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13254
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFBCCA273"
    },
    "3929": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13254
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3930": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3932": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3933": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3934": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "ADD",
      "path": "10"
    },
    "3935": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3936": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3938": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13232
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3939": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3940": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3941": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3942": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3943": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SUB",
      "path": "10"
    },
    "3944": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "ADD",
      "path": "10"
    },
    "3945": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3946": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13232
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3947": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "GAS",
      "path": "10"
    },
    "3948": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3949": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3950": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3951": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3952": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF7D"
    },
    "3955": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3956": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3957": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3959": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3960": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3961": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3962": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3964": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3965": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3966": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "POP",
      "path": "10"
    },
    "3967": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "POP",
      "path": "10"
    },
    "3968": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "POP",
      "path": "10"
    },
    "3969": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "POP",
      "path": "10"
    },
    "3970": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3972": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3973": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3974": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3976": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3977": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3978": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3980": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3981": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3982": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3983": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "ADD",
      "path": "10"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3986": {
      "op": "NOT"
    },
    "3987": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "AND",
      "path": "10"
    },
    "3988": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3989": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "ADD",
      "path": "10"
    },
    "3990": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3992": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3993": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC5"
    },
    "3996": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3997": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3998": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3999": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "ADD",
      "path": "10"
    },
    "4000": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4001": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13206,
        13256
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x282E"
    },
    "4004": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13206,
        13256
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4005": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4006": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5023,
        5033
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 32
    },
    "4007": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4009": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4010": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4011": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4012": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5022
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x79"
    },
    "4014": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4016": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4017": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4019": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4020": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4021": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5034
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4022": {
      "branch": 118,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5002,
        5039
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4023": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1002"
    },
    "4026": {
      "branch": 118,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4027": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4029": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4036": {
      "op": "SHL"
    },
    "4037": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4038": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4041": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4043": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4044": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "ADD",
      "path": "10"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4050": {
      "op": "DUP3"
    },
    "4051": {
      "op": "ADD"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206578697374732E00000000000000"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "4097": {
      "op": "JUMP"
    },
    "4098": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4981,
        5090
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4099": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5132,
        5142
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 33
    },
    "4100": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4102": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4103": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4104": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4105": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "4107": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4109": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4110": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4112": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4113": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4114": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4115": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5147,
        5158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4116": {
      "op": "GT"
    },
    "4117": {
      "branch": 119,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5122,
        5158
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4118": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5122,
        5187
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4119": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5122,
        5187
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4120": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5122,
        5187
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1023"
    },
    "4123": {
      "branch": 119,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5122,
        5187
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4124": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5122,
        5187
      ],
      "op": "POP",
      "path": "10"
    },
    "4125": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5177,
        5187
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6F"
    },
    "4127": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5177,
        5187
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4128": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5162,
        5173
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4129": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5162,
        5187
      ],
      "op": "LT",
      "path": "10"
    },
    "4130": {
      "branch": 120,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5162,
        5187
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4131": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5122,
        5187
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4132": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x106F"
    },
    "4135": {
      "branch": 120,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4136": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4138": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4145": {
      "op": "SHL"
    },
    "4146": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4147": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4150": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4152": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4153": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "ADD",
      "path": "10"
    },
    "4154": {
      "op": "MSTORE"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4159": {
      "op": "DUP3"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "MSTORE"
    },
    "4162": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4197": {
      "op": "DUP3"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "op": "MSTORE"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4202": {
      "op": "ADD"
    },
    "4203": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "4206": {
      "op": "JUMP"
    },
    "4207": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5101,
        5240
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4208": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 34,
      "value": "0x40"
    },
    "4210": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4211": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4212": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA0"
    },
    "4214": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4215": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4216": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4217": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4218": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4219": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4220": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4221": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5415,
        5425
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4222": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4224": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4225": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4226": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4227": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4228": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4229": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4230": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5447,
        5457
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6F"
    },
    "4232": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5447,
        5457
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4233": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5447,
        5457
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4234": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4235": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4236": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4237": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4238": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4239": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "4244": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4245": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4246": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4247": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4248": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4249": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5510,
        5512
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x32"
    },
    "4251": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "4253": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP10",
      "path": "10"
    },
    "4254": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4255": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4256": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4257": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4258": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5308,
        5326
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x67"
    },
    "4260": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5308,
        5326
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4261": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5308,
        5326
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4262": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5327
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4263": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5327
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4264": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5307
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "4266": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5327
      ],
      "op": "DUP9",
      "path": "10"
    },
    "4267": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5327
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4268": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5327
      ],
      "op": "DUP11",
      "path": "10"
    },
    "4269": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5327
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4270": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5327
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4271": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "4272": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4273": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "DUP11",
      "path": "10"
    },
    "4274": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4275": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "4276": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4277": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4279": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "DUP11",
      "path": "10"
    },
    "4280": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4281": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4282": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "op": "SUB"
    },
    "4291": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4292": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4293": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "AND",
      "path": "10"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "op": "NOT"
    },
    "4303": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4304": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4305": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "AND",
      "path": "10"
    },
    "4306": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "OR",
      "path": "10"
    },
    "4307": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4308": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4309": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4310": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4311": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4313": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "DUP11",
      "path": "10"
    },
    "4314": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4315": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4316": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4317": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4318": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4320": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "DUP10",
      "path": "10"
    },
    "4321": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4322": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4323": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4324": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4326": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4327": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "4328": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "ADD",
      "path": "10"
    },
    "4329": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4330": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4331": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5330,
        5523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "4333": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4334": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "4335": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "AND",
      "path": "10"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4338": {
      "op": "NOT"
    },
    "4339": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4340": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "4341": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "AND",
      "path": "10"
    },
    "4342": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "4343": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4344": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "4345": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "OR",
      "path": "10"
    },
    "4346": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4347": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "4348": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5523
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4349": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5569,
        5587
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 35
    },
    "4350": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5569,
        5587
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4351": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4352": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4353": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4354": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5554
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x79"
    },
    "4356": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4357": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4358": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4359": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4360": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5566
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4361": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5534,
        5587
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4362": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 36
    },
    "4363": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4364": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4365": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5619
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x74"
    },
    "4367": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4368": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4369": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4370": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4371": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4372": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4373": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5635
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4374": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4375": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4376": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4377": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4378": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "AND",
      "path": "10"
    },
    "4379": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4380": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "OR",
      "path": "10"
    },
    "4381": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4382": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4383": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5648
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4384": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5717,
        5727
      ],
      "op": "SLOAD",
      "path": "10",
      "statement": 37
    },
    "4385": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5693,
        5728
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x112A"
    },
    "4388": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5693,
        5728
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4389": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5415,
        5425
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4390": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5693,
        5704
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1ECF"
    },
    "4393": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5693,
        5728
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4394": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5693,
        5728
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4395": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5757
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 38,
      "value": "0x67"
    },
    "4397": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4398": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4399": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4400": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4402": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x113A"
    },
    "4405": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4406": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28A8"
    },
    "4409": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5739,
        5759
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4410": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4411": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4412": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4413": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "POP",
      "path": "10"
    },
    "4414": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4415": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5739,
        5759
      ],
      "op": "POP",
      "path": "10"
    },
    "4416": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "POP",
      "path": "10"
    },
    "4417": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4870,
        5766
      ],
      "op": "POP",
      "path": "10"
    },
    "4418": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        4870,
        5766
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4419": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4426": {
      "op": "SHL"
    },
    "4427": {
      "op": "SUB"
    },
    "4428": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4429": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "AND",
      "path": "10"
    },
    "4430": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12161,
        12168
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4432": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4433": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4434": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4435": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12222
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x79"
    },
    "4437": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4439": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4440": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4442": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4443": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4444": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12202,
        12240
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4445": {
      "branch": 121,
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12258,
        12273
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 39
    },
    "4446": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11A5"
    },
    "4449": {
      "branch": 121,
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4450": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4452": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4459": {
      "op": "SHL"
    },
    "4460": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4461": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4464": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4466": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4467": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "ADD",
      "path": "10"
    },
    "4468": {
      "op": "MSTORE"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4473": {
      "op": "DUP3"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "MSTORE"
    },
    "4476": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4507": {
      "op": "DUP3"
    },
    "4508": {
      "op": "ADD"
    },
    "4509": {
      "op": "MSTORE"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4512": {
      "op": "ADD"
    },
    "4513": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "4516": {
      "op": "JUMP"
    },
    "4517": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12250,
        12303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4518": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 40,
      "value": "0x0"
    },
    "4520": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4521": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4522": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4523": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "4525": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4527": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4528": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4530": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4531": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12344
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4532": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12358
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4533": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12321,
        12358
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4534": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12071,
        12365
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4535": {
      "op": "POP"
    },
    "4536": {
      "op": "POP"
    },
    "4537": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "o",
      "offset": [
        12071,
        12365
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4538": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12828,
        12923
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4539": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12872,
        12879
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4541": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12902
      ],
      "op": "ADDRESS",
      "path": "10",
      "statement": 41
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4548": {
      "op": "SHL"
    },
    "4549": {
      "op": "SUB"
    },
    "4550": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12914
      ],
      "op": "AND",
      "path": "10"
    },
    "4551": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12914
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "4556": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4558": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4559": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4560": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4565": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "AND",
      "path": "10"
    },
    "4566": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "4568": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "SHL",
      "path": "10"
    },
    "4569": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4570": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4571": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4573": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "ADD",
      "path": "10"
    },
    "4574": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4576": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4578": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4579": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4580": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4581": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "SUB",
      "path": "10"
    },
    "4582": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4583": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4584": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "GAS",
      "path": "10"
    },
    "4585": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "4586": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4587": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4588": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4589": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDA1"
    },
    "4592": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4593": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4594": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4596": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4597": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "4598": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4599": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4601": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        12898,
        12916
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4602": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4603": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8721,
        8752
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 42,
      "value": "0x1204"
    },
    "4606": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8733,
        8743
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4607": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8745,
        8751
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4608": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8721,
        8732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1ECF"
    },
    "4611": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8721,
        8752
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4612": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8721,
        8752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4613": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8666,
        8759
      ],
      "op": "POP",
      "path": "10"
    },
    "4614": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        8666,
        8759
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4615": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12472,
        12579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4616": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12524,
        12531
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4618": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12571,
        12572
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 43,
      "value": "0x1"
    },
    "4620": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12550,
        12568
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x67"
    },
    "4622": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12550,
        12568
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4623": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12550,
        12572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC5"
    },
    "4626": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12550,
        12572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4627": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12550,
        12572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4628": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12550,
        12572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2933"
    },
    "4631": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12550,
        12572
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4632": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4633": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8865,
        8875
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4634": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8822,
        8841
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4636": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4637": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4638": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4639": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8864
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x79"
    },
    "4641": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4643": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4644": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4646": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4647": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4648": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8844,
        8876
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4649": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8894,
        8909
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 44
    },
    "4650": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1275"
    },
    "4653": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4654": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4656": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4657": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4663": {
      "op": "SHL"
    },
    "4664": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4665": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4668": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4670": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4671": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "ADD",
      "path": "10"
    },
    "4672": {
      "op": "MSTORE"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4677": {
      "op": "DUP3"
    },
    "4678": {
      "op": "ADD"
    },
    "4679": {
      "op": "MSTORE"
    },
    "4680": {
      "op": "PUSH32",
      "value": "0x4E6F74206120726567697374657265642076616C696461746F722E0000000000"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4715": {
      "op": "DUP3"
    },
    "4716": {
      "op": "ADD"
    },
    "4717": {
      "op": "MSTORE"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "4724": {
      "op": "JUMP"
    },
    "4725": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8886,
        8941
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4726": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8952,
        8979
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4728": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4729": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4730": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4731": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        8992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "4733": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4735": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4736": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4738": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4739": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8982,
        9005
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4740": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9034,
        9050
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 45,
      "value": "0x2"
    },
    "4742": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9034,
        9050
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4743": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9034,
        9050
      ],
      "op": "ADD",
      "path": "10"
    },
    "4744": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9034,
        9050
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4745": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9024,
        9050
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4746": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9024,
        9050
      ],
      "op": "GT",
      "path": "10"
    },
    "4747": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9024,
        9050
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4748": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12D7"
    },
    "4751": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4752": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4754": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4755": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4763": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4766": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4768": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4769": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "ADD",
      "path": "10"
    },
    "4770": {
      "op": "MSTORE"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4775": {
      "op": "DUP3"
    },
    "4776": {
      "op": "ADD"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4813": {
      "op": "DUP3"
    },
    "4814": {
      "op": "ADD"
    },
    "4815": {
      "op": "MSTORE"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4818": {
      "op": "ADD"
    },
    "4819": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "4822": {
      "op": "JUMP"
    },
    "4823": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9016,
        9085
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4824": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9112,
        9113
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 46,
      "value": "0x0"
    },
    "4826": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9103,
        9109
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4827": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9103,
        9113
      ],
      "op": "GT",
      "path": "10"
    },
    "4828": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12F7"
    },
    "4831": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4832": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4834": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4843": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4844": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4846": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "ADD",
      "path": "10"
    },
    "4847": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "4850": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4851": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2946"
    },
    "4854": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9095,
        9151
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4855": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        9151
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4856": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9237,
        9246
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4857": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9237,
        9257
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4859": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9237,
        9257
      ],
      "op": "ADD",
      "path": "10"
    },
    "4860": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9237,
        9257
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4861": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9261,
        9262
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4863": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9237,
        9262
      ],
      "op": "SUB",
      "path": "10"
    },
    "4864": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9233,
        10025
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1377"
    },
    "4867": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9233,
        10025
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4868": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9319,
        9331
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 47,
      "value": "0x70"
    },
    "4870": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9319,
        9331
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4871": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9301,
        9331
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1310"
    },
    "4874": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9301,
        9331
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4875": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9301,
        9316
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "4876": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9301,
        9331
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28DA"
    },
    "4879": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9301,
        9331
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4880": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9301,
        9331
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4881": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9278,
        9298
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4883": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9278,
        9298
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4884": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9278,
        9298
      ],
      "op": "ADD",
      "path": "10"
    },
    "4885": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9278,
        9331
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4886": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4888": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9445
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4889": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9445
      ],
      "op": "ADD",
      "path": "10"
    },
    "4890": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9445
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4891": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9407,
        9426
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4893": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9407,
        9426
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4894": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1328"
    },
    "4897": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4898": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9448,
        9454
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4899": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9448,
        9454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4900": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2933"
    },
    "4903": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9429,
        9454
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4904": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9429,
        9454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4905": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9407,
        9454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4906": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9407,
        9454
      ],
      "op": "POP",
      "path": "10"
    },
    "4907": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9490,
        9500
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 48
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4914": {
      "op": "SHL"
    },
    "4915": {
      "op": "SUB"
    },
    "4916": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "AND",
      "path": "10"
    },
    "4917": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "4950": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9502,
        9511
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4951": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9502,
        9522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4953": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9502,
        9522
      ],
      "op": "ADD",
      "path": "10"
    },
    "4954": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9502,
        9522
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4955": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4957": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4958": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1369"
    },
    "4961": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4962": {
      "op": "DUP2"
    },
    "4963": {
      "op": "MSTORE"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4966": {
      "op": "ADD"
    },
    "4967": {
      "op": "SWAP1"
    },
    "4968": {
      "op": "JUMP"
    },
    "4969": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4970": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4972": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4973": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4974": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4975": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "SUB",
      "path": "10"
    },
    "4976": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4977": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9474,
        9523
      ],
      "op": "LOG2",
      "path": "10"
    },
    "4978": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9264,
        9561
      ],
      "op": "POP",
      "path": "10"
    },
    "4979": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8812,
        10031
      ],
      "op": "POP",
      "path": "10"
    },
    "4980": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8812,
        10031
      ],
      "op": "POP",
      "path": "10"
    },
    "4981": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "POP",
      "path": "10"
    },
    "4982": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4983": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9233,
        10025
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4984": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9703,
        9712
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 49
    },
    "4985": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9703,
        9723
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4987": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9703,
        9723
      ],
      "op": "ADD",
      "path": "10"
    },
    "4988": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9703,
        9723
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4989": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9684,
        9699
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "4990": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9684,
        9723
      ],
      "op": "LT",
      "path": "10"
    },
    "4991": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9684,
        9723
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4992": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13CB"
    },
    "4995": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4996": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4998": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5005": {
      "op": "SHL"
    },
    "5006": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5007": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5010": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5012": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5013": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "ADD",
      "path": "10"
    },
    "5014": {
      "op": "MSTORE"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5019": {
      "op": "DUP3"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "MSTORE"
    },
    "5022": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5057": {
      "op": "DUP3"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "MSTORE"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "5066": {
      "op": "JUMP"
    },
    "5067": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9659,
        9781
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5068": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9816,
        9822
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 50
    },
    "5069": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9805
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5070": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9812
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "5072": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9812
      ],
      "op": "ADD",
      "path": "10"
    },
    "5073": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9812
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5075": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5076": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5077": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5078": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13DF"
    },
    "5081": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5082": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5083": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2933"
    },
    "5086": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9796,
        9822
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5087": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5088": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5089": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5090": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9796,
        9822
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9836,
        9861
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 51,
      "value": "0x13EF"
    },
    "5095": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9836,
        9861
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5096": {
      "op": "POP"
    },
    "5097": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9842,
        9852
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5098": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9854,
        9860
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5099": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9836,
        9841
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203A"
    },
    "5102": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9836,
        9861
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5103": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9836,
        9861
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5104": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 52,
      "value": "0x40"
    },
    "5106": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5107": {
      "op": "DUP4"
    },
    "5108": {
      "op": "DUP2"
    },
    "5109": {
      "op": "MSTORE"
    },
    "5110": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9943,
        9953
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5111": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9943,
        9953
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5112": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "5145": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5148": {
      "op": "ADD"
    },
    "5149": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5151": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5152": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5153": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5154": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "SUB",
      "path": "10"
    },
    "5155": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5156": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9928,
        9962
      ],
      "op": "LOG2",
      "path": "10"
    },
    "5157": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9233,
        10025
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5158": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8812,
        10031
      ],
      "op": "POP",
      "path": "10"
    },
    "5159": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8812,
        10031
      ],
      "op": "POP",
      "path": "10"
    },
    "5160": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "POP",
      "path": "10"
    },
    "5161": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5162": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5163": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5165": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x37"
    },
    "5167": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5168": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5169": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x866"
    },
    "5172": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5173": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273E"
    },
    "5176": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5177": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5178": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5180": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5181": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5184": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5185": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "5186": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5188": {
      "branch": 144,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "5189": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1454"
    },
    "5192": {
      "branch": 144,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5193": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5195": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5196": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5198": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "5199": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5200": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1458"
    },
    "5203": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5204": {
      "branch": 145,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5205": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 54
    },
    "5206": {
      "op": "EXTCODESIZE"
    },
    "5207": {
      "op": "ISZERO"
    },
    "5208": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5209": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14BB"
    },
    "5212": {
      "branch": 145,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5213": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5215": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5222": {
      "op": "SHL"
    },
    "5223": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5224": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5227": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5229": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5230": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "5231": {
      "op": "MSTORE"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5236": {
      "op": "DUP3"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "op": "MSTORE"
    },
    "5239": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5274": {
      "op": "DUP3"
    },
    "5275": {
      "op": "ADD"
    },
    "5276": {
      "op": "MSTORE"
    },
    "5277": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "5294": {
      "op": "SHL"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5297": {
      "op": "DUP3"
    },
    "5298": {
      "op": "ADD"
    },
    "5299": {
      "op": "MSTORE"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5302": {
      "op": "ADD"
    },
    "5303": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA18"
    },
    "5306": {
      "op": "JUMP"
    },
    "5307": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5308": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5310": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5311": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5314": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5315": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "5316": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5318": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "5319": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5320": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5321": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5322": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14DD"
    },
    "5325": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5326": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5328": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5329": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5330": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5333": {
      "op": "NOT"
    },
    "5334": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "5335": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "5338": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "5339": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5340": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5341": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5342": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 55,
      "value": "0x1524"
    },
    "5345": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5347": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5348": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5349": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5351": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "ADD",
      "path": "10"
    },
    "5352": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5354": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5355": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5356": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "5358": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5359": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5360": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5362": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "ADD",
      "path": "10"
    },
    "5363": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5376": {
      "op": "SHL"
    },
    "5377": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5378": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5379": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "POP",
      "path": "10"
    },
    "5380": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5382": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5383": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5384": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5386": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "ADD",
      "path": "10"
    },
    "5387": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5389": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5390": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5391": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5393": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5394": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5395": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5397": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "ADD",
      "path": "10"
    },
    "5398": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5404": {
      "op": "SHL"
    },
    "5405": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5406": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5407": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "POP",
      "path": "10"
    },
    "5408": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3101
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2119"
    },
    "5411": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3089,
        3122
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5412": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3089,
        3122
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5413": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3220,
        3221
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 56,
      "value": "0x1"
    },
    "5415": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3206,
        3217
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x68"
    },
    "5417": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3206,
        3221
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5418": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3206,
        3221
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5419": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3206,
        3221
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5420": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3231,
        3241
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 57,
      "value": "0x69"
    },
    "5422": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3231,
        3245
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5423": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3231,
        3245
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5424": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3231,
        3245
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5425": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3255,
        3273
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 58,
      "value": "0x67"
    },
    "5427": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3255,
        3277
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5428": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3341,
        3347
      ],
      "op": "PUSH9",
      "path": "10",
      "statement": 59,
      "value": "0xDE0B6B3A764000000"
    },
    "5438": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3326,
        3338
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6E"
    },
    "5440": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3326,
        3347
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5441": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3421,
        3431
      ],
      "op": "PUSH10",
      "path": "10",
      "statement": 60,
      "value": "0x152D02C7E14AF6800000"
    },
    "5452": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3408,
        3418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6F"
    },
    "5454": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3408,
        3431
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5455": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3495,
        3503
      ],
      "op": "PUSH4",
      "path": "10",
      "statement": 61,
      "value": "0x3205B7E"
    },
    "5460": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3485,
        3492
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6D"
    },
    "5462": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3485,
        3503
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5463": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3577,
        3586
      ],
      "op": "PUSH3",
      "path": "10",
      "statement": 62,
      "value": "0x127500"
    },
    "5467": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3562,
        3574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x70"
    },
    "5469": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3562,
        3586
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5472": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3609,
        3629
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 63,
      "value": "0x71"
    },
    "5474": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3609,
        3633
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5475": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3609,
        3633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5476": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3609,
        3633
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5477": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3644,
        3752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5478": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3665,
        3678
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5479": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3665,
        3685
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5480": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5481": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3661,
        3685
      ],
      "op": "LT",
      "path": "10"
    },
    "5482": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3644,
        3752
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5483": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3644,
        3752
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x159B"
    },
    "5486": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3644,
        3752
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5487": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3706,
        3741
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 64,
      "value": "0x1593"
    },
    "5490": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3725
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5491": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3726,
        3727
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5492": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5493": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5494": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5495": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "LT",
      "path": "10"
    },
    "5496": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1583"
    },
    "5499": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5500": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1583"
    },
    "5503": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2863"
    },
    "5506": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3712,
        3728
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5507": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5508": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5510": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "MUL",
      "path": "10"
    },
    "5511": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5513": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "ADD",
      "path": "10"
    },
    "5514": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "ADD",
      "path": "10"
    },
    "5515": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3712,
        3728
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5516": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3730,
        3740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6F"
    },
    "5518": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3730,
        3740
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5519": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3706,
        3711
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203A"
    },
    "5522": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3706,
        3741
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5523": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3706,
        3741
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5524": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3687,
        3690
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 65,
      "value": "0x1"
    },
    "5526": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3687,
        3690
      ],
      "op": "ADD",
      "path": "10"
    },
    "5527": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3644,
        3752
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1565"
    },
    "5530": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3644,
        3752
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5531": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3644,
        3752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3806,
        3807
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 66,
      "value": "0x1"
    },
    "5535": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3790,
        3803
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6B"
    },
    "5537": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3790,
        3807
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5538": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3833,
        3834
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 67,
      "value": "0x5"
    },
    "5540": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3817,
        3830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6C"
    },
    "5542": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3817,
        3834
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5543": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5544": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5545": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15B8"
    },
    "5548": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5549": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5551": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5552": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5553": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5556": {
      "op": "NOT"
    },
    "5557": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "5558": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5559": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5560": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5561": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "5562": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "POP",
      "path": "10"
    },
    "5563": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3008,
        3841
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5564": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5565": {
      "offset": [
        2896,
        2920
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x66"
    },
    "5567": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2896,
        2920
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5574": {
      "op": "SHL"
    },
    "5575": {
      "op": "SUB"
    },
    "5576": {
      "offset": [
        2896,
        2920
      ],
      "op": "AND",
      "path": "10"
    },
    "5577": {
      "offset": [
        2882,
        2892
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5578": {
      "offset": [
        2882,
        2920
      ],
      "op": "EQ",
      "path": "10"
    },
    "5579": {
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15E6"
    },
    "5582": {
      "offset": [
        2861,
        2984
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5583": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5585": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5592": {
      "op": "SHL"
    },
    "5593": {
      "offset": [
        2861,
        2984
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5594": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5595": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5597": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "ADD",
      "path": "10"
    },
    "5598": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "5601": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5602": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28ED"
    },
    "5605": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        2861,
        2984
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5606": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2861,
        2984
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5607": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10457,
        10464
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6D"
    },
    "5609": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10457,
        10464
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5610": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10433,
        10453
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x71"
    },
    "5612": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10433,
        10453
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5613": {
      "branch": 127,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10433,
        10464
      ],
      "op": "LT",
      "path": "10"
    },
    "5614": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10429,
        10574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x161C"
    },
    "5617": {
      "branch": 127,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10429,
        10574
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5618": {
      "offset": [
        2012,
        2016
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0x1BC16D674EC80000"
    },
    "5627": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10484,
        10496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6E"
    },
    "5629": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10484,
        10496
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5630": {
      "branch": 128,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10484,
        10512
      ],
      "op": "GT",
      "path": "10"
    },
    "5631": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10480,
        10564
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5632": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10480,
        10564
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x161C"
    },
    "5635": {
      "branch": 128,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10480,
        10564
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5636": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10548,
        10549
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 68,
      "value": "0x2"
    },
    "5638": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6E"
    },
    "5640": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5642": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5643": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5644": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5645": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1616"
    },
    "5648": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5649": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5650": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2987"
    },
    "5653": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10532,
        10549
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5654": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5655": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5656": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5657": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10532,
        10549
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5658": {
      "op": "POP"
    },
    "5659": {
      "op": "POP"
    },
    "5660": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10480,
        10564
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5661": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10584,
        10612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5663": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10637,
        10640
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "5665": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10616,
        10628
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6E"
    },
    "5667": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10616,
        10628
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5668": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10631,
        10633
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x14"
    },
    "5670": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10616,
        10633
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x162F"
    },
    "5673": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10616,
        10633
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5674": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10616,
        10633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5675": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10616,
        10633
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A9"
    },
    "5678": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10616,
        10633
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5679": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10616,
        10633
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5680": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10615,
        10640
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1639"
    },
    "5683": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10615,
        10640
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5684": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10615,
        10640
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5685": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10615,
        10640
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2987"
    },
    "5688": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10615,
        10640
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5689": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10615,
        10640
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5690": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10584,
        10640
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5691": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10584,
        10640
      ],
      "op": "POP",
      "path": "10"
    },
    "5692": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10650,
        10675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5694": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10700,
        10703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "5696": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10679,
        10691
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6E"
    },
    "5698": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10679,
        10691
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5699": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10694,
        10696
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x50"
    },
    "5701": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10679,
        10696
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x164E"
    },
    "5704": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10679,
        10696
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5705": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10679,
        10696
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5706": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10679,
        10696
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A9"
    },
    "5709": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10679,
        10696
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5710": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10679,
        10696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5711": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10678,
        10703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1658"
    },
    "5714": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10678,
        10703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5715": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10678,
        10703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5716": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10678,
        10703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2987"
    },
    "5719": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10678,
        10703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5720": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10678,
        10703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5721": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10650,
        10703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5722": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10650,
        10703
      ],
      "op": "POP",
      "path": "10"
    },
    "5723": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10767,
        10790
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5725": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10828,
        10844
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5726": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10828,
        10851
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5727": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10793,
        10813
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5728": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10793,
        10851
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1669"
    },
    "5731": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10793,
        10851
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5732": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10793,
        10851
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5733": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10793,
        10851
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2987"
    },
    "5736": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10793,
        10851
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5737": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10793,
        10851
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5738": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10767,
        10851
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5739": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10767,
        10851
      ],
      "op": "POP",
      "path": "10"
    },
    "5740": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10867,
        10876
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5742": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5743": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10886,
        10902
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5744": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10886,
        10909
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5745": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10882,
        10883
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5746": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10882,
        10909
      ],
      "op": "LT",
      "path": "10"
    },
    "5747": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5748": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A2"
    },
    "5751": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5752": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10930,
        10973
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 69,
      "value": "0x169A"
    },
    "5755": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10952
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5756": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10953,
        10954
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5757": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5758": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5759": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5760": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "LT",
      "path": "10"
    },
    "5761": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x168C"
    },
    "5764": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5765": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x168C"
    },
    "5768": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2863"
    },
    "5771": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10936,
        10955
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5772": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5773": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5775": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "MUL",
      "path": "10"
    },
    "5776": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5778": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "ADD",
      "path": "10"
    },
    "5779": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "ADD",
      "path": "10"
    },
    "5780": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10936,
        10955
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5781": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10957,
        10972
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5782": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10930,
        10935
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203A"
    },
    "5785": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10930,
        10973
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5786": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10930,
        10973
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5787": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10911,
        10914
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 70,
      "value": "0x1"
    },
    "5789": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10911,
        10914
      ],
      "op": "ADD",
      "path": "10"
    },
    "5790": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x166E"
    },
    "5793": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5794": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5795": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10862,
        10984
      ],
      "op": "POP",
      "path": "10"
    },
    "5796": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11041,
        11050
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5798": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11241
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5799": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11060,
        11068
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5800": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11060,
        11075
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5801": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11056,
        11057
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5802": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11056,
        11075
      ],
      "op": "LT",
      "path": "10"
    },
    "5803": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11241
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5804": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11241
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x170F"
    },
    "5807": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11241
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5808": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11096,
        11110
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5810": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11175,
        11189
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5811": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11138,
        11155
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5812": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11132
      ],
      "op": "DUP10",
      "path": "10"
    },
    "5813": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11133,
        11134
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5814": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5815": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5816": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5817": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "LT",
      "path": "10"
    },
    "5818": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16C5"
    },
    "5821": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5822": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16C5"
    },
    "5825": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2863"
    },
    "5828": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11115,
        11135
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5829": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5830": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5832": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "MUL",
      "path": "10"
    },
    "5833": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5835": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "ADD",
      "path": "10"
    },
    "5836": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "ADD",
      "path": "10"
    },
    "5837": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11135
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5838": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16D7"
    },
    "5841": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11155
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5842": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5843": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11155
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A9"
    },
    "5846": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11115,
        11155
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5847": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11115,
        11155
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5848": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11114,
        11189
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16E1"
    },
    "5851": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11114,
        11189
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5852": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11114,
        11189
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5853": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11114,
        11189
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2987"
    },
    "5856": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11114,
        11189
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5857": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11114,
        11189
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5858": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11096,
        11190
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5859": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11096,
        11190
      ],
      "op": "POP",
      "path": "10"
    },
    "5860": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11204,
        11230
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 71,
      "value": "0x1706"
    },
    "5863": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11218
      ],
      "op": "DUP10",
      "path": "10"
    },
    "5864": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11219,
        11220
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5865": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5866": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5867": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5868": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "LT",
      "path": "10"
    },
    "5869": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16F8"
    },
    "5872": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5873": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16F8"
    },
    "5876": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2863"
    },
    "5879": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11210,
        11221
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5880": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5881": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5883": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "MUL",
      "path": "10"
    },
    "5884": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5886": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "ADD",
      "path": "10"
    },
    "5887": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "ADD",
      "path": "10"
    },
    "5888": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11210,
        11221
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5889": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11223,
        11229
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5890": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11204,
        11209
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203A"
    },
    "5893": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11204,
        11230
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5894": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11204,
        11230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5895": {
      "op": "POP"
    },
    "5896": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11077,
        11080
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 72,
      "value": "0x1"
    },
    "5898": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11077,
        11080
      ],
      "op": "ADD",
      "path": "10"
    },
    "5899": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11241
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A6"
    },
    "5902": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11241
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5903": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11241
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5904": {
      "op": "POP"
    },
    "5905": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11271
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 73,
      "value": "0x71"
    },
    "5907": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5908": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5909": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5910": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11271
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5912": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1720"
    },
    "5915": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5916": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28A8"
    },
    "5919": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11251,
        11273
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5920": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5921": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5922": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5923": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "POP",
      "path": "10"
    },
    "5924": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5925": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11251,
        11273
      ],
      "op": "POP",
      "path": "10"
    },
    "5926": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10419,
        11280
      ],
      "op": "POP",
      "path": "10"
    },
    "5927": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10419,
        11280
      ],
      "op": "POP",
      "path": "10"
    },
    "5928": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10419,
        11280
      ],
      "op": "POP",
      "path": "10"
    },
    "5929": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "POP",
      "path": "10"
    },
    "5930": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "POP",
      "path": "10"
    },
    "5931": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "POP",
      "path": "10"
    },
    "5932": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10208,
        11280
      ],
      "op": "POP",
      "path": "10"
    },
    "5933": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        10208,
        11280
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5934": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5935": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5936": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5938": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5939": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5940": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5941": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "5943": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5945": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5946": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5947": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5948": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5950": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5951": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5952": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5959": {
      "op": "SHL"
    },
    "5960": {
      "op": "SUB"
    },
    "5961": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5962": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "2"
    },
    "5963": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5964": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5965": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5966": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5967": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5968": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5969": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5970": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5971": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5972": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5973": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5974": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 74
    },
    "5975": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5976": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "2"
    },
    "5977": {
      "branch": 135,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5978": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B3"
    },
    "5981": {
      "branch": 135,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5982": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5984": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5991": {
      "op": "SHL"
    },
    "5992": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5993": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5996": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5998": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5999": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "2"
    },
    "6000": {
      "op": "MSTORE"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6005": {
      "op": "DUP3"
    },
    "6006": {
      "op": "ADD"
    },
    "6007": {
      "op": "MSTORE"
    },
    "6008": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6043": {
      "op": "DUP3"
    },
    "6044": {
      "op": "ADD"
    },
    "6045": {
      "op": "MSTORE"
    },
    "6046": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6054": {
      "op": "SHL"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6057": {
      "op": "DUP3"
    },
    "6058": {
      "op": "ADD"
    },
    "6059": {
      "op": "MSTORE"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6062": {
      "op": "ADD"
    },
    "6063": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "6066": {
      "op": "JUMP"
    },
    "6067": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6068": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 75,
      "value": "0xD4C"
    },
    "6071": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6072": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6073": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6074": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6075": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "2"
    },
    "6076": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4B"
    },
    "6079": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6080": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6081": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6083": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6084": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 76,
      "value": "0x8F7"
    },
    "6087": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6088": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6089": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6090": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D01"
    },
    "6093": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6094": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6095": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4424,
        4434
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 77
    },
    "6096": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4447,
        4448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6098": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6099": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6100": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6101": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4423
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x78"
    },
    "6103": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6105": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6106": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6108": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6109": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6110": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4435
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6111": {
      "branch": 129,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4406,
        4449
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6112": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x182B"
    },
    "6115": {
      "branch": 129,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6116": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6118": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6125": {
      "op": "SHL"
    },
    "6126": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6127": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6130": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6132": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6133": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "ADD",
      "path": "10"
    },
    "6134": {
      "op": "MSTORE"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "ADD"
    },
    "6141": {
      "op": "MSTORE"
    },
    "6142": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6177": {
      "op": "DUP3"
    },
    "6178": {
      "op": "ADD"
    },
    "6179": {
      "op": "MSTORE"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6182": {
      "op": "ADD"
    },
    "6183": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "6186": {
      "op": "JUMP"
    },
    "6187": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4385,
        4499
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6188": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 78,
      "value": "0x40"
    },
    "6190": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6191": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6192": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "6194": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6195": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "ADD",
      "path": "10"
    },
    "6196": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6197": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6198": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4566,
        4576
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6199": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6200": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6201": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6202": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6204": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6205": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6206": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "ADD",
      "path": "10"
    },
    "6207": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6208": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6209": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6210": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        4647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x32"
    },
    "6212": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6213": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6214": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "ADD",
      "path": "10"
    },
    "6215": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6216": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6217": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6220": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "DUP8",
      "path": "10"
    },
    "6221": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6222": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6223": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4515
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x72"
    },
    "6225": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6226": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6227": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6228": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6229": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4531
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6230": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "6231": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6232": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6233": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "op": "SUB"
    },
    "6242": {
      "op": "NOT"
    },
    "6243": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6250": {
      "op": "SHL"
    },
    "6251": {
      "op": "SUB"
    },
    "6252": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6253": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6254": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "6255": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "OR",
      "path": "10"
    },
    "6256": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6257": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6258": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6259": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6262": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6263": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "ADD",
      "path": "10"
    },
    "6264": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6265": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6266": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "6268": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6269": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6270": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "ADD",
      "path": "10"
    },
    "6271": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6272": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6275": {
      "op": "NOT"
    },
    "6276": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "6277": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4534,
        4658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "6279": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6280": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "6281": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "AND",
      "path": "10"
    },
    "6282": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6283": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6284": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6285": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "OR",
      "path": "10"
    },
    "6286": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6287": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6288": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4510,
        4658
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6289": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 79
    },
    "6290": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6291": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6292": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x78"
    },
    "6294": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6295": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6296": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6297": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6298": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4698
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6299": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4715
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6300": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4715
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6301": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4669,
        4715
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6302": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4736
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 80,
      "value": "0x68"
    },
    "6304": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6305": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6306": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6307": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18AB"
    },
    "6310": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6311": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28A8"
    },
    "6314": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4725,
        4738
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6315": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6316": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6317": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6318": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "POP",
      "path": "10"
    },
    "6319": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6320": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4725,
        4738
      ],
      "op": "POP",
      "path": "10"
    },
    "6321": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4268,
        4745
      ],
      "op": "POP",
      "path": "10"
    },
    "6322": {
      "fn": "SmartnodesCore.createUser",
      "jump": "o",
      "offset": [
        4268,
        4745
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6323": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12371,
        12466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6324": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12418,
        12425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6326": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12458,
        12459
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 81,
      "value": "0x1"
    },
    "6328": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12444,
        12455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x68"
    },
    "6330": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12444,
        12455
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6331": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12444,
        12459
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC5"
    },
    "6334": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12444,
        12459
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6335": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12444,
        12459
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6336": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12444,
        12459
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2933"
    },
    "6339": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12444,
        12459
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6340": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6341": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11654,
        11658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6343": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11660,
        11667
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6344": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11669,
        11676
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6346": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11711,
        11729
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 82,
      "value": "0x67"
    },
    "6348": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11711,
        11729
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6349": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11696,
        11708
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6350": {
      "branch": 130,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11696,
        11729
      ],
      "op": "LT",
      "path": "10"
    },
    "6351": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1908"
    },
    "6354": {
      "branch": 130,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6355": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6357": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6358": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6364": {
      "op": "SHL"
    },
    "6365": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6366": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6369": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6371": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6372": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "ADD",
      "path": "10"
    },
    "6373": {
      "op": "MSTORE"
    },
    "6374": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6378": {
      "op": "DUP3"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "op": "MSTORE"
    },
    "6381": {
      "op": "PUSH11",
      "value": "0x24B73B30B634B21024A217"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6395": {
      "op": "SHL"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6398": {
      "op": "DUP3"
    },
    "6399": {
      "op": "ADD"
    },
    "6400": {
      "op": "MSTORE"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6403": {
      "op": "ADD"
    },
    "6404": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "6407": {
      "op": "JUMP"
    },
    "6408": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11688,
        11745
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6409": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11782
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6411": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6412": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6413": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6414": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "6416": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6418": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6419": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6420": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6421": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6423": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6424": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6425": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11785,
        11809
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6426": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6427": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6428": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA0"
    },
    "6430": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6431": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6432": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6433": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6434": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6435": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6436": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6437": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6438": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6440": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6441": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6442": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6449": {
      "op": "SHL"
    },
    "6450": {
      "op": "SUB"
    },
    "6451": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6452": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6453": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "AND",
      "path": "10"
    },
    "6454": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6455": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6456": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6457": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6458": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6459": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6460": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "6462": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6463": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6464": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6465": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6466": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6467": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6468": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6469": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6471": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6472": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6473": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6474": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "6476": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6477": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6478": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6479": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6481": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6482": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6483": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6484": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6485": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "6487": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "AND",
      "path": "10"
    },
    "6488": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "6490": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6491": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6492": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6493": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11861
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x65"
    },
    "6495": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11861
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6496": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6497": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6498": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6505": {
      "op": "SHL"
    },
    "6506": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6507": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6508": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6509": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6510": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "ADD",
      "path": "10"
    },
    "6511": {
      "op": "SWAP5"
    },
    "6512": {
      "op": "SWAP1"
    },
    "6513": {
      "op": "SWAP5"
    },
    "6514": {
      "op": "MSTORE"
    },
    "6515": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11809
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6516": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11755,
        11782
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6517": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11861
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6518": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11861
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6519": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11861
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6520": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11861
      ],
      "op": "AND",
      "path": "10"
    },
    "6521": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11861
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6522": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11879
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x40550A1C"
    },
    "6527": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11879
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6530": {
      "op": "ADD"
    },
    "6531": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6533": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6535": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6536": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6537": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6538": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "SUB",
      "path": "10"
    },
    "6539": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6540": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6541": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "GAS",
      "path": "10"
    },
    "6542": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "6543": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6544": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6545": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6546": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x199F"
    },
    "6549": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6550": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6551": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6553": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6554": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "6555": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6556": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6558": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "REVERT",
      "path": "10"
    },
    "6559": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6560": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "POP",
      "path": "10"
    },
    "6561": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "POP",
      "path": "10"
    },
    "6562": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "POP",
      "path": "10"
    },
    "6563": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "POP",
      "path": "10"
    },
    "6564": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6566": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6567": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6568": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6570": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "NOT",
      "path": "10"
    },
    "6571": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6573": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6574": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "ADD",
      "path": "10"
    },
    "6575": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "AND",
      "path": "10"
    },
    "6576": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6577": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "ADD",
      "path": "10"
    },
    "6578": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6579": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6581": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6582": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "POP",
      "path": "10"
    },
    "6583": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6584": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "ADD",
      "path": "10"
    },
    "6585": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6586": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19C3"
    },
    "6589": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6590": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6591": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29C0"
    },
    "6594": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        11835,
        11930
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6595": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11835,
        11930
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6596": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11983,
        12007
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 83
    },
    "6597": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11983,
        12007
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6598": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12021,
        12048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6600": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12021,
        12048
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6601": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12021,
        12048
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6602": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12021,
        12048
      ],
      "op": "ADD",
      "path": "10"
    },
    "6603": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12021,
        12048
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6604": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11819,
        11930
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6605": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11819,
        11930
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "6606": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11983,
        12007
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6607": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11983,
        12007
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "6608": {
      "op": "POP"
    },
    "6609": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12021,
        12048
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6610": {
      "op": "POP"
    },
    "6611": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6612": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        11569,
        12065
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6613": {
      "op": "POP"
    },
    "6614": {
      "op": "POP"
    },
    "6615": {
      "op": "POP"
    },
    "6616": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        11569,
        12065
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6617": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6618": {
      "offset": [
        2896,
        2920
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x66"
    },
    "6620": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2896,
        2920
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6627": {
      "op": "SHL"
    },
    "6628": {
      "op": "SUB"
    },
    "6629": {
      "offset": [
        2896,
        2920
      ],
      "op": "AND",
      "path": "10"
    },
    "6630": {
      "offset": [
        2882,
        2892
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6631": {
      "offset": [
        2882,
        2920
      ],
      "op": "EQ",
      "path": "10"
    },
    "6632": {
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A03"
    },
    "6635": {
      "offset": [
        2861,
        2984
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6636": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6638": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6645": {
      "op": "SHL"
    },
    "6646": {
      "offset": [
        2861,
        2984
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6647": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6648": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6650": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "ADD",
      "path": "10"
    },
    "6651": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "6654": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6655": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28ED"
    },
    "6658": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        2861,
        2984
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6659": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2861,
        2984
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6660": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7820,
        7835
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6662": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6663": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6664": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6665": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7842
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "6667": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6669": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6670": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6671": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6672": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6674": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6675": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6676": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6677": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6678": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7873
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 84,
      "value": "0x4"
    },
    "6680": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7873
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6681": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7873
      ],
      "op": "ADD",
      "path": "10"
    },
    "6682": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7881
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6683": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7881
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6686": {
      "op": "NOT"
    },
    "6687": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7881
      ],
      "op": "AND",
      "path": "10"
    },
    "6688": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7881
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6689": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7861,
        7881
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6690": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 85
    },
    "6691": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6692": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7917,
        7932
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "6693": {
      "op": "DUP2"
    },
    "6694": {
      "op": "MSTORE"
    },
    "6695": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6696": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7838,
        7851
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6697": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x6E04AA702F9AF7A9A398F10D27918152DF25AC0CDC6D74321B9F7496374387A7"
    },
    "6730": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6731": {
      "op": "ADD"
    },
    "6732": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6734": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6735": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6736": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6737": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "SUB",
      "path": "10"
    },
    "6738": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6739": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7896,
        7933
      ],
      "op": "LOG2",
      "path": "10"
    },
    "6740": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7810,
        7940
      ],
      "op": "POP",
      "path": "10"
    },
    "6741": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7742,
        7940
      ],
      "op": "POP",
      "path": "10"
    },
    "6742": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "o",
      "offset": [
        7742,
        7940
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6743": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6744": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6746": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6747": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6748": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6749": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11502
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x76"
    },
    "6751": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6753": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6754": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6755": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6756": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6758": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6759": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6760": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11511
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6761": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6763": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11526
      ],
      "op": "ADD",
      "path": "10"
    },
    "6764": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6765": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6766": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6767": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6768": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6769": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6770": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "MUL",
      "path": "10"
    },
    "6771": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6772": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "ADD",
      "path": "10"
    },
    "6773": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6774": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "ADD",
      "path": "10"
    },
    "6775": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6776": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6777": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6778": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6779": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6780": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6781": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11437,
        11453
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "6783": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11437,
        11453
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6784": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11495
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6785": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6786": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "ADD",
      "path": "10"
    },
    "6787": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11498,
        11526
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6788": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6789": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6790": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6791": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AB9"
    },
    "6794": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6795": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6797": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "MUL",
      "path": "10"
    },
    "6798": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6799": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "ADD",
      "path": "10"
    },
    "6800": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6801": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6802": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6804": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6805": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6807": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6809": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6810": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6811": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6812": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6813": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6820": {
      "op": "SHL"
    },
    "6821": {
      "op": "SUB"
    },
    "6822": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "AND",
      "path": "10"
    },
    "6823": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6824": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6825": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6827": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6828": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6829": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "ADD",
      "path": "10"
    },
    "6830": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6831": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6833": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "ADD",
      "path": "10"
    },
    "6834": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6835": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6836": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "GT",
      "path": "10"
    },
    "6837": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A9B"
    },
    "6840": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6841": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6842": {
      "op": "POP"
    },
    "6843": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6844": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11465,
        11526
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "6845": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11357,
        11563
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "6846": {
      "op": "POP"
    },
    "6847": {
      "op": "POP"
    },
    "6848": {
      "op": "POP"
    },
    "6849": {
      "op": "POP"
    },
    "6850": {
      "op": "POP"
    },
    "6851": {
      "op": "POP"
    },
    "6852": {
      "op": "POP"
    },
    "6853": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "o",
      "offset": [
        11357,
        11563
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6854": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3847,
        4173
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6855": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3943,
        3967
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 86,
      "value": "0x66"
    },
    "6857": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3943,
        3967
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6864": {
      "op": "SHL"
    },
    "6865": {
      "op": "SUB"
    },
    "6866": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3943,
        3967
      ],
      "op": "AND",
      "path": "10"
    },
    "6867": {
      "branch": 131,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3943,
        3981
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6868": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B1F"
    },
    "6871": {
      "branch": 131,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6872": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6874": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6875": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6881": {
      "op": "SHL"
    },
    "6882": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6883": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6886": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6888": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6889": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "ADD",
      "path": "10"
    },
    "6890": {
      "op": "MSTORE"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6895": {
      "op": "DUP3"
    },
    "6896": {
      "op": "ADD"
    },
    "6897": {
      "op": "MSTORE"
    },
    "6898": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6933": {
      "op": "DUP3"
    },
    "6934": {
      "op": "ADD"
    },
    "6935": {
      "op": "MSTORE"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6938": {
      "op": "ADD"
    },
    "6939": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "6942": {
      "op": "JUMP"
    },
    "6943": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3922,
        4037
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6944": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4073
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 87,
      "value": "0x65"
    },
    "6946": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6947": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6954": {
      "op": "SHL"
    },
    "6955": {
      "op": "SUB"
    },
    "6956": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6957": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6958": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "AND",
      "path": "10"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6965": {
      "op": "SHL"
    },
    "6966": {
      "op": "SUB"
    },
    "6967": {
      "op": "NOT"
    },
    "6968": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6969": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6970": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "AND",
      "path": "10"
    },
    "6971": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6972": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "OR",
      "path": "10"
    },
    "6973": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6974": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6975": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4047,
        4113
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6976": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4147
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 88,
      "value": "0x66"
    },
    "6978": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6979": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6980": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6981": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6982": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "AND",
      "path": "10"
    },
    "6983": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "OR",
      "path": "10"
    },
    "6984": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6985": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4123,
        4166
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6986": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        3847,
        4173
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6987": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6994": {
      "op": "SHL"
    },
    "6995": {
      "op": "SUB"
    },
    "6996": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 89
    },
    "6997": {
      "branch": 136,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "2"
    },
    "6998": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BAD"
    },
    "7001": {
      "branch": 136,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7002": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7004": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7011": {
      "op": "SHL"
    },
    "7012": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7013": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7016": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7018": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7019": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "2"
    },
    "7020": {
      "op": "MSTORE"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7023": {
      "op": "DUP1"
    },
    "7024": {
      "op": "DUP3"
    },
    "7025": {
      "op": "ADD"
    },
    "7026": {
      "op": "MSTORE"
    },
    "7027": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7062": {
      "op": "DUP3"
    },
    "7063": {
      "op": "ADD"
    },
    "7064": {
      "op": "MSTORE"
    },
    "7065": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7072": {
      "op": "SHL"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7075": {
      "op": "DUP3"
    },
    "7076": {
      "op": "ADD"
    },
    "7077": {
      "op": "MSTORE"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7080": {
      "op": "ADD"
    },
    "7081": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "7084": {
      "op": "JUMP"
    },
    "7085": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7092": {
      "op": "SHL"
    },
    "7093": {
      "op": "SUB"
    },
    "7094": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 90
    },
    "7095": {
      "branch": 137,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "2"
    },
    "7096": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0E"
    },
    "7099": {
      "branch": 137,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7100": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7102": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7109": {
      "op": "SHL"
    },
    "7110": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7111": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7114": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7116": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7117": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "2"
    },
    "7118": {
      "op": "MSTORE"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7123": {
      "op": "DUP3"
    },
    "7124": {
      "op": "ADD"
    },
    "7125": {
      "op": "MSTORE"
    },
    "7126": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7161": {
      "op": "DUP3"
    },
    "7162": {
      "op": "ADD"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7169": {
      "op": "SHL"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7172": {
      "op": "DUP3"
    },
    "7173": {
      "op": "ADD"
    },
    "7174": {
      "op": "MSTORE"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7177": {
      "op": "ADD"
    },
    "7178": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "7181": {
      "op": "JUMP"
    },
    "7182": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7189": {
      "op": "SHL"
    },
    "7190": {
      "op": "SUB"
    },
    "7191": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 91
    },
    "7192": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7193": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "2"
    },
    "7194": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7196": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7197": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7198": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7199": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7201": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7203": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7204": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7205": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7206": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7208": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7209": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7210": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7211": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7212": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7213": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "7214": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7215": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7216": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7217": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7218": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7219": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7220": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7221": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7222": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7223": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7224": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7225": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7226": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7227": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 92
    },
    "7228": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7229": {
      "op": "DUP5"
    },
    "7230": {
      "op": "DUP2"
    },
    "7231": {
      "op": "MSTORE"
    },
    "7232": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7265": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7266": {
      "op": "ADD"
    },
    "7267": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7269": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7270": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7271": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7272": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "7273": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7274": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7275": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7276": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7277": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7278": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7279": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7286": {
      "op": "SHL"
    },
    "7287": {
      "op": "SUB"
    },
    "7288": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7289": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7290": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "7291": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7293": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7294": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7295": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7296": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7298": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7300": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7301": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7302": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7303": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7305": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7306": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7307": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7308": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7309": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7310": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "7311": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7312": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7313": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7314": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7315": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7316": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7317": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7320": {
      "op": "NOT"
    },
    "7321": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7322": {
      "branch": 138,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "7323": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CFB"
    },
    "7326": {
      "branch": 138,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7327": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 93
    },
    "7328": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7329": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "7330": {
      "branch": 139,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7331": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CEE"
    },
    "7334": {
      "branch": 139,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7335": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7337": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7344": {
      "op": "SHL"
    },
    "7345": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7346": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7349": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7351": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7352": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "7353": {
      "op": "MSTORE"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7358": {
      "op": "DUP3"
    },
    "7359": {
      "op": "ADD"
    },
    "7360": {
      "op": "MSTORE"
    },
    "7361": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7396": {
      "op": "DUP3"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "op": "MSTORE"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7401": {
      "op": "ADD"
    },
    "7402": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "7405": {
      "op": "JUMP"
    },
    "7406": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7407": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 94,
      "value": "0x1CFB"
    },
    "7410": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7411": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7412": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7413": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7414": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "7415": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4B"
    },
    "7418": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7419": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7420": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7421": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7422": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7423": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7424": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7425": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7432": {
      "op": "SHL"
    },
    "7433": {
      "op": "SUB"
    },
    "7434": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 95
    },
    "7435": {
      "branch": 140,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "2"
    },
    "7436": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D65"
    },
    "7439": {
      "branch": 140,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7440": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7442": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7449": {
      "op": "SHL"
    },
    "7450": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7451": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7454": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7456": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7457": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "2"
    },
    "7458": {
      "op": "MSTORE"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7463": {
      "op": "DUP3"
    },
    "7464": {
      "op": "ADD"
    },
    "7465": {
      "op": "MSTORE"
    },
    "7466": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7501": {
      "op": "DUP3"
    },
    "7502": {
      "op": "ADD"
    },
    "7503": {
      "op": "MSTORE"
    },
    "7504": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7512": {
      "op": "SHL"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7515": {
      "op": "DUP3"
    },
    "7516": {
      "op": "ADD"
    },
    "7517": {
      "op": "MSTORE"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7520": {
      "op": "ADD"
    },
    "7521": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "7524": {
      "op": "JUMP"
    },
    "7525": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7532": {
      "op": "SHL"
    },
    "7533": {
      "op": "SUB"
    },
    "7534": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 96
    },
    "7535": {
      "branch": 141,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "2"
    },
    "7536": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DC7"
    },
    "7539": {
      "branch": 141,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7540": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7542": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7543": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7549": {
      "op": "SHL"
    },
    "7550": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7551": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7554": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7556": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7557": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "2"
    },
    "7558": {
      "op": "MSTORE"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7563": {
      "op": "DUP3"
    },
    "7564": {
      "op": "ADD"
    },
    "7565": {
      "op": "MSTORE"
    },
    "7566": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7601": {
      "op": "DUP3"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "op": "MSTORE"
    },
    "7604": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7610": {
      "op": "SHL"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7613": {
      "op": "DUP3"
    },
    "7614": {
      "op": "ADD"
    },
    "7615": {
      "op": "MSTORE"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7618": {
      "op": "ADD"
    },
    "7619": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "7622": {
      "op": "JUMP"
    },
    "7623": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7630": {
      "op": "SHL"
    },
    "7631": {
      "op": "SUB"
    },
    "7632": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7633": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "2"
    },
    "7634": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7636": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7637": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7638": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7639": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7641": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7643": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7644": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7646": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7647": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7648": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7649": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 97
    },
    "7650": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7651": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "2"
    },
    "7652": {
      "branch": 142,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7653": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3F"
    },
    "7656": {
      "branch": 142,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7657": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7659": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7666": {
      "op": "SHL"
    },
    "7667": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7668": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7671": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7673": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7674": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "2"
    },
    "7675": {
      "op": "MSTORE"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7680": {
      "op": "DUP3"
    },
    "7681": {
      "op": "ADD"
    },
    "7682": {
      "op": "MSTORE"
    },
    "7683": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7718": {
      "op": "DUP3"
    },
    "7719": {
      "op": "ADD"
    },
    "7720": {
      "op": "MSTORE"
    },
    "7721": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7730": {
      "op": "SHL"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7733": {
      "op": "DUP3"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "op": "MSTORE"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7738": {
      "op": "ADD"
    },
    "7739": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "7742": {
      "op": "JUMP"
    },
    "7743": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7750": {
      "op": "SHL"
    },
    "7751": {
      "op": "SUB"
    },
    "7752": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 98
    },
    "7753": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7754": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "7755": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7757": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7758": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7759": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7760": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7762": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7764": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7765": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7767": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7768": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7769": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7770": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7771": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7772": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "7773": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7774": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7775": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 99
    },
    "7776": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7777": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "2"
    },
    "7778": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7779": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7780": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7781": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7782": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7783": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7784": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7785": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7786": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7787": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7788": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E76"
    },
    "7791": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7792": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7793": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7794": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28DA"
    },
    "7797": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7798": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7799": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7800": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7801": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7802": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7803": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7804": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7805": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7806": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 100
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7813": {
      "op": "SHL"
    },
    "7814": {
      "op": "SUB"
    },
    "7815": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7816": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7823": {
      "op": "SHL"
    },
    "7824": {
      "op": "SUB"
    },
    "7825": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7826": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7859": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7860": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7862": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7863": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC2"
    },
    "7866": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7867": {
      "op": "DUP2"
    },
    "7868": {
      "op": "MSTORE"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7871": {
      "op": "ADD"
    },
    "7872": {
      "op": "SWAP1"
    },
    "7873": {
      "op": "JUMP"
    },
    "7874": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7875": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7877": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7878": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7879": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7880": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "2"
    },
    "7881": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7882": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7883": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 101,
      "value": "0x1CFB"
    },
    "7886": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8765,
        10031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7887": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8038,
        8579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7888": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8127,
        8128
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 102,
      "value": "0x0"
    },
    "7890": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8118,
        8124
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7891": {
      "branch": 132,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8118,
        8128
      ],
      "op": "GT",
      "path": "10"
    },
    "7892": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EEF"
    },
    "7895": {
      "branch": 132,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7896": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7898": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7905": {
      "op": "SHL"
    },
    "7906": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7907": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7908": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7910": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "ADD",
      "path": "10"
    },
    "7911": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "7914": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7915": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2946"
    },
    "7918": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8110,
        8166
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7919": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8110,
        8166
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7920": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8205,
        8211
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 103
    },
    "7921": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8184,
        8201
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F0F"
    },
    "7924": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8194,
        8200
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7931": {
      "op": "SHL"
    },
    "7932": {
      "op": "SUB"
    },
    "7933": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2"
    },
    "7934": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7936": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7937": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7938": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7939": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7941": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7943": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7944": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7946": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7947": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7948": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7949": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7950": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7951": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8184,
        8201
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7952": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8184,
        8211
      ],
      "op": "LT",
      "path": "10"
    },
    "7953": {
      "branch": 133,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8184,
        8211
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7954": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F55"
    },
    "7957": {
      "branch": 133,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7958": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7960": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7967": {
      "op": "SHL"
    },
    "7968": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7969": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7972": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7974": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7975": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "ADD",
      "path": "10"
    },
    "7976": {
      "op": "MSTORE"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7981": {
      "op": "DUP3"
    },
    "7982": {
      "op": "ADD"
    },
    "7983": {
      "op": "MSTORE"
    },
    "7984": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "8008": {
      "op": "SHL"
    },
    "8009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8011": {
      "op": "DUP3"
    },
    "8012": {
      "op": "ADD"
    },
    "8013": {
      "op": "MSTORE"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8016": {
      "op": "ADD"
    },
    "8017": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "8020": {
      "op": "JUMP"
    },
    "8021": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8176,
        8237
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8028": {
      "op": "SHL"
    },
    "8029": {
      "op": "SUB"
    },
    "8030": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8031": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "AND",
      "path": "10"
    },
    "8032": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8248,
        8267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8034": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8035": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8036": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8037": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x79"
    },
    "8039": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8041": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8042": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8044": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8045": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8046": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8047": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8270,
        8298
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8048": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8316,
        8332
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 104
    },
    "8049": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8316,
        8332
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8050": {
      "branch": 134,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8316,
        8332
      ],
      "op": "SUB",
      "path": "10"
    },
    "8051": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FBA"
    },
    "8054": {
      "branch": 134,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8055": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8057": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8064": {
      "op": "SHL"
    },
    "8065": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8066": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8069": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8071": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8072": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "ADD",
      "path": "10"
    },
    "8073": {
      "op": "MSTORE"
    },
    "8074": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8078": {
      "op": "DUP3"
    },
    "8079": {
      "op": "ADD"
    },
    "8080": {
      "op": "MSTORE"
    },
    "8081": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "8109": {
      "op": "SHL"
    },
    "8110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8112": {
      "op": "DUP3"
    },
    "8113": {
      "op": "ADD"
    },
    "8114": {
      "op": "MSTORE"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8117": {
      "op": "ADD"
    },
    "8118": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA18"
    },
    "8121": {
      "op": "JUMP"
    },
    "8122": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8308,
        8362
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8123": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8373,
        8416
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 105,
      "value": "0x1FC5"
    },
    "8126": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8386,
        8392
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8127": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8402,
        8406
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "8128": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8409,
        8415
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8129": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8373,
        8385
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD33"
    },
    "8132": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8373,
        8416
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8133": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8373,
        8416
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8134": {
      "op": "POP"
    },
    "8135": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 106,
      "value": "0x0"
    },
    "8137": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8138": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8139": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8140": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8436
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "8142": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8144": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8145": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8147": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8148": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8149": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "8151": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8456
      ],
      "op": "ADD",
      "path": "10"
    },
    "8152": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8153": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8154": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8460,
        8466
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8155": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8460,
        8466
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8156": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8449
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8157": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FE7"
    },
    "8160": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8161": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8460,
        8466
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8162": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8460,
        8466
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8163": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28DA"
    },
    "8166": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8426,
        8466
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8167": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8168": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8169": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8170": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8426,
        8466
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8171": {
      "op": "POP"
    },
    "8172": {
      "op": "POP"
    },
    "8173": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8476,
        8495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8175": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8176": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8177": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8178": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x75"
    },
    "8180": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8182": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8183": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8184": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8185": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8187": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8188": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8189": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8190": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8521
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8191": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8528
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "8193": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8528
      ],
      "op": "ADD",
      "path": "10"
    },
    "8194": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8498,
        8528
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8195": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 107
    },
    "8196": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8197": {
      "op": "DUP5"
    },
    "8198": {
      "op": "DUP2"
    },
    "8199": {
      "op": "MSTORE"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8206": {
      "op": "SHL"
    },
    "8207": {
      "op": "SUB"
    },
    "8208": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "DUP7",
      "path": "10"
    },
    "8209": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "AND",
      "path": "10"
    },
    "8210": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8211": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "8244": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8245": {
      "op": "ADD"
    },
    "8246": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8544,
        8572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1369"
    },
    "8249": {
      "op": "JUMP"
    },
    "8250": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8257": {
      "op": "SHL"
    },
    "8258": {
      "op": "SUB"
    },
    "8259": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 108
    },
    "8260": {
      "branch": 143,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "2"
    },
    "8261": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2090"
    },
    "8264": {
      "branch": 143,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8265": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8267": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8274": {
      "op": "SHL"
    },
    "8275": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8276": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8279": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8281": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8282": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "2"
    },
    "8283": {
      "op": "MSTORE"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8288": {
      "op": "DUP3"
    },
    "8289": {
      "op": "ADD"
    },
    "8290": {
      "op": "MSTORE"
    },
    "8291": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8326": {
      "op": "DUP3"
    },
    "8327": {
      "op": "ADD"
    },
    "8328": {
      "op": "MSTORE"
    },
    "8329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8331": {
      "op": "ADD"
    },
    "8332": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "8335": {
      "op": "JUMP"
    },
    "8336": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8337": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 109
    },
    "8338": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "8340": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8342": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8343": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8344": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8345": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20A2"
    },
    "8348": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8349": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8350": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28DA"
    },
    "8353": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8354": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8355": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8356": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8357": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8358": {
      "op": "POP"
    },
    "8359": {
      "op": "POP"
    },
    "8360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8366": {
      "op": "SHL"
    },
    "8367": {
      "op": "SUB"
    },
    "8368": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 110
    },
    "8369": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "8370": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8372": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8373": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8374": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8375": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "8377": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8379": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8380": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8382": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8383": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8384": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8385": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8386": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8387": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8388": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8389": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20CF"
    },
    "8392": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8393": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8394": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8395": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28DA"
    },
    "8398": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8399": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8400": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8401": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8402": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8403": {
      "op": "POP"
    },
    "8404": {
      "op": "POP"
    },
    "8405": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 111,
      "value": "0x40"
    },
    "8407": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8408": {
      "op": "DUP2"
    },
    "8409": {
      "op": "DUP2"
    },
    "8410": {
      "op": "MSTORE"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8417": {
      "op": "SHL"
    },
    "8418": {
      "op": "SUB"
    },
    "8419": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8420": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "2"
    },
    "8421": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8422": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8424": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8425": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8458": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8461": {
      "op": "ADD"
    },
    "8462": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8464": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8465": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8466": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8467": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "2"
    },
    "8468": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8469": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8470": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "8471": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3008,
        3841
      ],
      "op": "POP",
      "path": "10"
    },
    "8472": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3008,
        3841
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8473": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8474": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8476": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8477": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8480": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8481": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8482": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8484": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8485": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2140"
    },
    "8488": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8489": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8491": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8498": {
      "op": "SHL"
    },
    "8499": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8500": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8501": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8503": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8504": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA18"
    },
    "8507": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8508": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29E2"
    },
    "8511": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8512": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8513": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 112,
      "value": "0x15B8"
    },
    "8516": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8517": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8518": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8520": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8521": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8524": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8525": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8526": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8528": {
      "branch": 146,
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8529": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x216C"
    },
    "8532": {
      "branch": 146,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8533": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8535": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8542": {
      "op": "SHL"
    },
    "8543": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8544": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8545": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8547": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8548": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA18"
    },
    "8551": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8552": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29E2"
    },
    "8555": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8556": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8557": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 113,
      "value": "0x36"
    },
    "8559": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2178"
    },
    "8562": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8563": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8564": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A7D"
    },
    "8567": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8568": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8569": {
      "op": "POP"
    },
    "8570": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 114,
      "value": "0x37"
    },
    "8572": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1425"
    },
    "8575": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8576": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8577": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A7D"
    },
    "8580": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8581": {
      "op": "JUMPDEST"
    },
    "8582": {
      "op": "DUP3"
    },
    "8583": {
      "op": "DUP1"
    },
    "8584": {
      "op": "SLOAD"
    },
    "8585": {
      "op": "DUP3"
    },
    "8586": {
      "op": "DUP3"
    },
    "8587": {
      "op": "SSTORE"
    },
    "8588": {
      "op": "SWAP1"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8591": {
      "op": "MSTORE"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8596": {
      "op": "KECCAK256"
    },
    "8597": {
      "op": "SWAP1"
    },
    "8598": {
      "op": "DUP2"
    },
    "8599": {
      "op": "ADD"
    },
    "8600": {
      "op": "SWAP3"
    },
    "8601": {
      "op": "DUP3"
    },
    "8602": {
      "op": "ISZERO"
    },
    "8603": {
      "op": "PUSH2",
      "value": "0x21DA"
    },
    "8606": {
      "op": "JUMPI"
    },
    "8607": {
      "op": "SWAP2"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8610": {
      "op": "MUL"
    },
    "8611": {
      "op": "DUP3"
    },
    "8612": {
      "op": "ADD"
    },
    "8613": {
      "op": "JUMPDEST"
    },
    "8614": {
      "op": "DUP3"
    },
    "8615": {
      "op": "DUP2"
    },
    "8616": {
      "op": "GT"
    },
    "8617": {
      "op": "ISZERO"
    },
    "8618": {
      "op": "PUSH2",
      "value": "0x21DA"
    },
    "8621": {
      "op": "JUMPI"
    },
    "8622": {
      "op": "DUP3"
    },
    "8623": {
      "op": "MLOAD"
    },
    "8624": {
      "op": "DUP3"
    },
    "8625": {
      "op": "SLOAD"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8632": {
      "op": "SHL"
    },
    "8633": {
      "op": "SUB"
    },
    "8634": {
      "op": "NOT"
    },
    "8635": {
      "op": "AND"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8642": {
      "op": "SHL"
    },
    "8643": {
      "op": "SUB"
    },
    "8644": {
      "op": "SWAP1"
    },
    "8645": {
      "op": "SWAP2"
    },
    "8646": {
      "op": "AND"
    },
    "8647": {
      "op": "OR"
    },
    "8648": {
      "op": "DUP3"
    },
    "8649": {
      "op": "SSTORE"
    },
    "8650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8652": {
      "op": "SWAP1"
    },
    "8653": {
      "op": "SWAP3"
    },
    "8654": {
      "op": "ADD"
    },
    "8655": {
      "op": "SWAP2"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8658": {
      "op": "SWAP1"
    },
    "8659": {
      "op": "SWAP2"
    },
    "8660": {
      "op": "ADD"
    },
    "8661": {
      "op": "SWAP1"
    },
    "8662": {
      "op": "PUSH2",
      "value": "0x21A5"
    },
    "8665": {
      "op": "JUMP"
    },
    "8666": {
      "op": "JUMPDEST"
    },
    "8667": {
      "op": "POP"
    },
    "8668": {
      "op": "PUSH2",
      "value": "0x21E6"
    },
    "8671": {
      "op": "SWAP3"
    },
    "8672": {
      "op": "SWAP2"
    },
    "8673": {
      "op": "POP"
    },
    "8674": {
      "op": "PUSH2",
      "value": "0x2225"
    },
    "8677": {
      "jump": "i",
      "op": "JUMP"
    },
    "8678": {
      "op": "JUMPDEST"
    },
    "8679": {
      "op": "POP"
    },
    "8680": {
      "op": "SWAP1"
    },
    "8681": {
      "jump": "o",
      "op": "JUMP"
    },
    "8682": {
      "op": "JUMPDEST"
    },
    "8683": {
      "op": "DUP3"
    },
    "8684": {
      "op": "DUP1"
    },
    "8685": {
      "op": "SLOAD"
    },
    "8686": {
      "op": "DUP3"
    },
    "8687": {
      "op": "DUP3"
    },
    "8688": {
      "op": "SSTORE"
    },
    "8689": {
      "op": "SWAP1"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8692": {
      "op": "MSTORE"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8697": {
      "op": "KECCAK256"
    },
    "8698": {
      "op": "SWAP1"
    },
    "8699": {
      "op": "DUP2"
    },
    "8700": {
      "op": "ADD"
    },
    "8701": {
      "op": "SWAP3"
    },
    "8702": {
      "op": "DUP3"
    },
    "8703": {
      "op": "ISZERO"
    },
    "8704": {
      "op": "PUSH2",
      "value": "0x21DA"
    },
    "8707": {
      "op": "JUMPI"
    },
    "8708": {
      "op": "SWAP2"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8711": {
      "op": "MUL"
    },
    "8712": {
      "op": "DUP3"
    },
    "8713": {
      "op": "ADD"
    },
    "8714": {
      "op": "JUMPDEST"
    },
    "8715": {
      "op": "DUP3"
    },
    "8716": {
      "op": "DUP2"
    },
    "8717": {
      "op": "GT"
    },
    "8718": {
      "op": "ISZERO"
    },
    "8719": {
      "op": "PUSH2",
      "value": "0x21DA"
    },
    "8722": {
      "op": "JUMPI"
    },
    "8723": {
      "op": "DUP3"
    },
    "8724": {
      "op": "MLOAD"
    },
    "8725": {
      "op": "DUP3"
    },
    "8726": {
      "op": "SSTORE"
    },
    "8727": {
      "op": "SWAP2"
    },
    "8728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8730": {
      "op": "ADD"
    },
    "8731": {
      "op": "SWAP2"
    },
    "8732": {
      "op": "SWAP1"
    },
    "8733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8735": {
      "op": "ADD"
    },
    "8736": {
      "op": "SWAP1"
    },
    "8737": {
      "op": "PUSH2",
      "value": "0x220A"
    },
    "8740": {
      "op": "JUMP"
    },
    "8741": {
      "op": "JUMPDEST"
    },
    "8742": {
      "op": "JUMPDEST"
    },
    "8743": {
      "op": "DUP1"
    },
    "8744": {
      "op": "DUP3"
    },
    "8745": {
      "op": "GT"
    },
    "8746": {
      "op": "ISZERO"
    },
    "8747": {
      "op": "PUSH2",
      "value": "0x21E6"
    },
    "8750": {
      "op": "JUMPI"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8753": {
      "op": "DUP2"
    },
    "8754": {
      "op": "SSTORE"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8757": {
      "op": "ADD"
    },
    "8758": {
      "op": "PUSH2",
      "value": "0x2226"
    },
    "8761": {
      "op": "JUMP"
    },
    "8762": {
      "op": "JUMPDEST"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8767": {
      "op": "DUP1"
    },
    "8768": {
      "op": "DUP4"
    },
    "8769": {
      "op": "MSTORE"
    },
    "8770": {
      "op": "DUP4"
    },
    "8771": {
      "op": "MLOAD"
    },
    "8772": {
      "op": "DUP1"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8775": {
      "op": "DUP6"
    },
    "8776": {
      "op": "ADD"
    },
    "8777": {
      "op": "MSTORE"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8780": {
      "op": "JUMPDEST"
    },
    "8781": {
      "op": "DUP2"
    },
    "8782": {
      "op": "DUP2"
    },
    "8783": {
      "op": "LT"
    },
    "8784": {
      "op": "ISZERO"
    },
    "8785": {
      "op": "PUSH2",
      "value": "0x2268"
    },
    "8788": {
      "op": "JUMPI"
    },
    "8789": {
      "op": "DUP6"
    },
    "8790": {
      "op": "DUP2"
    },
    "8791": {
      "op": "ADD"
    },
    "8792": {
      "op": "DUP4"
    },
    "8793": {
      "op": "ADD"
    },
    "8794": {
      "op": "MLOAD"
    },
    "8795": {
      "op": "DUP6"
    },
    "8796": {
      "op": "DUP3"
    },
    "8797": {
      "op": "ADD"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8800": {
      "op": "ADD"
    },
    "8801": {
      "op": "MSTORE"
    },
    "8802": {
      "op": "DUP3"
    },
    "8803": {
      "op": "ADD"
    },
    "8804": {
      "op": "PUSH2",
      "value": "0x224C"
    },
    "8807": {
      "op": "JUMP"
    },
    "8808": {
      "op": "JUMPDEST"
    },
    "8809": {
      "op": "POP"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8814": {
      "op": "DUP3"
    },
    "8815": {
      "op": "DUP7"
    },
    "8816": {
      "op": "ADD"
    },
    "8817": {
      "op": "ADD"
    },
    "8818": {
      "op": "MSTORE"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8823": {
      "op": "NOT"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8826": {
      "op": "DUP4"
    },
    "8827": {
      "op": "ADD"
    },
    "8828": {
      "op": "AND"
    },
    "8829": {
      "op": "DUP6"
    },
    "8830": {
      "op": "ADD"
    },
    "8831": {
      "op": "ADD"
    },
    "8832": {
      "op": "SWAP3"
    },
    "8833": {
      "op": "POP"
    },
    "8834": {
      "op": "POP"
    },
    "8835": {
      "op": "POP"
    },
    "8836": {
      "op": "SWAP3"
    },
    "8837": {
      "op": "SWAP2"
    },
    "8838": {
      "op": "POP"
    },
    "8839": {
      "op": "POP"
    },
    "8840": {
      "jump": "o",
      "op": "JUMP"
    },
    "8841": {
      "op": "JUMPDEST"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8848": {
      "op": "SHL"
    },
    "8849": {
      "op": "SUB"
    },
    "8850": {
      "op": "DUP2"
    },
    "8851": {
      "op": "AND"
    },
    "8852": {
      "op": "DUP2"
    },
    "8853": {
      "op": "EQ"
    },
    "8854": {
      "op": "PUSH2",
      "value": "0x1204"
    },
    "8857": {
      "op": "JUMPI"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8860": {
      "op": "DUP1"
    },
    "8861": {
      "op": "REVERT"
    },
    "8862": {
      "op": "JUMPDEST"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8865": {
      "op": "DUP1"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8868": {
      "op": "DUP4"
    },
    "8869": {
      "op": "DUP6"
    },
    "8870": {
      "op": "SUB"
    },
    "8871": {
      "op": "SLT"
    },
    "8872": {
      "op": "ISZERO"
    },
    "8873": {
      "op": "PUSH2",
      "value": "0x22B1"
    },
    "8876": {
      "op": "JUMPI"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8879": {
      "op": "DUP1"
    },
    "8880": {
      "op": "REVERT"
    },
    "8881": {
      "op": "JUMPDEST"
    },
    "8882": {
      "op": "DUP3"
    },
    "8883": {
      "op": "CALLDATALOAD"
    },
    "8884": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "8887": {
      "op": "DUP2"
    },
    "8888": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "8891": {
      "jump": "i",
      "op": "JUMP"
    },
    "8892": {
      "op": "JUMPDEST"
    },
    "8893": {
      "op": "SWAP5"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8896": {
      "op": "SWAP4"
    },
    "8897": {
      "op": "SWAP1"
    },
    "8898": {
      "op": "SWAP4"
    },
    "8899": {
      "op": "ADD"
    },
    "8900": {
      "op": "CALLDATALOAD"
    },
    "8901": {
      "op": "SWAP4"
    },
    "8902": {
      "op": "POP"
    },
    "8903": {
      "op": "POP"
    },
    "8904": {
      "op": "POP"
    },
    "8905": {
      "jump": "o",
      "op": "JUMP"
    },
    "8906": {
      "op": "JUMPDEST"
    },
    "8907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8909": {
      "op": "DUP2"
    },
    "8910": {
      "op": "MLOAD"
    },
    "8911": {
      "op": "DUP1"
    },
    "8912": {
      "op": "DUP5"
    },
    "8913": {
      "op": "MSTORE"
    },
    "8914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8916": {
      "op": "DUP1"
    },
    "8917": {
      "op": "DUP6"
    },
    "8918": {
      "op": "ADD"
    },
    "8919": {
      "op": "SWAP5"
    },
    "8920": {
      "op": "POP"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8923": {
      "op": "DUP5"
    },
    "8924": {
      "op": "ADD"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8927": {
      "op": "JUMPDEST"
    },
    "8928": {
      "op": "DUP4"
    },
    "8929": {
      "op": "DUP2"
    },
    "8930": {
      "op": "LT"
    },
    "8931": {
      "op": "ISZERO"
    },
    "8932": {
      "op": "PUSH2",
      "value": "0x2304"
    },
    "8935": {
      "op": "JUMPI"
    },
    "8936": {
      "op": "DUP2"
    },
    "8937": {
      "op": "MLOAD"
    },
    "8938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8944": {
      "op": "SHL"
    },
    "8945": {
      "op": "SUB"
    },
    "8946": {
      "op": "AND"
    },
    "8947": {
      "op": "DUP8"
    },
    "8948": {
      "op": "MSTORE"
    },
    "8949": {
      "op": "SWAP6"
    },
    "8950": {
      "op": "DUP3"
    },
    "8951": {
      "op": "ADD"
    },
    "8952": {
      "op": "SWAP6"
    },
    "8953": {
      "op": "SWAP1"
    },
    "8954": {
      "op": "DUP3"
    },
    "8955": {
      "op": "ADD"
    },
    "8956": {
      "op": "SWAP1"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8959": {
      "op": "ADD"
    },
    "8960": {
      "op": "PUSH2",
      "value": "0x22DF"
    },
    "8963": {
      "op": "JUMP"
    },
    "8964": {
      "op": "JUMPDEST"
    },
    "8965": {
      "op": "POP"
    },
    "8966": {
      "op": "SWAP5"
    },
    "8967": {
      "op": "SWAP6"
    },
    "8968": {
      "op": "SWAP5"
    },
    "8969": {
      "op": "POP"
    },
    "8970": {
      "op": "POP"
    },
    "8971": {
      "op": "POP"
    },
    "8972": {
      "op": "POP"
    },
    "8973": {
      "op": "POP"
    },
    "8974": {
      "jump": "o",
      "op": "JUMP"
    },
    "8975": {
      "op": "JUMPDEST"
    },
    "8976": {
      "op": "DUP5"
    },
    "8977": {
      "op": "DUP2"
    },
    "8978": {
      "op": "MSTORE"
    },
    "8979": {
      "op": "DUP4"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8982": {
      "op": "DUP3"
    },
    "8983": {
      "op": "ADD"
    },
    "8984": {
      "op": "MSTORE"
    },
    "8985": {
      "op": "DUP3"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8988": {
      "op": "DUP3"
    },
    "8989": {
      "op": "ADD"
    },
    "8990": {
      "op": "MSTORE"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8995": {
      "op": "DUP3"
    },
    "8996": {
      "op": "ADD"
    },
    "8997": {
      "op": "MSTORE"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9000": {
      "op": "PUSH2",
      "value": "0x2334"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9005": {
      "op": "DUP4"
    },
    "9006": {
      "op": "ADD"
    },
    "9007": {
      "op": "DUP5"
    },
    "9008": {
      "op": "PUSH2",
      "value": "0x22CA"
    },
    "9011": {
      "jump": "i",
      "op": "JUMP"
    },
    "9012": {
      "op": "JUMPDEST"
    },
    "9013": {
      "op": "SWAP7"
    },
    "9014": {
      "op": "SWAP6"
    },
    "9015": {
      "op": "POP"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "op": "POP"
    },
    "9018": {
      "op": "POP"
    },
    "9019": {
      "op": "POP"
    },
    "9020": {
      "op": "POP"
    },
    "9021": {
      "jump": "o",
      "op": "JUMP"
    },
    "9022": {
      "op": "JUMPDEST"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9025": {
      "op": "DUP1"
    },
    "9026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9028": {
      "op": "DUP1"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9031": {
      "op": "DUP6"
    },
    "9032": {
      "op": "DUP8"
    },
    "9033": {
      "op": "SUB"
    },
    "9034": {
      "op": "SLT"
    },
    "9035": {
      "op": "ISZERO"
    },
    "9036": {
      "op": "PUSH2",
      "value": "0x2354"
    },
    "9039": {
      "op": "JUMPI"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9042": {
      "op": "DUP1"
    },
    "9043": {
      "op": "REVERT"
    },
    "9044": {
      "op": "JUMPDEST"
    },
    "9045": {
      "op": "DUP5"
    },
    "9046": {
      "op": "CALLDATALOAD"
    },
    "9047": {
      "op": "SWAP4"
    },
    "9048": {
      "op": "POP"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9051": {
      "op": "DUP6"
    },
    "9052": {
      "op": "ADD"
    },
    "9053": {
      "op": "CALLDATALOAD"
    },
    "9054": {
      "op": "SWAP3"
    },
    "9055": {
      "op": "POP"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9058": {
      "op": "DUP6"
    },
    "9059": {
      "op": "ADD"
    },
    "9060": {
      "op": "CALLDATALOAD"
    },
    "9061": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9070": {
      "op": "DUP1"
    },
    "9071": {
      "op": "DUP3"
    },
    "9072": {
      "op": "GT"
    },
    "9073": {
      "op": "ISZERO"
    },
    "9074": {
      "op": "PUSH2",
      "value": "0x237A"
    },
    "9077": {
      "op": "JUMPI"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9080": {
      "op": "DUP1"
    },
    "9081": {
      "op": "REVERT"
    },
    "9082": {
      "op": "JUMPDEST"
    },
    "9083": {
      "op": "DUP2"
    },
    "9084": {
      "op": "DUP8"
    },
    "9085": {
      "op": "ADD"
    },
    "9086": {
      "op": "SWAP2"
    },
    "9087": {
      "op": "POP"
    },
    "9088": {
      "op": "DUP8"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9091": {
      "op": "DUP4"
    },
    "9092": {
      "op": "ADD"
    },
    "9093": {
      "op": "SLT"
    },
    "9094": {
      "op": "PUSH2",
      "value": "0x238E"
    },
    "9097": {
      "op": "JUMPI"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9100": {
      "op": "DUP1"
    },
    "9101": {
      "op": "REVERT"
    },
    "9102": {
      "op": "JUMPDEST"
    },
    "9103": {
      "op": "DUP2"
    },
    "9104": {
      "op": "CALLDATALOAD"
    },
    "9105": {
      "op": "DUP2"
    },
    "9106": {
      "op": "DUP2"
    },
    "9107": {
      "op": "GT"
    },
    "9108": {
      "op": "ISZERO"
    },
    "9109": {
      "op": "PUSH2",
      "value": "0x239D"
    },
    "9112": {
      "op": "JUMPI"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9115": {
      "op": "DUP1"
    },
    "9116": {
      "op": "REVERT"
    },
    "9117": {
      "op": "JUMPDEST"
    },
    "9118": {
      "op": "DUP9"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9121": {
      "op": "DUP3"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9124": {
      "op": "SHL"
    },
    "9125": {
      "op": "DUP6"
    },
    "9126": {
      "op": "ADD"
    },
    "9127": {
      "op": "ADD"
    },
    "9128": {
      "op": "GT"
    },
    "9129": {
      "op": "ISZERO"
    },
    "9130": {
      "op": "PUSH2",
      "value": "0x23B2"
    },
    "9133": {
      "op": "JUMPI"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9136": {
      "op": "DUP1"
    },
    "9137": {
      "op": "REVERT"
    },
    "9138": {
      "op": "JUMPDEST"
    },
    "9139": {
      "op": "SWAP6"
    },
    "9140": {
      "op": "SWAP9"
    },
    "9141": {
      "op": "SWAP5"
    },
    "9142": {
      "op": "SWAP8"
    },
    "9143": {
      "op": "POP"
    },
    "9144": {
      "op": "POP"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9147": {
      "op": "ADD"
    },
    "9148": {
      "op": "SWAP5"
    },
    "9149": {
      "op": "POP"
    },
    "9150": {
      "op": "POP"
    },
    "9151": {
      "op": "POP"
    },
    "9152": {
      "jump": "o",
      "op": "JUMP"
    },
    "9153": {
      "op": "JUMPDEST"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9156": {
      "op": "DUP1"
    },
    "9157": {
      "op": "DUP3"
    },
    "9158": {
      "op": "MSTORE"
    },
    "9159": {
      "op": "DUP3"
    },
    "9160": {
      "op": "MLOAD"
    },
    "9161": {
      "op": "DUP3"
    },
    "9162": {
      "op": "DUP3"
    },
    "9163": {
      "op": "ADD"
    },
    "9164": {
      "op": "DUP2"
    },
    "9165": {
      "op": "SWAP1"
    },
    "9166": {
      "op": "MSTORE"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9169": {
      "op": "SWAP2"
    },
    "9170": {
      "op": "SWAP1"
    },
    "9171": {
      "op": "DUP5"
    },
    "9172": {
      "op": "DUP3"
    },
    "9173": {
      "op": "ADD"
    },
    "9174": {
      "op": "SWAP1"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9177": {
      "op": "DUP6"
    },
    "9178": {
      "op": "ADD"
    },
    "9179": {
      "op": "SWAP1"
    },
    "9180": {
      "op": "DUP5"
    },
    "9181": {
      "op": "JUMPDEST"
    },
    "9182": {
      "op": "DUP2"
    },
    "9183": {
      "op": "DUP2"
    },
    "9184": {
      "op": "LT"
    },
    "9185": {
      "op": "ISZERO"
    },
    "9186": {
      "op": "PUSH2",
      "value": "0x23F9"
    },
    "9189": {
      "op": "JUMPI"
    },
    "9190": {
      "op": "DUP4"
    },
    "9191": {
      "op": "MLOAD"
    },
    "9192": {
      "op": "DUP4"
    },
    "9193": {
      "op": "MSTORE"
    },
    "9194": {
      "op": "SWAP3"
    },
    "9195": {
      "op": "DUP5"
    },
    "9196": {
      "op": "ADD"
    },
    "9197": {
      "op": "SWAP3"
    },
    "9198": {
      "op": "SWAP2"
    },
    "9199": {
      "op": "DUP5"
    },
    "9200": {
      "op": "ADD"
    },
    "9201": {
      "op": "SWAP2"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9204": {
      "op": "ADD"
    },
    "9205": {
      "op": "PUSH2",
      "value": "0x23DD"
    },
    "9208": {
      "op": "JUMP"
    },
    "9209": {
      "op": "JUMPDEST"
    },
    "9210": {
      "op": "POP"
    },
    "9211": {
      "op": "SWAP1"
    },
    "9212": {
      "op": "SWAP7"
    },
    "9213": {
      "op": "SWAP6"
    },
    "9214": {
      "op": "POP"
    },
    "9215": {
      "op": "POP"
    },
    "9216": {
      "op": "POP"
    },
    "9217": {
      "op": "POP"
    },
    "9218": {
      "op": "POP"
    },
    "9219": {
      "op": "POP"
    },
    "9220": {
      "jump": "o",
      "op": "JUMP"
    },
    "9221": {
      "op": "JUMPDEST"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9226": {
      "op": "DUP3"
    },
    "9227": {
      "op": "DUP5"
    },
    "9228": {
      "op": "SUB"
    },
    "9229": {
      "op": "SLT"
    },
    "9230": {
      "op": "ISZERO"
    },
    "9231": {
      "op": "PUSH2",
      "value": "0x2417"
    },
    "9234": {
      "op": "JUMPI"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9237": {
      "op": "DUP1"
    },
    "9238": {
      "op": "REVERT"
    },
    "9239": {
      "op": "JUMPDEST"
    },
    "9240": {
      "op": "POP"
    },
    "9241": {
      "op": "CALLDATALOAD"
    },
    "9242": {
      "op": "SWAP2"
    },
    "9243": {
      "op": "SWAP1"
    },
    "9244": {
      "op": "POP"
    },
    "9245": {
      "jump": "o",
      "op": "JUMP"
    },
    "9246": {
      "op": "JUMPDEST"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9249": {
      "op": "DUP1"
    },
    "9250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9254": {
      "op": "DUP5"
    },
    "9255": {
      "op": "DUP7"
    },
    "9256": {
      "op": "SUB"
    },
    "9257": {
      "op": "SLT"
    },
    "9258": {
      "op": "ISZERO"
    },
    "9259": {
      "op": "PUSH2",
      "value": "0x2433"
    },
    "9262": {
      "op": "JUMPI"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9265": {
      "op": "DUP1"
    },
    "9266": {
      "op": "REVERT"
    },
    "9267": {
      "op": "JUMPDEST"
    },
    "9268": {
      "op": "DUP4"
    },
    "9269": {
      "op": "CALLDATALOAD"
    },
    "9270": {
      "op": "PUSH2",
      "value": "0x243E"
    },
    "9273": {
      "op": "DUP2"
    },
    "9274": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "9277": {
      "jump": "i",
      "op": "JUMP"
    },
    "9278": {
      "op": "JUMPDEST"
    },
    "9279": {
      "op": "SWAP3"
    },
    "9280": {
      "op": "POP"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9283": {
      "op": "DUP5"
    },
    "9284": {
      "op": "ADD"
    },
    "9285": {
      "op": "CALLDATALOAD"
    },
    "9286": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "9289": {
      "op": "DUP2"
    },
    "9290": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "9293": {
      "jump": "i",
      "op": "JUMP"
    },
    "9294": {
      "op": "JUMPDEST"
    },
    "9295": {
      "op": "SWAP3"
    },
    "9296": {
      "op": "SWAP6"
    },
    "9297": {
      "op": "SWAP3"
    },
    "9298": {
      "op": "SWAP5"
    },
    "9299": {
      "op": "POP"
    },
    "9300": {
      "op": "POP"
    },
    "9301": {
      "op": "POP"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9304": {
      "op": "SWAP2"
    },
    "9305": {
      "op": "SWAP1"
    },
    "9306": {
      "op": "SWAP2"
    },
    "9307": {
      "op": "ADD"
    },
    "9308": {
      "op": "CALLDATALOAD"
    },
    "9309": {
      "op": "SWAP1"
    },
    "9310": {
      "jump": "o",
      "op": "JUMP"
    },
    "9311": {
      "op": "JUMPDEST"
    },
    "9312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9316": {
      "op": "DUP3"
    },
    "9317": {
      "op": "DUP5"
    },
    "9318": {
      "op": "SUB"
    },
    "9319": {
      "op": "SLT"
    },
    "9320": {
      "op": "ISZERO"
    },
    "9321": {
      "op": "PUSH2",
      "value": "0x2471"
    },
    "9324": {
      "op": "JUMPI"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9327": {
      "op": "DUP1"
    },
    "9328": {
      "op": "REVERT"
    },
    "9329": {
      "op": "JUMPDEST"
    },
    "9330": {
      "op": "DUP2"
    },
    "9331": {
      "op": "CALLDATALOAD"
    },
    "9332": {
      "op": "PUSH2",
      "value": "0x247C"
    },
    "9335": {
      "op": "DUP2"
    },
    "9336": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "9339": {
      "jump": "i",
      "op": "JUMP"
    },
    "9340": {
      "op": "JUMPDEST"
    },
    "9341": {
      "op": "SWAP4"
    },
    "9342": {
      "op": "SWAP3"
    },
    "9343": {
      "op": "POP"
    },
    "9344": {
      "op": "POP"
    },
    "9345": {
      "op": "POP"
    },
    "9346": {
      "jump": "o",
      "op": "JUMP"
    },
    "9347": {
      "op": "JUMPDEST"
    },
    "9348": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9353": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9355": {
      "op": "SHL"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9358": {
      "op": "MSTORE"
    },
    "9359": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9363": {
      "op": "MSTORE"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9368": {
      "op": "REVERT"
    },
    "9369": {
      "op": "JUMPDEST"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9372": {
      "op": "MLOAD"
    },
    "9373": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9375": {
      "op": "DUP3"
    },
    "9376": {
      "op": "ADD"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9379": {
      "op": "NOT"
    },
    "9380": {
      "op": "AND"
    },
    "9381": {
      "op": "DUP2"
    },
    "9382": {
      "op": "ADD"
    },
    "9383": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9392": {
      "op": "DUP2"
    },
    "9393": {
      "op": "GT"
    },
    "9394": {
      "op": "DUP3"
    },
    "9395": {
      "op": "DUP3"
    },
    "9396": {
      "op": "LT"
    },
    "9397": {
      "op": "OR"
    },
    "9398": {
      "op": "ISZERO"
    },
    "9399": {
      "op": "PUSH2",
      "value": "0x24C2"
    },
    "9402": {
      "op": "JUMPI"
    },
    "9403": {
      "op": "PUSH2",
      "value": "0x24C2"
    },
    "9406": {
      "op": "PUSH2",
      "value": "0x2483"
    },
    "9409": {
      "jump": "i",
      "op": "JUMP"
    },
    "9410": {
      "op": "JUMPDEST"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9413": {
      "op": "MSTORE"
    },
    "9414": {
      "op": "SWAP2"
    },
    "9415": {
      "op": "SWAP1"
    },
    "9416": {
      "op": "POP"
    },
    "9417": {
      "jump": "o",
      "op": "JUMP"
    },
    "9418": {
      "op": "JUMPDEST"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9421": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9430": {
      "op": "DUP3"
    },
    "9431": {
      "op": "GT"
    },
    "9432": {
      "op": "ISZERO"
    },
    "9433": {
      "op": "PUSH2",
      "value": "0x24E4"
    },
    "9436": {
      "op": "JUMPI"
    },
    "9437": {
      "op": "PUSH2",
      "value": "0x24E4"
    },
    "9440": {
      "op": "PUSH2",
      "value": "0x2483"
    },
    "9443": {
      "jump": "i",
      "op": "JUMP"
    },
    "9444": {
      "op": "JUMPDEST"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9448": {
      "op": "SHL"
    },
    "9449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9451": {
      "op": "ADD"
    },
    "9452": {
      "op": "SWAP1"
    },
    "9453": {
      "jump": "o",
      "op": "JUMP"
    },
    "9454": {
      "op": "JUMPDEST"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9457": {
      "op": "DUP3"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9460": {
      "op": "DUP4"
    },
    "9461": {
      "op": "ADD"
    },
    "9462": {
      "op": "SLT"
    },
    "9463": {
      "op": "PUSH2",
      "value": "0x24FF"
    },
    "9466": {
      "op": "JUMPI"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9469": {
      "op": "DUP1"
    },
    "9470": {
      "op": "REVERT"
    },
    "9471": {
      "op": "JUMPDEST"
    },
    "9472": {
      "op": "DUP2"
    },
    "9473": {
      "op": "CALLDATALOAD"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9476": {
      "op": "PUSH2",
      "value": "0x2514"
    },
    "9479": {
      "op": "PUSH2",
      "value": "0x250F"
    },
    "9482": {
      "op": "DUP4"
    },
    "9483": {
      "op": "PUSH2",
      "value": "0x24CA"
    },
    "9486": {
      "jump": "i",
      "op": "JUMP"
    },
    "9487": {
      "op": "JUMPDEST"
    },
    "9488": {
      "op": "PUSH2",
      "value": "0x2499"
    },
    "9491": {
      "jump": "i",
      "op": "JUMP"
    },
    "9492": {
      "op": "JUMPDEST"
    },
    "9493": {
      "op": "DUP1"
    },
    "9494": {
      "op": "DUP4"
    },
    "9495": {
      "op": "DUP3"
    },
    "9496": {
      "op": "MSTORE"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9499": {
      "op": "DUP3"
    },
    "9500": {
      "op": "ADD"
    },
    "9501": {
      "op": "SWAP2"
    },
    "9502": {
      "op": "POP"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9505": {
      "op": "DUP5"
    },
    "9506": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9508": {
      "op": "SHL"
    },
    "9509": {
      "op": "DUP8"
    },
    "9510": {
      "op": "ADD"
    },
    "9511": {
      "op": "ADD"
    },
    "9512": {
      "op": "SWAP4"
    },
    "9513": {
      "op": "POP"
    },
    "9514": {
      "op": "DUP7"
    },
    "9515": {
      "op": "DUP5"
    },
    "9516": {
      "op": "GT"
    },
    "9517": {
      "op": "ISZERO"
    },
    "9518": {
      "op": "PUSH2",
      "value": "0x2536"
    },
    "9521": {
      "op": "JUMPI"
    },
    "9522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9524": {
      "op": "DUP1"
    },
    "9525": {
      "op": "REVERT"
    },
    "9526": {
      "op": "JUMPDEST"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9529": {
      "op": "DUP7"
    },
    "9530": {
      "op": "ADD"
    },
    "9531": {
      "op": "JUMPDEST"
    },
    "9532": {
      "op": "DUP5"
    },
    "9533": {
      "op": "DUP2"
    },
    "9534": {
      "op": "LT"
    },
    "9535": {
      "op": "ISZERO"
    },
    "9536": {
      "op": "PUSH2",
      "value": "0x255B"
    },
    "9539": {
      "op": "JUMPI"
    },
    "9540": {
      "op": "DUP1"
    },
    "9541": {
      "op": "CALLDATALOAD"
    },
    "9542": {
      "op": "PUSH2",
      "value": "0x254E"
    },
    "9545": {
      "op": "DUP2"
    },
    "9546": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "9549": {
      "jump": "i",
      "op": "JUMP"
    },
    "9550": {
      "op": "JUMPDEST"
    },
    "9551": {
      "op": "DUP4"
    },
    "9552": {
      "op": "MSTORE"
    },
    "9553": {
      "op": "SWAP2"
    },
    "9554": {
      "op": "DUP4"
    },
    "9555": {
      "op": "ADD"
    },
    "9556": {
      "op": "SWAP2"
    },
    "9557": {
      "op": "DUP4"
    },
    "9558": {
      "op": "ADD"
    },
    "9559": {
      "op": "PUSH2",
      "value": "0x253B"
    },
    "9562": {
      "op": "JUMP"
    },
    "9563": {
      "op": "JUMPDEST"
    },
    "9564": {
      "op": "POP"
    },
    "9565": {
      "op": "SWAP7"
    },
    "9566": {
      "op": "SWAP6"
    },
    "9567": {
      "op": "POP"
    },
    "9568": {
      "op": "POP"
    },
    "9569": {
      "op": "POP"
    },
    "9570": {
      "op": "POP"
    },
    "9571": {
      "op": "POP"
    },
    "9572": {
      "op": "POP"
    },
    "9573": {
      "jump": "o",
      "op": "JUMP"
    },
    "9574": {
      "op": "JUMPDEST"
    },
    "9575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9577": {
      "op": "DUP1"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9580": {
      "op": "DUP4"
    },
    "9581": {
      "op": "DUP6"
    },
    "9582": {
      "op": "SUB"
    },
    "9583": {
      "op": "SLT"
    },
    "9584": {
      "op": "ISZERO"
    },
    "9585": {
      "op": "PUSH2",
      "value": "0x2579"
    },
    "9588": {
      "op": "JUMPI"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9591": {
      "op": "DUP1"
    },
    "9592": {
      "op": "REVERT"
    },
    "9593": {
      "op": "JUMPDEST"
    },
    "9594": {
      "op": "DUP3"
    },
    "9595": {
      "op": "CALLDATALOAD"
    },
    "9596": {
      "op": "SWAP2"
    },
    "9597": {
      "op": "POP"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9600": {
      "op": "DUP4"
    },
    "9601": {
      "op": "ADD"
    },
    "9602": {
      "op": "CALLDATALOAD"
    },
    "9603": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9612": {
      "op": "DUP2"
    },
    "9613": {
      "op": "GT"
    },
    "9614": {
      "op": "ISZERO"
    },
    "9615": {
      "op": "PUSH2",
      "value": "0x2597"
    },
    "9618": {
      "op": "JUMPI"
    },
    "9619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9621": {
      "op": "DUP1"
    },
    "9622": {
      "op": "REVERT"
    },
    "9623": {
      "op": "JUMPDEST"
    },
    "9624": {
      "op": "PUSH2",
      "value": "0x25A3"
    },
    "9627": {
      "op": "DUP6"
    },
    "9628": {
      "op": "DUP3"
    },
    "9629": {
      "op": "DUP7"
    },
    "9630": {
      "op": "ADD"
    },
    "9631": {
      "op": "PUSH2",
      "value": "0x24EE"
    },
    "9634": {
      "jump": "i",
      "op": "JUMP"
    },
    "9635": {
      "op": "JUMPDEST"
    },
    "9636": {
      "op": "SWAP2"
    },
    "9637": {
      "op": "POP"
    },
    "9638": {
      "op": "POP"
    },
    "9639": {
      "op": "SWAP3"
    },
    "9640": {
      "op": "POP"
    },
    "9641": {
      "op": "SWAP3"
    },
    "9642": {
      "op": "SWAP1"
    },
    "9643": {
      "op": "POP"
    },
    "9644": {
      "jump": "o",
      "op": "JUMP"
    },
    "9645": {
      "op": "JUMPDEST"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9648": {
      "op": "DUP2"
    },
    "9649": {
      "op": "MSTORE"
    },
    "9650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9652": {
      "op": "PUSH2",
      "value": "0x247C"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9657": {
      "op": "DUP4"
    },
    "9658": {
      "op": "ADD"
    },
    "9659": {
      "op": "DUP5"
    },
    "9660": {
      "op": "PUSH2",
      "value": "0x22CA"
    },
    "9663": {
      "jump": "i",
      "op": "JUMP"
    },
    "9664": {
      "op": "JUMPDEST"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9667": {
      "op": "DUP1"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9670": {
      "op": "DUP4"
    },
    "9671": {
      "op": "DUP6"
    },
    "9672": {
      "op": "SUB"
    },
    "9673": {
      "op": "SLT"
    },
    "9674": {
      "op": "ISZERO"
    },
    "9675": {
      "op": "PUSH2",
      "value": "0x25D3"
    },
    "9678": {
      "op": "JUMPI"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9681": {
      "op": "DUP1"
    },
    "9682": {
      "op": "REVERT"
    },
    "9683": {
      "op": "JUMPDEST"
    },
    "9684": {
      "op": "POP"
    },
    "9685": {
      "op": "POP"
    },
    "9686": {
      "op": "DUP1"
    },
    "9687": {
      "op": "CALLDATALOAD"
    },
    "9688": {
      "op": "SWAP3"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9691": {
      "op": "SWAP1"
    },
    "9692": {
      "op": "SWAP2"
    },
    "9693": {
      "op": "ADD"
    },
    "9694": {
      "op": "CALLDATALOAD"
    },
    "9695": {
      "op": "SWAP2"
    },
    "9696": {
      "op": "POP"
    },
    "9697": {
      "jump": "o",
      "op": "JUMP"
    },
    "9698": {
      "op": "JUMPDEST"
    },
    "9699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9703": {
      "op": "DUP3"
    },
    "9704": {
      "op": "DUP5"
    },
    "9705": {
      "op": "SUB"
    },
    "9706": {
      "op": "SLT"
    },
    "9707": {
      "op": "ISZERO"
    },
    "9708": {
      "op": "PUSH2",
      "value": "0x25F4"
    },
    "9711": {
      "op": "JUMPI"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9714": {
      "op": "DUP1"
    },
    "9715": {
      "op": "REVERT"
    },
    "9716": {
      "op": "JUMPDEST"
    },
    "9717": {
      "op": "DUP2"
    },
    "9718": {
      "op": "CALLDATALOAD"
    },
    "9719": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9728": {
      "op": "DUP2"
    },
    "9729": {
      "op": "GT"
    },
    "9730": {
      "op": "ISZERO"
    },
    "9731": {
      "op": "PUSH2",
      "value": "0x260B"
    },
    "9734": {
      "op": "JUMPI"
    },
    "9735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9737": {
      "op": "DUP1"
    },
    "9738": {
      "op": "REVERT"
    },
    "9739": {
      "op": "JUMPDEST"
    },
    "9740": {
      "op": "PUSH2",
      "value": "0x2617"
    },
    "9743": {
      "op": "DUP5"
    },
    "9744": {
      "op": "DUP3"
    },
    "9745": {
      "op": "DUP6"
    },
    "9746": {
      "op": "ADD"
    },
    "9747": {
      "op": "PUSH2",
      "value": "0x24EE"
    },
    "9750": {
      "jump": "i",
      "op": "JUMP"
    },
    "9751": {
      "op": "JUMPDEST"
    },
    "9752": {
      "op": "SWAP5"
    },
    "9753": {
      "op": "SWAP4"
    },
    "9754": {
      "op": "POP"
    },
    "9755": {
      "op": "POP"
    },
    "9756": {
      "op": "POP"
    },
    "9757": {
      "op": "POP"
    },
    "9758": {
      "jump": "o",
      "op": "JUMP"
    },
    "9759": {
      "op": "JUMPDEST"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9762": {
      "op": "DUP1"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9765": {
      "op": "DUP1"
    },
    "9766": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9768": {
      "op": "DUP6"
    },
    "9769": {
      "op": "DUP8"
    },
    "9770": {
      "op": "SUB"
    },
    "9771": {
      "op": "SLT"
    },
    "9772": {
      "op": "ISZERO"
    },
    "9773": {
      "op": "PUSH2",
      "value": "0x2635"
    },
    "9776": {
      "op": "JUMPI"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9779": {
      "op": "DUP1"
    },
    "9780": {
      "op": "REVERT"
    },
    "9781": {
      "op": "JUMPDEST"
    },
    "9782": {
      "op": "DUP5"
    },
    "9783": {
      "op": "CALLDATALOAD"
    },
    "9784": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9793": {
      "op": "DUP1"
    },
    "9794": {
      "op": "DUP3"
    },
    "9795": {
      "op": "GT"
    },
    "9796": {
      "op": "ISZERO"
    },
    "9797": {
      "op": "PUSH2",
      "value": "0x264D"
    },
    "9800": {
      "op": "JUMPI"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9803": {
      "op": "DUP1"
    },
    "9804": {
      "op": "REVERT"
    },
    "9805": {
      "op": "JUMPDEST"
    },
    "9806": {
      "op": "PUSH2",
      "value": "0x2659"
    },
    "9809": {
      "op": "DUP9"
    },
    "9810": {
      "op": "DUP4"
    },
    "9811": {
      "op": "DUP10"
    },
    "9812": {
      "op": "ADD"
    },
    "9813": {
      "op": "PUSH2",
      "value": "0x24EE"
    },
    "9816": {
      "jump": "i",
      "op": "JUMP"
    },
    "9817": {
      "op": "JUMPDEST"
    },
    "9818": {
      "op": "SWAP6"
    },
    "9819": {
      "op": "POP"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9822": {
      "op": "SWAP2"
    },
    "9823": {
      "op": "POP"
    },
    "9824": {
      "op": "DUP2"
    },
    "9825": {
      "op": "DUP8"
    },
    "9826": {
      "op": "ADD"
    },
    "9827": {
      "op": "CALLDATALOAD"
    },
    "9828": {
      "op": "DUP2"
    },
    "9829": {
      "op": "DUP2"
    },
    "9830": {
      "op": "GT"
    },
    "9831": {
      "op": "ISZERO"
    },
    "9832": {
      "op": "PUSH2",
      "value": "0x2670"
    },
    "9835": {
      "op": "JUMPI"
    },
    "9836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9838": {
      "op": "DUP1"
    },
    "9839": {
      "op": "REVERT"
    },
    "9840": {
      "op": "JUMPDEST"
    },
    "9841": {
      "op": "DUP8"
    },
    "9842": {
      "op": "ADD"
    },
    "9843": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9845": {
      "op": "DUP2"
    },
    "9846": {
      "op": "ADD"
    },
    "9847": {
      "op": "DUP10"
    },
    "9848": {
      "op": "SGT"
    },
    "9849": {
      "op": "PUSH2",
      "value": "0x2681"
    },
    "9852": {
      "op": "JUMPI"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9855": {
      "op": "DUP1"
    },
    "9856": {
      "op": "REVERT"
    },
    "9857": {
      "op": "JUMPDEST"
    },
    "9858": {
      "op": "DUP1"
    },
    "9859": {
      "op": "CALLDATALOAD"
    },
    "9860": {
      "op": "PUSH2",
      "value": "0x268F"
    },
    "9863": {
      "op": "PUSH2",
      "value": "0x250F"
    },
    "9866": {
      "op": "DUP3"
    },
    "9867": {
      "op": "PUSH2",
      "value": "0x24CA"
    },
    "9870": {
      "jump": "i",
      "op": "JUMP"
    },
    "9871": {
      "op": "JUMPDEST"
    },
    "9872": {
      "op": "DUP2"
    },
    "9873": {
      "op": "DUP2"
    },
    "9874": {
      "op": "MSTORE"
    },
    "9875": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9877": {
      "op": "SWAP2"
    },
    "9878": {
      "op": "SWAP1"
    },
    "9879": {
      "op": "SWAP2"
    },
    "9880": {
      "op": "SHL"
    },
    "9881": {
      "op": "DUP3"
    },
    "9882": {
      "op": "ADD"
    },
    "9883": {
      "op": "DUP5"
    },
    "9884": {
      "op": "ADD"
    },
    "9885": {
      "op": "SWAP1"
    },
    "9886": {
      "op": "DUP5"
    },
    "9887": {
      "op": "DUP2"
    },
    "9888": {
      "op": "ADD"
    },
    "9889": {
      "op": "SWAP1"
    },
    "9890": {
      "op": "DUP12"
    },
    "9891": {
      "op": "DUP4"
    },
    "9892": {
      "op": "GT"
    },
    "9893": {
      "op": "ISZERO"
    },
    "9894": {
      "op": "PUSH2",
      "value": "0x26AE"
    },
    "9897": {
      "op": "JUMPI"
    },
    "9898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9900": {
      "op": "DUP1"
    },
    "9901": {
      "op": "REVERT"
    },
    "9902": {
      "op": "JUMPDEST"
    },
    "9903": {
      "op": "SWAP3"
    },
    "9904": {
      "op": "DUP6"
    },
    "9905": {
      "op": "ADD"
    },
    "9906": {
      "op": "SWAP3"
    },
    "9907": {
      "op": "JUMPDEST"
    },
    "9908": {
      "op": "DUP3"
    },
    "9909": {
      "op": "DUP5"
    },
    "9910": {
      "op": "LT"
    },
    "9911": {
      "op": "ISZERO"
    },
    "9912": {
      "op": "PUSH2",
      "value": "0x26CC"
    },
    "9915": {
      "op": "JUMPI"
    },
    "9916": {
      "op": "DUP4"
    },
    "9917": {
      "op": "CALLDATALOAD"
    },
    "9918": {
      "op": "DUP3"
    },
    "9919": {
      "op": "MSTORE"
    },
    "9920": {
      "op": "SWAP3"
    },
    "9921": {
      "op": "DUP6"
    },
    "9922": {
      "op": "ADD"
    },
    "9923": {
      "op": "SWAP3"
    },
    "9924": {
      "op": "SWAP1"
    },
    "9925": {
      "op": "DUP6"
    },
    "9926": {
      "op": "ADD"
    },
    "9927": {
      "op": "SWAP1"
    },
    "9928": {
      "op": "PUSH2",
      "value": "0x26B3"
    },
    "9931": {
      "op": "JUMP"
    },
    "9932": {
      "op": "JUMPDEST"
    },
    "9933": {
      "op": "SWAP8"
    },
    "9934": {
      "op": "POP"
    },
    "9935": {
      "op": "POP"
    },
    "9936": {
      "op": "POP"
    },
    "9937": {
      "op": "POP"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9940": {
      "op": "DUP8"
    },
    "9941": {
      "op": "ADD"
    },
    "9942": {
      "op": "CALLDATALOAD"
    },
    "9943": {
      "op": "SWAP4"
    },
    "9944": {
      "op": "POP"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9947": {
      "op": "DUP8"
    },
    "9948": {
      "op": "ADD"
    },
    "9949": {
      "op": "CALLDATALOAD"
    },
    "9950": {
      "op": "SWAP2"
    },
    "9951": {
      "op": "POP"
    },
    "9952": {
      "op": "DUP1"
    },
    "9953": {
      "op": "DUP3"
    },
    "9954": {
      "op": "GT"
    },
    "9955": {
      "op": "ISZERO"
    },
    "9956": {
      "op": "PUSH2",
      "value": "0x26EC"
    },
    "9959": {
      "op": "JUMPI"
    },
    "9960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9962": {
      "op": "DUP1"
    },
    "9963": {
      "op": "REVERT"
    },
    "9964": {
      "op": "JUMPDEST"
    },
    "9965": {
      "op": "POP"
    },
    "9966": {
      "op": "PUSH2",
      "value": "0x26F9"
    },
    "9969": {
      "op": "DUP8"
    },
    "9970": {
      "op": "DUP3"
    },
    "9971": {
      "op": "DUP9"
    },
    "9972": {
      "op": "ADD"
    },
    "9973": {
      "op": "PUSH2",
      "value": "0x24EE"
    },
    "9976": {
      "jump": "i",
      "op": "JUMP"
    },
    "9977": {
      "op": "JUMPDEST"
    },
    "9978": {
      "op": "SWAP2"
    },
    "9979": {
      "op": "POP"
    },
    "9980": {
      "op": "POP"
    },
    "9981": {
      "op": "SWAP3"
    },
    "9982": {
      "op": "SWAP6"
    },
    "9983": {
      "op": "SWAP2"
    },
    "9984": {
      "op": "SWAP5"
    },
    "9985": {
      "op": "POP"
    },
    "9986": {
      "op": "SWAP3"
    },
    "9987": {
      "op": "POP"
    },
    "9988": {
      "jump": "o",
      "op": "JUMP"
    },
    "9989": {
      "op": "JUMPDEST"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9992": {
      "op": "DUP1"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9995": {
      "op": "DUP4"
    },
    "9996": {
      "op": "DUP6"
    },
    "9997": {
      "op": "SUB"
    },
    "9998": {
      "op": "SLT"
    },
    "9999": {
      "op": "ISZERO"
    },
    "10000": {
      "op": "PUSH2",
      "value": "0x2718"
    },
    "10003": {
      "op": "JUMPI"
    },
    "10004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10006": {
      "op": "DUP1"
    },
    "10007": {
      "op": "REVERT"
    },
    "10008": {
      "op": "JUMPDEST"
    },
    "10009": {
      "op": "DUP3"
    },
    "10010": {
      "op": "CALLDATALOAD"
    },
    "10011": {
      "op": "PUSH2",
      "value": "0x2723"
    },
    "10014": {
      "op": "DUP2"
    },
    "10015": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "10018": {
      "jump": "i",
      "op": "JUMP"
    },
    "10019": {
      "op": "JUMPDEST"
    },
    "10020": {
      "op": "SWAP2"
    },
    "10021": {
      "op": "POP"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10024": {
      "op": "DUP4"
    },
    "10025": {
      "op": "ADD"
    },
    "10026": {
      "op": "CALLDATALOAD"
    },
    "10027": {
      "op": "PUSH2",
      "value": "0x2733"
    },
    "10030": {
      "op": "DUP2"
    },
    "10031": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "10034": {
      "jump": "i",
      "op": "JUMP"
    },
    "10035": {
      "op": "JUMPDEST"
    },
    "10036": {
      "op": "DUP1"
    },
    "10037": {
      "op": "SWAP2"
    },
    "10038": {
      "op": "POP"
    },
    "10039": {
      "op": "POP"
    },
    "10040": {
      "op": "SWAP3"
    },
    "10041": {
      "op": "POP"
    },
    "10042": {
      "op": "SWAP3"
    },
    "10043": {
      "op": "SWAP1"
    },
    "10044": {
      "op": "POP"
    },
    "10045": {
      "jump": "o",
      "op": "JUMP"
    },
    "10046": {
      "op": "JUMPDEST"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10049": {
      "op": "DUP2"
    },
    "10050": {
      "op": "DUP2"
    },
    "10051": {
      "op": "SHR"
    },
    "10052": {
      "op": "SWAP1"
    },
    "10053": {
      "op": "DUP3"
    },
    "10054": {
      "op": "AND"
    },
    "10055": {
      "op": "DUP1"
    },
    "10056": {
      "op": "PUSH2",
      "value": "0x2752"
    },
    "10059": {
      "op": "JUMPI"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10062": {
      "op": "DUP3"
    },
    "10063": {
      "op": "AND"
    },
    "10064": {
      "op": "SWAP2"
    },
    "10065": {
      "op": "POP"
    },
    "10066": {
      "op": "JUMPDEST"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10069": {
      "op": "DUP3"
    },
    "10070": {
      "op": "LT"
    },
    "10071": {
      "op": "DUP2"
    },
    "10072": {
      "op": "SUB"
    },
    "10073": {
      "op": "PUSH2",
      "value": "0x2772"
    },
    "10076": {
      "op": "JUMPI"
    },
    "10077": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10084": {
      "op": "SHL"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10087": {
      "op": "MSTORE"
    },
    "10088": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10090": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10092": {
      "op": "MSTORE"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10097": {
      "op": "REVERT"
    },
    "10098": {
      "op": "JUMPDEST"
    },
    "10099": {
      "op": "POP"
    },
    "10100": {
      "op": "SWAP2"
    },
    "10101": {
      "op": "SWAP1"
    },
    "10102": {
      "op": "POP"
    },
    "10103": {
      "jump": "o",
      "op": "JUMP"
    },
    "10104": {
      "op": "JUMPDEST"
    },
    "10105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10107": {
      "op": "DUP3"
    },
    "10108": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10110": {
      "op": "DUP4"
    },
    "10111": {
      "op": "ADD"
    },
    "10112": {
      "op": "SLT"
    },
    "10113": {
      "op": "PUSH2",
      "value": "0x2789"
    },
    "10116": {
      "op": "JUMPI"
    },
    "10117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10119": {
      "op": "DUP1"
    },
    "10120": {
      "op": "REVERT"
    },
    "10121": {
      "op": "JUMPDEST"
    },
    "10122": {
      "op": "DUP2"
    },
    "10123": {
      "op": "MLOAD"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10126": {
      "op": "PUSH2",
      "value": "0x2799"
    },
    "10129": {
      "op": "PUSH2",
      "value": "0x250F"
    },
    "10132": {
      "op": "DUP4"
    },
    "10133": {
      "op": "PUSH2",
      "value": "0x24CA"
    },
    "10136": {
      "jump": "i",
      "op": "JUMP"
    },
    "10137": {
      "op": "JUMPDEST"
    },
    "10138": {
      "op": "DUP1"
    },
    "10139": {
      "op": "DUP4"
    },
    "10140": {
      "op": "DUP3"
    },
    "10141": {
      "op": "MSTORE"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10144": {
      "op": "DUP3"
    },
    "10145": {
      "op": "ADD"
    },
    "10146": {
      "op": "SWAP2"
    },
    "10147": {
      "op": "POP"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10150": {
      "op": "DUP5"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10153": {
      "op": "SHL"
    },
    "10154": {
      "op": "DUP8"
    },
    "10155": {
      "op": "ADD"
    },
    "10156": {
      "op": "ADD"
    },
    "10157": {
      "op": "SWAP4"
    },
    "10158": {
      "op": "POP"
    },
    "10159": {
      "op": "DUP7"
    },
    "10160": {
      "op": "DUP5"
    },
    "10161": {
      "op": "GT"
    },
    "10162": {
      "op": "ISZERO"
    },
    "10163": {
      "op": "PUSH2",
      "value": "0x27BB"
    },
    "10166": {
      "op": "JUMPI"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10169": {
      "op": "DUP1"
    },
    "10170": {
      "op": "REVERT"
    },
    "10171": {
      "op": "JUMPDEST"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10174": {
      "op": "DUP7"
    },
    "10175": {
      "op": "ADD"
    },
    "10176": {
      "op": "JUMPDEST"
    },
    "10177": {
      "op": "DUP5"
    },
    "10178": {
      "op": "DUP2"
    },
    "10179": {
      "op": "LT"
    },
    "10180": {
      "op": "ISZERO"
    },
    "10181": {
      "op": "PUSH2",
      "value": "0x255B"
    },
    "10184": {
      "op": "JUMPI"
    },
    "10185": {
      "op": "DUP1"
    },
    "10186": {
      "op": "MLOAD"
    },
    "10187": {
      "op": "PUSH2",
      "value": "0x27D3"
    },
    "10190": {
      "op": "DUP2"
    },
    "10191": {
      "op": "PUSH2",
      "value": "0x2289"
    },
    "10194": {
      "jump": "i",
      "op": "JUMP"
    },
    "10195": {
      "op": "JUMPDEST"
    },
    "10196": {
      "op": "DUP4"
    },
    "10197": {
      "op": "MSTORE"
    },
    "10198": {
      "op": "SWAP2"
    },
    "10199": {
      "op": "DUP4"
    },
    "10200": {
      "op": "ADD"
    },
    "10201": {
      "op": "SWAP2"
    },
    "10202": {
      "op": "DUP4"
    },
    "10203": {
      "op": "ADD"
    },
    "10204": {
      "op": "PUSH2",
      "value": "0x27C0"
    },
    "10207": {
      "op": "JUMP"
    },
    "10208": {
      "op": "JUMPDEST"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10211": {
      "op": "DUP1"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10214": {
      "op": "DUP1"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10217": {
      "op": "DUP6"
    },
    "10218": {
      "op": "DUP8"
    },
    "10219": {
      "op": "SUB"
    },
    "10220": {
      "op": "SLT"
    },
    "10221": {
      "op": "ISZERO"
    },
    "10222": {
      "op": "PUSH2",
      "value": "0x27F6"
    },
    "10225": {
      "op": "JUMPI"
    },
    "10226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10228": {
      "op": "DUP1"
    },
    "10229": {
      "op": "REVERT"
    },
    "10230": {
      "op": "JUMPDEST"
    },
    "10231": {
      "op": "DUP5"
    },
    "10232": {
      "op": "MLOAD"
    },
    "10233": {
      "op": "SWAP4"
    },
    "10234": {
      "op": "POP"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10237": {
      "op": "DUP6"
    },
    "10238": {
      "op": "ADD"
    },
    "10239": {
      "op": "MLOAD"
    },
    "10240": {
      "op": "SWAP3"
    },
    "10241": {
      "op": "POP"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10244": {
      "op": "DUP6"
    },
    "10245": {
      "op": "ADD"
    },
    "10246": {
      "op": "MLOAD"
    },
    "10247": {
      "op": "SWAP2"
    },
    "10248": {
      "op": "POP"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10251": {
      "op": "DUP6"
    },
    "10252": {
      "op": "ADD"
    },
    "10253": {
      "op": "MLOAD"
    },
    "10254": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10263": {
      "op": "DUP2"
    },
    "10264": {
      "op": "GT"
    },
    "10265": {
      "op": "ISZERO"
    },
    "10266": {
      "op": "PUSH2",
      "value": "0x2822"
    },
    "10269": {
      "op": "JUMPI"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10272": {
      "op": "DUP1"
    },
    "10273": {
      "op": "REVERT"
    },
    "10274": {
      "op": "JUMPDEST"
    },
    "10275": {
      "op": "PUSH2",
      "value": "0x26F9"
    },
    "10278": {
      "op": "DUP8"
    },
    "10279": {
      "op": "DUP3"
    },
    "10280": {
      "op": "DUP9"
    },
    "10281": {
      "op": "ADD"
    },
    "10282": {
      "op": "PUSH2",
      "value": "0x2778"
    },
    "10285": {
      "jump": "i",
      "op": "JUMP"
    },
    "10286": {
      "op": "JUMPDEST"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10291": {
      "op": "DUP3"
    },
    "10292": {
      "op": "DUP5"
    },
    "10293": {
      "op": "SUB"
    },
    "10294": {
      "op": "SLT"
    },
    "10295": {
      "op": "ISZERO"
    },
    "10296": {
      "op": "PUSH2",
      "value": "0x2840"
    },
    "10299": {
      "op": "JUMPI"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10302": {
      "op": "DUP1"
    },
    "10303": {
      "op": "REVERT"
    },
    "10304": {
      "op": "JUMPDEST"
    },
    "10305": {
      "op": "DUP2"
    },
    "10306": {
      "op": "MLOAD"
    },
    "10307": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10316": {
      "op": "DUP2"
    },
    "10317": {
      "op": "GT"
    },
    "10318": {
      "op": "ISZERO"
    },
    "10319": {
      "op": "PUSH2",
      "value": "0x2857"
    },
    "10322": {
      "op": "JUMPI"
    },
    "10323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10325": {
      "op": "DUP1"
    },
    "10326": {
      "op": "REVERT"
    },
    "10327": {
      "op": "JUMPDEST"
    },
    "10328": {
      "op": "PUSH2",
      "value": "0x2617"
    },
    "10331": {
      "op": "DUP5"
    },
    "10332": {
      "op": "DUP3"
    },
    "10333": {
      "op": "DUP6"
    },
    "10334": {
      "op": "ADD"
    },
    "10335": {
      "op": "PUSH2",
      "value": "0x2778"
    },
    "10338": {
      "jump": "i",
      "op": "JUMP"
    },
    "10339": {
      "op": "JUMPDEST"
    },
    "10340": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10347": {
      "op": "SHL"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10350": {
      "op": "MSTORE"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10355": {
      "op": "MSTORE"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10360": {
      "op": "REVERT"
    },
    "10361": {
      "op": "JUMPDEST"
    },
    "10362": {
      "op": "DUP3"
    },
    "10363": {
      "op": "DUP2"
    },
    "10364": {
      "op": "MSTORE"
    },
    "10365": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10369": {
      "op": "DUP3"
    },
    "10370": {
      "op": "ADD"
    },
    "10371": {
      "op": "MSTORE"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10374": {
      "op": "PUSH2",
      "value": "0x2617"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10379": {
      "op": "DUP4"
    },
    "10380": {
      "op": "ADD"
    },
    "10381": {
      "op": "DUP5"
    },
    "10382": {
      "op": "PUSH2",
      "value": "0x22CA"
    },
    "10385": {
      "jump": "i",
      "op": "JUMP"
    },
    "10386": {
      "op": "JUMPDEST"
    },
    "10387": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10394": {
      "op": "SHL"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10397": {
      "op": "MSTORE"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10402": {
      "op": "MSTORE"
    },
    "10403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10407": {
      "op": "REVERT"
    },
    "10408": {
      "op": "JUMPDEST"
    },
    "10409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10413": {
      "op": "DUP3"
    },
    "10414": {
      "op": "ADD"
    },
    "10415": {
      "op": "PUSH2",
      "value": "0x28BA"
    },
    "10418": {
      "op": "JUMPI"
    },
    "10419": {
      "op": "PUSH2",
      "value": "0x28BA"
    },
    "10422": {
      "op": "PUSH2",
      "value": "0x2892"
    },
    "10425": {
      "jump": "i",
      "op": "JUMP"
    },
    "10426": {
      "op": "JUMPDEST"
    },
    "10427": {
      "op": "POP"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10430": {
      "op": "ADD"
    },
    "10431": {
      "op": "SWAP1"
    },
    "10432": {
      "jump": "o",
      "op": "JUMP"
    },
    "10433": {
      "op": "JUMPDEST"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10438": {
      "op": "DUP3"
    },
    "10439": {
      "op": "DUP5"
    },
    "10440": {
      "op": "SUB"
    },
    "10441": {
      "op": "SLT"
    },
    "10442": {
      "op": "ISZERO"
    },
    "10443": {
      "op": "PUSH2",
      "value": "0x28D3"
    },
    "10446": {
      "op": "JUMPI"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10449": {
      "op": "DUP1"
    },
    "10450": {
      "op": "REVERT"
    },
    "10451": {
      "op": "JUMPDEST"
    },
    "10452": {
      "op": "POP"
    },
    "10453": {
      "op": "MLOAD"
    },
    "10454": {
      "op": "SWAP2"
    },
    "10455": {
      "op": "SWAP1"
    },
    "10456": {
      "op": "POP"
    },
    "10457": {
      "jump": "o",
      "op": "JUMP"
    },
    "10458": {
      "op": "JUMPDEST"
    },
    "10459": {
      "op": "DUP1"
    },
    "10460": {
      "op": "DUP3"
    },
    "10461": {
      "op": "ADD"
    },
    "10462": {
      "op": "DUP1"
    },
    "10463": {
      "op": "DUP3"
    },
    "10464": {
      "op": "GT"
    },
    "10465": {
      "op": "ISZERO"
    },
    "10466": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "10469": {
      "op": "JUMPI"
    },
    "10470": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "10473": {
      "op": "PUSH2",
      "value": "0x2892"
    },
    "10476": {
      "jump": "i",
      "op": "JUMP"
    },
    "10477": {
      "op": "JUMPDEST"
    },
    "10478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10480": {
      "op": "DUP1"
    },
    "10481": {
      "op": "DUP3"
    },
    "10482": {
      "op": "MSTORE"
    },
    "10483": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10485": {
      "op": "SWAP1"
    },
    "10486": {
      "op": "DUP3"
    },
    "10487": {
      "op": "ADD"
    },
    "10488": {
      "op": "MSTORE"
    },
    "10489": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "10522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10524": {
      "op": "DUP3"
    },
    "10525": {
      "op": "ADD"
    },
    "10526": {
      "op": "MSTORE"
    },
    "10527": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10536": {
      "op": "SHL"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10539": {
      "op": "DUP3"
    },
    "10540": {
      "op": "ADD"
    },
    "10541": {
      "op": "MSTORE"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10544": {
      "op": "ADD"
    },
    "10545": {
      "op": "SWAP1"
    },
    "10546": {
      "jump": "o",
      "op": "JUMP"
    },
    "10547": {
      "op": "JUMPDEST"
    },
    "10548": {
      "op": "DUP2"
    },
    "10549": {
      "op": "DUP2"
    },
    "10550": {
      "op": "SUB"
    },
    "10551": {
      "op": "DUP2"
    },
    "10552": {
      "op": "DUP2"
    },
    "10553": {
      "op": "GT"
    },
    "10554": {
      "op": "ISZERO"
    },
    "10555": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "10558": {
      "op": "JUMPI"
    },
    "10559": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "10562": {
      "op": "PUSH2",
      "value": "0x2892"
    },
    "10565": {
      "jump": "i",
      "op": "JUMP"
    },
    "10566": {
      "op": "JUMPDEST"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10569": {
      "op": "DUP1"
    },
    "10570": {
      "op": "DUP3"
    },
    "10571": {
      "op": "MSTORE"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10574": {
      "op": "SWAP1"
    },
    "10575": {
      "op": "DUP3"
    },
    "10576": {
      "op": "ADD"
    },
    "10577": {
      "op": "MSTORE"
    },
    "10578": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10613": {
      "op": "DUP3"
    },
    "10614": {
      "op": "ADD"
    },
    "10615": {
      "op": "MSTORE"
    },
    "10616": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10618": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10620": {
      "op": "SHL"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10623": {
      "op": "DUP3"
    },
    "10624": {
      "op": "ADD"
    },
    "10625": {
      "op": "MSTORE"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10628": {
      "op": "ADD"
    },
    "10629": {
      "op": "SWAP1"
    },
    "10630": {
      "jump": "o",
      "op": "JUMP"
    },
    "10631": {
      "op": "JUMPDEST"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10634": {
      "op": "DUP3"
    },
    "10635": {
      "op": "PUSH2",
      "value": "0x29A4"
    },
    "10638": {
      "op": "JUMPI"
    },
    "10639": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10646": {
      "op": "SHL"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10649": {
      "op": "MSTORE"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10654": {
      "op": "MSTORE"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10659": {
      "op": "REVERT"
    },
    "10660": {
      "op": "JUMPDEST"
    },
    "10661": {
      "op": "POP"
    },
    "10662": {
      "op": "DIV"
    },
    "10663": {
      "op": "SWAP1"
    },
    "10664": {
      "jump": "o",
      "op": "JUMP"
    },
    "10665": {
      "op": "JUMPDEST"
    },
    "10666": {
      "op": "DUP1"
    },
    "10667": {
      "op": "DUP3"
    },
    "10668": {
      "op": "MUL"
    },
    "10669": {
      "op": "DUP2"
    },
    "10670": {
      "op": "ISZERO"
    },
    "10671": {
      "op": "DUP3"
    },
    "10672": {
      "op": "DUP3"
    },
    "10673": {
      "op": "DIV"
    },
    "10674": {
      "op": "DUP5"
    },
    "10675": {
      "op": "EQ"
    },
    "10676": {
      "op": "OR"
    },
    "10677": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "10680": {
      "op": "JUMPI"
    },
    "10681": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "10684": {
      "op": "PUSH2",
      "value": "0x2892"
    },
    "10687": {
      "jump": "i",
      "op": "JUMP"
    },
    "10688": {
      "op": "JUMPDEST"
    },
    "10689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10693": {
      "op": "DUP3"
    },
    "10694": {
      "op": "DUP5"
    },
    "10695": {
      "op": "SUB"
    },
    "10696": {
      "op": "SLT"
    },
    "10697": {
      "op": "ISZERO"
    },
    "10698": {
      "op": "PUSH2",
      "value": "0x29D2"
    },
    "10701": {
      "op": "JUMPI"
    },
    "10702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10704": {
      "op": "DUP1"
    },
    "10705": {
      "op": "REVERT"
    },
    "10706": {
      "op": "JUMPDEST"
    },
    "10707": {
      "op": "DUP2"
    },
    "10708": {
      "op": "MLOAD"
    },
    "10709": {
      "op": "DUP1"
    },
    "10710": {
      "op": "ISZERO"
    },
    "10711": {
      "op": "ISZERO"
    },
    "10712": {
      "op": "DUP2"
    },
    "10713": {
      "op": "EQ"
    },
    "10714": {
      "op": "PUSH2",
      "value": "0x247C"
    },
    "10717": {
      "op": "JUMPI"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10720": {
      "op": "DUP1"
    },
    "10721": {
      "op": "REVERT"
    },
    "10722": {
      "op": "JUMPDEST"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10725": {
      "op": "DUP1"
    },
    "10726": {
      "op": "DUP3"
    },
    "10727": {
      "op": "MSTORE"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10730": {
      "op": "SWAP1"
    },
    "10731": {
      "op": "DUP3"
    },
    "10732": {
      "op": "ADD"
    },
    "10733": {
      "op": "MSTORE"
    },
    "10734": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10769": {
      "op": "DUP3"
    },
    "10770": {
      "op": "ADD"
    },
    "10771": {
      "op": "MSTORE"
    },
    "10772": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10786": {
      "op": "SHL"
    },
    "10787": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10789": {
      "op": "DUP3"
    },
    "10790": {
      "op": "ADD"
    },
    "10791": {
      "op": "MSTORE"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10794": {
      "op": "ADD"
    },
    "10795": {
      "op": "SWAP1"
    },
    "10796": {
      "jump": "o",
      "op": "JUMP"
    },
    "10797": {
      "op": "JUMPDEST"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10800": {
      "op": "DUP3"
    },
    "10801": {
      "op": "GT"
    },
    "10802": {
      "op": "ISZERO"
    },
    "10803": {
      "op": "PUSH2",
      "value": "0x1425"
    },
    "10806": {
      "op": "JUMPI"
    },
    "10807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10809": {
      "op": "DUP2"
    },
    "10810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10812": {
      "op": "MSTORE"
    },
    "10813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10817": {
      "op": "KECCAK256"
    },
    "10818": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10820": {
      "op": "DUP6"
    },
    "10821": {
      "op": "ADD"
    },
    "10822": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10824": {
      "op": "SHR"
    },
    "10825": {
      "op": "DUP2"
    },
    "10826": {
      "op": "ADD"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10829": {
      "op": "DUP7"
    },
    "10830": {
      "op": "LT"
    },
    "10831": {
      "op": "ISZERO"
    },
    "10832": {
      "op": "PUSH2",
      "value": "0x2A56"
    },
    "10835": {
      "op": "JUMPI"
    },
    "10836": {
      "op": "POP"
    },
    "10837": {
      "op": "DUP1"
    },
    "10838": {
      "op": "JUMPDEST"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10841": {
      "op": "DUP6"
    },
    "10842": {
      "op": "ADD"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10845": {
      "op": "SHR"
    },
    "10846": {
      "op": "DUP3"
    },
    "10847": {
      "op": "ADD"
    },
    "10848": {
      "op": "SWAP2"
    },
    "10849": {
      "op": "POP"
    },
    "10850": {
      "op": "JUMPDEST"
    },
    "10851": {
      "op": "DUP2"
    },
    "10852": {
      "op": "DUP2"
    },
    "10853": {
      "op": "LT"
    },
    "10854": {
      "op": "ISZERO"
    },
    "10855": {
      "op": "PUSH2",
      "value": "0x2A75"
    },
    "10858": {
      "op": "JUMPI"
    },
    "10859": {
      "op": "DUP3"
    },
    "10860": {
      "op": "DUP2"
    },
    "10861": {
      "op": "SSTORE"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10864": {
      "op": "ADD"
    },
    "10865": {
      "op": "PUSH2",
      "value": "0x2A62"
    },
    "10868": {
      "op": "JUMP"
    },
    "10869": {
      "op": "JUMPDEST"
    },
    "10870": {
      "op": "POP"
    },
    "10871": {
      "op": "POP"
    },
    "10872": {
      "op": "POP"
    },
    "10873": {
      "op": "POP"
    },
    "10874": {
      "op": "POP"
    },
    "10875": {
      "op": "POP"
    },
    "10876": {
      "jump": "o",
      "op": "JUMP"
    },
    "10877": {
      "op": "JUMPDEST"
    },
    "10878": {
      "op": "DUP2"
    },
    "10879": {
      "op": "MLOAD"
    },
    "10880": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10889": {
      "op": "DUP2"
    },
    "10890": {
      "op": "GT"
    },
    "10891": {
      "op": "ISZERO"
    },
    "10892": {
      "op": "PUSH2",
      "value": "0x2A97"
    },
    "10895": {
      "op": "JUMPI"
    },
    "10896": {
      "op": "PUSH2",
      "value": "0x2A97"
    },
    "10899": {
      "op": "PUSH2",
      "value": "0x2483"
    },
    "10902": {
      "jump": "i",
      "op": "JUMP"
    },
    "10903": {
      "op": "JUMPDEST"
    },
    "10904": {
      "op": "PUSH2",
      "value": "0x2AAB"
    },
    "10907": {
      "op": "DUP2"
    },
    "10908": {
      "op": "PUSH2",
      "value": "0x2AA5"
    },
    "10911": {
      "op": "DUP5"
    },
    "10912": {
      "op": "SLOAD"
    },
    "10913": {
      "op": "PUSH2",
      "value": "0x273E"
    },
    "10916": {
      "jump": "i",
      "op": "JUMP"
    },
    "10917": {
      "op": "JUMPDEST"
    },
    "10918": {
      "op": "DUP5"
    },
    "10919": {
      "op": "PUSH2",
      "value": "0x2A2D"
    },
    "10922": {
      "jump": "i",
      "op": "JUMP"
    },
    "10923": {
      "op": "JUMPDEST"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10926": {
      "op": "DUP1"
    },
    "10927": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10929": {
      "op": "DUP4"
    },
    "10930": {
      "op": "GT"
    },
    "10931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10933": {
      "op": "DUP2"
    },
    "10934": {
      "op": "EQ"
    },
    "10935": {
      "op": "PUSH2",
      "value": "0x2AE0"
    },
    "10938": {
      "op": "JUMPI"
    },
    "10939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10941": {
      "op": "DUP5"
    },
    "10942": {
      "op": "ISZERO"
    },
    "10943": {
      "op": "PUSH2",
      "value": "0x2AC8"
    },
    "10946": {
      "op": "JUMPI"
    },
    "10947": {
      "op": "POP"
    },
    "10948": {
      "op": "DUP6"
    },
    "10949": {
      "op": "DUP4"
    },
    "10950": {
      "op": "ADD"
    },
    "10951": {
      "op": "MLOAD"
    },
    "10952": {
      "op": "JUMPDEST"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10955": {
      "op": "NOT"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10958": {
      "op": "DUP7"
    },
    "10959": {
      "op": "SWAP1"
    },
    "10960": {
      "op": "SHL"
    },
    "10961": {
      "op": "SHR"
    },
    "10962": {
      "op": "NOT"
    },
    "10963": {
      "op": "AND"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10966": {
      "op": "DUP6"
    },
    "10967": {
      "op": "SWAP1"
    },
    "10968": {
      "op": "SHL"
    },
    "10969": {
      "op": "OR"
    },
    "10970": {
      "op": "DUP6"
    },
    "10971": {
      "op": "SSTORE"
    },
    "10972": {
      "op": "PUSH2",
      "value": "0x2A75"
    },
    "10975": {
      "op": "JUMP"
    },
    "10976": {
      "op": "JUMPDEST"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10979": {
      "op": "DUP6"
    },
    "10980": {
      "op": "DUP2"
    },
    "10981": {
      "op": "MSTORE"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10984": {
      "op": "DUP2"
    },
    "10985": {
      "op": "KECCAK256"
    },
    "10986": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10988": {
      "op": "NOT"
    },
    "10989": {
      "op": "DUP7"
    },
    "10990": {
      "op": "AND"
    },
    "10991": {
      "op": "SWAP2"
    },
    "10992": {
      "op": "JUMPDEST"
    },
    "10993": {
      "op": "DUP3"
    },
    "10994": {
      "op": "DUP2"
    },
    "10995": {
      "op": "LT"
    },
    "10996": {
      "op": "ISZERO"
    },
    "10997": {
      "op": "PUSH2",
      "value": "0x2B0F"
    },
    "11000": {
      "op": "JUMPI"
    },
    "11001": {
      "op": "DUP9"
    },
    "11002": {
      "op": "DUP7"
    },
    "11003": {
      "op": "ADD"
    },
    "11004": {
      "op": "MLOAD"
    },
    "11005": {
      "op": "DUP3"
    },
    "11006": {
      "op": "SSTORE"
    },
    "11007": {
      "op": "SWAP5"
    },
    "11008": {
      "op": "DUP5"
    },
    "11009": {
      "op": "ADD"
    },
    "11010": {
      "op": "SWAP5"
    },
    "11011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11013": {
      "op": "SWAP1"
    },
    "11014": {
      "op": "SWAP2"
    },
    "11015": {
      "op": "ADD"
    },
    "11016": {
      "op": "SWAP1"
    },
    "11017": {
      "op": "DUP5"
    },
    "11018": {
      "op": "ADD"
    },
    "11019": {
      "op": "PUSH2",
      "value": "0x2AF0"
    },
    "11022": {
      "op": "JUMP"
    },
    "11023": {
      "op": "JUMPDEST"
    },
    "11024": {
      "op": "POP"
    },
    "11025": {
      "op": "DUP6"
    },
    "11026": {
      "op": "DUP3"
    },
    "11027": {
      "op": "LT"
    },
    "11028": {
      "op": "ISZERO"
    },
    "11029": {
      "op": "PUSH2",
      "value": "0x2B2D"
    },
    "11032": {
      "op": "JUMPI"
    },
    "11033": {
      "op": "DUP8"
    },
    "11034": {
      "op": "DUP6"
    },
    "11035": {
      "op": "ADD"
    },
    "11036": {
      "op": "MLOAD"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11039": {
      "op": "NOT"
    },
    "11040": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11042": {
      "op": "DUP9"
    },
    "11043": {
      "op": "SWAP1"
    },
    "11044": {
      "op": "SHL"
    },
    "11045": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11047": {
      "op": "AND"
    },
    "11048": {
      "op": "SHR"
    },
    "11049": {
      "op": "NOT"
    },
    "11050": {
      "op": "AND"
    },
    "11051": {
      "op": "DUP2"
    },
    "11052": {
      "op": "SSTORE"
    },
    "11053": {
      "op": "JUMPDEST"
    },
    "11054": {
      "op": "POP"
    },
    "11055": {
      "op": "POP"
    },
    "11056": {
      "op": "POP"
    },
    "11057": {
      "op": "POP"
    },
    "11058": {
      "op": "POP"
    },
    "11059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11061": {
      "op": "SWAP1"
    },
    "11062": {
      "op": "DUP2"
    },
    "11063": {
      "op": "SHL"
    },
    "11064": {
      "op": "ADD"
    },
    "11065": {
      "op": "SWAP1"
    },
    "11066": {
      "op": "SSTORE"
    },
    "11067": {
      "op": "POP"
    },
    "11068": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2f15c10857825abc79ffcaec781dff5afa78e9ac",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\n/**\n * @title SmartNodes\n * @dev An ERC20 contract for managing off-chain networks\n */\ncontract SmartnodesCore is ERC20Upgradeable {\n    // Validator multi-sig address\n    ISmartnodesMultiSig private _validatorContractInstance;\n    address public validatorContractAddress;\n\n    // Counters for storage indexing / IDs\n    uint256 public validatorIdCounter;\n    uint256 public userCounter;\n    uint256 public jobCounter;\n    uint256 public activeValidators;\n    uint256 public minValidators;\n    uint256 public maxValidators;\n\n    // Events\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(\n        bytes32 indexed jobHash,\n        uint256 timestamp,\n        address[] seedValidators\n    );\n    event JobCompleted(bytes32 indexed jobId, uint256 timestamp);\n    event JobDisputed(bytes32 indexed jobId, uint256 timestamp);\n\n    // User data with key information (address, RSA key hash, reputation)\n    struct User {\n        address userAddress;\n        bytes32 publicKeyHash;\n        uint8 reputation;\n    }\n\n    // Validator data with key information (address, RSA key hash, locked value, reputation, activity)\n    struct Validator {\n        bytes32 publicKeyHash;\n        address validatorAddress;\n        uint256 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n    }\n\n    // Information for  a generic off-chain job (job hash [key for kademlia lookup], seed validators, participants, author, etc)\n    struct Job {\n        address author;\n        address[] seedValidators;\n        address[] workers;\n        uint256[] capacities;\n        bool activity;\n    }\n\n    // ERC20 token supply metrics\n    uint256 constant TAIL_EMISSION = 2e18;\n\n    uint256 public halving; // number of state updates until next halving (~3 months)\n    uint256 public emissionRate; // amount of tokens to be emitted per state update\n    uint256 public lockAmount; // minimum validator locked tokens required\n    uint256 public unlockPeriod;\n    uint256 public timeSinceLastHalving;\n\n    // Main datastructure mappings via id lookup\n    mapping(bytes32 => User) public users;\n    mapping(bytes32 => address) public workers;\n    mapping(bytes32 => address) public validatorAddressByHash;\n    mapping(uint256 => Validator) public validators;\n    mapping(bytes32 => Job) public jobs;\n    uint256[] public activeJobs;\n\n    // Helpful mappings\n    mapping(address => bytes32) public userHashByAddress;\n    mapping(address => uint256) public validatorIdByAddress;\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == validatorContractAddress,\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    function initialize(address[] memory _genesisNodes) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n\n        // Set all counters to 1 (when looking up values, 0 = Not found)\n        userCounter = 1;\n        jobCounter = 1;\n        validatorIdCounter = 1;\n\n        // Set ERC20 token parameters\n        emissionRate = 256e18; // amount of tokens to be emitted per state update\n        lockAmount = 100_000e18; // minimum validator locked tokens required\n        halving = 52452222; // Number of state updates before reward halving\n        unlockPeriod = 1_209_600; // (seconds)\n        timeSinceLastHalving = 0;\n\n        for (uint i = 0; i < _genesisNodes.length; i++) {\n            _mint(_genesisNodes[i], lockAmount);\n        }\n\n        // Other parameters\n        minValidators = 1;\n        maxValidators = 5;\n    }\n\n    function setValidatorContract(address validatorAddress) external {\n        require(\n            validatorContractAddress == address(0),\n            \"Validator address already set.\"\n        );\n        _validatorContractInstance = ISmartnodesMultiSig(validatorAddress);\n        validatorContractAddress = validatorAddress;\n    }\n\n    /**\n     * @dev Create a User, limit one per address & public key hash (RSA)\n     */\n    function createUser(bytes32 _publicKeyHash) public {\n        // Only one address & public key hash per user.\n        require(\n            userHashByAddress[msg.sender] == bytes32(0),\n            \"User already registered.\"\n        );\n\n        users[_publicKeyHash] = User({\n            userAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            reputation: 50\n        });\n\n        userHashByAddress[msg.sender] = _publicKeyHash;\n        userCounter++;\n    }\n\n    /**\n     * @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno\n     */\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already exists.\"\n        );\n\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n\n        // Create validator on SmartnodesCore\n        validators[validatorIdCounter] = Validator({\n            publicKeyHash: _publicKeyHash,\n            validatorAddress: msg.sender,\n            locked: lockAmount,\n            unlockTime: 0,\n            reputation: 50\n        });\n\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n        validatorAddressByHash[_publicKeyHash] = msg.sender;\n\n        // Lock token in contract\n        _lockTokens(msg.sender, lockAmount);\n\n        validatorIdCounter++;\n    }\n\n    // User Job Requesting Via Chainlink VRF TODO\n    function requestJob(\n        bytes32 userHash,\n        bytes32 jobHash,\n        uint256[] calldata _capacities\n    ) external returns (uint256[] memory validatorIds) {\n        // If user directly requests a job, register if they have not already done so\n        if (msg.sender != validatorContractAddress) {\n            if (userHashByAddress[msg.sender] == bytes32(0)) {\n                createUser(userHash);\n                userHash = userHashByAddress[msg.sender];\n            }\n        }\n\n        require(userHash != bytes32(0), \"User not registered!\");\n        require(jobs[jobHash].author == address(0), \"Job already created.\");\n        // require(_capacities[0] > 0, \"Capacity must be greater zero.\");\n\n        address[] memory _seedValidators = _validatorContractInstance\n            .generateValidators(1);\n        uint256[] memory _validatorIds = new uint256[](1); // (_seedValidators.length);\n\n        for (uint256 i = 0; i < _seedValidators.length; i++) {\n            _validatorIds[i] = validatorIdByAddress[_seedValidators[i]];\n        }\n\n        // Store the job in the jobs mapping\n        jobs[jobHash] = Job({\n            author: msg.sender,\n            seedValidators: _seedValidators,\n            workers: new address[](_capacities.length),\n            capacities: _capacities,\n            activity: true\n        });\n\n        emit JobRequested(jobHash, block.timestamp, _seedValidators);\n        jobCounter++;\n\n        return _validatorIds;\n    }\n\n    function completeJob(\n        bytes32 jobHash,\n        address[] memory _workers\n    ) external onlyValidatorMultiSig returns (uint256[] memory) {\n        require(_workers.length == jobs[jobHash].capacities.length);\n\n        jobs[jobHash].workers = _workers;\n        jobs[jobHash].activity = false;\n        // jobIdByUserHash[userIdHash] = 0;\n\n        emit JobCompleted(jobHash, block.timestamp);\n\n        return jobs[jobHash].capacities;\n    }\n\n    function disputeJob(bytes32 jobHash) external onlyValidatorMultiSig {\n        Job storage job = jobs[jobHash];\n        job.activity = false;\n        emit JobDisputed(jobHash, block.timestamp);\n    }\n\n    /**\n     * @dev Internal function to lock tokens, callable from other functions\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(sender, address(this), amount);\n        validators[validatorId].locked += amount;\n        uint256 totalLocked = validators[validatorId].locked;\n\n        emit TokensLocked(sender, amount);\n    }\n\n    /**\n     * @dev Validator token unlocking, 30 day withdrawal period.\n     */\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId > 0, \"Not a registered validator.\");\n\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            uint256 totalLocked = validator.locked - amount;\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    /**\n     * @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n     * Updates the emission rate and halving accordingly\n     */\n    function mintTokens(\n        address[] memory _workers,\n        uint256[] memory _workerCapacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted\n    ) external onlyValidatorMultiSig {\n        if (timeSinceLastHalving >= halving) {\n            if (emissionRate > TAIL_EMISSION) {\n                emissionRate /= 2;\n            }\n        }\n\n        uint256 validatorRewardTotal = (emissionRate * 20) / 100;\n        uint256 workerRewardTotal = (emissionRate * 80) / 100;\n\n        // Distribute rewards for validators equally\n        uint256 validatorReward = validatorRewardTotal /\n            _validatorsVoted.length;\n\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            _mint(_validatorsVoted[v], validatorReward);\n        }\n\n        // Distribute rewards for workers\n        for (uint256 w = 0; w < _workers.length; w++) {\n            uint256 reward = ((_workerCapacities[w] * workerRewardTotal) /\n                _totalCapacity);\n            _mint(_workers[w], reward);\n        }\n\n        timeSinceLastHalving++;\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobValidators(\n        bytes32 jobHash\n    ) external view returns (address[] memory) {\n        address[] memory jobValidators = jobs[jobHash].seedValidators;\n        return jobValidators;\n    }\n\n    function getValidatorInfo(\n        uint256 _validatorId\n    ) external view returns (bool, bytes32, address) {\n        require(_validatorId < validatorIdCounter, \"Invalid ID.\");\n        Validator memory _validator = validators[_validatorId];\n        bool isActive = _validatorContractInstance.isActiveValidator(\n            _validator.validatorAddress\n        );\n        return (\n            isActive,\n            _validator.publicKeyHash,\n            _validator.validatorAddress\n        );\n    }\n\n    function getValidatorBytes(\n        address validatorAddress\n    ) external view returns (bytes32) {\n        uint256 validatorId = validatorIdByAddress[validatorAddress];\n        require(validatorId > 0, \"Validator does not exist.\");\n\n        return validators[validatorId].publicKeyHash;\n    }\n\n    function getUserCount() external view returns (uint256) {\n        return userCounter - 1;\n    }\n\n    function getValidatorCount() external view returns (uint256) {\n        return validatorIdCounter - 1;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return _validatorContractInstance.getNumValidators();\n    }\n\n    function getEmissionRate() external view returns (uint256) {\n        return emissionRate;\n    }\n\n    function getSupply() external view returns (uint256) {\n        return this.totalSupply();\n    }\n\n    function isLocked(address validatorAddr) external view returns (bool) {\n        uint256 _id = validatorIdByAddress[validatorAddr];\n        return validators[_id].locked >= lockAmount;\n    }\n\n    function getProposees() external view returns (address[] memory) {\n        return _validatorContractInstance.getSelectedValidators();\n    }\n\n    function getState()\n        external\n        view\n        returns (uint256, uint256, uint256, address[] memory)\n    {\n        return _validatorContractInstance.getState();\n    }\n}\n",
  "sourceMap": "271:13177:10:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}