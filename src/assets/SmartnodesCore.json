{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "seedValidators",
          "type": "address[]"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "HALVING",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "completedJobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "disputeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "getJobValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddr",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activity",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "amount",
          "type": "uint32"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        }
      ],
      "name": "requestJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "validatorIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "amount",
          "type": "uint32"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "5": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol",
    "6": "contracts/SmartnodesCore.sol",
    "7": "contracts/interfaces/ISmartnodesMultiSig.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1952
      ],
      "ContextUpgradeable": [
        1709
      ],
      "ERC20Upgradeable": [
        1421
      ],
      "IERC20MetadataUpgradeable": [
        1667
      ],
      "IERC20Upgradeable": [
        1642
      ],
      "ISmartnodesMultiSig": [
        1490
      ],
      "Initializable": [
        1564
      ],
      "SmartnodesCore": [
        808
      ]
    },
    "id": 809,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 809,
        "sourceUnit": 1422,
        "src": "57:78:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 809,
        "sourceUnit": 1491,
        "src": "136:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "298:16:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1421,
              "src": "298:16:6"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:6"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "184:86:6",
          "text": " @title SmartNodes\n @dev An ERC20 contract for managing off-chain networks"
        },
        "fullyImplemented": true,
        "id": 808,
        "linearizedBaseContracts": [
          808,
          1421,
          1667,
          1642,
          1709,
          1564
        ],
        "name": "SmartnodesCore",
        "nameLocation": "280:14:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "2ff2e9dc",
            "id": 9,
            "mutability": "constant",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "379:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "355:53:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "355:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "355f3030305f303030653138",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "396:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000000000"
              },
              "value": "5_000_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 12,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "438:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "414:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "414:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32315f3030305f303030653138",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "451:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21_000_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "80652c90",
            "id": 15,
            "mutability": "constant",
            "name": "HALVING",
            "nameLocation": "494:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "470:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "470:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "504:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 18,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "582:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "567:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "567:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313238653138",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "597:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_128000000000000000000_by_1",
                "typeString": "int_const 128000000000000000000"
              },
              "value": "128e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 21,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "675:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "660:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "660:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f303030653138",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "688:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "value": "1_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 24,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "761:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "746:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "746:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530343030",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "776:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50400_by_1",
                "typeString": "int_const 50400"
              },
              "value": "50400"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "_validatorContractInstance",
            "nameLocation": "851:26:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "823:54:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1490",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 26,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "823:19:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1490,
                "src": "823:19:6"
              },
              "referencedDeclaration": 1490,
              "src": "823:19:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1490",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f79621bd",
            "id": 29,
            "mutability": "mutable",
            "name": "validatorContractAddress",
            "nameLocation": "898:24:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "883:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "883:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 31,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "987:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "972:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2faba6ae",
            "id": 33,
            "mutability": "mutable",
            "name": "userIdCounter",
            "nameLocation": "1026:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "1011:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1011:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 35,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "1060:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "1045:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1045:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2d49c4b",
            "id": 37,
            "mutability": "mutable",
            "name": "activeValidators",
            "nameLocation": "1091:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "1076:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1076:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 39,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "1128:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "1113:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1113:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 41,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "1162:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "1147:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1147:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 47,
            "name": "TokensLocked",
            "nameLocation": "1202:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1231:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1215:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1250:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1242:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:43:6"
            },
            "src": "1196:62:6"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 53,
            "name": "UnlockInitiated",
            "nameLocation": "1269:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1301:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1285:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "1320:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1312:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1284:47:6"
            },
            "src": "1263:69:6"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 59,
            "name": "TokensUnlocked",
            "nameLocation": "1343:14:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1374:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1358:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1393:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1385:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1357:43:6"
            },
            "src": "1337:64:6"
          },
          {
            "anonymous": false,
            "eventSelector": "3c015d1005da8bb61e99936222d4a8a0c3c5b6643f9daa5eae3ef07b7fb67647",
            "id": 66,
            "name": "JobRequested",
            "nameLocation": "1412:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1441:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1425:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seedValidators",
                  "nameLocation": "1458:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1448:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1448:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 63,
                    "nodeType": "ArrayTypeName",
                    "src": "1448:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1424:49:6"
            },
            "src": "1406:68:6"
          },
          {
            "anonymous": false,
            "eventSelector": "02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be8929",
            "id": 70,
            "name": "JobCompleted",
            "nameLocation": "1485:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1514:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1498:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1497:23:6"
            },
            "src": "1479:42:6"
          },
          {
            "anonymous": false,
            "eventSelector": "b1dee78cef8c6887046d91c59e17f84fbc012c9f7efa49a10cce97e13cc94bf4",
            "id": 74,
            "name": "JobDisputed",
            "nameLocation": "1532:11:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1560:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1544:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:23:6"
            },
            "src": "1526:41:6"
          },
          {
            "canonicalName": "SmartnodesCore.User",
            "id": 83,
            "members": [
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1677:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 83,
                "src": "1669:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1669:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "1697:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 83,
                "src": "1689:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 77,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1689:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1726:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 83,
                "src": "1718:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 79,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1718:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1755:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 83,
                "src": "1749:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1749:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1654:4:6",
            "nodeType": "StructDefinition",
            "scope": 808,
            "src": "1647:125:6",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 96,
            "members": [
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1916:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 96,
                "src": "1908:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 84,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1908:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "1936:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 96,
                "src": "1928:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 86,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1928:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1970:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 96,
                "src": "1962:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 88,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1962:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "2001:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 96,
                "src": "1993:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 90,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1993:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 93,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "2025:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 96,
                "src": "2017:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 92,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2017:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 95,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "2051:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 96,
                "src": "2045:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 94,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2045:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "1888:9:6",
            "nodeType": "StructDefinition",
            "scope": 808,
            "src": "1881:187:6",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 112,
            "members": [
              {
                "constant": false,
                "id": 98,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2232:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2224:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 97,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2224:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 100,
                "mutability": "mutable",
                "name": "author",
                "nameLocation": "2252:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2244:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 99,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2244:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "mutability": "mutable",
                "name": "seedValidators",
                "nameLocation": "2278:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2268:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102,
                  "nodeType": "ArrayTypeName",
                  "src": "2268:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 106,
                "mutability": "mutable",
                "name": "workers",
                "nameLocation": "2312:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2302:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105,
                  "nodeType": "ArrayTypeName",
                  "src": "2302:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 109,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "2339:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2329:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2329:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ArrayTypeName",
                  "src": "2329:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 111,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "2364:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2359:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 110,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2359:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "2210:3:6",
            "nodeType": "StructDefinition",
            "scope": 808,
            "src": "2203:176:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f9ca61d",
            "id": 115,
            "mutability": "mutable",
            "name": "completedJobs",
            "nameLocation": "2402:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "2385:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 113,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2385:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 114,
              "nodeType": "ArrayTypeName",
              "src": "2385:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 120,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "2503:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "2471:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$83_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.User)"
            },
            "typeName": {
              "id": 119,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 116,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2479:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2471:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$83_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 117,
                  "name": "User",
                  "nameLocations": [
                    "2490:4:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 83,
                  "src": "2490:4:6"
                },
                "referencedDeclaration": 83,
                "src": "2490:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$83_storage_ptr",
                  "typeString": "struct SmartnodesCore.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 125,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "2551:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "2514:47:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$96_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 124,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 121,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2522:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2514:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$96_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 123,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 122,
                  "name": "Validator",
                  "nameLocations": [
                    "2533:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "2533:9:6"
                },
                "referencedDeclaration": 96,
                "src": "2533:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 130,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "2598:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "2567:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 129,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 126,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2575:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2567:23:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 128,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 127,
                  "name": "Job",
                  "nameLocations": [
                    "2586:3:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "2586:3:6"
                },
                "referencedDeclaration": 112,
                "src": "2586:3:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$112_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b759088",
            "id": 134,
            "mutability": "mutable",
            "name": "userIdByAddress",
            "nameLocation": "2668:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "2633:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 133,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 131,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2641:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2633:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2652:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 138,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "2724:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 808,
            "src": "2689:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 137,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 135,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2697:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2689:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 136,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2708:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2784:151:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2815:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2819:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2815:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 143,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2829:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2815:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2794:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:123:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:123:6"
                },
                {
                  "id": 148,
                  "nodeType": "PlaceholderStatement",
                  "src": "2927:1:6"
                }
              ]
            },
            "id": 150,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "2760:21:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2781:2:6"
            },
            "src": "2751:184:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2982:494:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3005:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3019:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 155,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 855,
                      "src": "2992:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2992:33:6"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3109:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3125:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3109:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "3109:17:6"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3136:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3149:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3136:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "3136:14:6"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3160:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3181:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3160:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:22:6"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 172,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "3192:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3208:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3192:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:17:6"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "3219:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3235:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "3219:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3219:17:6"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 180,
                      "name": "completedJobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "3246:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "355f303030",
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3276:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          },
                          "value": "5_000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          }
                        ],
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3262:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 181,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3266:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 182,
                          "nodeType": "ArrayTypeName",
                          "src": "3266:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3262:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3246:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:36:6"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 188,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3292:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313238653138",
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3307:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_128000000000000000000_by_1",
                        "typeString": "int_const 128000000000000000000"
                      },
                      "value": "128e18"
                    },
                    "src": "3292:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3292:21:6"
                },
                {
                  "expression": {
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 192,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3374:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "315f303030653138",
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3387:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      },
                      "value": "1_000e18"
                    },
                    "src": "3374:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:21:6"
                },
                {
                  "expression": {
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3449:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530343030",
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3464:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50400_by_1",
                        "typeString": "int_const 50400"
                      },
                      "value": "50400"
                    },
                    "src": "3449:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:20:6"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "initializer",
                  "nameLocations": [
                    "2970:11:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1538,
                  "src": "2970:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2970:11:6"
              }
            ],
            "name": "initialize",
            "nameLocation": "2950:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2960:2:6"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2982:0:6"
            },
            "scope": 808,
            "src": "2941:535:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "3547:261:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 207,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "3578:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3614:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3606:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 208,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3606:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3606:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3578:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3630:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3557:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3557:115:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:115:6"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 216,
                      "name": "_validatorContractInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3682:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1490",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 218,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "3731:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 217,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1490,
                        "src": "3711:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$1490_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3711:37:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1490",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "3682:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1490",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "3682:66:6"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 222,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3758:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 223,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "3785:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3758:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:43:6"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "3491:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "3520:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "3512:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3511:26:6"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3547:0:6"
            },
            "scope": 808,
            "src": "3482:326:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "3956:410:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 234,
                            "name": "userIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "4030:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 237,
                          "indexExpression": {
                            "expression": {
                              "id": 235,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4046:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4050:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4046:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4030:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4061:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4030:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4064:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4022:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:69:6"
                },
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 243,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "4102:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$83_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.User storage ref)"
                        }
                      },
                      "id": 245,
                      "indexExpression": {
                        "id": 244,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4108:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4102:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$83_storage",
                        "typeString": "struct SmartnodesCore.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 247,
                          "name": "userIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "4148:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 248,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4188:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4192:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4188:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 250,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 230,
                          "src": "4227:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3530",
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4267:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 246,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "4125:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$83_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.User storage pointer)"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4144:2:6",
                        "4175:11:6",
                        "4212:13:6",
                        "4255:10:6"
                      ],
                      "names": [
                        "id",
                        "userAddress",
                        "publicKeyHash",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4125:155:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$83_memory_ptr",
                        "typeString": "struct SmartnodesCore.User memory"
                      }
                    },
                    "src": "4102:178:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$83_storage",
                      "typeString": "struct SmartnodesCore.User storage ref"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "4102:178:6"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 255,
                        "name": "userIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "4291:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "expression": {
                          "id": 256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4307:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4311:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4307:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4291:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 259,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "4321:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4291:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "4291:43:6"
                },
                {
                  "expression": {
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4344:15:6",
                    "subExpression": {
                      "id": 262,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "4344:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:15:6"
                }
              ]
            },
            "documentation": {
              "id": 228,
              "nodeType": "StructuredDocumentation",
              "src": "3814:84:6",
              "text": " @dev Create a User, limit one per address & public key hash (RSA)"
            },
            "functionSelector": "abf7bfd8",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "3912:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "3931:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "3923:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3923:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3922:24:6"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3956:0:6"
            },
            "scope": 808,
            "src": "3903:463:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "4549:775:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 273,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "4580:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 276,
                          "indexExpression": {
                            "expression": {
                              "id": 274,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4601:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4605:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4601:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4580:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4616:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4580:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206578697374732e",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4631:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        },
                        "value": "Validator already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        }
                      ],
                      "id": 272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4559:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "4559:109:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 284,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4710:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4714:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4710:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 283,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "4700:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4700:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 287,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "4725:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4700:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4749:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4679:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:109:6"
                },
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4838:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 333,
                      "src": "4833:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4833:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 303,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4861:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4865:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4861:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 299,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4881:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$808",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$808",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4873:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4873:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4873:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 301,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "4888:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 294,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "4848:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4848:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4833:66:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "4917:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4926:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4909:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4909:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "4909:41:6"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 309,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "4961:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$96_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 311,
                      "indexExpression": {
                        "id": 310,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "4972:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4961:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$96_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 313,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "5022:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 314,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5072:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5076:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5072:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 316,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "5111:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 317,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "5147:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5183:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5210:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 312,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "4994:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$96_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5018:2:6",
                        "5054:16:6",
                        "5096:13:6",
                        "5139:6:6",
                        "5171:10:6",
                        "5198:10:6"
                      ],
                      "names": [
                        "id",
                        "validatorAddress",
                        "publicKeyHash",
                        "locked",
                        "unlockTime",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4994:229:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$96_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "4961:262:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$96_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:262:6"
                },
                {
                  "expression": {
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 323,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "5234:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 326,
                      "indexExpression": {
                        "expression": {
                          "id": 324,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5255:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5259:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5255:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5234:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 327,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "5269:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5234:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:53:6"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5297:20:6",
                    "subExpression": {
                      "id": 330,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "5297:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "5297:20:6"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "4372:114:6",
              "text": " @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
            },
            "functionSelector": "8dca9a19",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "4500:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4524:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "4516:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4516:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4515:24:6"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4549:0:6"
            },
            "scope": 808,
            "src": "4491:833:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "5495:1071:6",
              "statements": [
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "5513:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "5505:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5505:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "baseExpression": {
                      "id": 345,
                      "name": "userIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "5519:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 348,
                    "indexExpression": {
                      "expression": {
                        "id": 346,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5535:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5539:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5535:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5519:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5505:41:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 351,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "5565:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5572:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5565:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f7420726567697374657265642e",
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5575:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        },
                        "value": "User not registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        }
                      ],
                      "id": 350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5557:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5557:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "5557:41:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 358,
                            "name": "_capacities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "5616:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 360,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5628:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5616:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5633:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5616:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4361706163697479206d7573742062652067726561746572207a65726f2e",
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5636:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        },
                        "value": "Capacity must be greater zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5608:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5608:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "5608:61:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 367,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5700:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5736:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5728:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5728:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5728:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5700:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220636f6e7472616374206e6f742073657421",
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5752:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501982c48cf19430e36447dcbb97fc13e5b3212241b7ccf0ccdb50a6bb5578f1",
                          "typeString": "literal_string \"Validator contract not set!\""
                        },
                        "value": "Validator contract not set!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_501982c48cf19430e36447dcbb97fc13e5b3212241b7ccf0ccdb50a6bb5578f1",
                          "typeString": "literal_string \"Validator contract not set!\""
                        }
                      ],
                      "id": 366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5679:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5679:112:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "5679:112:6"
                },
                {
                  "assignments": [
                    380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 380,
                      "mutability": "mutable",
                      "name": "_seedValidators",
                      "nameLocation": "5819:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "5802:32:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5802:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 379,
                        "nodeType": "ArrayTypeName",
                        "src": "5802:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 381,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "5837:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1490",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5877:27:6",
                      "memberName": "generateValidatorCandidates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "5837:67:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5837:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5802:104:6"
                },
                {
                  "assignments": [
                    389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "_validatorIds",
                      "nameLocation": "5933:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "5916:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5916:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 388,
                        "nodeType": "ArrayTypeName",
                        "src": "5916:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 396,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 393,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "5963:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5979:6:6",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5963:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5949:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5953:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 391,
                        "nodeType": "ArrayTypeName",
                        "src": "5953:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5949:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5916:70:6"
                },
                {
                  "body": {
                    "id": 418,
                    "nodeType": "Block",
                    "src": "6050:84:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 408,
                              "name": "_validatorIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "6064:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 410,
                            "indexExpression": {
                              "id": 409,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "6078:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6064:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 411,
                              "name": "validatorIdByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "6083:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 415,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 412,
                                "name": "_seedValidators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 380,
                                "src": "6104:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 414,
                              "indexExpression": {
                                "id": 413,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "6120:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6104:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6083:40:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6064:59:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "6064:59:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 401,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "6017:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 402,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "6021:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6037:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6021:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6017:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 419,
                  "initializationExpression": {
                    "assignments": [
                      398
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6010:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "6002:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6002:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 400,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6014:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6002:13:6"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6045:3:6",
                      "subExpression": {
                        "id": 405,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "6045:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 407,
                    "nodeType": "ExpressionStatement",
                    "src": "6045:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5997:137:6"
                },
                {
                  "expression": {
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 420,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "6189:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 422,
                      "indexExpression": {
                        "id": 421,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "6194:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6189:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$112_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 424,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "6230:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 425,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6262:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6266:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6262:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 427,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "6302:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 431,
                                "name": "_capacities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 337,
                                "src": "6354:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6366:6:6",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6354:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6340:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 428,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6344:7:6",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 429,
                              "nodeType": "ArrayTypeName",
                              "src": "6344:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6340:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 434,
                          "name": "_capacities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "6399:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6434:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 423,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "6208:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$112_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Job storage pointer)"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "6226:2:6",
                        "6254:6:6",
                        "6286:14:6",
                        "6331:7:6",
                        "6387:10:6",
                        "6424:8:6"
                      ],
                      "names": [
                        "id",
                        "author",
                        "seedValidators",
                        "workers",
                        "capacities",
                        "activity"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6208:241:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$112_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "src": "6189:260:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$112_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "6189:260:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 440,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "6478:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 441,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "6490:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 439,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "6465:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory)"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6465:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "EmitStatement",
                  "src": "6460:46:6"
                },
                {
                  "expression": {
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6516:12:6",
                    "subExpression": {
                      "id": 444,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "6516:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6516:12:6"
                },
                {
                  "expression": {
                    "id": 447,
                    "name": "_validatorIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 389,
                    "src": "6546:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 342,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "6539:20:6"
                }
              ]
            },
            "functionSelector": "8d12b266",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "5389:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "5428:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5409:30:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 335,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5409:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 336,
                    "nodeType": "ArrayTypeName",
                    "src": "5409:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5399:46:6"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "validatorIds",
                  "nameLocation": "5481:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5464:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 339,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5464:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 340,
                    "nodeType": "ArrayTypeName",
                    "src": "5464:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5463:31:6"
            },
            "scope": 808,
            "src": "5380:1186:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "6715:310:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 464,
                            "name": "_workers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "6733:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6742:6:6",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6733:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 466,
                                "name": "jobs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130,
                                "src": "6752:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                                  "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                                }
                              },
                              "id": 468,
                              "indexExpression": {
                                "id": 467,
                                "name": "jobId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 452,
                                "src": "6757:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6752:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$112_storage",
                                "typeString": "struct SmartnodesCore.Job storage ref"
                              }
                            },
                            "id": 469,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6764:10:6",
                            "memberName": "capacities",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 109,
                            "src": "6752:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6775:6:6",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6752:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6733:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6725:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6725:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "6725:57:6"
                },
                {
                  "expression": {
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 474,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "6792:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 476,
                        "indexExpression": {
                          "id": 475,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "6797:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6792:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$112_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6804:7:6",
                      "memberName": "workers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106,
                      "src": "6792:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 478,
                      "name": "_workers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "6814:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6792:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "6792:30:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 482,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "6850:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 481,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "6837:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6837:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "EmitStatement",
                  "src": "6832:24:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 485,
                        "name": "completedJobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "6870:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6884:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6870:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "355f303030",
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6894:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5000_by_1",
                        "typeString": "int_const 5000"
                      },
                      "value": "5_000"
                    },
                    "src": "6870:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "nodeType": "IfStatement",
                  "src": "6866:79:6",
                  "trueBody": {
                    "id": 494,
                    "nodeType": "Block",
                    "src": "6901:44:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 489,
                              "name": "completedJobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "6915:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6929:3:6",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "6915:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer)"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6915:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 493,
                        "nodeType": "ExpressionStatement",
                        "src": "6915:19:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 499,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "6973:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 496,
                        "name": "completedJobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "6954:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6968:4:6",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6954:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6954:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:25:6"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 502,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "6996:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 504,
                      "indexExpression": {
                        "id": 503,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "7001:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6996:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$112_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7008:10:6",
                    "memberName": "capacities",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 109,
                    "src": "6996:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 462,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "6989:29:6"
                }
              ]
            },
            "functionSelector": "f3259572",
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 458,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 457,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "6666:21:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "6666:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6666:21:6"
              }
            ],
            "name": "completeJob",
            "nameLocation": "6581:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "6610:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6602:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6602:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "6642:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6625:25:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 453,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6625:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 454,
                    "nodeType": "ArrayTypeName",
                    "src": "6625:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6592:64:6"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6697:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 459,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6697:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 460,
                    "nodeType": "ArrayTypeName",
                    "src": "6697:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6696:18:6"
            },
            "scope": 808,
            "src": "6572:453:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 532,
              "nodeType": "Block",
              "src": "7097:109:6",
              "statements": [
                {
                  "assignments": [
                    517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 517,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "7119:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 532,
                      "src": "7107:15:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$112_storage_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 516,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 515,
                          "name": "Job",
                          "nameLocations": [
                            "7107:3:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 112,
                          "src": "7107:3:6"
                        },
                        "referencedDeclaration": 112,
                        "src": "7107:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$112_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 521,
                  "initialValue": {
                    "baseExpression": {
                      "id": 518,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "7125:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 520,
                    "indexExpression": {
                      "id": 519,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "7130:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7125:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$112_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7107:29:6"
                },
                {
                  "expression": {
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 522,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "7146:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$112_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job storage pointer"
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7150:8:6",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "7146:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7161:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7146:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "7146:20:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 529,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "7193:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 528,
                      "name": "JobDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "7181:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7181:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "EmitStatement",
                  "src": "7176:23:6"
                }
              ]
            },
            "functionSelector": "d93d9beb",
            "id": 533,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 512,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7075:21:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "7075:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7075:21:6"
              }
            ],
            "name": "disputeJob",
            "nameLocation": "7040:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "7059:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "7051:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7050:15:6"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7097:0:6"
            },
            "scope": 808,
            "src": "7031:175:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "7337:433:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 540,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "7355:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7364:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7355:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7367:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7347:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "7347:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 548,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7431:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7435:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7431:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 547,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "7421:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7421:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 551,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "7446:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "7421:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7454:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7413:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7413:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "7413:65:6"
                },
                {
                  "assignments": [
                    557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 557,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "7497:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 593,
                      "src": "7489:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7489:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 562,
                  "initialValue": {
                    "baseExpression": {
                      "id": 558,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "7511:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 561,
                    "indexExpression": {
                      "expression": {
                        "id": 559,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7532:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7536:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7532:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7511:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7489:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 564,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "7561:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7576:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7561:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7579:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7553:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7553:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "7553:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 571,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7631:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7635:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7631:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 575,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7651:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$808",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$808",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7643:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 573,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7643:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7643:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 577,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "7658:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 570,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "7618:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7618:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "7618:47:6"
                },
                {
                  "expression": {
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 580,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "7675:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$96_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 582,
                        "indexExpression": {
                          "id": 581,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "7686:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7675:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$96_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7699:6:6",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "7675:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 584,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "7709:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7675:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "7675:40:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7744:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7748:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7744:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 590,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "7756:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 587,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "7731:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7731:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "EmitStatement",
                  "src": "7726:37:6"
                }
              ]
            },
            "documentation": {
              "id": 534,
              "nodeType": "StructuredDocumentation",
              "src": "7212:76:6",
              "text": " @dev Validator token unlocking, 30 day withdrawal period."
            },
            "functionSelector": "ec81560f",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "7302:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7320:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "7313:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7313:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7312:15:6"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7337:0:6"
            },
            "scope": 808,
            "src": "7293:477:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "7822:1056:6",
              "statements": [
                {
                  "assignments": [
                    600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 600,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "7840:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "7832:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 599,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7832:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "baseExpression": {
                      "id": 601,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "7854:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 604,
                    "indexExpression": {
                      "expression": {
                        "id": 602,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7875:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7879:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7875:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7854:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7832:54:6"
                },
                {
                  "assignments": [
                    608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 608,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "7914:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "7896:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 607,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 606,
                          "name": "Validator",
                          "nameLocations": [
                            "7896:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 96,
                          "src": "7896:9:6"
                        },
                        "referencedDeclaration": 96,
                        "src": "7896:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 612,
                  "initialValue": {
                    "baseExpression": {
                      "id": 609,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "7926:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$96_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 611,
                    "indexExpression": {
                      "id": 610,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "7937:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7926:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$96_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7896:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 614,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "7968:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 615,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "7978:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7988:6:6",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91,
                          "src": "7978:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7968:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7996:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7960:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7960:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "7960:69:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 622,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "8047:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8056:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8047:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8059:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8039:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8039:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "8039:56:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 628,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "8181:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8191:10:6",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93,
                      "src": "8181:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8205:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8181:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 676,
                    "nodeType": "Block",
                    "src": "8414:458:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 650,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8531:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8537:9:6",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8531:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 652,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 608,
                                  "src": "8550:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 653,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8560:10:6",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 93,
                                "src": "8550:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8531:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8588:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 649,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8506:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8506:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "8506:122:6"
                      },
                      {
                        "expression": {
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 658,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "8643:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 660,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8653:6:6",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 91,
                            "src": "8643:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 661,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "8663:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8643:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 663,
                        "nodeType": "ExpressionStatement",
                        "src": "8643:26:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 665,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8689:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8693:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8689:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 667,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "8701:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 664,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "8683:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8683:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 669,
                        "nodeType": "ExpressionStatement",
                        "src": "8683:25:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 671,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8790:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8794:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8790:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 673,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "8802:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 670,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "8775:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8775:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 675,
                        "nodeType": "EmitStatement",
                        "src": "8770:39:6"
                      }
                    ]
                  },
                  "id": 677,
                  "nodeType": "IfStatement",
                  "src": "8177:695:6",
                  "trueBody": {
                    "id": 648,
                    "nodeType": "Block",
                    "src": "8208:200:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 632,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "8222:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8232:10:6",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 93,
                            "src": "8222:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 635,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8245:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8251:9:6",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8245:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 637,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "8263:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8245:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8222:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 640,
                        "nodeType": "ExpressionStatement",
                        "src": "8222:53:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 642,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8337:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8341:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8337:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 644,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "8349:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$96_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8359:10:6",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 93,
                              "src": "8349:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 641,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "8321:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8321:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 647,
                        "nodeType": "EmitStatement",
                        "src": "8316:54:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "44c6957b",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "7785:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7805:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "7798:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7798:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7797:15:6"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7822:0:6"
            },
            "scope": 808,
            "src": "7776:1102:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "9068:207:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 688,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "9099:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9099:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 690,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "9115:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9099:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 692,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "9131:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9099:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c79207265616368656421",
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9155:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        },
                        "value": "Maximum supply reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9078:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9078:112:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "9078:112:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 698,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "9250:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 699,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "9261:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 697,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1233,
                      "src": "9244:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9244:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "9244:24:6"
                }
              ]
            },
            "documentation": {
              "id": 680,
              "nodeType": "StructuredDocumentation",
              "src": "8884:115:6",
              "text": " @dev Mint tokens for updating state rewards,\nTODO change to internal (external for testing)"
            },
            "functionSelector": "f0dda65c",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "9013:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9032:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "9024:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9024:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9051:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "9043:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9043:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9023:35:6"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9068:0:6"
            },
            "scope": 808,
            "src": "9004:271:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "9448:273:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 712,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 705,
                          "src": "9466:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 713,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "9474:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9466:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206a6f62204944",
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9486:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        },
                        "value": "Invalid job ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        }
                      ],
                      "id": 711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9458:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9458:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "9458:45:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 718,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "9517:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 720,
                        "indexExpression": {
                          "id": 719,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 705,
                          "src": "9522:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9517:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$112_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 721,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9529:2:6",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "9517:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 722,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "9535:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9517:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 741,
                    "nodeType": "Block",
                    "src": "9666:49:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4a6f62206e6f7420666f756e6421",
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9687:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              },
                              "value": "Job not found!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              }
                            ],
                            "id": 737,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "9680:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9680:24:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "9680:24:6"
                      }
                    ]
                  },
                  "id": 742,
                  "nodeType": "IfStatement",
                  "src": "9513:202:6",
                  "trueBody": {
                    "id": 736,
                    "nodeType": "Block",
                    "src": "9542:118:6",
                    "statements": [
                      {
                        "assignments": [
                          728
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 728,
                            "mutability": "mutable",
                            "name": "jobValidators",
                            "nameLocation": "9573:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "9556:30:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 726,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9556:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 727,
                              "nodeType": "ArrayTypeName",
                              "src": "9556:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 733,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 729,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 130,
                              "src": "9589:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$112_storage_$",
                                "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                              }
                            },
                            "id": 731,
                            "indexExpression": {
                              "id": 730,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 705,
                              "src": "9594:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9589:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$112_storage",
                              "typeString": "struct SmartnodesCore.Job storage ref"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9601:14:6",
                          "memberName": "seedValidators",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103,
                          "src": "9589:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9556:59:6"
                      },
                      {
                        "expression": {
                          "id": 734,
                          "name": "jobValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 728,
                          "src": "9636:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 710,
                        "id": 735,
                        "nodeType": "Return",
                        "src": "9629:20:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6817dd5b",
            "id": 744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobValidators",
            "nameLocation": "9361:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "9395:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "9387:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9387:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9377:29:6"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "9430:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 707,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9430:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 708,
                    "nodeType": "ArrayTypeName",
                    "src": "9430:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9429:18:6"
            },
            "scope": 808,
            "src": "9352:369:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "9783:37:6",
              "statements": [
                {
                  "expression": {
                    "id": 749,
                    "name": "userIdCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33,
                    "src": "9800:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 748,
                  "id": 750,
                  "nodeType": "Return",
                  "src": "9793:20:6"
                }
              ]
            },
            "functionSelector": "b5cb15f7",
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCount",
            "nameLocation": "9736:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9748:2:6"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "9774:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9774:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9773:9:6"
            },
            "scope": 808,
            "src": "9727:93:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "9887:42:6",
              "statements": [
                {
                  "expression": {
                    "id": 757,
                    "name": "validatorIdCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31,
                    "src": "9904:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 756,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "9897:25:6"
                }
              ]
            },
            "functionSelector": "7071688a",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorCount",
            "nameLocation": "9835:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9852:2:6"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "9878:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9878:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9877:9:6"
            },
            "scope": 808,
            "src": "9826:103:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "10002:40:6",
              "statements": [
                {
                  "expression": {
                    "id": 765,
                    "name": "activeValidators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "10019:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 764,
                  "id": 766,
                  "nodeType": "Return",
                  "src": "10012:23:6"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "9944:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9967:2:6"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "9993:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9993:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9992:9:6"
            },
            "scope": 808,
            "src": "9935:107:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 775,
              "nodeType": "Block",
              "src": "10107:36:6",
              "statements": [
                {
                  "expression": {
                    "id": 773,
                    "name": "emissionRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "10124:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 772,
                  "id": 774,
                  "nodeType": "Return",
                  "src": "10117:19:6"
                }
              ]
            },
            "functionSelector": "c0a77da9",
            "id": 776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmissionRate",
            "nameLocation": "10057:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10072:2:6"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 776,
                  "src": "10098:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10098:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10097:9:6"
            },
            "scope": 808,
            "src": "10048:95:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 785,
              "nodeType": "Block",
              "src": "10202:42:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 781,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "10219:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartnodesCore_$808",
                          "typeString": "contract SmartnodesCore"
                        }
                      },
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10224:11:6",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 913,
                      "src": "10219:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10219:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 780,
                  "id": 784,
                  "nodeType": "Return",
                  "src": "10212:25:6"
                }
              ]
            },
            "functionSelector": "6c9c2faf",
            "id": 786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSupply",
            "nameLocation": "10158:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10167:2:6"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "10193:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10193:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10192:9:6"
            },
            "scope": 808,
            "src": "10149:95:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "10320:119:6",
              "statements": [
                {
                  "assignments": [
                    794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "10338:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 806,
                      "src": "10330:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10330:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "baseExpression": {
                      "id": 795,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "10344:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 797,
                    "indexExpression": {
                      "id": 796,
                      "name": "validatorAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "10365:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10344:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10330:49:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 799,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "10396:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$96_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 801,
                        "indexExpression": {
                          "id": 800,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 794,
                          "src": "10407:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10396:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$96_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10412:6:6",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "10396:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 803,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "10422:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10396:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 792,
                  "id": 805,
                  "nodeType": "Return",
                  "src": "10389:43:6"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "10259:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "validatorAddr",
                  "nameLocation": "10276:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "10268:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10268:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10267:23:6"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "10314:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10314:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10313:6:6"
            },
            "scope": 808,
            "src": "10250:189:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 809,
        "src": "271:10170:6",
        "usedErrors": [],
        "usedEvents": [
          47,
          53,
          59,
          66,
          70,
          74,
          1632,
          1641
        ]
      }
    ],
    "src": "32:10410:6"
  },
  "bytecode": "60806040526806f05b59d3b2000000606555683635c9adc5dea0000060665561c4e0606755348015602f57600080fd5b506125408061003f6000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c80637071688a11610167578063b5cb15f7116100ce578063d93d9beb11610087578063d93d9beb146106a0578063dd62ed3e146106b3578063ec81560f146106ec578063f0dda65c146106ff578063f325957214610712578063f79621bd1461072557600080fd5b8063b5cb15f714610662578063c0a77da91461066a578063c5ab224114610672578063cdf64a761461067b578063d2d49c4b1461068e578063d8df5dc11461069757600080fd5b80638f029d5e116101205780638f029d5e1461060f57806395d89b411461061857806396afc45014610620578063a457c2d714610629578063a9059cbb1461063c578063abf7bfd81461064f57600080fd5b80637071688a1461059b57806370a08231146105a357806380652c90146105cc5780638129fc1c146105d45780638d12b266146105dc5780638dca9a19146105fc57600080fd5b8063313ce5671161020b57806344c6957b116101c457806344c6957b146104f55780634a4fbeec1461050a5780634b7590881461054a57806350355d761461056a5780636817dd5b146105735780636c9c2faf1461059357600080fd5b8063313ce567146103c457806332cb6b0c146103d357806335aa2e44146103e5578063365b98b21461046d57806337deea70146104da57806339509351146104e257600080fd5b80631f9ca61d1161025d5780631f9ca61d1461035a57806320d3a0b41461036d57806323b872dd1461037657806327764547146103895780632faba6ae146103a95780632ff2e9dc146103b257600080fd5b806306fdde031461029a57806308ac5256146102b8578063095ea7b3146102cf578063180aedf3146102f257806318160ddd14610352575b600080fd5b6102a2610750565b6040516102af9190611e3d565b60405180910390f35b6102c1606f5481565b6040519081526020016102af565b6102e26102dd366004611ea1565b6107e2565b60405190151581526020016102af565b61032d610300366004611ecd565b60736020526000908152604090208054600182015460059092015490916001600160a01b03169060ff1683565b604080519384526001600160a01b0390921660208401521515908201526060016102af565b6035546102c1565b6102c1610368366004611ecd565b6107fc565b6102c160675481565b6102e2610384366004611ee6565b61081d565b6102c1610397366004611f27565b60756020526000908152604090205481565b6102c1606b5481565b6102c16a0422ca8b0a00a42500000081565b604051601281526020016102af565b6102c16a115eec47f6cf7e3500000081565b6104356103f3366004611ecd565b60726020526000908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b03909316939192909160ff1686565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260ff1660a082015260c0016102af565b6104af61047b366004611ecd565b607160205260009081526040902080546001820154600283015460039093015491926001600160a01b039091169160ff1684565b604080519485526001600160a01b0390931660208501529183015260ff1660608201526080016102af565b606d546102c1565b6102e26104f0366004611ea1565b610841565b610508610503366004611f4b565b610880565b005b6102e2610518366004611f27565b6001600160a01b0316600090815260756020908152604080832054606654908452607290925290912060030154101590565b6102c1610558366004611f27565b60746020526000908152604090205481565b6102c1606c5481565b610586610581366004611ecd565b610a3f565b6040516102af9190611f71565b6102c1610b42565b606a546102c1565b6102c16105b1366004611f27565b6001600160a01b031660009081526033602052604090205490565b6102c1600281565b610508610bab565b6105ef6105ea366004611fbe565b610d1a565b6040516102af9190612033565b61050861060a366004611ecd565b611105565b6102c1606a5481565b6102a26112d7565b6102c160655481565b6102e2610637366004611ea1565b6112e6565b6102e261064a366004611ea1565b611378565b61050861065d366004611ecd565b611386565b606b546102c1565b6065546102c1565b6102c1606e5481565b610508610689366004611f27565b611480565b6102c1606d5481565b6102c160665481565b6105086106ae366004611ecd565b611505565b6102c16106c136600461206b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6105086106fa366004611f4b565b611578565b61050861070d366004611ea1565b6116d8565b6105ef61072036600461210f565b611756565b606954610738906001600160a01b031681565b6040516001600160a01b0390911681526020016102af565b60606036805461075f906121ba565b80601f016020809104026020016040519081016040528092919081815260200182805461078b906121ba565b80156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b5050505050905090565b6000336107f08185856118b9565b60019150505b92915050565b6070818154811061080c57600080fd5b600091825260209091200154905081565b60003361082b8582856119dd565b610836858585611a6f565b506001949350505050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906107f0908290869061087b90879061220a565b6118b9565b336000908152607560209081526040808320548084526072909252909120600381015463ffffffff841611156108fd5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e000060448201526064015b60405180910390fd5b60008363ffffffff16116109235760405162461bcd60e51b81526004016108f49061221d565b806004015460000361097e5760675461093c904261220a565b6004820181905560405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a2505050565b80600401544210156109d25760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e000000000000000060448201526064016108f4565b8263ffffffff168160030160008282546109ec919061225e565b90915550610a0290503363ffffffff8516611c3d565b60405163ffffffff8416815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e119588890602001610971565b505050565b6060606c548210610a835760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081a9bd888125160921b60448201526064016108f4565b600082815260736020526040902054829003610b0957600082815260736020908152604080832060020180548251818502810185019093528083529192909190830182828015610afc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ade575b5093979650505050505050565b60405162461bcd60e51b815260206004820152600e60248201526d4a6f62206e6f7420666f756e642160901b60448201526064016108f4565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190612271565b905090565b600054610100900460ff16610bc65760005460ff1615610bca565b303b155b610c2d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108f4565b600054610100900460ff16158015610c4f576000805461ffff19166101011790555b610c966040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250611d1c565b6001606b819055606c819055606a819055606e556003606f55604080516113888082526202712082019092529060208201620271008036833750508151610ce4926070925060200190611d88565b506806f05b59d3b2000000606555683635c9adc5dea0000060665561c4e06067558015610d17576000805461ff00191690555b50565b33600090815260746020526040812054606091819003610d735760405162461bcd60e51b81526020600482015260146024820152732ab9b2b9103737ba103932b3b4b9ba32b932b21760611b60448201526064016108f4565b600084846000818110610d8857610d8861228a565b9050602002013511610ddc5760405162461bcd60e51b815260206004820152601e60248201527f4361706163697479206d7573742062652067726561746572207a65726f2e000060448201526064016108f4565b6069546001600160a01b0316610e345760405162461bcd60e51b815260206004820152601b60248201527f56616c696461746f7220636f6e7472616374206e6f742073657421000000000060448201526064016108f4565b60685460408051632909069b60e21b815290516000926001600160a01b03169163a4241a6c91600480830192869291908290030181865afa158015610e7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ea591908101906122a0565b90506000815167ffffffffffffffff811115610ec357610ec36120a4565b604051908082528060200260200182016040528015610eec578160200160208202803683370190505b50905060005b8251811015610f5f5760756000848381518110610f1157610f1161228a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610f4c57610f4c61228a565b6020908102919091010152600101610ef2565b506040805160c081018252606c548152336020820152908101839052606081018667ffffffffffffffff811115610f9857610f986120a4565b604051908082528060200260200182016040528015610fc1578160200160208202803683370190505b5081526020018787808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505060016020938401819052606c54835260738452604092839020855181558585015191810180546001600160a01b0319166001600160a01b0390931692909217909155918401518051929361105793600286019350910190611dd3565b5060608201518051611073916003840191602090910190611dd3565b506080820151805161108f916004840191602090910190611d88565b5060a091909101516005909101805460ff1916911515919091179055606c546040517f3c015d1005da8bb61e99936222d4a8a0c3c5b6643f9daa5eae3ef07b7fb67647906110de908590611f71565b60405180910390a2606c80549060006110f68361233a565b90915550909695505050505050565b33600090815260756020526040902054156111625760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220616c7265616479206578697374732e0000000000000060448201526064016108f4565b6066543360009081526033602052604090205410156111c35760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e000000000060448201526064016108f4565b60006111d2333060665461081d565b9050806112195760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016108f4565b6040805160c081018252606a805480835233602080850182815285870189815260665460608801908152600060808901818152603260a08b01908152978252607286528a822099518a55935160018a0180546001600160a01b0319166001600160a01b03909216919091179055915160028901555160038801559051600487015592516005909501805460ff191660ff909616959095179094558254908252607590935292832082905590916112ce8361233a565b91905055505050565b60606037805461075f906121ba565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561136b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108f4565b61083682868684036118b9565b6000336107f0818585611a6f565b33600090815260746020526040902054156113e35760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642e000000000000000060448201526064016108f4565b60408051608081018252606b80548083523360208085018281528587018881526032606088019081526000958652607184528886209751885591516001880180546001600160a01b0319166001600160a01b03909216919091179055516002870155516003909501805460ff191660ff909616959095179094558254908252607490935292832082905590916114788361233a565b919050555050565b6069546001600160a01b0316156114d95760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e000060448201526064016108f4565b606880546001600160a01b039092166001600160a01b0319928316811790915560698054909216179055565b6069546001600160a01b0316331461152f5760405162461bcd60e51b81526004016108f490612353565b60008181526073602052604080822060058101805460ff191690559051909183917fb1dee78cef8c6887046d91c59e17f84fbc012c9f7efa49a10cce97e13cc94bf49190a25050565b60008163ffffffff161161159e5760405162461bcd60e51b81526004016108f49061221d565b3360009081526033602052604090205463ffffffff821611156115fb5760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016108f4565b336000908152607560205260408120549081900361165b5760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220646f6573206e6f742065786973742e0000000000000060448201526064016108f4565b61166c33308463ffffffff1661081d565b506000818152607260205260408120600301805463ffffffff8516929061169490849061220a565b909155505060405163ffffffff8316815233907fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c9060200160405180910390a25050565b6a115eec47f6cf7e350000006065546116f060355490565b6116fa919061220a565b11156117485760405162461bcd60e51b815260206004820152601760248201527f4d6178696d756d20737570706c7920726561636865642100000000000000000060448201526064016108f4565b6117528282611c3d565b5050565b6069546060906001600160a01b031633146117835760405162461bcd60e51b81526004016108f490612353565b6000838152607360205260409020600401548251146117a157600080fd5b600083815260736020908152604090912083516117c692600390920191850190611dd3565b5060405183907f02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be892990600090a26070546113881161182557607080548061180e5761180e612399565b600190038181906000526020600020016000905590555b60708054600181019091557f8f6b23ffa15f0465e3176e15ca644cf24f86dc1312fe715484e3c4aead5eb78b01839055600083815260736020908152604091829020600401805483518184028101840190945280845290918301828280156118ac57602002820191906000526020600020905b815481526020019060010190808311611898575b5050505050905092915050565b6001600160a01b03831661191b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108f4565b6001600160a01b03821661197c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108f4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611a695781811015611a5c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108f4565b611a6984848484036118b9565b50505050565b6001600160a01b038316611ad35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108f4565b6001600160a01b038216611b355760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108f4565b6001600160a01b03831660009081526033602052604090205481811015611bad5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108f4565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611be490849061220a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c3091815260200190565b60405180910390a3611a69565b6001600160a01b038216611c935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108f4565b8060356000828254611ca5919061220a565b90915550506001600160a01b03821660009081526033602052604081208054839290611cd290849061220a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff16611d435760405162461bcd60e51b81526004016108f4906123af565b6117528282600054610100900460ff16611d6f5760405162461bcd60e51b81526004016108f4906123af565b6036611d7b838261244a565b506037610a3a828261244a565b828054828255906000526020600020908101928215611dc3579160200282015b82811115611dc3578251825591602001919060010190611da8565b50611dcf929150611e28565b5090565b828054828255906000526020600020908101928215611dc3579160200282015b82811115611dc357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611df3565b5b80821115611dcf5760008155600101611e29565b60006020808352835180602085015260005b81811015611e6b57858101830151858201604001528201611e4f565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610d1757600080fd5b60008060408385031215611eb457600080fd5b8235611ebf81611e8c565b946020939093013593505050565b600060208284031215611edf57600080fd5b5035919050565b600080600060608486031215611efb57600080fd5b8335611f0681611e8c565b92506020840135611f1681611e8c565b929592945050506040919091013590565b600060208284031215611f3957600080fd5b8135611f4481611e8c565b9392505050565b600060208284031215611f5d57600080fd5b813563ffffffff81168114611f4457600080fd5b6020808252825182820181905260009190848201906040850190845b81811015611fb25783516001600160a01b031683529284019291840191600101611f8d565b50909695505050505050565b60008060208385031215611fd157600080fd5b823567ffffffffffffffff80821115611fe957600080fd5b818501915085601f830112611ffd57600080fd5b81358181111561200c57600080fd5b8660208260051b850101111561202157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015611fb25783518352928401929184019160010161204f565b6000806040838503121561207e57600080fd5b823561208981611e8c565b9150602083013561209981611e8c565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156120e3576120e36120a4565b604052919050565b600067ffffffffffffffff821115612105576121056120a4565b5060051b60200190565b6000806040838503121561212257600080fd5b8235915060208084013567ffffffffffffffff81111561214157600080fd5b8401601f8101861361215257600080fd5b8035612165612160826120eb565b6120ba565b81815260059190911b8201830190838101908883111561218457600080fd5b928401925b828410156121ab57833561219c81611e8c565b82529284019290840190612189565b80955050505050509250929050565b600181811c908216806121ce57607f821691505b6020821081036121ee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107f6576107f66121f4565b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b818103818111156107f6576107f66121f4565b60006020828403121561228357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208083850312156122b357600080fd5b825167ffffffffffffffff8111156122ca57600080fd5b8301601f810185136122db57600080fd5b80516122e9612160826120eb565b81815260059190911b8201830190838101908783111561230857600080fd5b928401925b8284101561232f57835161232081611e8c565b8252928401929084019061230d565b979650505050505050565b60006001820161234c5761234c6121f4565b5060010190565b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610a3a576000816000526020600020601f850160051c810160208610156124235750805b601f850160051c820191505b818110156124425782815560010161242f565b505050505050565b815167ffffffffffffffff811115612464576124646120a4565b6124788161247284546121ba565b846123fa565b602080601f8311600181146124ad57600084156124955750858301515b600019600386901b1c1916600185901b178555612442565b600085815260208120601f198616915b828110156124dc578886015182559484019460019091019084016124bd565b50858210156124fa5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207b83946a5c19e5edd8abee22b1c310709df15bb8f24fe0bc8c491180b2eef30764736f6c63430008190033",
  "bytecodeSha1": "e76a0e543e99735f4680aeecec1b93888860b861",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20Upgradeable.__ERC20_init": {
          "130": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "128": [
            2369,
            2382,
            true
          ],
          "129": [
            2369,
            2417,
            true
          ]
        }
      },
      "1": {
        "ERC20Upgradeable._approve": {
          "120": [
            10591,
            10610,
            true
          ],
          "121": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "127": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "122": [
            11303,
            11340,
            false
          ],
          "123": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "124": [
            7951,
            7969,
            true
          ],
          "125": [
            8029,
            8045,
            true
          ],
          "126": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "119": [
            7152,
            7187,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {},
      "6": {
        "SmartnodesCore.completeJob": {
          "118": [
            6733,
            6781,
            true
          ]
        },
        "SmartnodesCore.createUser": {
          "112": [
            4030,
            4062,
            true
          ]
        },
        "SmartnodesCore.createValidator": {
          "109": [
            4580,
            4617,
            true
          ],
          "110": [
            4700,
            4735,
            true
          ],
          "111": [
            4917,
            4924,
            true
          ]
        },
        "SmartnodesCore.getJobValidators": {
          "105": [
            9466,
            9484,
            true
          ],
          "106": [
            9517,
            9540,
            false
          ]
        },
        "SmartnodesCore.lockTokens": {
          "114": [
            7355,
            7365,
            true
          ],
          "115": [
            7421,
            7452,
            true
          ],
          "116": [
            7561,
            7577,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "117": [
            9099,
            9141,
            true
          ]
        },
        "SmartnodesCore.requestJob": {
          "107": [
            5565,
            5573,
            true
          ],
          "108": [
            5616,
            5634,
            true
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "113": [
            3578,
            3616,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "101": [
            7968,
            7994,
            true
          ],
          "102": [
            8047,
            8057,
            true
          ],
          "103": [
            8181,
            8206,
            false
          ],
          "104": [
            8531,
            8570,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "Initializable._isConstructor": {
          "28": [
            3101,
            3153
          ]
        }
      },
      "1": {
        "ERC20Upgradeable.__ERC20_init": {
          "98": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "99": [
            2381,
            2394
          ],
          "100": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "81": [
            10583,
            10651
          ],
          "82": [
            10661,
            10729
          ],
          "83": [
            10740,
            10776
          ],
          "84": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "94": [
            8827,
            8892
          ],
          "95": [
            8963,
            8985
          ],
          "96": [
            8995,
            9023
          ],
          "97": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "85": [
            11356,
            11424
          ],
          "86": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "87": [
            7943,
            8011
          ],
          "88": [
            8021,
            8085
          ],
          "89": [
            8192,
            8264
          ],
          "90": [
            8298,
            8336
          ],
          "91": [
            8356,
            8379
          ],
          "92": [
            8390,
            8421
          ],
          "93": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "8": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "11": [
            4907,
            4939
          ],
          "12": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "5": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "55": [
            7144,
            7229
          ],
          "56": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "16": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "9": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "54": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "57": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "13": [
            5712,
            5750
          ],
          "14": [
            5760,
            5787
          ],
          "15": [
            5797,
            5808
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {
        "ContextUpgradeable._msgSender": {
          "10": [
            922,
            939
          ]
        }
      },
      "6": {
        "SmartnodesCore.completeJob": {
          "75": [
            6725,
            6782
          ],
          "76": [
            6792,
            6822
          ],
          "77": [
            6832,
            6856
          ],
          "78": [
            6915,
            6934
          ],
          "79": [
            6954,
            6979
          ],
          "80": [
            6989,
            7018
          ]
        },
        "SmartnodesCore.createUser": {
          "58": [
            4022,
            4091
          ],
          "59": [
            4102,
            4280
          ],
          "60": [
            4291,
            4334
          ],
          "61": [
            4344,
            4359
          ]
        },
        "SmartnodesCore.createValidator": {
          "48": [
            4559,
            4668
          ],
          "49": [
            4679,
            4788
          ],
          "50": [
            4909,
            4950
          ],
          "51": [
            4961,
            5223
          ],
          "52": [
            5234,
            5287
          ],
          "53": [
            5297,
            5317
          ]
        },
        "SmartnodesCore.disputeJob": {
          "65": [
            7146,
            7166
          ],
          "66": [
            7176,
            7199
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "2": [
            10012,
            10035
          ]
        },
        "SmartnodesCore.getEmissionRate": {
          "7": [
            10117,
            10136
          ]
        },
        "SmartnodesCore.getJobValidators": {
          "25": [
            9458,
            9503
          ],
          "26": [
            9680,
            9704
          ]
        },
        "SmartnodesCore.getSupply": {
          "27": [
            10212,
            10237
          ]
        },
        "SmartnodesCore.getUserCount": {
          "6": [
            9793,
            9813
          ]
        },
        "SmartnodesCore.getValidatorCount": {
          "4": [
            9897,
            9922
          ]
        },
        "SmartnodesCore.initialize": {
          "29": [
            2992,
            3025
          ],
          "30": [
            3109,
            3126
          ],
          "31": [
            3136,
            3150
          ],
          "32": [
            3160,
            3182
          ],
          "33": [
            3192,
            3209
          ],
          "34": [
            3219,
            3236
          ],
          "35": [
            3246,
            3282
          ],
          "36": [
            3292,
            3313
          ],
          "37": [
            3374,
            3395
          ],
          "38": [
            3449,
            3469
          ]
        },
        "SmartnodesCore.isLocked": {
          "3": [
            10389,
            10432
          ]
        },
        "SmartnodesCore.lockTokens": {
          "67": [
            7347,
            7403
          ],
          "68": [
            7413,
            7478
          ],
          "69": [
            7553,
            7607
          ],
          "70": [
            7618,
            7665
          ],
          "71": [
            7675,
            7715
          ],
          "72": [
            7726,
            7763
          ]
        },
        "SmartnodesCore.mintTokens": {
          "73": [
            9078,
            9190
          ],
          "74": [
            9244,
            9268
          ]
        },
        "SmartnodesCore.requestJob": {
          "39": [
            5557,
            5598
          ],
          "40": [
            5608,
            5669
          ],
          "41": [
            5679,
            5791
          ],
          "42": [
            6064,
            6123
          ],
          "43": [
            6045,
            6048
          ],
          "44": [
            6189,
            6449
          ],
          "45": [
            6460,
            6506
          ],
          "46": [
            6516,
            6528
          ],
          "47": [
            6539,
            6559
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "62": [
            3557,
            3672
          ],
          "63": [
            3682,
            3748
          ],
          "64": [
            3758,
            3801
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "17": [
            7960,
            8029
          ],
          "18": [
            8039,
            8095
          ],
          "19": [
            8222,
            8275
          ],
          "20": [
            8316,
            8370
          ],
          "21": [
            8506,
            8628
          ],
          "22": [
            8643,
            8669
          ],
          "23": [
            8683,
            8708
          ],
          "24": [
            8770,
            8809
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102955760003560e01c80637071688a11610167578063b5cb15f7116100ce578063d93d9beb11610087578063d93d9beb146106a0578063dd62ed3e146106b3578063ec81560f146106ec578063f0dda65c146106ff578063f325957214610712578063f79621bd1461072557600080fd5b8063b5cb15f714610662578063c0a77da91461066a578063c5ab224114610672578063cdf64a761461067b578063d2d49c4b1461068e578063d8df5dc11461069757600080fd5b80638f029d5e116101205780638f029d5e1461060f57806395d89b411461061857806396afc45014610620578063a457c2d714610629578063a9059cbb1461063c578063abf7bfd81461064f57600080fd5b80637071688a1461059b57806370a08231146105a357806380652c90146105cc5780638129fc1c146105d45780638d12b266146105dc5780638dca9a19146105fc57600080fd5b8063313ce5671161020b57806344c6957b116101c457806344c6957b146104f55780634a4fbeec1461050a5780634b7590881461054a57806350355d761461056a5780636817dd5b146105735780636c9c2faf1461059357600080fd5b8063313ce567146103c457806332cb6b0c146103d357806335aa2e44146103e5578063365b98b21461046d57806337deea70146104da57806339509351146104e257600080fd5b80631f9ca61d1161025d5780631f9ca61d1461035a57806320d3a0b41461036d57806323b872dd1461037657806327764547146103895780632faba6ae146103a95780632ff2e9dc146103b257600080fd5b806306fdde031461029a57806308ac5256146102b8578063095ea7b3146102cf578063180aedf3146102f257806318160ddd14610352575b600080fd5b6102a2610750565b6040516102af9190611e3d565b60405180910390f35b6102c1606f5481565b6040519081526020016102af565b6102e26102dd366004611ea1565b6107e2565b60405190151581526020016102af565b61032d610300366004611ecd565b60736020526000908152604090208054600182015460059092015490916001600160a01b03169060ff1683565b604080519384526001600160a01b0390921660208401521515908201526060016102af565b6035546102c1565b6102c1610368366004611ecd565b6107fc565b6102c160675481565b6102e2610384366004611ee6565b61081d565b6102c1610397366004611f27565b60756020526000908152604090205481565b6102c1606b5481565b6102c16a0422ca8b0a00a42500000081565b604051601281526020016102af565b6102c16a115eec47f6cf7e3500000081565b6104356103f3366004611ecd565b60726020526000908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b03909316939192909160ff1686565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260ff1660a082015260c0016102af565b6104af61047b366004611ecd565b607160205260009081526040902080546001820154600283015460039093015491926001600160a01b039091169160ff1684565b604080519485526001600160a01b0390931660208501529183015260ff1660608201526080016102af565b606d546102c1565b6102e26104f0366004611ea1565b610841565b610508610503366004611f4b565b610880565b005b6102e2610518366004611f27565b6001600160a01b0316600090815260756020908152604080832054606654908452607290925290912060030154101590565b6102c1610558366004611f27565b60746020526000908152604090205481565b6102c1606c5481565b610586610581366004611ecd565b610a3f565b6040516102af9190611f71565b6102c1610b42565b606a546102c1565b6102c16105b1366004611f27565b6001600160a01b031660009081526033602052604090205490565b6102c1600281565b610508610bab565b6105ef6105ea366004611fbe565b610d1a565b6040516102af9190612033565b61050861060a366004611ecd565b611105565b6102c1606a5481565b6102a26112d7565b6102c160655481565b6102e2610637366004611ea1565b6112e6565b6102e261064a366004611ea1565b611378565b61050861065d366004611ecd565b611386565b606b546102c1565b6065546102c1565b6102c1606e5481565b610508610689366004611f27565b611480565b6102c1606d5481565b6102c160665481565b6105086106ae366004611ecd565b611505565b6102c16106c136600461206b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6105086106fa366004611f4b565b611578565b61050861070d366004611ea1565b6116d8565b6105ef61072036600461210f565b611756565b606954610738906001600160a01b031681565b6040516001600160a01b0390911681526020016102af565b60606036805461075f906121ba565b80601f016020809104026020016040519081016040528092919081815260200182805461078b906121ba565b80156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b5050505050905090565b6000336107f08185856118b9565b60019150505b92915050565b6070818154811061080c57600080fd5b600091825260209091200154905081565b60003361082b8582856119dd565b610836858585611a6f565b506001949350505050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906107f0908290869061087b90879061220a565b6118b9565b336000908152607560209081526040808320548084526072909252909120600381015463ffffffff841611156108fd5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e000060448201526064015b60405180910390fd5b60008363ffffffff16116109235760405162461bcd60e51b81526004016108f49061221d565b806004015460000361097e5760675461093c904261220a565b6004820181905560405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a2505050565b80600401544210156109d25760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e000000000000000060448201526064016108f4565b8263ffffffff168160030160008282546109ec919061225e565b90915550610a0290503363ffffffff8516611c3d565b60405163ffffffff8416815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e119588890602001610971565b505050565b6060606c548210610a835760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081a9bd888125160921b60448201526064016108f4565b600082815260736020526040902054829003610b0957600082815260736020908152604080832060020180548251818502810185019093528083529192909190830182828015610afc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ade575b5093979650505050505050565b60405162461bcd60e51b815260206004820152600e60248201526d4a6f62206e6f7420666f756e642160901b60448201526064016108f4565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190612271565b905090565b600054610100900460ff16610bc65760005460ff1615610bca565b303b155b610c2d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108f4565b600054610100900460ff16158015610c4f576000805461ffff19166101011790555b610c966040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250611d1c565b6001606b819055606c819055606a819055606e556003606f55604080516113888082526202712082019092529060208201620271008036833750508151610ce4926070925060200190611d88565b506806f05b59d3b2000000606555683635c9adc5dea0000060665561c4e06067558015610d17576000805461ff00191690555b50565b33600090815260746020526040812054606091819003610d735760405162461bcd60e51b81526020600482015260146024820152732ab9b2b9103737ba103932b3b4b9ba32b932b21760611b60448201526064016108f4565b600084846000818110610d8857610d8861228a565b9050602002013511610ddc5760405162461bcd60e51b815260206004820152601e60248201527f4361706163697479206d7573742062652067726561746572207a65726f2e000060448201526064016108f4565b6069546001600160a01b0316610e345760405162461bcd60e51b815260206004820152601b60248201527f56616c696461746f7220636f6e7472616374206e6f742073657421000000000060448201526064016108f4565b60685460408051632909069b60e21b815290516000926001600160a01b03169163a4241a6c91600480830192869291908290030181865afa158015610e7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ea591908101906122a0565b90506000815167ffffffffffffffff811115610ec357610ec36120a4565b604051908082528060200260200182016040528015610eec578160200160208202803683370190505b50905060005b8251811015610f5f5760756000848381518110610f1157610f1161228a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610f4c57610f4c61228a565b6020908102919091010152600101610ef2565b506040805160c081018252606c548152336020820152908101839052606081018667ffffffffffffffff811115610f9857610f986120a4565b604051908082528060200260200182016040528015610fc1578160200160208202803683370190505b5081526020018787808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505060016020938401819052606c54835260738452604092839020855181558585015191810180546001600160a01b0319166001600160a01b0390931692909217909155918401518051929361105793600286019350910190611dd3565b5060608201518051611073916003840191602090910190611dd3565b506080820151805161108f916004840191602090910190611d88565b5060a091909101516005909101805460ff1916911515919091179055606c546040517f3c015d1005da8bb61e99936222d4a8a0c3c5b6643f9daa5eae3ef07b7fb67647906110de908590611f71565b60405180910390a2606c80549060006110f68361233a565b90915550909695505050505050565b33600090815260756020526040902054156111625760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220616c7265616479206578697374732e0000000000000060448201526064016108f4565b6066543360009081526033602052604090205410156111c35760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e000000000060448201526064016108f4565b60006111d2333060665461081d565b9050806112195760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016108f4565b6040805160c081018252606a805480835233602080850182815285870189815260665460608801908152600060808901818152603260a08b01908152978252607286528a822099518a55935160018a0180546001600160a01b0319166001600160a01b03909216919091179055915160028901555160038801559051600487015592516005909501805460ff191660ff909616959095179094558254908252607590935292832082905590916112ce8361233a565b91905055505050565b60606037805461075f906121ba565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561136b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108f4565b61083682868684036118b9565b6000336107f0818585611a6f565b33600090815260746020526040902054156113e35760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642e000000000000000060448201526064016108f4565b60408051608081018252606b80548083523360208085018281528587018881526032606088019081526000958652607184528886209751885591516001880180546001600160a01b0319166001600160a01b03909216919091179055516002870155516003909501805460ff191660ff909616959095179094558254908252607490935292832082905590916114788361233a565b919050555050565b6069546001600160a01b0316156114d95760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e000060448201526064016108f4565b606880546001600160a01b039092166001600160a01b0319928316811790915560698054909216179055565b6069546001600160a01b0316331461152f5760405162461bcd60e51b81526004016108f490612353565b60008181526073602052604080822060058101805460ff191690559051909183917fb1dee78cef8c6887046d91c59e17f84fbc012c9f7efa49a10cce97e13cc94bf49190a25050565b60008163ffffffff161161159e5760405162461bcd60e51b81526004016108f49061221d565b3360009081526033602052604090205463ffffffff821611156115fb5760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016108f4565b336000908152607560205260408120549081900361165b5760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220646f6573206e6f742065786973742e0000000000000060448201526064016108f4565b61166c33308463ffffffff1661081d565b506000818152607260205260408120600301805463ffffffff8516929061169490849061220a565b909155505060405163ffffffff8316815233907fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c9060200160405180910390a25050565b6a115eec47f6cf7e350000006065546116f060355490565b6116fa919061220a565b11156117485760405162461bcd60e51b815260206004820152601760248201527f4d6178696d756d20737570706c7920726561636865642100000000000000000060448201526064016108f4565b6117528282611c3d565b5050565b6069546060906001600160a01b031633146117835760405162461bcd60e51b81526004016108f490612353565b6000838152607360205260409020600401548251146117a157600080fd5b600083815260736020908152604090912083516117c692600390920191850190611dd3565b5060405183907f02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be892990600090a26070546113881161182557607080548061180e5761180e612399565b600190038181906000526020600020016000905590555b60708054600181019091557f8f6b23ffa15f0465e3176e15ca644cf24f86dc1312fe715484e3c4aead5eb78b01839055600083815260736020908152604091829020600401805483518184028101840190945280845290918301828280156118ac57602002820191906000526020600020905b815481526020019060010190808311611898575b5050505050905092915050565b6001600160a01b03831661191b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108f4565b6001600160a01b03821661197c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108f4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611a695781811015611a5c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108f4565b611a6984848484036118b9565b50505050565b6001600160a01b038316611ad35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108f4565b6001600160a01b038216611b355760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108f4565b6001600160a01b03831660009081526033602052604090205481811015611bad5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108f4565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611be490849061220a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c3091815260200190565b60405180910390a3611a69565b6001600160a01b038216611c935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108f4565b8060356000828254611ca5919061220a565b90915550506001600160a01b03821660009081526033602052604081208054839290611cd290849061220a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff16611d435760405162461bcd60e51b81526004016108f4906123af565b6117528282600054610100900460ff16611d6f5760405162461bcd60e51b81526004016108f4906123af565b6036611d7b838261244a565b506037610a3a828261244a565b828054828255906000526020600020908101928215611dc3579160200282015b82811115611dc3578251825591602001919060010190611da8565b50611dcf929150611e28565b5090565b828054828255906000526020600020908101928215611dc3579160200282015b82811115611dc357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611df3565b5b80821115611dcf5760008155600101611e29565b60006020808352835180602085015260005b81811015611e6b57858101830151858201604001528201611e4f565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610d1757600080fd5b60008060408385031215611eb457600080fd5b8235611ebf81611e8c565b946020939093013593505050565b600060208284031215611edf57600080fd5b5035919050565b600080600060608486031215611efb57600080fd5b8335611f0681611e8c565b92506020840135611f1681611e8c565b929592945050506040919091013590565b600060208284031215611f3957600080fd5b8135611f4481611e8c565b9392505050565b600060208284031215611f5d57600080fd5b813563ffffffff81168114611f4457600080fd5b6020808252825182820181905260009190848201906040850190845b81811015611fb25783516001600160a01b031683529284019291840191600101611f8d565b50909695505050505050565b60008060208385031215611fd157600080fd5b823567ffffffffffffffff80821115611fe957600080fd5b818501915085601f830112611ffd57600080fd5b81358181111561200c57600080fd5b8660208260051b850101111561202157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015611fb25783518352928401929184019160010161204f565b6000806040838503121561207e57600080fd5b823561208981611e8c565b9150602083013561209981611e8c565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156120e3576120e36120a4565b604052919050565b600067ffffffffffffffff821115612105576121056120a4565b5060051b60200190565b6000806040838503121561212257600080fd5b8235915060208084013567ffffffffffffffff81111561214157600080fd5b8401601f8101861361215257600080fd5b8035612165612160826120eb565b6120ba565b81815260059190911b8201830190838101908883111561218457600080fd5b928401925b828410156121ab57833561219c81611e8c565b82529284019290840190612189565b80955050505050509250929050565b600181811c908216806121ce57607f821691505b6020821081036121ee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107f6576107f66121f4565b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b818103818111156107f6576107f66121f4565b60006020828403121561228357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208083850312156122b357600080fd5b825167ffffffffffffffff8111156122ca57600080fd5b8301601f810185136122db57600080fd5b80516122e9612160826120eb565b81815260059190911b8201830190838101908783111561230857600080fd5b928401925b8284101561232f57835161232081611e8c565b8252928401929084019061230d565b979650505050505050565b60006001820161234c5761234c6121f4565b5060010190565b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610a3a576000816000526020600020601f850160051c810160208610156124235750805b601f850160051c820191505b818110156124425782815560010161242f565b505050505050565b815167ffffffffffffffff811115612464576124646120a4565b6124788161247284546121ba565b846123fa565b602080601f8311600181146124ad57600084156124955750858301515b600019600386901b1c1916600185901b178555612442565b600085815260208120601f198616915b828110156124dc578886015182559484019460019091019084016124bd565b50858210156124fa5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207b83946a5c19e5edd8abee22b1c310709df15bb8f24fe0bc8c491180b2eef30764736f6c63430008190033",
  "deployedSourceMap": "271:10170:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1147:28:6;;;;;;;;;713:25:8;;;701:2;686:18;1147:28:6;567:177:8;4770:197:1;;;;;;:::i;:::-;;:::i;:::-;;;1370:14:8;;1363:22;1345:41;;1333:2;1318:18;4770:197:1;1205:187:8;2567:35:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:35:6;;;;;;;;;;1778:25:8;;;-1:-1:-1;;;;;1839:32:8;;;1834:2;1819:18;;1812:60;1915:14;1908:22;1888:18;;;1881:50;1766:2;1751:18;2567:35:6;1582:355:8;3581:106:1;3668:12;;3581:106;;2385:30:6;;;;;;:::i;:::-;;:::i;746:35::-;;;;;;5529:286:1;;;;;;:::i;:::-;;:::i;2689:55:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1011:28;;;;;;355:53;;396:12;355:53;;3430:91:1;;;3512:2;2797:36:8;;2785:2;2770:18;3430:91:1;2655:184:8;414:50:6;;451:13;414:50;;2514:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2514:47:6;;;;;;;;;;;;;;;;3127:25:8;;;-1:-1:-1;;;;;3188:32:8;;;3183:2;3168:18;;3161:60;3237:18;;;3230:34;;;;3295:2;3280:18;;3273:34;3338:3;3323:19;;3316:35;3400:4;3388:17;3208:3;3367:19;;3360:46;3114:3;3099:19;2514:47:6;2844:568:8;2471:37:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2471:37:6;;;;;;;;;;;;3644:25:8;;;-1:-1:-1;;;;;3705:32:8;;;3700:2;3685:18;;3678:60;3754:18;;;3747:34;3829:4;3817:17;3812:2;3797:18;;3790:45;3631:3;3616:19;2471:37:6;3417:424:8;9935:107:6;10019:16;;9935:107;;6210:236:1;;;;;;:::i;:::-;;:::i;7776:1102:6:-;;;;;;:::i;:::-;;:::i;:::-;;10250:189;;;;;;:::i;:::-;-1:-1:-1;;;;;10344:35:6;10314:4;10344:35;;;:20;:35;;;;;;;;;10422:10;;10396:15;;;:10;:15;;;;;;:22;;;:36;;;10250:189;2633:50;;;;;;:::i;:::-;;;;;;;;;;;;;;1045:25;;;;;;9352:369;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10149:95::-;;;:::i;9826:103::-;9904:18;;9826:103;;3745:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:1;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;470:35:6;;504:1;470:35;;2941:535;;;:::i;5380:1186::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4491:833::-;;;;;;:::i;:::-;;:::i;972:33::-;;;;;;2704:102:1;;;:::i;567:36:6:-;;;;;;6933:429:1;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;3903:463:6:-;;;;;;:::i;:::-;;:::i;9727:93::-;9800:13;;9727:93;;10048:95;10124:12;;10048:95;;1113:28;;;;;;3482:326;;;;;;:::i;:::-;;:::i;1076:31::-;;;;;;660:36;;;;;;7031:175;;;;;;:::i;:::-;;:::i;4313:149:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:1;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;7293:477:6;;;;;;:::i;:::-;;:::i;9004:271::-;;;;;;:::i;:::-;;:::i;6572:453::-;;;;;;:::i;:::-;;:::i;883:39::-;;;;;-1:-1:-1;;;;;883:39:6;;;;;;-1:-1:-1;;;;;8428:32:8;;;8410:51;;8398:2;8383:18;883:39:6;8264:203:8;2493:98:1;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:5;4907:32:1;929:10:5;4923:7:1;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;2385:30:6:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2385:30:6;:::o;5529:286:1:-;5656:4;929:10:5;5712:38:1;5728:4;929:10:5;5743:6:1;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:1;;5529:286;-1:-1:-1;;;;5529:286:1:o;6210:236::-;929:10:5;6298:4:1;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:1;;;;;;;;;;6298:4;;929:10:5;6352:66:1;;929:10:5;;6377:27:1;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;7776:1102:6:-;7875:10;7832:19;7854:32;;;:20;:32;;;;;;;;;7926:23;;;:10;:23;;;;;;7978:16;;;;7968:26;;;;;7960:69;;;;-1:-1:-1;;;7960:69:6;;9321:2:8;7960:69:6;;;9303:21:8;9360:2;9340:18;;;9333:30;9399:32;9379:18;;;9372:60;9449:18;;7960:69:6;;;;;;;;;8056:1;8047:6;:10;;;8039:56;;;;-1:-1:-1;;;8039:56:6;;;;;;;:::i;:::-;8181:9;:20;;;8205:1;8181:25;8177:695;;8263:12;;8245:30;;:15;:30;:::i;:::-;8222:20;;;:53;;;8321:49;;713:25:8;;;8337:10:6;;8321:49;;701:2:8;686:18;8321:49:6;;;;;;;;7822:1056;;7776:1102;:::o;8177:695::-;8550:9;:20;;;8531:15;:39;;8506:122;;;;-1:-1:-1;;;8506:122:6;;10082:2:8;8506:122:6;;;10064:21:8;10121:2;10101:18;;;10094:30;10160:26;10140:18;;;10133:54;10204:18;;8506:122:6;9880:348:8;8506:122:6;8663:6;8643:26;;:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;8683:25:6;;-1:-1:-1;8689:10:6;8683:25;;;:5;:25::i;:::-;8775:34;;10541:10:8;10529:23;;10511:42;;8790:10:6;;8775:34;;10499:2:8;10484:18;8775:34:6;10366:193:8;8177:695:6;7822:1056;;7776:1102;:::o;9352:369::-;9430:16;9474:10;;9466:5;:18;9458:45;;;;-1:-1:-1;;;9458:45:6;;10766:2:8;9458:45:6;;;10748:21:8;10805:2;10785:18;;;10778:30;-1:-1:-1;;;10824:18:8;;;10817:44;10878:18;;9458:45:6;10564:338:8;9458:45:6;9517:11;;;;:4;:11;;;;;:14;:23;;;9513:202;;9556:30;9589:11;;;:4;:11;;;;;;;;:26;;9556:59;;;;;;;;;;;;;;;;;;;9589:26;;9556:59;;;9589:26;9556:59;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9556:59:6;;;;;;;;;;;;;;;;-1:-1:-1;9556:59:6;;9352:369;-1:-1:-1;;;;;;;9352:369:6:o;9513:202::-;9680:24;;-1:-1:-1;;;9680:24:6;;11109:2:8;9680:24:6;;;11091:21:8;11148:2;11128:18;;;11121:30;-1:-1:-1;;;11167:18:8;;;11160:44;11221:18;;9680:24:6;10907:338:8;10149:95:6;10193:7;10219:4;-1:-1:-1;;;;;10219:16:6;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10212:25;;10149:95;:::o;2941:535::-;2369:13:0;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:4;:23;2385:16:0;2361:107;;;;-1:-1:-1;;;2361:107:0;;11641:2:8;2361:107:0;;;11623:21:8;11680:2;11660:18;;;11653:30;11719:34;11699:18;;;11692:62;-1:-1:-1;;;11770:18:8;;;11763:44;11824:19;;2361:107:0;11439:410:8;2361:107:0;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:0;;;;;2525:98;2992:33:6::1;;;;;;;;;;;;;;-1:-1:-1::0;;;2992:33:6::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;2992:33:6::1;;::::0;:12:::1;:33::i;:::-;3125:1;3109:13;:17:::0;;;3136:10:::1;:14:::0;;;3160:18:::1;:22:::0;;;3192:13:::1;:17:::0;3235:1:::1;3219:13;:17:::0;3262:20:::1;::::0;;3276:5:::1;3262:20:::0;;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;3246:36:6;;::::1;::::0;:13:::1;::::0;-1:-1:-1;3246:36:6::1;;::::0;::::1;:::i;:::-;-1:-1:-1::0;3307:6:6::1;3292:12;:21:::0;3387:8:::1;3374:10;:21:::0;3464:5:::1;3449:12;:20:::0;2645:66:0;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:0;;;2645:66;2080:637;2941:535:6:o;5380:1186::-;5535:10;5505:11;5519:27;;;:15;:27;;;;;;5464:29;;5565:8;;;5557:41;;;;-1:-1:-1;;;5557:41:6;;12056:2:8;5557:41:6;;;12038:21:8;12095:2;12075:18;;;12068:30;-1:-1:-1;;;12114:18:8;;;12107:50;12174:18;;5557:41:6;11854:344:8;5557:41:6;5633:1;5616:11;;5628:1;5616:14;;;;;;;:::i;:::-;;;;;;;:18;5608:61;;;;-1:-1:-1;;;5608:61:6;;12537:2:8;5608:61:6;;;12519:21:8;12576:2;12556:18;;;12549:30;12615:32;12595:18;;;12588:60;12665:18;;5608:61:6;12335:354:8;5608:61:6;5700:24;;-1:-1:-1;;;;;5700:24:6;5679:112;;;;-1:-1:-1;;;5679:112:6;;12896:2:8;5679:112:6;;;12878:21:8;12935:2;12915:18;;;12908:30;12974:29;12954:18;;;12947:57;13021:18;;5679:112:6;12694:351:8;5679:112:6;5837:26;;:69;;;-1:-1:-1;;;5837:69:6;;;;5802:32;;-1:-1:-1;;;;;5837:26:6;;:67;;:69;;;;;5802:32;;5837:69;;;;;;;:26;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5837:69:6;;;;;;;;;;;;:::i;:::-;5802:104;;5916:30;5963:15;:22;5949:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5949:37:6;;5916:70;;6002:9;5997:137;6021:15;:22;6017:1;:26;5997:137;;;6083:20;:40;6104:15;6120:1;6104:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6083:40:6;-1:-1:-1;;;;;6083:40:6;;;;;;;;;;;;;6064:13;6078:1;6064:16;;;;;;;;:::i;:::-;;;;;;;;;;:59;6045:3;;5997:137;;;-1:-1:-1;6208:241:6;;;;;;;;6230:10;;6208:241;;6262:10;6208:241;;;;;;;;;;;;;6354:11;6340:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6340:33:6;;6208:241;;;;6399:11;;6208:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6208:241:6;;;-1:-1:-1;;6434:4:6;6208:241;;;;;;;6194:10;;6189:16;;:4;:16;;;;;;;:260;;;;;;;;;;;;;-1:-1:-1;;;;;;6189:260:6;-1:-1:-1;;;;;6189:260:6;;;;;;;;;;;;;;;;:16;;:260;;;;;;-1:-1:-1;6189:260:6;;;;:::i;:::-;-1:-1:-1;6189:260:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6189:260:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6189:260:6;;;;;;;;;;;;-1:-1:-1;;6189:260:6;;;;;;;;;;6478:10;;6465:41;;;;;;6490:15;;6465:41;:::i;:::-;;;;;;;;6516:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;6546:13:6;;5380:1186;-1:-1:-1;;;;;;5380:1186:6:o;4491:833::-;4601:10;4580:32;;;;:20;:32;;;;;;:37;4559:109;;;;-1:-1:-1;;;4559:109:6;;14353:2:8;4559:109:6;;;14335:21:8;14392:2;14372:18;;;14365:30;14431:27;14411:18;;;14404:55;14476:18;;4559:109:6;14151:349:8;4559:109:6;4725:10;;4710;3819:7:1;3845:18;;;:9;:18;;;;;;4700:35:6;;4679:109;;;;-1:-1:-1;;;4679:109:6;;14707:2:8;4679:109:6;;;14689:21:8;14746:2;14726:18;;;14719:30;14785:29;14765:18;;;14758:57;14832:18;;4679:109:6;14505:351:8;4679:109:6;4833:12;4848:51;4861:10;4881:4;4888:10;;4848:12;:51::i;:::-;4833:66;;4917:7;4909:41;;;;-1:-1:-1;;;4909:41:6;;15063:2:8;4909:41:6;;;15045:21:8;15102:2;15082:18;;;15075:30;-1:-1:-1;;;15121:18:8;;;15114:51;15182:18;;4909:41:6;14861:345:8;4909:41:6;4994:229;;;;;;;;5022:18;;;4994:229;;;5072:10;4994:229;;;;;;;;;;;;;5147:10;;4994:229;;;;;;-1:-1:-1;4994:229:6;;;;;;5210:2;4994:229;;;;;;4961:30;;;:10;:30;;;;;:262;;;;;;;;;;;-1:-1:-1;;;;;;4961:262:6;-1:-1:-1;;;;;4961:262:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4961:262:6;4994:229;4961:262;;;;;;;;;;5269:18;;5234:32;;;:20;:32;;;;;;:53;;;5269:18;;5297:20;5269:18;5297:20;:::i;:::-;;;;;;4549:775;4491:833;:::o;2704:102:1:-;2760:13;2792:7;2785:14;;;;;:::i;6933:429::-;929:10:5;7026:4:1;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:1;;;;;;;;;;7026:4;;929:10:5;7152:35:1;;;;7144:85;;;;-1:-1:-1;;;7144:85:1;;15413:2:8;7144:85:1;;;15395:21:8;15452:2;15432:18;;;15425:30;15491:34;15471:18;;;15464:62;-1:-1:-1;;;15542:18:8;;;15535:35;15587:19;;7144:85:1;15211:401:8;7144:85:1;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:5;4199:28:1;929:10:5;4216:2:1;4220:6;4199:9;:28::i;3903:463:6:-;4046:10;4030:27;;;;:15;:27;;;;;;:32;4022:69;;;;-1:-1:-1;;;4022:69:6;;15819:2:8;4022:69:6;;;15801:21:8;15858:2;15838:18;;;15831:30;15897:26;15877:18;;;15870:54;15941:18;;4022:69:6;15617:348:8;4022:69:6;4125:155;;;;;;;;4148:13;;;4125:155;;;4188:10;4125:155;;;;;;;;;;;;;4267:2;4125:155;;;;;;-1:-1:-1;4102:20:6;;;:5;:20;;;;;:178;;;;;;;;;;;-1:-1:-1;;;;;;4102:178:6;-1:-1:-1;;;;;4102:178:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4102:178:6;4125:155;4102:178;;;;;;;;;;4321:13;;4291:27;;;:15;:27;;;;;;:43;;;4321:13;;4344:15;4321:13;4344:15;:::i;:::-;;;;;;3903:463;:::o;3482:326::-;3578:24;;-1:-1:-1;;;;;3578:24:6;:38;3557:115;;;;-1:-1:-1;;;3557:115:6;;16172:2:8;3557:115:6;;;16154:21:8;16211:2;16191:18;;;16184:30;16250:32;16230:18;;;16223:60;16300:18;;3557:115:6;15970:354:8;3557:115:6;3682:26;:66;;-1:-1:-1;;;;;3682:66:6;;;-1:-1:-1;;;;;;3682:66:6;;;;;;;;3758:24;:43;;;;;;;;3482:326::o;7031:175::-;2829:24;;-1:-1:-1;;;;;2829:24:6;2815:10;:38;2794:123;;;;-1:-1:-1;;;2794:123:6;;;;;;;:::i;:::-;7107:15:::1;7125:11:::0;;;:4:::1;:11;::::0;;;;;7146:12:::1;::::0;::::1;:20:::0;;-1:-1:-1;;7146:20:6::1;::::0;;7181:18;;7125:11;;7130:5;;7181:18:::1;::::0;7107:15;7181:18:::1;7097:109;7031:175:::0;:::o;7293:477::-;7364:1;7355:6;:10;;;7347:56;;;;-1:-1:-1;;;7347:56:6;;;;;;;:::i;:::-;7431:10;3819:7:1;3845:18;;;:9;:18;;;;;;7421:31:6;;;-1:-1:-1;7421:31:6;7413:65;;;;-1:-1:-1;;;7413:65:6;;16938:2:8;7413:65:6;;;16920:21:8;16977:2;16957:18;;;16950:30;-1:-1:-1;;;16996:18:8;;;16989:51;17057:18;;7413:65:6;16736:345:8;7413:65:6;7532:10;7489:19;7511:32;;;:20;:32;;;;;;;7561:16;;;7553:54;;;;-1:-1:-1;;;7553:54:6;;17288:2:8;7553:54:6;;;17270:21:8;17327:2;17307:18;;;17300:30;17366:27;17346:18;;;17339:55;17411:18;;7553:54:6;17086:349:8;7553:54:6;7618:47;7631:10;7651:4;7658:6;7618:47;;:12;:47::i;:::-;-1:-1:-1;7675:23:6;;;;:10;:23;;;;;:30;;:40;;;;;;:23;:40;;;;;:::i;:::-;;;;-1:-1:-1;;7731:32:6;;10541:10:8;10529:23;;10511:42;;7744:10:6;;7731:32;;10499:2:8;10484:18;7731:32:6;;;;;;;7337:433;7293:477;:::o;9004:271::-;451:13;9115:12;;9099:13;3668:12:1;;;3581:106;9099:13:6;:28;;;;:::i;:::-;:42;;9078:112;;;;-1:-1:-1;;;9078:112:6;;17642:2:8;9078:112:6;;;17624:21:8;17681:2;17661:18;;;17654:30;17720:25;17700:18;;;17693:53;17763:18;;9078:112:6;17440:347:8;9078:112:6;9244:24;9250:9;9261:6;9244:5;:24::i;:::-;9004:271;;:::o;6572:453::-;2829:24;;6697:16;;-1:-1:-1;;;;;2829:24:6;2815:10;:38;2794:123;;;;-1:-1:-1;;;2794:123:6;;;;;;;:::i;:::-;6752:11:::1;::::0;;;:4:::1;:11;::::0;;;;:22:::1;;:29:::0;6733:15;;:48:::1;6725:57;;;::::0;::::1;;6792:11;::::0;;;:4:::1;:11;::::0;;;;;;;:30;;::::1;::::0;:19:::1;::::0;;::::1;::::0;:30;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;6837:19:6::1;::::0;6850:5;;6837:19:::1;::::0;;;::::1;6870:13;:20:::0;6894:5:::1;-1:-1:-1::0;6866:79:6::1;;6915:13;:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6866:79;6954:13;:25:::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;-1:-1:-1;6996:11:6;;;:4:::1;6954:25;6996:11:::0;;;;;;;;:22:::1;;6989:29:::0;;;;;;::::1;::::0;;;;;;;;;;6996:22;;6989:29;::::1;6996:22:::0;6989:29;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6572:453:::0;;;;:::o;10460:370:1:-;-1:-1:-1;;;;;10591:19:1;;10583:68;;;;-1:-1:-1;;;10583:68:1;;18126:2:8;10583:68:1;;;18108:21:8;18165:2;18145:18;;;18138:30;18204:34;18184:18;;;18177:62;-1:-1:-1;;;18255:18:8;;;18248:34;18299:19;;10583:68:1;17924:400:8;10583:68:1;-1:-1:-1;;;;;10669:21:1;;10661:68;;;;-1:-1:-1;;;10661:68:1;;18531:2:8;10661:68:1;;;18513:21:8;18570:2;18550:18;;;18543:30;18609:34;18589:18;;;18582:62;-1:-1:-1;;;18660:18:8;;;18653:32;18702:19;;10661:68:1;18329:398:8;10661:68:1;-1:-1:-1;;;;;10740:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;713:25:8;;;10791:32:1;;686:18:8;10791:32:1;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:1;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:1;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:1;;18934:2:8;11356:68:1;;;18916:21:8;18973:2;18953:18;;;18946:30;19012:31;18992:18;;;18985:59;19061:18;;11356:68:1;18732:353:8;11356:68:1;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:1;;7943:68;;;;-1:-1:-1;;;7943:68:1;;19292:2:8;7943:68:1;;;19274:21:8;19331:2;19311:18;;;19304:30;19370:34;19350:18;;;19343:62;-1:-1:-1;;;19421:18:8;;;19414:35;19466:19;;7943:68:1;19090:401:8;7943:68:1;-1:-1:-1;;;;;8029:16:1;;8021:64;;;;-1:-1:-1;;;8021:64:1;;19698:2:8;8021:64:1;;;19680:21:8;19737:2;19717:18;;;19710:30;19776:34;19756:18;;;19749:62;-1:-1:-1;;;19827:18:8;;;19820:33;19870:19;;8021:64:1;19496:399:8;8021:64:1;-1:-1:-1;;;;;8167:15:1;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:1;;20102:2:8;8192:72:1;;;20084:21:8;20141:2;20121:18;;;20114:30;20180:34;20160:18;;;20153:62;-1:-1:-1;;;20231:18:8;;;20224:36;20277:19;;8192:72:1;19900:402:8;8192:72:1;-1:-1:-1;;;;;8298:15:1;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:1;8404:4;-1:-1:-1;;;;;8395:26:1;;8414:6;8395:26;;;;713:25:8;;701:2;686:18;;567:177;8395:26:1;;;;;;;;8432:37;7776:1102:6;8752:389:1;-1:-1:-1;;;;;8835:21:1;;8827:65;;;;-1:-1:-1;;;8827:65:1;;20509:2:8;8827:65:1;;;20491:21:8;20548:2;20528:18;;;20521:30;20587:33;20567:18;;;20560:61;20638:18;;8827:65:1;20307:355:8;8827:65:1;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:1;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:1;;713:25:8;;;-1:-1:-1;;;;;9038:37:1;;;9055:1;;9038:37;;701:2:8;686:18;9038:37:1;;;;;;;9004:271:6;;:::o;2116:147:1:-;2952:13:0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2218:38:1::1;2241:5;2248:7;2952:13:0::0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2381:5:1::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:1::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:548:8;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:131::-;-1:-1:-1;;;;;824:31:8;;814:42;;804:70;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:8:o;1397:180::-;1456:6;1509:2;1497:9;1488:7;1484:23;1480:32;1477:52;;;1525:1;1522;1515:12;1477:52;-1:-1:-1;1548:23:8;;1397:180;-1:-1:-1;1397:180:8:o;1942:456::-;2019:6;2027;2035;2088:2;2076:9;2067:7;2063:23;2059:32;2056:52;;;2104:1;2101;2094:12;2056:52;2143:9;2130:23;2162:31;2187:5;2162:31;:::i;:::-;2212:5;-1:-1:-1;2269:2:8;2254:18;;2241:32;2282:33;2241:32;2282:33;:::i;:::-;1942:456;;2334:7;;-1:-1:-1;;;2388:2:8;2373:18;;;;2360:32;;1942:456::o;2403:247::-;2462:6;2515:2;2503:9;2494:7;2490:23;2486:32;2483:52;;;2531:1;2528;2521:12;2483:52;2570:9;2557:23;2589:31;2614:5;2589:31;:::i;:::-;2639:5;2403:247;-1:-1:-1;;;2403:247:8:o;3846:276::-;3904:6;3957:2;3945:9;3936:7;3932:23;3928:32;3925:52;;;3973:1;3970;3963:12;3925:52;4012:9;3999:23;4062:10;4055:5;4051:22;4044:5;4041:33;4031:61;;4088:1;4085;4078:12;4127:658;4298:2;4350:21;;;4420:13;;4323:18;;;4442:22;;;4269:4;;4298:2;4521:15;;;;4495:2;4480:18;;;4269:4;4564:195;4578:6;4575:1;4572:13;4564:195;;;4643:13;;-1:-1:-1;;;;;4639:39:8;4627:52;;4734:15;;;;4699:12;;;;4675:1;4593:9;4564:195;;;-1:-1:-1;4776:3:8;;4127:658;-1:-1:-1;;;;;;4127:658:8:o;4790:615::-;4876:6;4884;4937:2;4925:9;4916:7;4912:23;4908:32;4905:52;;;4953:1;4950;4943:12;4905:52;4993:9;4980:23;5022:18;5063:2;5055:6;5052:14;5049:34;;;5079:1;5076;5069:12;5049:34;5117:6;5106:9;5102:22;5092:32;;5162:7;5155:4;5151:2;5147:13;5143:27;5133:55;;5184:1;5181;5174:12;5133:55;5224:2;5211:16;5250:2;5242:6;5239:14;5236:34;;;5266:1;5263;5256:12;5236:34;5319:7;5314:2;5304:6;5301:1;5297:14;5293:2;5289:23;5285:32;5282:45;5279:65;;;5340:1;5337;5330:12;5279:65;5371:2;5363:11;;;;;5393:6;;-1:-1:-1;4790:615:8;;-1:-1:-1;;;;4790:615:8:o;5410:632::-;5581:2;5633:21;;;5703:13;;5606:18;;;5725:22;;;5552:4;;5581:2;5804:15;;;;5778:2;5763:18;;;5552:4;5847:169;5861:6;5858:1;5855:13;5847:169;;;5922:13;;5910:26;;5991:15;;;;5956:12;;;;5883:1;5876:9;5847:169;;6232:388;6300:6;6308;6361:2;6349:9;6340:7;6336:23;6332:32;6329:52;;;6377:1;6374;6367:12;6329:52;6416:9;6403:23;6435:31;6460:5;6435:31;:::i;:::-;6485:5;-1:-1:-1;6542:2:8;6527:18;;6514:32;6555:33;6514:32;6555:33;:::i;:::-;6607:7;6597:17;;;6232:388;;;;;:::o;6625:127::-;6686:10;6681:3;6677:20;6674:1;6667:31;6717:4;6714:1;6707:15;6741:4;6738:1;6731:15;6757:275;6828:2;6822:9;6893:2;6874:13;;-1:-1:-1;;6870:27:8;6858:40;;6928:18;6913:34;;6949:22;;;6910:62;6907:88;;;6975:18;;:::i;:::-;7011:2;7004:22;6757:275;;-1:-1:-1;6757:275:8:o;7037:183::-;7097:4;7130:18;7122:6;7119:30;7116:56;;;7152:18;;:::i;:::-;-1:-1:-1;7197:1:8;7193:14;7209:4;7189:25;;7037:183::o;7225:1034::-;7318:6;7326;7379:2;7367:9;7358:7;7354:23;7350:32;7347:52;;;7395:1;7392;7385:12;7347:52;7431:9;7418:23;7408:33;;7460:2;7513;7502:9;7498:18;7485:32;7540:18;7532:6;7529:30;7526:50;;;7572:1;7569;7562:12;7526:50;7595:22;;7648:4;7640:13;;7636:27;-1:-1:-1;7626:55:8;;7677:1;7674;7667:12;7626:55;7713:2;7700:16;7736:60;7752:43;7792:2;7752:43;:::i;:::-;7736:60;:::i;:::-;7830:15;;;7912:1;7908:10;;;;7900:19;;7896:28;;;7861:12;;;;7936:19;;;7933:39;;;7968:1;7965;7958:12;7933:39;7992:11;;;;8012:217;8028:6;8023:3;8020:15;8012:217;;;8108:3;8095:17;8125:31;8150:5;8125:31;:::i;:::-;8169:18;;8045:12;;;;8207;;;;8012:217;;;8248:5;8238:15;;;;;;;7225:1034;;;;;:::o;8472:380::-;8551:1;8547:12;;;;8594;;;8615:61;;8669:4;8661:6;8657:17;8647:27;;8615:61;8722:2;8714:6;8711:14;8691:18;8688:38;8685:161;;8768:10;8763:3;8759:20;8756:1;8749:31;8803:4;8800:1;8793:15;8831:4;8828:1;8821:15;8685:161;;8472:380;;;:::o;8857:127::-;8918:10;8913:3;8909:20;8906:1;8899:31;8949:4;8946:1;8939:15;8973:4;8970:1;8963:15;8989:125;9054:9;;;9075:10;;;9072:36;;;9088:18;;:::i;9478:397::-;9680:2;9662:21;;;9719:2;9699:18;;;9692:30;9758:34;9753:2;9738:18;;9731:62;-1:-1:-1;;;9824:2:8;9809:18;;9802:31;9865:3;9850:19;;9478:397::o;10233:128::-;10300:9;;;10321:11;;;10318:37;;;10335:18;;:::i;11250:184::-;11320:6;11373:2;11361:9;11352:7;11348:23;11344:32;11341:52;;;11389:1;11386;11379:12;11341:52;-1:-1:-1;11412:16:8;;11250:184;-1:-1:-1;11250:184:8:o;12203:127::-;12264:10;12259:3;12255:20;12252:1;12245:31;12295:4;12292:1;12285:15;12319:4;12316:1;12309:15;13050:956;13145:6;13176:2;13219;13207:9;13198:7;13194:23;13190:32;13187:52;;;13235:1;13232;13225:12;13187:52;13268:9;13262:16;13301:18;13293:6;13290:30;13287:50;;;13333:1;13330;13323:12;13287:50;13356:22;;13409:4;13401:13;;13397:27;-1:-1:-1;13387:55:8;;13438:1;13435;13428:12;13387:55;13467:2;13461:9;13490:60;13506:43;13546:2;13506:43;:::i;13490:60::-;13584:15;;;13666:1;13662:10;;;;13654:19;;13650:28;;;13615:12;;;;13690:19;;;13687:39;;;13722:1;13719;13712:12;13687:39;13746:11;;;;13766:210;13782:6;13777:3;13774:15;13766:210;;;13855:3;13849:10;13872:31;13897:5;13872:31;:::i;:::-;13916:18;;13799:12;;;;13954;;;;13766:210;;;13995:5;13050:956;-1:-1:-1;;;;;;;13050:956:8:o;14011:135::-;14050:3;14071:17;;;14068:43;;14091:18;;:::i;:::-;-1:-1:-1;14138:1:8;14127:13;;14011:135::o;16329:402::-;16531:2;16513:21;;;16570:2;16550:18;;;16543:30;16609:34;16604:2;16589:18;;16582:62;-1:-1:-1;;;16675:2:8;16660:18;;16653:36;16721:3;16706:19;;16329:402::o;17792:127::-;17853:10;17848:3;17844:20;17841:1;17834:31;17884:4;17881:1;17874:15;17908:4;17905:1;17898:15;20667:407;20869:2;20851:21;;;20908:2;20888:18;;;20881:30;20947:34;20942:2;20927:18;;20920:62;-1:-1:-1;;;21013:2:8;20998:18;;20991:41;21064:3;21049:19;;20667:407::o;21205:543::-;21307:2;21302:3;21299:11;21296:446;;;21343:1;21367:5;21364:1;21357:16;21411:4;21408:1;21398:18;21481:2;21469:10;21465:19;21462:1;21458:27;21452:4;21448:38;21517:4;21505:10;21502:20;21499:47;;;-1:-1:-1;21540:4:8;21499:47;21595:2;21590:3;21586:12;21583:1;21579:20;21573:4;21569:31;21559:41;;21650:82;21668:2;21661:5;21658:13;21650:82;;;21713:17;;;21694:1;21683:13;21650:82;;;21654:3;;;21205:543;;;:::o;21924:1345::-;22050:3;22044:10;22077:18;22069:6;22066:30;22063:56;;;22099:18;;:::i;:::-;22128:97;22218:6;22178:38;22210:4;22204:11;22178:38;:::i;:::-;22172:4;22128:97;:::i;:::-;22280:4;;22337:2;22326:14;;22354:1;22349:663;;;;23056:1;23073:6;23070:89;;;-1:-1:-1;23125:19:8;;;23119:26;23070:89;-1:-1:-1;;21881:1:8;21877:11;;;21873:24;21869:29;21859:40;21905:1;21901:11;;;21856:57;23172:81;;22319:944;;22349:663;21152:1;21145:14;;;21189:4;21176:18;;-1:-1:-1;;22385:20:8;;;22503:236;22517:7;22514:1;22511:14;22503:236;;;22606:19;;;22600:26;22585:42;;22698:27;;;;22666:1;22654:14;;;;22533:19;;22503:236;;;22507:3;22767:6;22758:7;22755:19;22752:201;;;22828:19;;;22822:26;-1:-1:-1;;22911:1:8;22907:14;;;22923:3;22903:24;22899:37;22895:42;22880:58;22865:74;;22752:201;-1:-1:-1;;;;;22999:1:8;22983:14;;;22979:22;22966:36;;-1:-1:-1;21924:1345:8:o",
  "language": "Solidity",
  "natspec": {
    "details": "An ERC20 contract for managing off-chain networks",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createUser(bytes32)": {
        "details": "Create a User, limit one per address & public key hash (RSA)"
      },
      "createValidator(bytes32)": {
        "details": "Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint32)": {
        "details": "Validator token unlocking, 30 day withdrawal period."
      },
      "mintTokens(address,uint256)": {
        "details": "Mint tokens for updating state rewards, TODO change to internal (external for testing)"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "title": "SmartNodes",
    "version": 1
  },
  "offset": [
    271,
    10441
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x295 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7071688A GT PUSH2 0x167 JUMPI DUP1 PUSH4 0xB5CB15F7 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD93D9BEB GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD93D9BEB EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xEC81560F EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xF3259572 EQ PUSH2 0x712 JUMPI DUP1 PUSH4 0xF79621BD EQ PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xC0A77DA9 EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F029D5E GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xABF7BFD8 EQ PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7071688A EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0x80652C90 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0x8D12B266 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x8DCA9A19 EQ PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x44C6957B GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x44C6957B EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x4B759088 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x6817DD5B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F9CA61D GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x1F9CA61D EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x2FABA6AE EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x352 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x32D PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C1 PUSH11 0x422CA8B0A00A425000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x2C1 PUSH11 0x115EEC47F6CF7E35000000 DUP2 JUMP JUMPDEST PUSH2 0x435 PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x72 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x508 PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x66 SLOAD SWAP1 DUP5 MSTORE PUSH1 0x72 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x586 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x5B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x508 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0x5EF PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH2 0x508 PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x65 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x12E6 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x508 PUSH2 0x65D CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH2 0x2C1 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x508 PUSH2 0x689 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F27 JUMP JUMPDEST PUSH2 0x1480 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x508 PUSH2 0x6AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x6C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x508 PUSH2 0x6FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x508 PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x16D8 JUMP JUMPDEST PUSH2 0x5EF PUSH2 0x720 CALLDATASIZE PUSH1 0x4 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH2 0x738 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x75F SWAP1 PUSH2 0x21BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x78B SWAP1 PUSH2 0x21BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7F0 DUP2 DUP6 DUP6 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x70 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x82B DUP6 DUP3 DUP6 PUSH2 0x19DD JUMP JUMPDEST PUSH2 0x836 DUP6 DUP6 DUP6 PUSH2 0x1A6F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x7F0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x87B SWAP1 DUP8 SWAP1 PUSH2 0x220A JUMP JUMPDEST PUSH2 0x18B9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x72 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x221D JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x97E JUMPI PUSH1 0x67 SLOAD PUSH2 0x93C SWAP1 TIMESTAMP PUSH2 0x220A JUMP JUMPDEST PUSH1 0x4 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA02 SWAP1 POP CALLER PUSH4 0xFFFFFFFF DUP6 AND PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH2 0x971 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6C SLOAD DUP3 LT PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081A9BD8881251 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 SUB PUSH2 0xB09 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADE JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4A6F62206E6F7420666F756E6421 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBC6 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCA JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0xC2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xC96 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6B DUP2 SWAP1 SSTORE PUSH1 0x6C DUP2 SWAP1 SSTORE PUSH1 0x6A DUP2 SWAP1 SSTORE PUSH1 0x6E SSTORE PUSH1 0x3 PUSH1 0x6F SSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x1388 DUP1 DUP3 MSTORE PUSH3 0x27120 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH3 0x27100 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP DUP2 MLOAD PUSH2 0xCE4 SWAP3 PUSH1 0x70 SWAP3 POP PUSH1 0x20 ADD SWAP1 PUSH2 0x1D88 JUMP JUMPDEST POP PUSH9 0x6F05B59D3B2000000 PUSH1 0x65 SSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x66 SSTORE PUSH2 0xC4E0 PUSH1 0x67 SSTORE DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP2 SWAP1 SUB PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB9B2B9103737BA103932B3B4B9BA32B932B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD88 JUMPI PUSH2 0xD88 PUSH2 0x228A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0xDDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4361706163697479206D7573742062652067726561746572207A65726F2E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220636F6E7472616374206E6F7420736574210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2909069B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA4241A6C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEA5 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x22A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC3 PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEEC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x75 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF11 JUMPI PUSH2 0xF11 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF4C JUMPI PUSH2 0xF4C PUSH2 0x228A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xEF2 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6C SLOAD DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP7 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFC1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x6C SLOAD DUP4 MSTORE PUSH1 0x73 DUP5 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP6 ADD MLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP2 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH2 0x1057 SWAP4 PUSH1 0x2 DUP7 ADD SWAP4 POP SWAP2 ADD SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x1073 SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x108F SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1D88 JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6C SLOAD PUSH1 0x40 MLOAD PUSH32 0x3C015D1005DA8BB61E99936222D4A8A0C3C5B6643F9DAA5EAE3EF07B7FB67647 SWAP1 PUSH2 0x10DE SWAP1 DUP6 SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6C DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x10F6 DUP4 PUSH2 0x233A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206578697374732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x66 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D2 CALLER ADDRESS PUSH1 0x66 SLOAD PUSH2 0x81D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x6A DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP10 DUP2 MSTORE PUSH1 0x66 SLOAD PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0xA0 DUP12 ADD SWAP1 DUP2 MSTORE SWAP8 DUP3 MSTORE PUSH1 0x72 DUP7 MSTORE DUP11 DUP3 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD PUSH1 0x3 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP3 MLOAD PUSH1 0x5 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP3 SLOAD SWAP1 DUP3 MSTORE PUSH1 0x75 SWAP1 SWAP4 MSTORE SWAP3 DUP4 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SWAP2 PUSH2 0x12CE DUP4 PUSH2 0x233A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x75F SWAP1 PUSH2 0x21BA JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x136B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x836 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7F0 DUP2 DUP6 DUP6 PUSH2 0x1A6F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x6B DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x32 PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x71 DUP5 MSTORE DUP9 DUP7 KECCAK256 SWAP8 MLOAD DUP9 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP3 SLOAD SWAP1 DUP3 MSTORE PUSH1 0x74 SWAP1 SWAP4 MSTORE SWAP3 DUP4 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SWAP2 PUSH2 0x1478 DUP4 PUSH2 0x233A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x68 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x69 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x152F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0xB1DEE78CEF8C6887046D91C59E17F84FBC012C9F7EFA49A10CCE97E13CC94BF4 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x221D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP3 AND GT ISZERO PUSH2 0x15FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x166C CALLER ADDRESS DUP5 PUSH4 0xFFFFFFFF AND PUSH2 0x81D JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x72 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF DUP6 AND SWAP3 SWAP1 PUSH2 0x1694 SWAP1 DUP5 SWAP1 PUSH2 0x220A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP4 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH11 0x115EEC47F6CF7E35000000 PUSH1 0x65 SLOAD PUSH2 0x16F0 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x220A JUMP JUMPDEST GT ISZERO PUSH2 0x1748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20737570706C79207265616368656421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x1752 DUP3 DUP3 PUSH2 0x1C3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1783 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 MLOAD EQ PUSH2 0x17A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x17C6 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x70 SLOAD PUSH2 0x1388 GT PUSH2 0x1825 JUMPI PUSH1 0x70 DUP1 SLOAD DUP1 PUSH2 0x180E JUMPI PUSH2 0x180E PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE JUMPDEST PUSH1 0x70 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x8F6B23FFA15F0465E3176E15CA644CF24F86DC1312FE715484E3C4AEAD5EB78B ADD DUP4 SWAP1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x18AC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1898 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1A69 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x1A69 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x18B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1BAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1BE4 SWAP1 DUP5 SWAP1 PUSH2 0x220A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C30 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1A69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F4 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CA5 SWAP2 SWAP1 PUSH2 0x220A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1CD2 SWAP1 DUP5 SWAP1 PUSH2 0x220A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1D43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x1752 DUP3 DUP3 PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1D6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x36 PUSH2 0x1D7B DUP4 DUP3 PUSH2 0x244A JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xA3A DUP3 DUP3 PUSH2 0x244A JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1DC3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1DC3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST POP PUSH2 0x1DCF SWAP3 SWAP2 POP PUSH2 0x1E28 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1DC3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1DC3 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1DCF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E6B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1E4F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EBF DUP2 PUSH2 0x1E8C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F06 DUP2 PUSH2 0x1E8C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F16 DUP2 PUSH2 0x1E8C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F44 DUP2 PUSH2 0x1E8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1F44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FB2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F8D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x200C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FB2 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x204F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2089 DUP2 PUSH2 0x1E8C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2099 DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x20E3 JUMPI PUSH2 0x20E3 PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2105 JUMPI PUSH2 0x2105 PUSH2 0x20A4 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2165 PUSH2 0x2160 DUP3 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x20BA JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x2184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x21AB JUMPI DUP4 CALLDATALOAD PUSH2 0x219C DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x2189 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x21CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x7F6 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x7F6 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x22DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x22E9 PUSH2 0x2160 DUP3 PUSH2 0x20EB JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x2308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x232F JUMPI DUP4 MLOAD PUSH2 0x2320 DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x230D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x234C JUMPI PUSH2 0x234C PUSH2 0x21F4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2423 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2442 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x242F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2464 JUMPI PUSH2 0x2464 PUSH2 0x20A4 JUMP JUMPDEST PUSH2 0x2478 DUP2 PUSH2 0x2472 DUP5 SLOAD PUSH2 0x21BA JUMP JUMPDEST DUP5 PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x24AD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2495 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2442 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24DC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x24BD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x24FA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x83946A5C19E5EDD8ABEE22B1C310709DF15BB8F24FE0BC8C491180B2 0xEE RETURN SMOD PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295"
    },
    "25": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7071688A"
    },
    "38": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x167"
    },
    "42": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB5CB15F7"
    },
    "49": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE"
    },
    "53": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD93D9BEB"
    },
    "60": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "GT",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD93D9BEB"
    },
    "71": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A0"
    },
    "75": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B3"
    },
    "86": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEC81560F"
    },
    "93": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6EC"
    },
    "97": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF0DDA65C"
    },
    "104": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FF"
    },
    "108": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF3259572"
    },
    "115": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x712"
    },
    "119": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF79621BD"
    },
    "126": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "127": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x725"
    },
    "130": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "131": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB5CB15F7"
    },
    "142": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x662"
    },
    "146": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC0A77DA9"
    },
    "153": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66A"
    },
    "157": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC5AB2241"
    },
    "164": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x672"
    },
    "168": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCDF64A76"
    },
    "175": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x67B"
    },
    "179": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD2D49C4B"
    },
    "186": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "187": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x68E"
    },
    "190": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "191": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD8DF5DC1"
    },
    "197": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "198": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x697"
    },
    "201": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "202": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "204": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "205": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "206": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8F029D5E"
    },
    "213": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "GT",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x120"
    },
    "217": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8F029D5E"
    },
    "224": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60F"
    },
    "228": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "235": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "236": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x618"
    },
    "239": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x96AFC450"
    },
    "246": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "247": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x620"
    },
    "250": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "251": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA457C2D7"
    },
    "257": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "258": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x629"
    },
    "261": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "262": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "263": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "268": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "269": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63C"
    },
    "272": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "273": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "274": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xABF7BFD8"
    },
    "279": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "280": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x64F"
    },
    "283": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "284": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "286": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "287": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "288": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "289": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "290": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7071688A"
    },
    "295": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "296": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59B"
    },
    "299": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "300": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "306": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "307": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A3"
    },
    "310": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "311": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "312": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x80652C90"
    },
    "317": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "318": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CC"
    },
    "321": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "322": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "323": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8129FC1C"
    },
    "328": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "329": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "332": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "333": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8D12B266"
    },
    "339": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "340": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DC"
    },
    "343": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "344": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "345": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DCA9A19"
    },
    "350": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "351": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5FC"
    },
    "354": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "355": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "357": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "358": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "359": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "360": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "361": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "366": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "GT",
      "path": "6"
    },
    "367": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20B"
    },
    "370": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "371": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "372": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x44C6957B"
    },
    "377": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "GT",
      "path": "6"
    },
    "378": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C4"
    },
    "381": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "382": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "383": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x44C6957B"
    },
    "388": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "389": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F5"
    },
    "392": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "393": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "394": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4A4FBEEC"
    },
    "399": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "400": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50A"
    },
    "403": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "404": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "405": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4B759088"
    },
    "410": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "411": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x54A"
    },
    "414": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "415": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "416": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x50355D76"
    },
    "421": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "422": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x56A"
    },
    "425": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "426": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "427": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6817DD5B"
    },
    "432": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "433": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x573"
    },
    "436": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "437": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "438": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6C9C2FAF"
    },
    "443": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "444": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x593"
    },
    "447": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "448": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "450": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "451": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "452": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "453": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "454": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "459": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "460": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C4"
    },
    "463": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "464": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "465": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x32CB6B0C"
    },
    "470": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "471": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D3"
    },
    "474": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "475": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "476": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x35AA2E44"
    },
    "481": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "482": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E5"
    },
    "485": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "486": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "487": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x365B98B2"
    },
    "492": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "493": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46D"
    },
    "496": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "497": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "498": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x37DEEA70"
    },
    "503": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "504": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DA"
    },
    "507": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "508": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "509": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "514": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "515": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E2"
    },
    "518": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "519": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "522": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "523": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "524": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "525": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1F9CA61D"
    },
    "530": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "GT",
      "path": "6"
    },
    "531": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25D"
    },
    "534": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "535": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "536": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1F9CA61D"
    },
    "541": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "542": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35A"
    },
    "545": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "546": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "547": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x20D3A0B4"
    },
    "552": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "553": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36D"
    },
    "556": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "557": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "558": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "563": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "564": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x376"
    },
    "567": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "568": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "569": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x27764547"
    },
    "574": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "575": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x389"
    },
    "578": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "579": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "580": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2FABA6AE"
    },
    "585": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "586": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A9"
    },
    "589": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "590": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "591": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2FF2E9DC"
    },
    "596": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "597": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B2"
    },
    "600": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "601": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "603": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "604": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "605": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "606": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "607": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "612": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "613": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29A"
    },
    "616": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "617": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "618": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8AC5256"
    },
    "623": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "624": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "627": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "628": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "629": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "634": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "635": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CF"
    },
    "638": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "639": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "640": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x180AEDF3"
    },
    "645": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "646": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F2"
    },
    "649": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "650": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "651": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "656": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "EQ",
      "path": "6"
    },
    "657": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x352"
    },
    "660": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "661": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "662": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "664": {
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "665": {
      "first_revert": true,
      "fn": null,
      "offset": [
        271,
        10441
      ],
      "op": "REVERT",
      "path": "6"
    },
    "666": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "667": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A2"
    },
    "670": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x750"
    },
    "673": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "674": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "675": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "677": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "678": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "681": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "682": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "683": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E3D"
    },
    "686": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "687": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "688": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "690": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "691": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "692": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "693": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "1"
    },
    "694": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "695": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "1"
    },
    "696": {
      "offset": [
        1147,
        1175
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "697": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "700": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "702": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "703": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "DUP2",
      "path": "6"
    },
    "704": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "JUMP",
      "path": "6"
    },
    "705": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "706": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "708": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1147,
        1175
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "709": {
      "op": "SWAP1"
    },
    "710": {
      "op": "DUP2"
    },
    "711": {
      "op": "MSTORE"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "714": {
      "op": "ADD"
    },
    "715": {
      "offset": [
        1147,
        1175
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AF"
    },
    "718": {
      "op": "JUMP"
    },
    "719": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "720": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E2"
    },
    "723": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DD"
    },
    "726": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "727": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "729": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA1"
    },
    "732": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "733": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "734": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E2"
    },
    "737": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "738": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "739": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "741": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "742": {
      "op": "SWAP1"
    },
    "743": {
      "op": "ISZERO"
    },
    "744": {
      "op": "ISZERO"
    },
    "745": {
      "op": "DUP2"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "749": {
      "op": "ADD"
    },
    "750": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "753": {
      "op": "JUMP"
    },
    "754": {
      "offset": [
        2567,
        2602
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "755": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32D"
    },
    "758": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x300"
    },
    "761": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "762": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "764": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "767": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        2567,
        2602
      ],
      "op": "JUMP",
      "path": "6"
    },
    "768": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "769": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "771": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "773": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "774": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "776": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "777": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "DUP2",
      "path": "6"
    },
    "778": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "779": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "781": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "782": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "783": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "DUP1",
      "path": "6"
    },
    "784": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "785": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "787": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "DUP3",
      "path": "6"
    },
    "788": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "ADD",
      "path": "6"
    },
    "789": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "790": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "792": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "793": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "794": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "ADD",
      "path": "6"
    },
    "795": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "796": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "797": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "SUB"
    },
    "806": {
      "offset": [
        2567,
        2602
      ],
      "op": "AND",
      "path": "6"
    },
    "807": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "808": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "810": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "AND",
      "path": "6"
    },
    "811": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "DUP4",
      "path": "6"
    },
    "812": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "JUMP",
      "path": "6"
    },
    "813": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "814": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "816": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "DUP1",
      "path": "6"
    },
    "817": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2567,
        2602
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "818": {
      "op": "SWAP4"
    },
    "819": {
      "op": "DUP5"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "827": {
      "op": "SHL"
    },
    "828": {
      "op": "SUB"
    },
    "829": {
      "op": "SWAP1"
    },
    "830": {
      "op": "SWAP3"
    },
    "831": {
      "op": "AND"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "834": {
      "op": "DUP5"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "ISZERO"
    },
    "838": {
      "op": "ISZERO"
    },
    "839": {
      "op": "SWAP1"
    },
    "840": {
      "op": "DUP3"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "op": "MSTORE"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "845": {
      "op": "ADD"
    },
    "846": {
      "offset": [
        2567,
        2602
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AF"
    },
    "849": {
      "op": "JUMP"
    },
    "850": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "851": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x35"
    },
    "853": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "854": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C1"
    },
    "857": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "1"
    },
    "858": {
      "offset": [
        2385,
        2415
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "859": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "862": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x368"
    },
    "865": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2385,
        2415
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "866": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "868": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "871": {
      "fn": "ERC20Upgradeable.totalSupply",
      "jump": "i",
      "offset": [
        2385,
        2415
      ],
      "op": "JUMP",
      "path": "6"
    },
    "872": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2385,
        2415
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "873": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7FC"
    },
    "876": {
      "fn": "ERC20Upgradeable.totalSupply",
      "jump": "i",
      "offset": [
        2385,
        2415
      ],
      "op": "JUMP",
      "path": "6"
    },
    "877": {
      "offset": [
        746,
        781
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "878": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        746,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "881": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        746,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x67"
    },
    "883": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        746,
        781
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "884": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        746,
        781
      ],
      "op": "DUP2",
      "path": "6"
    },
    "885": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        746,
        781
      ],
      "op": "JUMP",
      "path": "6"
    },
    "886": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "887": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E2"
    },
    "890": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x384"
    },
    "893": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "894": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "896": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EE6"
    },
    "899": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "900": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "901": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81D"
    },
    "904": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "905": {
      "offset": [
        2689,
        2744
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "906": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "909": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "912": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "913": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F27"
    },
    "918": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        2689,
        2744
      ],
      "op": "JUMP",
      "path": "6"
    },
    "919": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "920": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x75"
    },
    "922": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "924": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "925": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "928": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "929": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "930": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "932": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "933": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "934": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "935": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "936": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2689,
        2744
      ],
      "op": "JUMP",
      "path": "6"
    },
    "937": {
      "offset": [
        1011,
        1039
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "938": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1011,
        1039
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "941": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1011,
        1039
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "943": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1011,
        1039
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "944": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1011,
        1039
      ],
      "op": "DUP2",
      "path": "6"
    },
    "945": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1011,
        1039
      ],
      "op": "JUMP",
      "path": "6"
    },
    "946": {
      "offset": [
        355,
        408
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "947": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        355,
        408
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "950": {
      "offset": [
        396,
        408
      ],
      "op": "PUSH11",
      "path": "6",
      "value": "0x422CA8B0A00A425000000"
    },
    "962": {
      "offset": [
        355,
        408
      ],
      "op": "DUP2",
      "path": "6"
    },
    "963": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        355,
        408
      ],
      "op": "JUMP",
      "path": "6"
    },
    "964": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "965": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "967": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "968": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "MSTORE"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "974": {
      "op": "ADD"
    },
    "975": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "978": {
      "op": "JUMP"
    },
    "979": {
      "offset": [
        414,
        464
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "980": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        414,
        464
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "983": {
      "offset": [
        451,
        464
      ],
      "op": "PUSH11",
      "path": "6",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "995": {
      "offset": [
        414,
        464
      ],
      "op": "DUP2",
      "path": "6"
    },
    "996": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        414,
        464
      ],
      "op": "JUMP",
      "path": "6"
    },
    "997": {
      "offset": [
        2514,
        2561
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "998": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x435"
    },
    "1001": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F3"
    },
    "1004": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1005": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1007": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "1010": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2514,
        2561
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1011": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1012": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "1014": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1016": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1017": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1019": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1020": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1021": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1022": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1024": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1025": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1026": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1027": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1028": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1030": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1031": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "ADD",
      "path": "6"
    },
    "1032": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1033": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1035": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1036": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "ADD",
      "path": "6"
    },
    "1037": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1038": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1040": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1041": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "ADD",
      "path": "6"
    },
    "1042": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1043": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1045": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1046": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "ADD",
      "path": "6"
    },
    "1047": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1048": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1050": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1051": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1052": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "ADD",
      "path": "6"
    },
    "1053": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1054": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1055": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1065": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1066": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "AND",
      "path": "6"
    },
    "1067": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1068": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1069": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1070": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1071": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1072": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1074": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "AND",
      "path": "6"
    },
    "1075": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1076": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1077": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1078": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1080": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1081": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2514,
        2561
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1082": {
      "op": "SWAP7"
    },
    "1083": {
      "op": "DUP8"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "op": "SWAP1"
    },
    "1094": {
      "op": "SWAP6"
    },
    "1095": {
      "op": "AND"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1098": {
      "op": "DUP8"
    },
    "1099": {
      "op": "ADD"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "op": "SWAP4"
    },
    "1102": {
      "op": "DUP6"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "SWAP3"
    },
    "1105": {
      "op": "SWAP1"
    },
    "1106": {
      "op": "SWAP3"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1110": {
      "op": "DUP5"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1115": {
      "op": "DUP4"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "op": "MSTORE"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1120": {
      "op": "AND"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "ADD"
    },
    "1125": {
      "op": "MSTORE"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "offset": [
        2514,
        2561
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AF"
    },
    "1132": {
      "op": "JUMP"
    },
    "1133": {
      "offset": [
        2471,
        2508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1134": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4AF"
    },
    "1137": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47B"
    },
    "1140": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1141": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1143": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "1146": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2471,
        2508
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1147": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1148": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "1150": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1152": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1153": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1155": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1156": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1157": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1158": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1160": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1161": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1162": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1163": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1164": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1166": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1167": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "ADD",
      "path": "6"
    },
    "1168": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1169": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1171": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1172": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "ADD",
      "path": "6"
    },
    "1173": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1174": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1176": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1177": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1178": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "ADD",
      "path": "6"
    },
    "1179": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1180": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1181": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "SUB"
    },
    "1190": {
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1191": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1192": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "AND",
      "path": "6"
    },
    "1193": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1194": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1196": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "AND",
      "path": "6"
    },
    "1197": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1198": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1199": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1200": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1202": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1203": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2471,
        2508
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1204": {
      "op": "SWAP5"
    },
    "1205": {
      "op": "DUP6"
    },
    "1206": {
      "op": "MSTORE"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "op": "SUB"
    },
    "1215": {
      "op": "SWAP1"
    },
    "1216": {
      "op": "SWAP4"
    },
    "1217": {
      "op": "AND"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1220": {
      "op": "DUP6"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "MSTORE"
    },
    "1223": {
      "op": "SWAP2"
    },
    "1224": {
      "op": "DUP4"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "op": "MSTORE"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1229": {
      "op": "AND"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1232": {
      "op": "DUP3"
    },
    "1233": {
      "op": "ADD"
    },
    "1234": {
      "op": "MSTORE"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1237": {
      "op": "ADD"
    },
    "1238": {
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AF"
    },
    "1241": {
      "op": "JUMP"
    },
    "1242": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9935,
        10042
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1243": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        10019,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x6D"
    },
    "1245": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        10019,
        10035
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1246": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9935,
        10042
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1249": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9935,
        10042
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1250": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1251": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E2"
    },
    "1254": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F0"
    },
    "1257": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1258": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1260": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA1"
    },
    "1263": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1264": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1265": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x841"
    },
    "1268": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1269": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1270": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1273": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x503"
    },
    "1276": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1277": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1279": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F4B"
    },
    "1282": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1283": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1284": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x880"
    },
    "1287": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1288": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1289": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "STOP",
      "path": "6"
    },
    "1290": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1291": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E2"
    },
    "1294": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x518"
    },
    "1297": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1298": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1300": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F27"
    },
    "1303": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        10250,
        10439
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1304": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "AND",
      "path": "6"
    },
    "1314": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10314,
        10318
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1316": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1317": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1318": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1319": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10364
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x75"
    },
    "1321": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1323": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1324": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1325": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1326": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1328": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1329": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1330": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1331": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10344,
        10379
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1332": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10422,
        10432
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x66"
    },
    "1334": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10422,
        10432
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1335": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1336": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1337": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1338": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10406
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "1340": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1341": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1342": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1343": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1344": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1345": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10411
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1346": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10418
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1348": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10418
      ],
      "op": "ADD",
      "path": "6"
    },
    "1349": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10418
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1350": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10432
      ],
      "op": "LT",
      "path": "6"
    },
    "1351": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10432
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1352": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10396,
        10432
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1353": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        10250,
        10439
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1354": {
      "offset": [
        2633,
        2683
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1355": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1358": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x558"
    },
    "1361": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1362": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1364": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F27"
    },
    "1367": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        2633,
        2683
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1368": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1369": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x74"
    },
    "1371": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1373": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1374": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1376": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1377": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1378": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1379": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1381": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1382": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1383": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1384": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1385": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2633,
        2683
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1386": {
      "offset": [
        1045,
        1070
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1387": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1045,
        1070
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1390": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1045,
        1070
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "1392": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1045,
        1070
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1393": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1045,
        1070
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1394": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1045,
        1070
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1395": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1396": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x586"
    },
    "1399": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x581"
    },
    "1402": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1403": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1405": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "1408": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1409": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1410": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3F"
    },
    "1413": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1414": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1415": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1417": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1418": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AF"
    },
    "1421": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1422": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1423": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F71"
    },
    "1426": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1427": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10149,
        10244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1428": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10149,
        10244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1431": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10149,
        10244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB42"
    },
    "1434": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        10149,
        10244
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1435": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        9826,
        9929
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1436": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        9904,
        9922
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x6A"
    },
    "1438": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        9904,
        9922
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1439": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        9826,
        9929
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1442": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        9826,
        9929
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1443": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1444": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C1"
    },
    "1447": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B1"
    },
    "1450": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1451": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1453": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F27"
    },
    "1456": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1457": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1464": {
      "op": "SHL"
    },
    "1465": {
      "op": "SUB"
    },
    "1466": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "1",
      "statement": 5
    },
    "1467": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1469": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1470": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1471": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1472": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "1474": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1476": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1477": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1479": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1480": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1481": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1482": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1483": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1484": {
      "offset": [
        470,
        505
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1485": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        470,
        505
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1488": {
      "offset": [
        504,
        505
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1490": {
      "offset": [
        470,
        505
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1491": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        470,
        505
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1492": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2941,
        3476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1493": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2941,
        3476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1496": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2941,
        3476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBAB"
    },
    "1499": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2941,
        3476
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1500": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1501": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5EF"
    },
    "1504": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5EA"
    },
    "1507": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1508": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1510": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FBE"
    },
    "1513": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1514": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1515": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD1A"
    },
    "1518": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1519": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1520": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1522": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1523": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AF"
    },
    "1526": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1527": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1528": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2033"
    },
    "1531": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1532": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1533": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1536": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60A"
    },
    "1539": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1540": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1542": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "1545": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        4491,
        5324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1546": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1547": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1105"
    },
    "1550": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        4491,
        5324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1551": {
      "offset": [
        972,
        1005
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1552": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        972,
        1005
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1555": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        972,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "1557": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        972,
        1005
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1558": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        972,
        1005
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1559": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        972,
        1005
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1560": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1561": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A2"
    },
    "1564": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D7"
    },
    "1567": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1568": {
      "offset": [
        567,
        603
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1569": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        567,
        603
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1572": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        567,
        603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "1574": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        567,
        603
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1575": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        567,
        603
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1576": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        567,
        603
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1577": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1578": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E2"
    },
    "1581": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x637"
    },
    "1584": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1585": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1587": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA1"
    },
    "1590": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1591": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1592": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E6"
    },
    "1595": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1596": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1597": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E2"
    },
    "1600": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64A"
    },
    "1603": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1604": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1606": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA1"
    },
    "1609": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1610": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1611": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1378"
    },
    "1614": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1615": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1616": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1619": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x65D"
    },
    "1622": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1623": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1625": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "1628": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        3903,
        4366
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1629": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1630": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1386"
    },
    "1633": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        3903,
        4366
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1634": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        9727,
        9820
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1635": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        9800,
        9813
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x6B"
    },
    "1637": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        9800,
        9813
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1638": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        9727,
        9820
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1641": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        9727,
        9820
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1642": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        10048,
        10143
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1643": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        10124,
        10136
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x65"
    },
    "1645": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        10124,
        10136
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1646": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        10048,
        10143
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1649": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        10048,
        10143
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1650": {
      "offset": [
        1113,
        1141
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1651": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        1113,
        1141
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1654": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        1113,
        1141
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "1656": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        1113,
        1141
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1657": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        1113,
        1141
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1658": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        1113,
        1141
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1659": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1660": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1663": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x689"
    },
    "1666": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1667": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1669": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F27"
    },
    "1672": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        3482,
        3808
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1673": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1674": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1480"
    },
    "1677": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        3482,
        3808
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1678": {
      "offset": [
        1076,
        1107
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1679": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        1076,
        1107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1682": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        1076,
        1107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6D"
    },
    "1684": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        1076,
        1107
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1685": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        1076,
        1107
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1686": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        1076,
        1107
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1687": {
      "offset": [
        660,
        696
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1688": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        660,
        696
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "1691": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "1693": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        660,
        696
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1694": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        660,
        696
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1695": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        660,
        696
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1696": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1697": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1700": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6AE"
    },
    "1703": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1704": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1706": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECD"
    },
    "1709": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7031,
        7206
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1710": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1711": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1505"
    },
    "1714": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7031,
        7206
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1715": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1716": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C1"
    },
    "1719": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C1"
    },
    "1722": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1723": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1725": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x206B"
    },
    "1728": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1729": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 8
    },
    "1739": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1740": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "1741": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1743": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1744": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1745": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1746": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "1748": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1750": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1751": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1752": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1753": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1755": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1756": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1757": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1758": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1759": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1760": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1761": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "1762": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1763": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1764": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1765": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1766": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1767": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1768": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1769": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1770": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1771": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1772": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1773": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1776": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FA"
    },
    "1779": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1780": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1782": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F4B"
    },
    "1785": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7293,
        7770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1786": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1787": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1578"
    },
    "1790": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7293,
        7770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1791": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1792": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x508"
    },
    "1795": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70D"
    },
    "1798": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1799": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1801": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EA1"
    },
    "1804": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        9004,
        9275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1805": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1806": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16D8"
    },
    "1809": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        9004,
        9275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1810": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1811": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5EF"
    },
    "1814": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x720"
    },
    "1817": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1818": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1820": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x210F"
    },
    "1823": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        6572,
        7025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1824": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1825": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1756"
    },
    "1828": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        6572,
        7025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1829": {
      "offset": [
        883,
        922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1830": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "1832": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1833": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x738"
    },
    "1836": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "op": "SUB"
    },
    "1845": {
      "offset": [
        883,
        922
      ],
      "op": "AND",
      "path": "6"
    },
    "1846": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1847": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1848": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1849": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1851": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        883,
        922
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "op": "SWAP1"
    },
    "1861": {
      "op": "SWAP2"
    },
    "1862": {
      "op": "AND"
    },
    "1863": {
      "op": "DUP2"
    },
    "1864": {
      "op": "MSTORE"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "offset": [
        883,
        922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AF"
    },
    "1871": {
      "op": "JUMP"
    },
    "1872": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1873": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1875": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x36"
    },
    "1877": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1878": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1879": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75F"
    },
    "1882": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1883": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21BA"
    },
    "1886": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1887": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1888": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1889": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1891": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1892": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1894": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1895": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1896": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "1897": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "1898": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1900": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1901": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1903": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1904": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1905": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1906": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1907": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1909": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1910": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1911": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1912": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1913": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1914": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1915": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1916": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1917": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1919": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1920": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1921": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1922": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1923": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78B"
    },
    "1926": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1927": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21BA"
    },
    "1930": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1931": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1932": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1933": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1934": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D8"
    },
    "1937": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1938": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1939": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1941": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "1"
    },
    "1942": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7AD"
    },
    "1945": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1946": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1949": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1950": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1951": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1952": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "1953": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "1954": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1955": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1956": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1957": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1959": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1960": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1961": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D8"
    },
    "1964": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1965": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1966": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1967": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1968": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1969": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1970": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1972": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1973": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1975": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1977": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1978": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1979": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1980": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1981": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1982": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1983": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1984": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1985": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1987": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1988": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1989": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1991": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1992": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1993": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1994": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "1"
    },
    "1995": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BB"
    },
    "1998": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1999": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2000": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2001": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "1"
    },
    "2002": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2004": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "1"
    },
    "2005": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2006": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2007": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2008": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2009": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2010": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2011": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2012": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2013": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2014": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2015": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2016": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2017": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2018": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2019": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2021": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 10
    },
    "2022": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x7F0"
    },
    "2025": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2026": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2027": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2028": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B9"
    },
    "2031": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2032": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2033": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x1"
    },
    "2035": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2036": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "2037": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "2038": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2039": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2040": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2041": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "2042": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "2043": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2044": {
      "offset": [
        2385,
        2415
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2045": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "2047": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2048": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2049": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2050": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2051": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "LT",
      "path": "6"
    },
    "2052": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80C"
    },
    "2055": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2056": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2058": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2059": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2060": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2061": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2063": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2064": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2065": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2066": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2068": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2069": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2070": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2071": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "ADD",
      "path": "6"
    },
    "2072": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2073": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2385,
        2415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "offset": [
        2385,
        2415
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2076": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        2385,
        2415
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2077": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2078": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2080": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2081": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x82B"
    },
    "2084": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2085": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2086": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2087": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19DD"
    },
    "2090": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2091": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 14,
      "value": "0x836"
    },
    "2095": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2096": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2097": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2098": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6F"
    },
    "2101": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2102": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x1"
    },
    "2106": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2107": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2108": {
      "op": "POP"
    },
    "2109": {
      "op": "POP"
    },
    "2110": {
      "op": "POP"
    },
    "2111": {
      "op": "POP"
    },
    "2112": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2113": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2114": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2115": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2117": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 16
    },
    "2118": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2119": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2120": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "2122": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2124": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2125": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2126": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2127": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2129": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2130": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2131": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2141": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "1"
    },
    "2142": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2143": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2144": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2145": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2146": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2147": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2148": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2149": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2150": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2151": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2152": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2153": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F0"
    },
    "2156": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2157": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2158": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2159": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2160": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2161": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87B"
    },
    "2164": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2165": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2166": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2167": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x220A"
    },
    "2170": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2171": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2172": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B9"
    },
    "2175": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2176": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2177": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7875,
        7885
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2178": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7832,
        7851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2180": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2181": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2182": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2183": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7874
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x75"
    },
    "2185": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2187": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2188": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2189": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2190": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2192": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2193": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2194": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2195": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7854,
        7886
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2196": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2197": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2198": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2199": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "2201": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2202": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2203": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2204": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2205": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2206": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7926,
        7949
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2207": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7978,
        7994
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0x3"
    },
    "2209": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7978,
        7994
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2210": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7978,
        7994
      ],
      "op": "ADD",
      "path": "6"
    },
    "2211": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7978,
        7994
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2212": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7968,
        7994
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2217": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7968,
        7994
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2218": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7968,
        7994
      ],
      "op": "AND",
      "path": "6"
    },
    "2219": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7968,
        7994
      ],
      "op": "GT",
      "path": "6"
    },
    "2220": {
      "branch": 101,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7968,
        7994
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2221": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "2224": {
      "branch": 101,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2225": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2227": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2236": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2239": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2241": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2242": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "ADD",
      "path": "6"
    },
    "2243": {
      "op": "MSTORE"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2248": {
      "op": "DUP3"
    },
    "2249": {
      "op": "ADD"
    },
    "2250": {
      "op": "MSTORE"
    },
    "2251": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2286": {
      "op": "DUP3"
    },
    "2287": {
      "op": "ADD"
    },
    "2288": {
      "op": "MSTORE"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2291": {
      "op": "ADD"
    },
    "2292": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2293": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2295": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2296": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2297": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2298": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "SUB",
      "path": "6"
    },
    "2299": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2300": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "2301": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7960,
        8029
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2302": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8056,
        8057
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0x0"
    },
    "2304": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8047,
        8053
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2305": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8047,
        8057
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2310": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8047,
        8057
      ],
      "op": "AND",
      "path": "6"
    },
    "2311": {
      "branch": 102,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8047,
        8057
      ],
      "op": "GT",
      "path": "6"
    },
    "2312": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x923"
    },
    "2315": {
      "branch": 102,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2316": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2318": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2319": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2325": {
      "op": "SHL"
    },
    "2326": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2327": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2328": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2330": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "ADD",
      "path": "6"
    },
    "2331": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "2334": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2335": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x221D"
    },
    "2338": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8039,
        8095
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2339": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8039,
        8095
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2340": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8181,
        8190
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2341": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8181,
        8201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2343": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8181,
        8201
      ],
      "op": "ADD",
      "path": "6"
    },
    "2344": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8181,
        8201
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2345": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8205,
        8206
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2347": {
      "branch": 103,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8181,
        8206
      ],
      "op": "SUB",
      "path": "6"
    },
    "2348": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8177,
        8872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97E"
    },
    "2351": {
      "branch": 103,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8177,
        8872
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2352": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8263,
        8275
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 19,
      "value": "0x67"
    },
    "2354": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8263,
        8275
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2355": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8245,
        8275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93C"
    },
    "2358": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8245,
        8275
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2359": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8245,
        8260
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "2360": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8245,
        8275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x220A"
    },
    "2363": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8245,
        8275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2364": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8245,
        8275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2365": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8222,
        8242
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2367": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8222,
        8242
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2368": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8222,
        8242
      ],
      "op": "ADD",
      "path": "6"
    },
    "2369": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8222,
        8275
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2370": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8222,
        8275
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2371": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8222,
        8275
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2372": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x40"
    },
    "2374": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2375": {
      "op": "SWAP1"
    },
    "2376": {
      "op": "DUP2"
    },
    "2377": {
      "op": "MSTORE"
    },
    "2378": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8337,
        8347
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2379": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8337,
        8347
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2380": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "2413": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2418": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2420": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2421": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2422": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2423": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "SUB",
      "path": "6"
    },
    "2424": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2425": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8321,
        8370
      ],
      "op": "LOG2",
      "path": "6"
    },
    "2426": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7822,
        8878
      ],
      "op": "POP",
      "path": "6"
    },
    "2427": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7822,
        8878
      ],
      "op": "POP",
      "path": "6"
    },
    "2428": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "POP",
      "path": "6"
    },
    "2429": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2430": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8177,
        8872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2431": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8550,
        8559
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 21
    },
    "2432": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8550,
        8570
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2434": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8550,
        8570
      ],
      "op": "ADD",
      "path": "6"
    },
    "2435": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8550,
        8570
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2436": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8531,
        8546
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "2437": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8531,
        8570
      ],
      "op": "LT",
      "path": "6"
    },
    "2438": {
      "branch": 104,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8531,
        8570
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2439": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D2"
    },
    "2442": {
      "branch": 104,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2443": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2445": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2452": {
      "op": "SHL"
    },
    "2453": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2454": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2457": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2459": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2460": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "ADD",
      "path": "6"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2466": {
      "op": "DUP3"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2504": {
      "op": "DUP3"
    },
    "2505": {
      "op": "ADD"
    },
    "2506": {
      "op": "MSTORE"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2509": {
      "op": "ADD"
    },
    "2510": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "2513": {
      "op": "JUMP"
    },
    "2514": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8506,
        8628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2515": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8663,
        8669
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 22
    },
    "2516": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2521": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "AND",
      "path": "6"
    },
    "2522": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8652
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2523": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2525": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8659
      ],
      "op": "ADD",
      "path": "6"
    },
    "2526": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2528": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2529": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2530": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2531": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9EC"
    },
    "2534": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2535": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2536": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x225E"
    },
    "2539": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8643,
        8669
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2540": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2541": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2542": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2543": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8643,
        8669
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2544": {
      "op": "POP"
    },
    "2545": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8683,
        8708
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 23,
      "value": "0xA02"
    },
    "2548": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8683,
        8708
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8689,
        8699
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2551": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8683,
        8708
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2556": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8683,
        8708
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2557": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8683,
        8708
      ],
      "op": "AND",
      "path": "6"
    },
    "2558": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8683,
        8688
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C3D"
    },
    "2561": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8683,
        8708
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2562": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8683,
        8708
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2563": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8775,
        8809
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x40"
    },
    "2565": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8775,
        8809
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2566": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2571": {
      "op": "DUP5"
    },
    "2572": {
      "op": "AND"
    },
    "2573": {
      "op": "DUP2"
    },
    "2574": {
      "op": "MSTORE"
    },
    "2575": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8790,
        8800
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2576": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8790,
        8800
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2577": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8775,
        8809
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "2610": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8775,
        8809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2613": {
      "op": "ADD"
    },
    "2614": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8775,
        8809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x971"
    },
    "2617": {
      "op": "JUMP"
    },
    "2618": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8177,
        8872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2619": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7822,
        8878
      ],
      "op": "POP",
      "path": "6"
    },
    "2620": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7822,
        8878
      ],
      "op": "POP",
      "path": "6"
    },
    "2621": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "POP",
      "path": "6"
    },
    "2622": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2623": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2624": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9430,
        9446
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2626": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9474,
        9484
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 25,
      "value": "0x6C"
    },
    "2628": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9474,
        9484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2629": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9466,
        9471
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2630": {
      "branch": 105,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9466,
        9484
      ],
      "op": "LT",
      "path": "6"
    },
    "2631": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA83"
    },
    "2634": {
      "branch": 105,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2635": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2637": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2646": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2649": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2651": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2652": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "ADD",
      "path": "6"
    },
    "2653": {
      "op": "MSTORE"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2658": {
      "op": "DUP3"
    },
    "2659": {
      "op": "ADD"
    },
    "2660": {
      "op": "MSTORE"
    },
    "2661": {
      "op": "PUSH14",
      "value": "0x125B9D985B1A59081A9BD8881251"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2686": {
      "op": "ADD"
    },
    "2687": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "2690": {
      "op": "JUMP"
    },
    "2691": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9458,
        9503
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2692": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2694": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2695": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2696": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2697": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "2699": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2701": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2702": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2704": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2705": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9528
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2706": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9531
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2707": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9540
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2708": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9540
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2709": {
      "branch": 106,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9517,
        9540
      ],
      "op": "SUB",
      "path": "6"
    },
    "2710": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9513,
        9715
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB09"
    },
    "2713": {
      "branch": 106,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9513,
        9715
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2714": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9586
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2716": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2717": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2718": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2719": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9593
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "2721": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2723": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2724": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2725": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2726": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2728": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2729": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2730": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9600
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2731": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2733": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9615
      ],
      "op": "ADD",
      "path": "6"
    },
    "2734": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2735": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2736": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2737": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2738": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2739": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2740": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "MUL",
      "path": "6"
    },
    "2741": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2742": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "ADD",
      "path": "6"
    },
    "2743": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2744": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "ADD",
      "path": "6"
    },
    "2745": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2746": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2747": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2748": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2749": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2750": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2751": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2752": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2753": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2754": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9615
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2755": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2756": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2757": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "ADD",
      "path": "6"
    },
    "2758": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9589,
        9615
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2759": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2760": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2761": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2762": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAFC"
    },
    "2765": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2766": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2768": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "MUL",
      "path": "6"
    },
    "2769": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2770": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "ADD",
      "path": "6"
    },
    "2771": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2772": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2773": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2775": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2776": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2778": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2780": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2781": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2782": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2783": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2784": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "op": "SUB"
    },
    "2793": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "AND",
      "path": "6"
    },
    "2794": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2795": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2796": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2798": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2799": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2800": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "ADD",
      "path": "6"
    },
    "2801": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2802": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2804": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "ADD",
      "path": "6"
    },
    "2805": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2806": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2807": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "GT",
      "path": "6"
    },
    "2808": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADE"
    },
    "2811": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2812": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2813": {
      "op": "POP"
    },
    "2814": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2815": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9556,
        9615
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2816": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9352,
        9721
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2817": {
      "op": "POP"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "op": "POP"
    },
    "2820": {
      "op": "POP"
    },
    "2821": {
      "op": "POP"
    },
    "2822": {
      "op": "POP"
    },
    "2823": {
      "op": "POP"
    },
    "2824": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "o",
      "offset": [
        9352,
        9721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2825": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9513,
        9715
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2826": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x40"
    },
    "2828": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2837": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2840": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2842": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2843": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "ADD",
      "path": "6"
    },
    "2844": {
      "op": "MSTORE"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2849": {
      "op": "DUP3"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "MSTORE"
    },
    "2852": {
      "op": "PUSH14",
      "value": "0x4A6F62206E6F7420666F756E6421"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2869": {
      "op": "SHL"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2872": {
      "op": "DUP3"
    },
    "2873": {
      "op": "ADD"
    },
    "2874": {
      "op": "MSTORE"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        9680,
        9704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "2881": {
      "op": "JUMP"
    },
    "2882": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10149,
        10244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2883": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10193,
        10200
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2885": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10223
      ],
      "op": "ADDRESS",
      "path": "6",
      "statement": 27
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10235
      ],
      "op": "AND",
      "path": "6"
    },
    "2895": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10235
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "2900": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2902": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2903": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2904": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2909": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "AND",
      "path": "6"
    },
    "2910": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2912": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "SHL",
      "path": "6"
    },
    "2913": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2914": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2915": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2917": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "ADD",
      "path": "6"
    },
    "2918": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2920": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2922": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2923": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2924": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2925": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "SUB",
      "path": "6"
    },
    "2926": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2927": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2928": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "GAS",
      "path": "6"
    },
    "2929": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2930": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2931": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2932": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2933": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB82"
    },
    "2936": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2937": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2938": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2940": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2941": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2942": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2943": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2945": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2946": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2947": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "POP",
      "path": "6"
    },
    "2948": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "POP",
      "path": "6"
    },
    "2949": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "POP",
      "path": "6"
    },
    "2950": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "POP",
      "path": "6"
    },
    "2951": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2953": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2954": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2955": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2957": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "NOT",
      "path": "6"
    },
    "2958": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2960": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2961": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "ADD",
      "path": "6"
    },
    "2962": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "AND",
      "path": "6"
    },
    "2963": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2964": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "ADD",
      "path": "6"
    },
    "2965": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2966": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2968": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2969": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "POP",
      "path": "6"
    },
    "2970": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2971": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "ADD",
      "path": "6"
    },
    "2972": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2973": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA6"
    },
    "2976": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2977": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2978": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2271"
    },
    "2981": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        10219,
        10237
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2982": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10219,
        10237
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2983": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2984": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10212,
        10237
      ],
      "op": "POP",
      "path": "6"
    },
    "2985": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        10149,
        10244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2986": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "o",
      "offset": [
        10149,
        10244
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2987": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2941,
        3476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2988": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2990": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2991": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2994": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2995": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "0"
    },
    "2996": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2998": {
      "branch": 128,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "0"
    },
    "2999": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC6"
    },
    "3002": {
      "branch": 128,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3003": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3005": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3006": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3008": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "0"
    },
    "3009": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3010": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCA"
    },
    "3013": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3014": {
      "branch": 129,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3015": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 28
    },
    "3016": {
      "op": "EXTCODESIZE"
    },
    "3017": {
      "op": "ISZERO"
    },
    "3018": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3019": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2D"
    },
    "3022": {
      "branch": 129,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3023": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3025": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3032": {
      "op": "SHL"
    },
    "3033": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3034": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3037": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3039": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3040": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "0"
    },
    "3041": {
      "op": "MSTORE"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3046": {
      "op": "DUP3"
    },
    "3047": {
      "op": "ADD"
    },
    "3048": {
      "op": "MSTORE"
    },
    "3049": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3084": {
      "op": "DUP3"
    },
    "3085": {
      "op": "ADD"
    },
    "3086": {
      "op": "MSTORE"
    },
    "3087": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3107": {
      "op": "DUP3"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F4"
    },
    "3116": {
      "op": "JUMP"
    },
    "3117": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3118": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3120": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3121": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3124": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3125": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "0"
    },
    "3126": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3128": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "0"
    },
    "3129": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3130": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3131": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3132": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4F"
    },
    "3135": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3136": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3138": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3139": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3140": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3143": {
      "op": "NOT"
    },
    "3144": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "0"
    },
    "3145": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "3148": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "0"
    },
    "3149": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3150": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3151": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3152": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 29,
      "value": "0xC96"
    },
    "3155": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3157": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3158": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3159": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3161": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "ADD",
      "path": "6"
    },
    "3162": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3164": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3165": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3166": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3168": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3169": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3170": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3172": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "ADD",
      "path": "6"
    },
    "3173": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3188": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3189": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "POP",
      "path": "6"
    },
    "3190": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3192": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3193": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3194": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3196": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "ADD",
      "path": "6"
    },
    "3197": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3199": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3200": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3201": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3203": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3204": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3205": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3207": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "ADD",
      "path": "6"
    },
    "3208": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3214": {
      "op": "SHL"
    },
    "3215": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3216": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3217": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "POP",
      "path": "6"
    },
    "3218": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3004
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D1C"
    },
    "3221": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2992,
        3025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3222": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2992,
        3025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3223": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3125,
        3126
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 30,
      "value": "0x1"
    },
    "3225": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3109,
        3122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "3227": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3109,
        3126
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3228": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3109,
        3126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3229": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3109,
        3126
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3230": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3136,
        3146
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 31,
      "value": "0x6C"
    },
    "3232": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3136,
        3150
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3233": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3136,
        3150
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3234": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3136,
        3150
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3235": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3160,
        3178
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 32,
      "value": "0x6A"
    },
    "3237": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3238": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3239": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3160,
        3182
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3240": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3192,
        3205
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 33,
      "value": "0x6E"
    },
    "3242": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3192,
        3209
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3243": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3235,
        3236
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 34,
      "value": "0x3"
    },
    "3245": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3219,
        3232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "3247": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3219,
        3236
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3248": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x40"
    },
    "3250": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3251": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3252": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3276,
        3281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1388"
    },
    "3255": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3256": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3257": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3258": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x27120"
    },
    "3262": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3263": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "ADD",
      "path": "6"
    },
    "3264": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3265": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3266": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3267": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3268": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3270": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3271": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "ADD",
      "path": "6"
    },
    "3272": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x27100"
    },
    "3276": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3277": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "3278": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3279": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3262,
        3282
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "3280": {
      "op": "POP"
    },
    "3281": {
      "op": "POP"
    },
    "3282": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3283": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3284": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE4"
    },
    "3287": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3288": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3259
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "3290": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3259
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3294": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "ADD",
      "path": "6"
    },
    "3295": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3296": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D88"
    },
    "3299": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3246,
        3282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3300": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3246,
        3282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3307,
        3313
      ],
      "op": "PUSH9",
      "path": "6",
      "statement": 36,
      "value": "0x6F05B59D3B2000000"
    },
    "3312": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3292,
        3304
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "3314": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3292,
        3313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3315": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3387,
        3395
      ],
      "op": "PUSH9",
      "path": "6",
      "statement": 37,
      "value": "0x3635C9ADC5DEA00000"
    },
    "3325": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3374,
        3384
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "3327": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3374,
        3395
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3328": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3464,
        3469
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0xC4E0"
    },
    "3331": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3449,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x67"
    },
    "3333": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3449,
        3469
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3334": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3335": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3336": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD17"
    },
    "3339": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3340": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3342": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3343": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3344": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3347": {
      "op": "NOT"
    },
    "3348": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "0"
    },
    "3349": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3350": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3351": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3352": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "0"
    },
    "3353": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        2941,
        3476
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3354": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3355": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5535,
        5545
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3356": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5505,
        5516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3358": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3359": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3360": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3361": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x74"
    },
    "3363": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3365": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3366": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3368": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3369": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3370": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5519,
        5546
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3371": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5464,
        5493
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3373": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5464,
        5493
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3374": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5565,
        5573
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 39
    },
    "3375": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5565,
        5573
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3376": {
      "branch": 107,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5565,
        5573
      ],
      "op": "SUB",
      "path": "6"
    },
    "3377": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD73"
    },
    "3380": {
      "branch": 107,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3381": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3383": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3390": {
      "op": "SHL"
    },
    "3391": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3392": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3395": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3397": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3398": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "ADD",
      "path": "6"
    },
    "3399": {
      "op": "MSTORE"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3404": {
      "op": "DUP3"
    },
    "3405": {
      "op": "ADD"
    },
    "3406": {
      "op": "MSTORE"
    },
    "3407": {
      "op": "PUSH20",
      "value": "0x2AB9B2B9103737BA103932B3B4B9BA32B932B217"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3433": {
      "op": "DUP3"
    },
    "3434": {
      "op": "ADD"
    },
    "3435": {
      "op": "MSTORE"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3438": {
      "op": "ADD"
    },
    "3439": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "3442": {
      "op": "JUMP"
    },
    "3443": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5557,
        5598
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3444": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5633,
        5634
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 40,
      "value": "0x0"
    },
    "3446": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5627
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3447": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5627
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3448": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5628,
        5629
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3450": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3451": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3452": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "LT",
      "path": "6"
    },
    "3453": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD88"
    },
    "3456": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3457": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD88"
    },
    "3460": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x228A"
    },
    "3463": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5616,
        5630
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3464": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3465": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3466": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "POP",
      "path": "6"
    },
    "3467": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3469": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "MUL",
      "path": "6"
    },
    "3470": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "ADD",
      "path": "6"
    },
    "3471": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5630
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "3472": {
      "branch": 108,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5616,
        5634
      ],
      "op": "GT",
      "path": "6"
    },
    "3473": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDDC"
    },
    "3476": {
      "branch": 108,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3477": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3479": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3488": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3491": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3493": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3494": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "ADD",
      "path": "6"
    },
    "3495": {
      "op": "MSTORE"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3500": {
      "op": "DUP3"
    },
    "3501": {
      "op": "ADD"
    },
    "3502": {
      "op": "MSTORE"
    },
    "3503": {
      "op": "PUSH32",
      "value": "0x4361706163697479206D7573742062652067726561746572207A65726F2E0000"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3538": {
      "op": "DUP3"
    },
    "3539": {
      "op": "ADD"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3543": {
      "op": "ADD"
    },
    "3544": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "3547": {
      "op": "JUMP"
    },
    "3548": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5608,
        5669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3549": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5700,
        5724
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 41,
      "value": "0x69"
    },
    "3551": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5700,
        5724
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "op": "SUB"
    },
    "3560": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5700,
        5724
      ],
      "op": "AND",
      "path": "6"
    },
    "3561": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE34"
    },
    "3564": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3565": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3567": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3574": {
      "op": "SHL"
    },
    "3575": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3576": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3579": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3581": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3582": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "ADD",
      "path": "6"
    },
    "3583": {
      "op": "MSTORE"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3588": {
      "op": "DUP3"
    },
    "3589": {
      "op": "ADD"
    },
    "3590": {
      "op": "MSTORE"
    },
    "3591": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220636F6E7472616374206E6F7420736574210000000000"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3626": {
      "op": "DUP3"
    },
    "3627": {
      "op": "ADD"
    },
    "3628": {
      "op": "MSTORE"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "3635": {
      "op": "JUMP"
    },
    "3636": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5679,
        5791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3637": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5863
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "3639": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5863
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3640": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3642": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3643": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3644": {
      "op": "PUSH4",
      "value": "0x2909069B"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3653": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3654": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3655": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3656": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5802,
        5834
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3658": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5802,
        5834
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3665": {
      "op": "SHL"
    },
    "3666": {
      "op": "SUB"
    },
    "3667": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5863
      ],
      "op": "AND",
      "path": "6"
    },
    "3668": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5863
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3669": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5904
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA4241A6C"
    },
    "3674": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5904
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3675": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3677": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3678": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3679": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "ADD",
      "path": "6"
    },
    "3680": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3681": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5802,
        5834
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3682": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5802,
        5834
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3683": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3684": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3685": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3686": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3687": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SUB",
      "path": "6"
    },
    "3688": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "ADD",
      "path": "6"
    },
    "3689": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3690": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5863
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3691": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "GAS",
      "path": "6"
    },
    "3692": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "3693": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3694": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3695": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3696": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE7D"
    },
    "3699": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3700": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3701": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3703": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3704": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3705": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3706": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3708": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3709": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3710": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "POP",
      "path": "6"
    },
    "3711": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "POP",
      "path": "6"
    },
    "3712": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "POP",
      "path": "6"
    },
    "3713": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "POP",
      "path": "6"
    },
    "3714": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3716": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3717": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3718": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3720": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3721": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3722": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3724": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3725": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3726": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3727": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "ADD",
      "path": "6"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3730": {
      "op": "NOT"
    },
    "3731": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "AND",
      "path": "6"
    },
    "3732": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3733": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "ADD",
      "path": "6"
    },
    "3734": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3736": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3737": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA5"
    },
    "3740": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3741": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3742": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3743": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "ADD",
      "path": "6"
    },
    "3744": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3745": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22A0"
    },
    "3748": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5837,
        5906
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3749": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5837,
        5906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3750": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5802,
        5906
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3751": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5802,
        5906
      ],
      "op": "POP",
      "path": "6"
    },
    "3752": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5916,
        5946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3754": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5963,
        5978
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3755": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5963,
        5985
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3756": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3765": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3766": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "GT",
      "path": "6"
    },
    "3767": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3768": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC3"
    },
    "3771": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3772": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC3"
    },
    "3775": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20A4"
    },
    "3778": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        5949,
        5986
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3779": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3780": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3782": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3783": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3784": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3785": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3786": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3787": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3788": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3790": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "MUL",
      "path": "6"
    },
    "3791": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3793": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "ADD",
      "path": "6"
    },
    "3794": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3795": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "ADD",
      "path": "6"
    },
    "3796": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3798": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3799": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3800": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3801": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEEC"
    },
    "3804": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3805": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3806": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3808": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "ADD",
      "path": "6"
    },
    "3809": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3811": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3812": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "MUL",
      "path": "6"
    },
    "3813": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3814": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "3815": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3816": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "3817": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "ADD",
      "path": "6"
    },
    "3818": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3821": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5949,
        5986
      ],
      "op": "POP",
      "path": "6"
    },
    "3822": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5916,
        5986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3823": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5916,
        5986
      ],
      "op": "POP",
      "path": "6"
    },
    "3824": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6002,
        6011
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3826": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5997,
        6134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3827": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6021,
        6036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3828": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6021,
        6043
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3829": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6017,
        6018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3830": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6017,
        6043
      ],
      "op": "LT",
      "path": "6"
    },
    "3831": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5997,
        6134
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3832": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5997,
        6134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5F"
    },
    "3835": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5997,
        6134
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3836": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6103
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 42,
      "value": "0x75"
    },
    "3838": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3840": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6119
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3841": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6120,
        6121
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3842": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3843": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3844": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3845": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "LT",
      "path": "6"
    },
    "3846": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "3849": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3850": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "3853": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x228A"
    },
    "3856": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6104,
        6122
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3857": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3858": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3860": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "MUL",
      "path": "6"
    },
    "3861": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3863": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "ADD",
      "path": "6"
    },
    "3864": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "ADD",
      "path": "6"
    },
    "3865": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6104,
        6122
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3872": {
      "op": "SHL"
    },
    "3873": {
      "op": "SUB"
    },
    "3874": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "AND",
      "path": "6"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3881": {
      "op": "SHL"
    },
    "3882": {
      "op": "SUB"
    },
    "3883": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "AND",
      "path": "6"
    },
    "3884": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3885": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3886": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3888": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "ADD",
      "path": "6"
    },
    "3889": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3890": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3891": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3892": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3894": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "ADD",
      "path": "6"
    },
    "3895": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3897": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3898": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6083,
        6123
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3899": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6077
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3900": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6078,
        6079
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3901": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3902": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3903": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3904": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "LT",
      "path": "6"
    },
    "3905": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4C"
    },
    "3908": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3909": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4C"
    },
    "3912": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x228A"
    },
    "3915": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6064,
        6080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3916": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3917": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3919": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3920": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3921": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "MUL",
      "path": "6"
    },
    "3922": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3923": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3924": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3925": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "ADD",
      "path": "6"
    },
    "3926": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6080
      ],
      "op": "ADD",
      "path": "6"
    },
    "3927": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6064,
        6123
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3928": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6045,
        6048
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x1"
    },
    "3930": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6045,
        6048
      ],
      "op": "ADD",
      "path": "6"
    },
    "3931": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5997,
        6134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEF2"
    },
    "3934": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5997,
        6134
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3935": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5997,
        6134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 44,
      "value": "0x40"
    },
    "3939": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3940": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3941": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC0"
    },
    "3943": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3944": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "3945": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3946": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3947": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6230,
        6240
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "3949": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6230,
        6240
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3950": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3951": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3952": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6262,
        6272
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3953": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3955": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3956": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "3957": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3958": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3960": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "3961": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3962": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3963": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3964": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3966": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3967": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "3968": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6354,
        6365
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3969": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3978": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3979": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "GT",
      "path": "6"
    },
    "3980": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3981": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF98"
    },
    "3984": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3985": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF98"
    },
    "3988": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20A4"
    },
    "3991": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6340,
        6373
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3992": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3993": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3995": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3996": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3997": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3998": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3999": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4000": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4001": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4003": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "MUL",
      "path": "6"
    },
    "4004": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4006": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "ADD",
      "path": "6"
    },
    "4007": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4008": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "ADD",
      "path": "6"
    },
    "4009": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4011": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4012": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4013": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4014": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFC1"
    },
    "4017": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4018": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4019": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4021": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "ADD",
      "path": "6"
    },
    "4022": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4024": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4025": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "MUL",
      "path": "6"
    },
    "4026": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4027": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "4028": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4029": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "4030": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "ADD",
      "path": "6"
    },
    "4031": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4034": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6340,
        6373
      ],
      "op": "POP",
      "path": "6"
    },
    "4035": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4036": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4037": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4039": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4040": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6399,
        6410
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4041": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6399,
        6410
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4042": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4043": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4044": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4046": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MUL",
      "path": "6"
    },
    "4047": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4049": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4050": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4052": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4053": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4054": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4055": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4056": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4058": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4059": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4060": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4061": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4062": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4063": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4064": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4065": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4066": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4067": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4069": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4070": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4071": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4072": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4074": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MUL",
      "path": "6"
    },
    "4075": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4076": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4077": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4078": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "4079": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4081": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4082": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4083": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4084": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4085": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4088": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4089": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6434,
        6438
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4094": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4096": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4097": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4098": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4099": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4100": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4101": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6208,
        6449
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4102": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6194,
        6204
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "4104": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6194,
        6204
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4105": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4106": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4107": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6193
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "4109": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4110": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4111": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4113": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4114": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4115": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4116": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4117": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4118": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4119": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4120": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4121": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4122": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4123": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4124": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4125": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4126": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4127": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4128": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4129": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4136": {
      "op": "SHL"
    },
    "4137": {
      "op": "SUB"
    },
    "4138": {
      "op": "NOT"
    },
    "4139": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "AND",
      "path": "6"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4146": {
      "op": "SHL"
    },
    "4147": {
      "op": "SUB"
    },
    "4148": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4149": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4150": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "AND",
      "path": "6"
    },
    "4151": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4152": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4153": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4154": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "OR",
      "path": "6"
    },
    "4155": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4156": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4157": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4158": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4159": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4160": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4161": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4162": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4163": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4164": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4165": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6205
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4166": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1057"
    },
    "4169": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4170": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "4172": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4173": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4174": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4175": {
      "op": "POP"
    },
    "4176": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4177": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4178": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4179": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD3"
    },
    "4182": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6189,
        6449
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4183": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4184": {
      "op": "POP"
    },
    "4185": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4187": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4188": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4189": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4190": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4191": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4192": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1073"
    },
    "4195": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4196": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4198": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4199": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4200": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4201": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4203": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4204": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4205": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4206": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4207": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD3"
    },
    "4210": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6189,
        6449
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4211": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "4215": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4216": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4217": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4218": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4219": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4220": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x108F"
    },
    "4223": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4224": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4226": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4227": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4228": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4229": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4231": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4232": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4233": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4234": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4235": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D88"
    },
    "4238": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6189,
        6449
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4239": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "4243": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4244": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4245": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4246": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4247": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4248": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "4250": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4251": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4252": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ADD",
      "path": "6"
    },
    "4253": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4254": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4257": {
      "op": "NOT"
    },
    "4258": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "AND",
      "path": "6"
    },
    "4259": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4260": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4261": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4262": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4263": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4264": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4265": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "OR",
      "path": "6"
    },
    "4266": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4267": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6189,
        6449
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4268": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6478,
        6488
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 45,
      "value": "0x6C"
    },
    "4270": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6478,
        6488
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4271": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4273": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4274": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x3C015D1005DA8BB61E99936222D4A8A0C3C5B6643F9DAA5EAE3EF07B7FB67647"
    },
    "4307": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4308": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10DE"
    },
    "4311": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4312": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6490,
        6505
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4313": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6490,
        6505
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4314": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F71"
    },
    "4317": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6465,
        6506
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4318": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4319": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4321": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4322": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4323": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4324": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "SUB",
      "path": "6"
    },
    "4325": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4326": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6506
      ],
      "op": "LOG2",
      "path": "6"
    },
    "4327": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6526
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 46,
      "value": "0x6C"
    },
    "4329": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4330": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4331": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4332": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6526
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4334": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10F6"
    },
    "4337": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4338": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x233A"
    },
    "4341": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6516,
        6528
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4342": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4343": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4344": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4345": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6516,
        6528
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4346": {
      "op": "POP"
    },
    "4347": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6546,
        6559
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 47
    },
    "4348": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6546,
        6559
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "4349": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        5380,
        6566
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "4350": {
      "op": "POP"
    },
    "4351": {
      "op": "POP"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "op": "POP"
    },
    "4354": {
      "op": "POP"
    },
    "4355": {
      "op": "POP"
    },
    "4356": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        5380,
        6566
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4357": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4358": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4601,
        4611
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 48
    },
    "4359": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4361": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4362": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4363": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4364": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4600
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x75"
    },
    "4366": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4368": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4369": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4371": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4372": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4373": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4612
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4374": {
      "branch": 109,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4580,
        4617
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4375": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1162"
    },
    "4378": {
      "branch": 109,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4379": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4381": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4382": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4388": {
      "op": "SHL"
    },
    "4389": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4390": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4393": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4395": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4396": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "ADD",
      "path": "6"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4402": {
      "op": "DUP3"
    },
    "4403": {
      "op": "ADD"
    },
    "4404": {
      "op": "MSTORE"
    },
    "4405": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206578697374732E00000000000000"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4440": {
      "op": "DUP3"
    },
    "4441": {
      "op": "ADD"
    },
    "4442": {
      "op": "MSTORE"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4445": {
      "op": "ADD"
    },
    "4446": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "4449": {
      "op": "JUMP"
    },
    "4450": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4559,
        4668
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4451": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4725,
        4735
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 49,
      "value": "0x66"
    },
    "4453": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4725,
        4735
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4454": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4710,
        4720
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4455": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4457": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4458": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4459": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4460": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "4462": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4464": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4465": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4467": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4468": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4469": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4470": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4700,
        4735
      ],
      "op": "LT",
      "path": "6"
    },
    "4471": {
      "branch": 110,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4700,
        4735
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4472": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C3"
    },
    "4475": {
      "branch": 110,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4476": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4478": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4485": {
      "op": "SHL"
    },
    "4486": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4487": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4490": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4492": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4493": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "ADD",
      "path": "6"
    },
    "4494": {
      "op": "MSTORE"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4499": {
      "op": "DUP3"
    },
    "4500": {
      "op": "ADD"
    },
    "4501": {
      "op": "MSTORE"
    },
    "4502": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4537": {
      "op": "DUP3"
    },
    "4538": {
      "op": "ADD"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "4546": {
      "op": "JUMP"
    },
    "4547": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4679,
        4788
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4548": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4833,
        4845
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4550": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4848,
        4899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D2"
    },
    "4553": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4861,
        4871
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4554": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4881,
        4885
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "4555": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4888,
        4898
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "4557": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4888,
        4898
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4558": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4848,
        4860
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x81D"
    },
    "4561": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        4848,
        4899
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4562": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4848,
        4899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4563": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4833,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4564": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4833,
        4899
      ],
      "op": "POP",
      "path": "6"
    },
    "4565": {
      "branch": 111,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4917,
        4924
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 50
    },
    "4566": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1219"
    },
    "4569": {
      "branch": 111,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4570": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4572": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4581": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4584": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4586": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4587": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "ADD",
      "path": "6"
    },
    "4588": {
      "op": "MSTORE"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4593": {
      "op": "DUP3"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "op": "MSTORE"
    },
    "4596": {
      "op": "PUSH21",
      "value": "0x151BDAD95B881D1C985B9CD9995C8819985A5B1959"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "4620": {
      "op": "SHL"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4623": {
      "op": "DUP3"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "MSTORE"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "4632": {
      "op": "JUMP"
    },
    "4633": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4909,
        4950
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4634": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 51,
      "value": "0x40"
    },
    "4636": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4637": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4638": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC0"
    },
    "4640": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4641": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4642": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4643": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4644": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5022,
        5040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "4646": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5022,
        5040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4647": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5022,
        5040
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4648": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4649": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4650": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4651": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5072,
        5082
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4652": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4654": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4655": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4656": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4657": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4658": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4659": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4660": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4661": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4662": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4663": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4664": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4665": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4666": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5147,
        5157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "4668": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5147,
        5157
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4669": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4671": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4672": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4673": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4674": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4675": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4678": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "4680": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4681": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4682": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4683": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4684": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4685": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5210,
        5212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x32"
    },
    "4687": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "4689": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP12",
      "path": "6"
    },
    "4690": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4691": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4692": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4693": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4694": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "4695": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4696": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4697": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4971
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "4699": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4700": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4701": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "DUP11",
      "path": "6"
    },
    "4702": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4703": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        4991
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4704": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP10",
      "path": "6"
    },
    "4705": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4706": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "DUP11",
      "path": "6"
    },
    "4707": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4708": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4709": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4710": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4712": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "DUP11",
      "path": "6"
    },
    "4713": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4714": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4715": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4722": {
      "op": "SHL"
    },
    "4723": {
      "op": "SUB"
    },
    "4724": {
      "op": "NOT"
    },
    "4725": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "AND",
      "path": "6"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4732": {
      "op": "SHL"
    },
    "4733": {
      "op": "SUB"
    },
    "4734": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4735": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4736": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "AND",
      "path": "6"
    },
    "4737": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4738": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4739": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4740": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "OR",
      "path": "6"
    },
    "4741": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4742": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4743": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4744": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4745": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "4747": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4748": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4749": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4750": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4751": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4753": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4754": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4755": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4756": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4757": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4758": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4760": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4761": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4762": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4763": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4764": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4765": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "4767": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4768": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "4769": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "ADD",
      "path": "6"
    },
    "4770": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4771": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4774": {
      "op": "NOT"
    },
    "4775": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "AND",
      "path": "6"
    },
    "4776": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4994,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4778": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4779": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "4780": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "AND",
      "path": "6"
    },
    "4781": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "4782": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4783": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "4784": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "OR",
      "path": "6"
    },
    "4785": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4786": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "4787": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4961,
        5223
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4788": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5269,
        5287
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 52
    },
    "4789": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5269,
        5287
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4790": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4791": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4792": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4793": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x75"
    },
    "4795": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4796": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4797": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4798": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4799": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4800": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5266
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4801": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5287
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4802": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5287
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4803": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5234,
        5287
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4804": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5269,
        5287
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4805": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5269,
        5287
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4806": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 53,
      "value": "0x12CE"
    },
    "4809": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5269,
        5287
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4810": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x233A"
    },
    "4813": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5297,
        5317
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4814": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4815": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4816": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4817": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "POP",
      "path": "6"
    },
    "4818": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4819": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5297,
        5317
      ],
      "op": "POP",
      "path": "6"
    },
    "4820": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4549,
        5324
      ],
      "op": "POP",
      "path": "6"
    },
    "4821": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        4491,
        5324
      ],
      "op": "POP",
      "path": "6"
    },
    "4822": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        4491,
        5324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4823": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4824": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "4826": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 54,
      "value": "0x37"
    },
    "4828": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4829": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4830": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75F"
    },
    "4833": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4834": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21BA"
    },
    "4837": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4838": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4839": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4840": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4842": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4843": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4844": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4845": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "4847": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4849": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4850": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4851": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4852": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4854": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4855": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4856": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4863": {
      "op": "SHL"
    },
    "4864": {
      "op": "SUB"
    },
    "4865": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4866": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "1"
    },
    "4867": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4868": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4869": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4870": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4871": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4872": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4873": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4874": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4875": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4876": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4877": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4878": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 55
    },
    "4879": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4880": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "1"
    },
    "4881": {
      "branch": 119,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4882": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136B"
    },
    "4885": {
      "branch": 119,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4886": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4888": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4895": {
      "op": "SHL"
    },
    "4896": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4897": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4900": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4902": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4903": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "1"
    },
    "4904": {
      "op": "MSTORE"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4909": {
      "op": "DUP3"
    },
    "4910": {
      "op": "ADD"
    },
    "4911": {
      "op": "MSTORE"
    },
    "4912": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4947": {
      "op": "DUP3"
    },
    "4948": {
      "op": "ADD"
    },
    "4949": {
      "op": "MSTORE"
    },
    "4950": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4958": {
      "op": "SHL"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4961": {
      "op": "DUP3"
    },
    "4962": {
      "op": "ADD"
    },
    "4963": {
      "op": "MSTORE"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4966": {
      "op": "ADD"
    },
    "4967": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "4970": {
      "op": "JUMP"
    },
    "4971": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4972": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 56,
      "value": "0x836"
    },
    "4975": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4976": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4977": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4978": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4979": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "1"
    },
    "4980": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B9"
    },
    "4983": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4984": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4985": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4987": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4988": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 57,
      "value": "0x7F0"
    },
    "4991": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4992": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4993": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4994": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6F"
    },
    "4997": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4998": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4999": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4046,
        4056
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 58
    },
    "5000": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5002": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5003": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5004": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5005": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4045
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x74"
    },
    "5007": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5009": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5010": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5012": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5013": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5014": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4057
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5015": {
      "branch": 112,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4030,
        4062
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5016": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E3"
    },
    "5019": {
      "branch": 112,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5020": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5022": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5029": {
      "op": "SHL"
    },
    "5030": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5031": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5034": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5036": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5037": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "ADD",
      "path": "6"
    },
    "5038": {
      "op": "MSTORE"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5043": {
      "op": "DUP3"
    },
    "5044": {
      "op": "ADD"
    },
    "5045": {
      "op": "MSTORE"
    },
    "5046": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5081": {
      "op": "DUP3"
    },
    "5082": {
      "op": "ADD"
    },
    "5083": {
      "op": "MSTORE"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5086": {
      "op": "ADD"
    },
    "5087": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "5090": {
      "op": "JUMP"
    },
    "5091": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4022,
        4091
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5092": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 59,
      "value": "0x40"
    },
    "5094": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5095": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5096": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "5098": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5099": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "ADD",
      "path": "6"
    },
    "5100": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5101": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5102": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4148,
        4161
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "5104": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4148,
        4161
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5105": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4148,
        4161
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5106": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5107": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5108": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5109": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4188,
        4198
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5110": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5112": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5113": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5114": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "ADD",
      "path": "6"
    },
    "5115": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5116": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5117": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5118": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5119": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5120": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "ADD",
      "path": "6"
    },
    "5121": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP9",
      "path": "6"
    },
    "5122": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5123": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5124": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4267,
        4269
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x32"
    },
    "5126": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5128": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP9",
      "path": "6"
    },
    "5129": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "ADD",
      "path": "6"
    },
    "5130": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5131": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5132": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5135": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "5136": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5137": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5138": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "5140": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5141": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5142": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "DUP9",
      "path": "6"
    },
    "5143": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5144": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4122
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5145": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "5146": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5147": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "DUP9",
      "path": "6"
    },
    "5148": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5149": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5150": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5151": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5153": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "DUP9",
      "path": "6"
    },
    "5154": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "ADD",
      "path": "6"
    },
    "5155": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5156": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5163": {
      "op": "SHL"
    },
    "5164": {
      "op": "SUB"
    },
    "5165": {
      "op": "NOT"
    },
    "5166": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "AND",
      "path": "6"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5173": {
      "op": "SHL"
    },
    "5174": {
      "op": "SUB"
    },
    "5175": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5176": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5177": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "AND",
      "path": "6"
    },
    "5178": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5179": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5180": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5181": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "OR",
      "path": "6"
    },
    "5182": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5183": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5184": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5185": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "5187": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5188": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "ADD",
      "path": "6"
    },
    "5189": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5190": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5191": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "5193": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5194": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "5195": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "ADD",
      "path": "6"
    },
    "5196": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5197": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5200": {
      "op": "NOT"
    },
    "5201": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "AND",
      "path": "6"
    },
    "5202": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4125,
        4280
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "5204": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5205": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "5206": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "AND",
      "path": "6"
    },
    "5207": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "5208": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5209": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "5210": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "OR",
      "path": "6"
    },
    "5211": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5212": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "5213": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4102,
        4280
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5214": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4321,
        4334
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 60
    },
    "5215": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4321,
        4334
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5216": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5217": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5218": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5219": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4306
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x74"
    },
    "5221": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5222": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5223": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5224": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5225": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5226": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4318
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5227": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4334
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5228": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5229": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4291,
        4334
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5230": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4321,
        4334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5231": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4321,
        4334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5232": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 61,
      "value": "0x1478"
    },
    "5235": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4321,
        4334
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5236": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x233A"
    },
    "5239": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4344,
        4359
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5240": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5241": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5242": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5243": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "POP",
      "path": "6"
    },
    "5244": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5245": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4344,
        4359
      ],
      "op": "POP",
      "path": "6"
    },
    "5246": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        3903,
        4366
      ],
      "op": "POP",
      "path": "6"
    },
    "5247": {
      "fn": "SmartnodesCore.createUser",
      "jump": "o",
      "offset": [
        3903,
        4366
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5248": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3482,
        3808
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5249": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3578,
        3602
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 62,
      "value": "0x69"
    },
    "5251": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3578,
        3602
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5258": {
      "op": "SHL"
    },
    "5259": {
      "op": "SUB"
    },
    "5260": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3578,
        3602
      ],
      "op": "AND",
      "path": "6"
    },
    "5261": {
      "branch": 113,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3578,
        3616
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5262": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D9"
    },
    "5265": {
      "branch": 113,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5266": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5268": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5275": {
      "op": "SHL"
    },
    "5276": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5277": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5280": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5282": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5283": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "ADD",
      "path": "6"
    },
    "5284": {
      "op": "MSTORE"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5289": {
      "op": "DUP3"
    },
    "5290": {
      "op": "ADD"
    },
    "5291": {
      "op": "MSTORE"
    },
    "5292": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5327": {
      "op": "DUP3"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "op": "MSTORE"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5332": {
      "op": "ADD"
    },
    "5333": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "5336": {
      "op": "JUMP"
    },
    "5337": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3557,
        3672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5338": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3708
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 63,
      "value": "0x68"
    },
    "5340": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5341": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5348": {
      "op": "SHL"
    },
    "5349": {
      "op": "SUB"
    },
    "5350": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5351": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5352": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "AND",
      "path": "6"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5359": {
      "op": "SHL"
    },
    "5360": {
      "op": "SUB"
    },
    "5361": {
      "op": "NOT"
    },
    "5362": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5363": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5364": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "AND",
      "path": "6"
    },
    "5365": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5366": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "OR",
      "path": "6"
    },
    "5367": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5368": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5369": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3682,
        3748
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5370": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3782
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 64,
      "value": "0x69"
    },
    "5372": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5373": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5374": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5375": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5376": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "AND",
      "path": "6"
    },
    "5377": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "OR",
      "path": "6"
    },
    "5378": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5379": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        3758,
        3801
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5380": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        3482,
        3808
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5381": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5382": {
      "offset": [
        2829,
        2853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "5384": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2829,
        2853
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5391": {
      "op": "SHL"
    },
    "5392": {
      "op": "SUB"
    },
    "5393": {
      "offset": [
        2829,
        2853
      ],
      "op": "AND",
      "path": "6"
    },
    "5394": {
      "offset": [
        2815,
        2825
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5395": {
      "offset": [
        2815,
        2853
      ],
      "op": "EQ",
      "path": "6"
    },
    "5396": {
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x152F"
    },
    "5399": {
      "offset": [
        2794,
        2917
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5400": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5402": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5403": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5409": {
      "op": "SHL"
    },
    "5410": {
      "offset": [
        2794,
        2917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5411": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5412": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5414": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "ADD",
      "path": "6"
    },
    "5415": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "5418": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5419": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2353"
    },
    "5422": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        2794,
        2917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5423": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5424": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7107,
        7122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5426": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5427": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5428": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5429": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7129
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "5431": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5433": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5434": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5436": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5437": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5438": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5439": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7158
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 65,
      "value": "0x5"
    },
    "5441": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7158
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5442": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7158
      ],
      "op": "ADD",
      "path": "6"
    },
    "5443": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7166
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5444": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7166
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5447": {
      "op": "NOT"
    },
    "5448": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7166
      ],
      "op": "AND",
      "path": "6"
    },
    "5449": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5450": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7146,
        7166
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5451": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7181,
        7199
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 66
    },
    "5452": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7181,
        7199
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5453": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5454": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7125,
        7136
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5455": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7130,
        7135
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5456": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7130,
        7135
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5457": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7181,
        7199
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xB1DEE78CEF8C6887046D91C59E17F84FBC012C9F7EFA49A10CCE97E13CC94BF4"
    },
    "5490": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7181,
        7199
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5491": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7107,
        7122
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5492": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7181,
        7199
      ],
      "op": "LOG2",
      "path": "6"
    },
    "5493": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7097,
        7206
      ],
      "op": "POP",
      "path": "6"
    },
    "5494": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7031,
        7206
      ],
      "op": "POP",
      "path": "6"
    },
    "5495": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "o",
      "offset": [
        7031,
        7206
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5496": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5497": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7364,
        7365
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 67,
      "value": "0x0"
    },
    "5499": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7355,
        7361
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5500": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7355,
        7365
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5505": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7355,
        7365
      ],
      "op": "AND",
      "path": "6"
    },
    "5506": {
      "branch": 114,
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7355,
        7365
      ],
      "op": "GT",
      "path": "6"
    },
    "5507": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x159E"
    },
    "5510": {
      "branch": 114,
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5511": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5513": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5520": {
      "op": "SHL"
    },
    "5521": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5522": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5523": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5525": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "ADD",
      "path": "6"
    },
    "5526": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "5529": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5530": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x221D"
    },
    "5533": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7347,
        7403
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5534": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7347,
        7403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5535": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7431,
        7441
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 68
    },
    "5536": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5538": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5539": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5540": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5541": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "5543": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5545": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5546": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5548": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5549": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5550": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5551": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7421,
        7452
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5556": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7421,
        7452
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5557": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7421,
        7452
      ],
      "op": "AND",
      "path": "6"
    },
    "5558": {
      "op": "GT"
    },
    "5559": {
      "branch": 115,
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7421,
        7452
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5560": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15FB"
    },
    "5563": {
      "branch": 115,
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5564": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5566": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5573": {
      "op": "SHL"
    },
    "5574": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5575": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5578": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5580": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5581": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "ADD",
      "path": "6"
    },
    "5582": {
      "op": "MSTORE"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5587": {
      "op": "DUP3"
    },
    "5588": {
      "op": "ADD"
    },
    "5589": {
      "op": "MSTORE"
    },
    "5590": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "5614": {
      "op": "SHL"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5617": {
      "op": "DUP3"
    },
    "5618": {
      "op": "ADD"
    },
    "5619": {
      "op": "MSTORE"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5622": {
      "op": "ADD"
    },
    "5623": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "5626": {
      "op": "JUMP"
    },
    "5627": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7413,
        7478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5628": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7532,
        7542
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5629": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7489,
        7508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5631": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5632": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5633": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5634": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7531
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x75"
    },
    "5636": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5638": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5639": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5641": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5642": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5643": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5644": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7511,
        7543
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5645": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7561,
        7577
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 69
    },
    "5646": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7561,
        7577
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5647": {
      "branch": 116,
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7561,
        7577
      ],
      "op": "SUB",
      "path": "6"
    },
    "5648": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165B"
    },
    "5651": {
      "branch": 116,
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5652": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5654": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5661": {
      "op": "SHL"
    },
    "5662": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5663": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5666": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5668": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5669": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "ADD",
      "path": "6"
    },
    "5670": {
      "op": "MSTORE"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5675": {
      "op": "DUP3"
    },
    "5676": {
      "op": "ADD"
    },
    "5677": {
      "op": "MSTORE"
    },
    "5678": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5713": {
      "op": "DUP3"
    },
    "5714": {
      "op": "ADD"
    },
    "5715": {
      "op": "MSTORE"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5718": {
      "op": "ADD"
    },
    "5719": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "5722": {
      "op": "JUMP"
    },
    "5723": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7553,
        7607
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5724": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7618,
        7665
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 70,
      "value": "0x166C"
    },
    "5727": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7631,
        7641
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5728": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7651,
        7655
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "5729": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7658,
        7664
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5730": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7618,
        7665
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5735": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7618,
        7665
      ],
      "op": "AND",
      "path": "6"
    },
    "5736": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7618,
        7630
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x81D"
    },
    "5739": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7618,
        7665
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5740": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7618,
        7665
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5741": {
      "op": "POP"
    },
    "5742": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 71,
      "value": "0x0"
    },
    "5744": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5745": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5746": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5747": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "5749": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5751": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5752": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5754": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5755": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5756": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7705
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "5758": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7705
      ],
      "op": "ADD",
      "path": "6"
    },
    "5759": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5760": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5761": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5766": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5767": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "AND",
      "path": "6"
    },
    "5768": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5769": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7698
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5770": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1694"
    },
    "5773": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5774": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5775": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5776": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x220A"
    },
    "5779": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7675,
        7715
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5780": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5781": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5782": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5783": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7675,
        7715
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5784": {
      "op": "POP"
    },
    "5785": {
      "op": "POP"
    },
    "5786": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 72,
      "value": "0x40"
    },
    "5788": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5789": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5794": {
      "op": "DUP4"
    },
    "5795": {
      "op": "AND"
    },
    "5796": {
      "op": "DUP2"
    },
    "5797": {
      "op": "MSTORE"
    },
    "5798": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7744,
        7754
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5799": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7744,
        7754
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5800": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "5833": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5836": {
      "op": "ADD"
    },
    "5837": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5839": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5840": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5841": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5842": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "SUB",
      "path": "6"
    },
    "5843": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5844": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7731,
        7763
      ],
      "op": "LOG2",
      "path": "6"
    },
    "5845": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7337,
        7770
      ],
      "op": "POP",
      "path": "6"
    },
    "5846": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7293,
        7770
      ],
      "op": "POP",
      "path": "6"
    },
    "5847": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        7293,
        7770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5848": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5849": {
      "offset": [
        451,
        464
      ],
      "op": "PUSH11",
      "path": "6",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "5861": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9115,
        9127
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 73,
      "value": "0x65"
    },
    "5863": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9115,
        9127
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5864": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F0"
    },
    "5867": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "5869": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5870": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5871": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5872": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9112
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5873": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16FA"
    },
    "5876": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9127
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5877": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5878": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x220A"
    },
    "5881": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        9099,
        9127
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5882": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5883": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9141
      ],
      "op": "GT",
      "path": "6"
    },
    "5884": {
      "branch": 117,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9099,
        9141
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5885": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1748"
    },
    "5888": {
      "branch": 117,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5889": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5891": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5892": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5898": {
      "op": "SHL"
    },
    "5899": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5900": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5903": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5905": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5906": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "ADD",
      "path": "6"
    },
    "5907": {
      "op": "MSTORE"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5912": {
      "op": "DUP3"
    },
    "5913": {
      "op": "ADD"
    },
    "5914": {
      "op": "MSTORE"
    },
    "5915": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D20737570706C79207265616368656421000000000000000000"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5950": {
      "op": "DUP3"
    },
    "5951": {
      "op": "ADD"
    },
    "5952": {
      "op": "MSTORE"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "5959": {
      "op": "JUMP"
    },
    "5960": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9078,
        9190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5961": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9244,
        9268
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 74,
      "value": "0x1752"
    },
    "5964": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9250,
        9259
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5965": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9261,
        9267
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5966": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9244,
        9249
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C3D"
    },
    "5969": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        9244,
        9268
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5970": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9244,
        9268
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5971": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "POP",
      "path": "6"
    },
    "5972": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "POP",
      "path": "6"
    },
    "5973": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        9004,
        9275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5974": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5975": {
      "offset": [
        2829,
        2853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "5977": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2829,
        2853
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5978": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6697,
        6713
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5980": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6697,
        6713
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5987": {
      "op": "SHL"
    },
    "5988": {
      "op": "SUB"
    },
    "5989": {
      "offset": [
        2829,
        2853
      ],
      "op": "AND",
      "path": "6"
    },
    "5990": {
      "offset": [
        2815,
        2825
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5991": {
      "offset": [
        2815,
        2853
      ],
      "op": "EQ",
      "path": "6"
    },
    "5992": {
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1783"
    },
    "5995": {
      "offset": [
        2794,
        2917
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5996": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5998": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6005": {
      "op": "SHL"
    },
    "6006": {
      "offset": [
        2794,
        2917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6007": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6008": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6010": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "ADD",
      "path": "6"
    },
    "6011": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F4"
    },
    "6014": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6015": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2353"
    },
    "6018": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        2794,
        2917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6019": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2794,
        2917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6020": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 75,
      "value": "0x0"
    },
    "6022": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6023": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6024": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6025": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "6027": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6029": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6030": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6032": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6033": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6763
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6034": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6036": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6774
      ],
      "op": "ADD",
      "path": "6"
    },
    "6037": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6752,
        6781
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6038": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6733,
        6748
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6039": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6733,
        6748
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6040": {
      "branch": 118,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6733,
        6781
      ],
      "op": "EQ",
      "path": "6"
    },
    "6041": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17A1"
    },
    "6044": {
      "branch": 118,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6045": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6047": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6048": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6725,
        6782
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6049": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6050": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 76,
      "value": "0x0"
    },
    "6052": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6053": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6054": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6055": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6796
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "6057": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6059": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6060": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6061": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6062": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6064": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6065": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6066": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6803
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6067": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6068": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6069": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C6"
    },
    "6072": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6073": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6811
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "6075": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6811
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6076": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6811
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6077": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6811
      ],
      "op": "ADD",
      "path": "6"
    },
    "6078": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6811
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6079": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6080": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "ADD",
      "path": "6"
    },
    "6081": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6082": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD3"
    },
    "6085": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        6792,
        6822
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6086": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6792,
        6822
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6087": {
      "op": "POP"
    },
    "6088": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6837,
        6856
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 77,
      "value": "0x40"
    },
    "6090": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6837,
        6856
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6091": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6850,
        6855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6092": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6850,
        6855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6093": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6837,
        6856
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929"
    },
    "6126": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6837,
        6856
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6127": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6837,
        6856
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6129": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6837,
        6856
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6130": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6837,
        6856
      ],
      "op": "LOG2",
      "path": "6"
    },
    "6131": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6870,
        6883
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "6133": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6870,
        6890
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6134": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6894,
        6899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1388"
    },
    "6137": {
      "op": "GT"
    },
    "6138": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6866,
        6945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1825"
    },
    "6141": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6866,
        6945
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6142": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6928
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 78,
      "value": "0x70"
    },
    "6144": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6145": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6146": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6147": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x180E"
    },
    "6150": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6151": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x180E"
    },
    "6154": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2399"
    },
    "6157": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        6915,
        6934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6158": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6159": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6161": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6162": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SUB",
      "path": "6"
    },
    "6163": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6164": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6165": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6166": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6168": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6169": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6171": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6173": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6174": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "ADD",
      "path": "6"
    },
    "6175": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6177": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6178": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6179": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6180": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6915,
        6934
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6181": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6866,
        6945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6182": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6967
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 79,
      "value": "0x70"
    },
    "6184": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6185": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6186": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6188": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6189": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "ADD",
      "path": "6"
    },
    "6190": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6191": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6192": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6193": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8F6B23FFA15F0465E3176E15CA644CF24F86DC1312FE715484E3C4AEAD5EB78B"
    },
    "6226": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "ADD",
      "path": "6"
    },
    "6227": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6228": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6229": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6232": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 80
    },
    "6233": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6234": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6235": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "6237": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6954,
        6979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6239": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6240": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6241": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6242": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6244": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6245": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6246": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6247": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7007
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6248": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6250": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7018
      ],
      "op": "ADD",
      "path": "6"
    },
    "6251": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6252": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6253": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6254": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6255": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6256": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6257": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "MUL",
      "path": "6"
    },
    "6258": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6259": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "ADD",
      "path": "6"
    },
    "6260": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6261": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "ADD",
      "path": "6"
    },
    "6262": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6263": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "6264": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6265": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6266": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6267": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6268": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6269": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7018
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6270": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6271": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "ADD",
      "path": "6"
    },
    "6272": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6996,
        7018
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6273": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6274": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6275": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6276": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18AC"
    },
    "6279": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6280": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6282": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "MUL",
      "path": "6"
    },
    "6283": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6284": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "ADD",
      "path": "6"
    },
    "6285": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6286": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6287": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6289": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6290": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6292": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6294": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6295": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6296": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6297": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6298": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6299": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6300": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6301": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6303": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "ADD",
      "path": "6"
    },
    "6304": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6305": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6307": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "ADD",
      "path": "6"
    },
    "6308": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6309": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6310": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6311": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "GT",
      "path": "6"
    },
    "6312": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1898"
    },
    "6315": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6316": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6317": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "POP",
      "path": "6"
    },
    "6318": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "POP",
      "path": "6"
    },
    "6319": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "POP",
      "path": "6"
    },
    "6320": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "POP",
      "path": "6"
    },
    "6321": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "POP",
      "path": "6"
    },
    "6322": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6323": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6989,
        7018
      ],
      "op": "POP",
      "path": "6"
    },
    "6324": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6325": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6326": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "POP",
      "path": "6"
    },
    "6327": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        6572,
        7025
      ],
      "op": "POP",
      "path": "6"
    },
    "6328": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        6572,
        7025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6329": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6336": {
      "op": "SHL"
    },
    "6337": {
      "op": "SUB"
    },
    "6338": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 81
    },
    "6339": {
      "branch": 120,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "1"
    },
    "6340": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x191B"
    },
    "6343": {
      "branch": 120,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6344": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6346": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6353": {
      "op": "SHL"
    },
    "6354": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6355": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6358": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6360": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6361": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "1"
    },
    "6362": {
      "op": "MSTORE"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6365": {
      "op": "DUP1"
    },
    "6366": {
      "op": "DUP3"
    },
    "6367": {
      "op": "ADD"
    },
    "6368": {
      "op": "MSTORE"
    },
    "6369": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6404": {
      "op": "DUP3"
    },
    "6405": {
      "op": "ADD"
    },
    "6406": {
      "op": "MSTORE"
    },
    "6407": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6417": {
      "op": "DUP3"
    },
    "6418": {
      "op": "ADD"
    },
    "6419": {
      "op": "MSTORE"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6422": {
      "op": "ADD"
    },
    "6423": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "6426": {
      "op": "JUMP"
    },
    "6427": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6434": {
      "op": "SHL"
    },
    "6435": {
      "op": "SUB"
    },
    "6436": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 82
    },
    "6437": {
      "branch": 121,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "1"
    },
    "6438": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x197C"
    },
    "6441": {
      "branch": 121,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6442": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6444": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6451": {
      "op": "SHL"
    },
    "6452": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6453": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6456": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6458": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6459": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "1"
    },
    "6460": {
      "op": "MSTORE"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6465": {
      "op": "DUP3"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "MSTORE"
    },
    "6468": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6503": {
      "op": "DUP3"
    },
    "6504": {
      "op": "ADD"
    },
    "6505": {
      "op": "MSTORE"
    },
    "6506": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6511": {
      "op": "SHL"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "ADD"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "6523": {
      "op": "JUMP"
    },
    "6524": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6531": {
      "op": "SHL"
    },
    "6532": {
      "op": "SUB"
    },
    "6533": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 83
    },
    "6534": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6535": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "1"
    },
    "6536": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6538": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6539": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6540": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6541": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "6543": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6545": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6546": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6547": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6548": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6550": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6551": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6552": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6553": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6554": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "1"
    },
    "6555": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "1"
    },
    "6556": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6557": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6558": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6559": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6560": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6561": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6562": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6563": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6564": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6565": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6566": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6567": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6568": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6569": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 84
    },
    "6570": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6571": {
      "op": "DUP5"
    },
    "6572": {
      "op": "DUP2"
    },
    "6573": {
      "op": "MSTORE"
    },
    "6574": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6607": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6611": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6612": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6613": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6614": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "1"
    },
    "6615": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6616": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "1"
    },
    "6617": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "6618": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "6619": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "6620": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6621": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "op": "SUB"
    },
    "6630": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6631": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6632": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "6633": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6635": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6636": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6637": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6638": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "6640": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6642": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6643": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6644": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6645": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6647": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6648": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6649": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6650": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6651": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6652": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "6653": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6654": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6655": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6656": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6657": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6658": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6659": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6662": {
      "op": "NOT"
    },
    "6663": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6664": {
      "branch": 122,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "1"
    },
    "6665": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A69"
    },
    "6668": {
      "branch": 122,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6669": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 85
    },
    "6670": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6671": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "1"
    },
    "6672": {
      "branch": 123,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6673": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A5C"
    },
    "6676": {
      "branch": 123,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6677": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6679": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6686": {
      "op": "SHL"
    },
    "6687": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6688": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6691": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6693": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6694": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "1"
    },
    "6695": {
      "op": "MSTORE"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6700": {
      "op": "DUP3"
    },
    "6701": {
      "op": "ADD"
    },
    "6702": {
      "op": "MSTORE"
    },
    "6703": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6738": {
      "op": "DUP3"
    },
    "6739": {
      "op": "ADD"
    },
    "6740": {
      "op": "MSTORE"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6743": {
      "op": "ADD"
    },
    "6744": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "6747": {
      "op": "JUMP"
    },
    "6748": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6749": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 86,
      "value": "0x1A69"
    },
    "6752": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6753": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6754": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6755": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6756": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "1"
    },
    "6757": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B9"
    },
    "6760": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6761": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6762": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "6763": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "6764": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "6765": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "6766": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6767": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6774": {
      "op": "SHL"
    },
    "6775": {
      "op": "SUB"
    },
    "6776": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 87
    },
    "6777": {
      "branch": 124,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "1"
    },
    "6778": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AD3"
    },
    "6781": {
      "branch": 124,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6782": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6784": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6791": {
      "op": "SHL"
    },
    "6792": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6793": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6796": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6798": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6799": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "1"
    },
    "6800": {
      "op": "MSTORE"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6805": {
      "op": "DUP3"
    },
    "6806": {
      "op": "ADD"
    },
    "6807": {
      "op": "MSTORE"
    },
    "6808": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6843": {
      "op": "DUP3"
    },
    "6844": {
      "op": "ADD"
    },
    "6845": {
      "op": "MSTORE"
    },
    "6846": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6854": {
      "op": "SHL"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6857": {
      "op": "DUP3"
    },
    "6858": {
      "op": "ADD"
    },
    "6859": {
      "op": "MSTORE"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "6866": {
      "op": "JUMP"
    },
    "6867": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6874": {
      "op": "SHL"
    },
    "6875": {
      "op": "SUB"
    },
    "6876": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 88
    },
    "6877": {
      "branch": 125,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "1"
    },
    "6878": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B35"
    },
    "6881": {
      "branch": 125,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6882": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6884": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6885": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6891": {
      "op": "SHL"
    },
    "6892": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6893": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6896": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6898": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6899": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "1"
    },
    "6900": {
      "op": "MSTORE"
    },
    "6901": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6905": {
      "op": "DUP3"
    },
    "6906": {
      "op": "ADD"
    },
    "6907": {
      "op": "MSTORE"
    },
    "6908": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6943": {
      "op": "DUP3"
    },
    "6944": {
      "op": "ADD"
    },
    "6945": {
      "op": "MSTORE"
    },
    "6946": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6952": {
      "op": "SHL"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6955": {
      "op": "DUP3"
    },
    "6956": {
      "op": "ADD"
    },
    "6957": {
      "op": "MSTORE"
    },
    "6958": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6960": {
      "op": "ADD"
    },
    "6961": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "6964": {
      "op": "JUMP"
    },
    "6965": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6972": {
      "op": "SHL"
    },
    "6973": {
      "op": "SUB"
    },
    "6974": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6975": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "1"
    },
    "6976": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6978": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6979": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6980": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6981": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "6983": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6985": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6986": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6988": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6989": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6990": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6991": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 89
    },
    "6992": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6993": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "1"
    },
    "6994": {
      "branch": 126,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6995": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BAD"
    },
    "6998": {
      "branch": 126,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6999": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7001": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7008": {
      "op": "SHL"
    },
    "7009": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7010": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7013": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7015": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7016": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "1"
    },
    "7017": {
      "op": "MSTORE"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7022": {
      "op": "DUP3"
    },
    "7023": {
      "op": "ADD"
    },
    "7024": {
      "op": "MSTORE"
    },
    "7025": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7060": {
      "op": "DUP3"
    },
    "7061": {
      "op": "ADD"
    },
    "7062": {
      "op": "MSTORE"
    },
    "7063": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7072": {
      "op": "SHL"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7075": {
      "op": "DUP3"
    },
    "7076": {
      "op": "ADD"
    },
    "7077": {
      "op": "MSTORE"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7080": {
      "op": "ADD"
    },
    "7081": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "7084": {
      "op": "JUMP"
    },
    "7085": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7092": {
      "op": "SHL"
    },
    "7093": {
      "op": "SUB"
    },
    "7094": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 90
    },
    "7095": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7096": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "1"
    },
    "7097": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7099": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7100": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7101": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7102": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "7104": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7106": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7107": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7109": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7110": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7111": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7112": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7113": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7114": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "1"
    },
    "7115": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7116": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7117": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 91
    },
    "7118": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7119": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "1"
    },
    "7120": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7121": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7122": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7123": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7124": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7125": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7126": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7127": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7128": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7129": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7130": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BE4"
    },
    "7133": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7134": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7135": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7136": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x220A"
    },
    "7139": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7140": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7141": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7142": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "7143": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "7144": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7145": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7146": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7147": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "7148": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 92
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7155": {
      "op": "SHL"
    },
    "7156": {
      "op": "SUB"
    },
    "7157": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "7158": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7165": {
      "op": "SHL"
    },
    "7166": {
      "op": "SUB"
    },
    "7167": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "7168": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7201": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7202": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7204": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7205": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C30"
    },
    "7208": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7209": {
      "op": "DUP2"
    },
    "7210": {
      "op": "MSTORE"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7213": {
      "op": "ADD"
    },
    "7214": {
      "op": "SWAP1"
    },
    "7215": {
      "op": "JUMP"
    },
    "7216": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7217": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7219": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7220": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7221": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7222": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "1"
    },
    "7223": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7224": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "1"
    },
    "7225": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 93,
      "value": "0x1A69"
    },
    "7228": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7776,
        8878
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7229": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7236": {
      "op": "SHL"
    },
    "7237": {
      "op": "SUB"
    },
    "7238": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 94
    },
    "7239": {
      "branch": 127,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "1"
    },
    "7240": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C93"
    },
    "7243": {
      "branch": 127,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7244": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7246": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7253": {
      "op": "SHL"
    },
    "7254": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7255": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7258": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7260": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7261": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "1"
    },
    "7262": {
      "op": "MSTORE"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7267": {
      "op": "DUP3"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "MSTORE"
    },
    "7270": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7305": {
      "op": "DUP3"
    },
    "7306": {
      "op": "ADD"
    },
    "7307": {
      "op": "MSTORE"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7310": {
      "op": "ADD"
    },
    "7311": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "7314": {
      "op": "JUMP"
    },
    "7315": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7316": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 95
    },
    "7317": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "7319": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7321": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7322": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7323": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7324": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CA5"
    },
    "7327": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7328": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7329": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x220A"
    },
    "7332": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7333": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7334": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7335": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7336": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7337": {
      "op": "POP"
    },
    "7338": {
      "op": "POP"
    },
    "7339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7345": {
      "op": "SHL"
    },
    "7346": {
      "op": "SUB"
    },
    "7347": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 96
    },
    "7348": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "1"
    },
    "7349": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7351": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7352": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7353": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7354": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "7356": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7358": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7359": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7361": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7362": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7363": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7364": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7365": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7366": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7367": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7368": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CD2"
    },
    "7371": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7372": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7373": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7374": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x220A"
    },
    "7377": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7378": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7379": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7380": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7381": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7382": {
      "op": "POP"
    },
    "7383": {
      "op": "POP"
    },
    "7384": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 97,
      "value": "0x40"
    },
    "7386": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7387": {
      "op": "DUP2"
    },
    "7388": {
      "op": "DUP2"
    },
    "7389": {
      "op": "MSTORE"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7396": {
      "op": "SHL"
    },
    "7397": {
      "op": "SUB"
    },
    "7398": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7399": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "1"
    },
    "7400": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7401": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7403": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7404": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7437": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7440": {
      "op": "ADD"
    },
    "7441": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7443": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7444": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7445": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7446": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "1"
    },
    "7447": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7448": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "1"
    },
    "7449": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "POP",
      "path": "6"
    },
    "7450": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        9004,
        9275
      ],
      "op": "POP",
      "path": "6"
    },
    "7451": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        9004,
        9275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7452": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7453": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7455": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7456": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7459": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7460": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "7461": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7463": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "7464": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D43"
    },
    "7467": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7468": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7470": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7471": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7477": {
      "op": "SHL"
    },
    "7478": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7479": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7480": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7482": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "7483": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F4"
    },
    "7486": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7487": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23AF"
    },
    "7490": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7491": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7492": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 98,
      "value": "0x1752"
    },
    "7495": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7496": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7497": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7499": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7500": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7503": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7504": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "7505": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7507": {
      "branch": 130,
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "7508": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D6F"
    },
    "7511": {
      "branch": 130,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7512": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7514": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7521": {
      "op": "SHL"
    },
    "7522": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7523": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7524": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7526": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "7527": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F4"
    },
    "7530": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7531": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23AF"
    },
    "7534": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7535": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7536": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 99,
      "value": "0x36"
    },
    "7538": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D7B"
    },
    "7541": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7542": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7543": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244A"
    },
    "7546": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7547": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7548": {
      "op": "POP"
    },
    "7549": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 100,
      "value": "0x37"
    },
    "7551": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3A"
    },
    "7554": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7555": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7556": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244A"
    },
    "7559": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7560": {
      "op": "JUMPDEST"
    },
    "7561": {
      "op": "DUP3"
    },
    "7562": {
      "op": "DUP1"
    },
    "7563": {
      "op": "SLOAD"
    },
    "7564": {
      "op": "DUP3"
    },
    "7565": {
      "op": "DUP3"
    },
    "7566": {
      "op": "SSTORE"
    },
    "7567": {
      "op": "SWAP1"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7570": {
      "op": "MSTORE"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7575": {
      "op": "KECCAK256"
    },
    "7576": {
      "op": "SWAP1"
    },
    "7577": {
      "op": "DUP2"
    },
    "7578": {
      "op": "ADD"
    },
    "7579": {
      "op": "SWAP3"
    },
    "7580": {
      "op": "DUP3"
    },
    "7581": {
      "op": "ISZERO"
    },
    "7582": {
      "op": "PUSH2",
      "value": "0x1DC3"
    },
    "7585": {
      "op": "JUMPI"
    },
    "7586": {
      "op": "SWAP2"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7589": {
      "op": "MUL"
    },
    "7590": {
      "op": "DUP3"
    },
    "7591": {
      "op": "ADD"
    },
    "7592": {
      "op": "JUMPDEST"
    },
    "7593": {
      "op": "DUP3"
    },
    "7594": {
      "op": "DUP2"
    },
    "7595": {
      "op": "GT"
    },
    "7596": {
      "op": "ISZERO"
    },
    "7597": {
      "op": "PUSH2",
      "value": "0x1DC3"
    },
    "7600": {
      "op": "JUMPI"
    },
    "7601": {
      "op": "DUP3"
    },
    "7602": {
      "op": "MLOAD"
    },
    "7603": {
      "op": "DUP3"
    },
    "7604": {
      "op": "SSTORE"
    },
    "7605": {
      "op": "SWAP2"
    },
    "7606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7608": {
      "op": "ADD"
    },
    "7609": {
      "op": "SWAP2"
    },
    "7610": {
      "op": "SWAP1"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7613": {
      "op": "ADD"
    },
    "7614": {
      "op": "SWAP1"
    },
    "7615": {
      "op": "PUSH2",
      "value": "0x1DA8"
    },
    "7618": {
      "op": "JUMP"
    },
    "7619": {
      "op": "JUMPDEST"
    },
    "7620": {
      "op": "POP"
    },
    "7621": {
      "op": "PUSH2",
      "value": "0x1DCF"
    },
    "7624": {
      "op": "SWAP3"
    },
    "7625": {
      "op": "SWAP2"
    },
    "7626": {
      "op": "POP"
    },
    "7627": {
      "op": "PUSH2",
      "value": "0x1E28"
    },
    "7630": {
      "jump": "i",
      "op": "JUMP"
    },
    "7631": {
      "op": "JUMPDEST"
    },
    "7632": {
      "op": "POP"
    },
    "7633": {
      "op": "SWAP1"
    },
    "7634": {
      "jump": "o",
      "op": "JUMP"
    },
    "7635": {
      "op": "JUMPDEST"
    },
    "7636": {
      "op": "DUP3"
    },
    "7637": {
      "op": "DUP1"
    },
    "7638": {
      "op": "SLOAD"
    },
    "7639": {
      "op": "DUP3"
    },
    "7640": {
      "op": "DUP3"
    },
    "7641": {
      "op": "SSTORE"
    },
    "7642": {
      "op": "SWAP1"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7645": {
      "op": "MSTORE"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7650": {
      "op": "KECCAK256"
    },
    "7651": {
      "op": "SWAP1"
    },
    "7652": {
      "op": "DUP2"
    },
    "7653": {
      "op": "ADD"
    },
    "7654": {
      "op": "SWAP3"
    },
    "7655": {
      "op": "DUP3"
    },
    "7656": {
      "op": "ISZERO"
    },
    "7657": {
      "op": "PUSH2",
      "value": "0x1DC3"
    },
    "7660": {
      "op": "JUMPI"
    },
    "7661": {
      "op": "SWAP2"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7664": {
      "op": "MUL"
    },
    "7665": {
      "op": "DUP3"
    },
    "7666": {
      "op": "ADD"
    },
    "7667": {
      "op": "JUMPDEST"
    },
    "7668": {
      "op": "DUP3"
    },
    "7669": {
      "op": "DUP2"
    },
    "7670": {
      "op": "GT"
    },
    "7671": {
      "op": "ISZERO"
    },
    "7672": {
      "op": "PUSH2",
      "value": "0x1DC3"
    },
    "7675": {
      "op": "JUMPI"
    },
    "7676": {
      "op": "DUP3"
    },
    "7677": {
      "op": "MLOAD"
    },
    "7678": {
      "op": "DUP3"
    },
    "7679": {
      "op": "SLOAD"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7686": {
      "op": "SHL"
    },
    "7687": {
      "op": "SUB"
    },
    "7688": {
      "op": "NOT"
    },
    "7689": {
      "op": "AND"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7696": {
      "op": "SHL"
    },
    "7697": {
      "op": "SUB"
    },
    "7698": {
      "op": "SWAP1"
    },
    "7699": {
      "op": "SWAP2"
    },
    "7700": {
      "op": "AND"
    },
    "7701": {
      "op": "OR"
    },
    "7702": {
      "op": "DUP3"
    },
    "7703": {
      "op": "SSTORE"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7706": {
      "op": "SWAP1"
    },
    "7707": {
      "op": "SWAP3"
    },
    "7708": {
      "op": "ADD"
    },
    "7709": {
      "op": "SWAP2"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7712": {
      "op": "SWAP1"
    },
    "7713": {
      "op": "SWAP2"
    },
    "7714": {
      "op": "ADD"
    },
    "7715": {
      "op": "SWAP1"
    },
    "7716": {
      "op": "PUSH2",
      "value": "0x1DF3"
    },
    "7719": {
      "op": "JUMP"
    },
    "7720": {
      "op": "JUMPDEST"
    },
    "7721": {
      "op": "JUMPDEST"
    },
    "7722": {
      "op": "DUP1"
    },
    "7723": {
      "op": "DUP3"
    },
    "7724": {
      "op": "GT"
    },
    "7725": {
      "op": "ISZERO"
    },
    "7726": {
      "op": "PUSH2",
      "value": "0x1DCF"
    },
    "7729": {
      "op": "JUMPI"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7732": {
      "op": "DUP2"
    },
    "7733": {
      "op": "SSTORE"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7736": {
      "op": "ADD"
    },
    "7737": {
      "op": "PUSH2",
      "value": "0x1E29"
    },
    "7740": {
      "op": "JUMP"
    },
    "7741": {
      "op": "JUMPDEST"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7746": {
      "op": "DUP1"
    },
    "7747": {
      "op": "DUP4"
    },
    "7748": {
      "op": "MSTORE"
    },
    "7749": {
      "op": "DUP4"
    },
    "7750": {
      "op": "MLOAD"
    },
    "7751": {
      "op": "DUP1"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7754": {
      "op": "DUP6"
    },
    "7755": {
      "op": "ADD"
    },
    "7756": {
      "op": "MSTORE"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7759": {
      "op": "JUMPDEST"
    },
    "7760": {
      "op": "DUP2"
    },
    "7761": {
      "op": "DUP2"
    },
    "7762": {
      "op": "LT"
    },
    "7763": {
      "op": "ISZERO"
    },
    "7764": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7767": {
      "op": "JUMPI"
    },
    "7768": {
      "op": "DUP6"
    },
    "7769": {
      "op": "DUP2"
    },
    "7770": {
      "op": "ADD"
    },
    "7771": {
      "op": "DUP4"
    },
    "7772": {
      "op": "ADD"
    },
    "7773": {
      "op": "MLOAD"
    },
    "7774": {
      "op": "DUP6"
    },
    "7775": {
      "op": "DUP3"
    },
    "7776": {
      "op": "ADD"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7779": {
      "op": "ADD"
    },
    "7780": {
      "op": "MSTORE"
    },
    "7781": {
      "op": "DUP3"
    },
    "7782": {
      "op": "ADD"
    },
    "7783": {
      "op": "PUSH2",
      "value": "0x1E4F"
    },
    "7786": {
      "op": "JUMP"
    },
    "7787": {
      "op": "JUMPDEST"
    },
    "7788": {
      "op": "POP"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7793": {
      "op": "DUP3"
    },
    "7794": {
      "op": "DUP7"
    },
    "7795": {
      "op": "ADD"
    },
    "7796": {
      "op": "ADD"
    },
    "7797": {
      "op": "MSTORE"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7802": {
      "op": "NOT"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7805": {
      "op": "DUP4"
    },
    "7806": {
      "op": "ADD"
    },
    "7807": {
      "op": "AND"
    },
    "7808": {
      "op": "DUP6"
    },
    "7809": {
      "op": "ADD"
    },
    "7810": {
      "op": "ADD"
    },
    "7811": {
      "op": "SWAP3"
    },
    "7812": {
      "op": "POP"
    },
    "7813": {
      "op": "POP"
    },
    "7814": {
      "op": "POP"
    },
    "7815": {
      "op": "SWAP3"
    },
    "7816": {
      "op": "SWAP2"
    },
    "7817": {
      "op": "POP"
    },
    "7818": {
      "op": "POP"
    },
    "7819": {
      "jump": "o",
      "op": "JUMP"
    },
    "7820": {
      "op": "JUMPDEST"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7827": {
      "op": "SHL"
    },
    "7828": {
      "op": "SUB"
    },
    "7829": {
      "op": "DUP2"
    },
    "7830": {
      "op": "AND"
    },
    "7831": {
      "op": "DUP2"
    },
    "7832": {
      "op": "EQ"
    },
    "7833": {
      "op": "PUSH2",
      "value": "0xD17"
    },
    "7836": {
      "op": "JUMPI"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7839": {
      "op": "DUP1"
    },
    "7840": {
      "op": "REVERT"
    },
    "7841": {
      "op": "JUMPDEST"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7844": {
      "op": "DUP1"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7847": {
      "op": "DUP4"
    },
    "7848": {
      "op": "DUP6"
    },
    "7849": {
      "op": "SUB"
    },
    "7850": {
      "op": "SLT"
    },
    "7851": {
      "op": "ISZERO"
    },
    "7852": {
      "op": "PUSH2",
      "value": "0x1EB4"
    },
    "7855": {
      "op": "JUMPI"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7858": {
      "op": "DUP1"
    },
    "7859": {
      "op": "REVERT"
    },
    "7860": {
      "op": "JUMPDEST"
    },
    "7861": {
      "op": "DUP3"
    },
    "7862": {
      "op": "CALLDATALOAD"
    },
    "7863": {
      "op": "PUSH2",
      "value": "0x1EBF"
    },
    "7866": {
      "op": "DUP2"
    },
    "7867": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "7870": {
      "jump": "i",
      "op": "JUMP"
    },
    "7871": {
      "op": "JUMPDEST"
    },
    "7872": {
      "op": "SWAP5"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7875": {
      "op": "SWAP4"
    },
    "7876": {
      "op": "SWAP1"
    },
    "7877": {
      "op": "SWAP4"
    },
    "7878": {
      "op": "ADD"
    },
    "7879": {
      "op": "CALLDATALOAD"
    },
    "7880": {
      "op": "SWAP4"
    },
    "7881": {
      "op": "POP"
    },
    "7882": {
      "op": "POP"
    },
    "7883": {
      "op": "POP"
    },
    "7884": {
      "jump": "o",
      "op": "JUMP"
    },
    "7885": {
      "op": "JUMPDEST"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7890": {
      "op": "DUP3"
    },
    "7891": {
      "op": "DUP5"
    },
    "7892": {
      "op": "SUB"
    },
    "7893": {
      "op": "SLT"
    },
    "7894": {
      "op": "ISZERO"
    },
    "7895": {
      "op": "PUSH2",
      "value": "0x1EDF"
    },
    "7898": {
      "op": "JUMPI"
    },
    "7899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7901": {
      "op": "DUP1"
    },
    "7902": {
      "op": "REVERT"
    },
    "7903": {
      "op": "JUMPDEST"
    },
    "7904": {
      "op": "POP"
    },
    "7905": {
      "op": "CALLDATALOAD"
    },
    "7906": {
      "op": "SWAP2"
    },
    "7907": {
      "op": "SWAP1"
    },
    "7908": {
      "op": "POP"
    },
    "7909": {
      "jump": "o",
      "op": "JUMP"
    },
    "7910": {
      "op": "JUMPDEST"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7913": {
      "op": "DUP1"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7918": {
      "op": "DUP5"
    },
    "7919": {
      "op": "DUP7"
    },
    "7920": {
      "op": "SUB"
    },
    "7921": {
      "op": "SLT"
    },
    "7922": {
      "op": "ISZERO"
    },
    "7923": {
      "op": "PUSH2",
      "value": "0x1EFB"
    },
    "7926": {
      "op": "JUMPI"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7929": {
      "op": "DUP1"
    },
    "7930": {
      "op": "REVERT"
    },
    "7931": {
      "op": "JUMPDEST"
    },
    "7932": {
      "op": "DUP4"
    },
    "7933": {
      "op": "CALLDATALOAD"
    },
    "7934": {
      "op": "PUSH2",
      "value": "0x1F06"
    },
    "7937": {
      "op": "DUP2"
    },
    "7938": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "7941": {
      "jump": "i",
      "op": "JUMP"
    },
    "7942": {
      "op": "JUMPDEST"
    },
    "7943": {
      "op": "SWAP3"
    },
    "7944": {
      "op": "POP"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7947": {
      "op": "DUP5"
    },
    "7948": {
      "op": "ADD"
    },
    "7949": {
      "op": "CALLDATALOAD"
    },
    "7950": {
      "op": "PUSH2",
      "value": "0x1F16"
    },
    "7953": {
      "op": "DUP2"
    },
    "7954": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "7957": {
      "jump": "i",
      "op": "JUMP"
    },
    "7958": {
      "op": "JUMPDEST"
    },
    "7959": {
      "op": "SWAP3"
    },
    "7960": {
      "op": "SWAP6"
    },
    "7961": {
      "op": "SWAP3"
    },
    "7962": {
      "op": "SWAP5"
    },
    "7963": {
      "op": "POP"
    },
    "7964": {
      "op": "POP"
    },
    "7965": {
      "op": "POP"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7968": {
      "op": "SWAP2"
    },
    "7969": {
      "op": "SWAP1"
    },
    "7970": {
      "op": "SWAP2"
    },
    "7971": {
      "op": "ADD"
    },
    "7972": {
      "op": "CALLDATALOAD"
    },
    "7973": {
      "op": "SWAP1"
    },
    "7974": {
      "jump": "o",
      "op": "JUMP"
    },
    "7975": {
      "op": "JUMPDEST"
    },
    "7976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7980": {
      "op": "DUP3"
    },
    "7981": {
      "op": "DUP5"
    },
    "7982": {
      "op": "SUB"
    },
    "7983": {
      "op": "SLT"
    },
    "7984": {
      "op": "ISZERO"
    },
    "7985": {
      "op": "PUSH2",
      "value": "0x1F39"
    },
    "7988": {
      "op": "JUMPI"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7991": {
      "op": "DUP1"
    },
    "7992": {
      "op": "REVERT"
    },
    "7993": {
      "op": "JUMPDEST"
    },
    "7994": {
      "op": "DUP2"
    },
    "7995": {
      "op": "CALLDATALOAD"
    },
    "7996": {
      "op": "PUSH2",
      "value": "0x1F44"
    },
    "7999": {
      "op": "DUP2"
    },
    "8000": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "8003": {
      "jump": "i",
      "op": "JUMP"
    },
    "8004": {
      "op": "JUMPDEST"
    },
    "8005": {
      "op": "SWAP4"
    },
    "8006": {
      "op": "SWAP3"
    },
    "8007": {
      "op": "POP"
    },
    "8008": {
      "op": "POP"
    },
    "8009": {
      "op": "POP"
    },
    "8010": {
      "jump": "o",
      "op": "JUMP"
    },
    "8011": {
      "op": "JUMPDEST"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8016": {
      "op": "DUP3"
    },
    "8017": {
      "op": "DUP5"
    },
    "8018": {
      "op": "SUB"
    },
    "8019": {
      "op": "SLT"
    },
    "8020": {
      "op": "ISZERO"
    },
    "8021": {
      "op": "PUSH2",
      "value": "0x1F5D"
    },
    "8024": {
      "op": "JUMPI"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8027": {
      "op": "DUP1"
    },
    "8028": {
      "op": "REVERT"
    },
    "8029": {
      "op": "JUMPDEST"
    },
    "8030": {
      "op": "DUP2"
    },
    "8031": {
      "op": "CALLDATALOAD"
    },
    "8032": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "8037": {
      "op": "DUP2"
    },
    "8038": {
      "op": "AND"
    },
    "8039": {
      "op": "DUP2"
    },
    "8040": {
      "op": "EQ"
    },
    "8041": {
      "op": "PUSH2",
      "value": "0x1F44"
    },
    "8044": {
      "op": "JUMPI"
    },
    "8045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8047": {
      "op": "DUP1"
    },
    "8048": {
      "op": "REVERT"
    },
    "8049": {
      "op": "JUMPDEST"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8052": {
      "op": "DUP1"
    },
    "8053": {
      "op": "DUP3"
    },
    "8054": {
      "op": "MSTORE"
    },
    "8055": {
      "op": "DUP3"
    },
    "8056": {
      "op": "MLOAD"
    },
    "8057": {
      "op": "DUP3"
    },
    "8058": {
      "op": "DUP3"
    },
    "8059": {
      "op": "ADD"
    },
    "8060": {
      "op": "DUP2"
    },
    "8061": {
      "op": "SWAP1"
    },
    "8062": {
      "op": "MSTORE"
    },
    "8063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8065": {
      "op": "SWAP2"
    },
    "8066": {
      "op": "SWAP1"
    },
    "8067": {
      "op": "DUP5"
    },
    "8068": {
      "op": "DUP3"
    },
    "8069": {
      "op": "ADD"
    },
    "8070": {
      "op": "SWAP1"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8073": {
      "op": "DUP6"
    },
    "8074": {
      "op": "ADD"
    },
    "8075": {
      "op": "SWAP1"
    },
    "8076": {
      "op": "DUP5"
    },
    "8077": {
      "op": "JUMPDEST"
    },
    "8078": {
      "op": "DUP2"
    },
    "8079": {
      "op": "DUP2"
    },
    "8080": {
      "op": "LT"
    },
    "8081": {
      "op": "ISZERO"
    },
    "8082": {
      "op": "PUSH2",
      "value": "0x1FB2"
    },
    "8085": {
      "op": "JUMPI"
    },
    "8086": {
      "op": "DUP4"
    },
    "8087": {
      "op": "MLOAD"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8094": {
      "op": "SHL"
    },
    "8095": {
      "op": "SUB"
    },
    "8096": {
      "op": "AND"
    },
    "8097": {
      "op": "DUP4"
    },
    "8098": {
      "op": "MSTORE"
    },
    "8099": {
      "op": "SWAP3"
    },
    "8100": {
      "op": "DUP5"
    },
    "8101": {
      "op": "ADD"
    },
    "8102": {
      "op": "SWAP3"
    },
    "8103": {
      "op": "SWAP2"
    },
    "8104": {
      "op": "DUP5"
    },
    "8105": {
      "op": "ADD"
    },
    "8106": {
      "op": "SWAP2"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8109": {
      "op": "ADD"
    },
    "8110": {
      "op": "PUSH2",
      "value": "0x1F8D"
    },
    "8113": {
      "op": "JUMP"
    },
    "8114": {
      "op": "JUMPDEST"
    },
    "8115": {
      "op": "POP"
    },
    "8116": {
      "op": "SWAP1"
    },
    "8117": {
      "op": "SWAP7"
    },
    "8118": {
      "op": "SWAP6"
    },
    "8119": {
      "op": "POP"
    },
    "8120": {
      "op": "POP"
    },
    "8121": {
      "op": "POP"
    },
    "8122": {
      "op": "POP"
    },
    "8123": {
      "op": "POP"
    },
    "8124": {
      "op": "POP"
    },
    "8125": {
      "jump": "o",
      "op": "JUMP"
    },
    "8126": {
      "op": "JUMPDEST"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8129": {
      "op": "DUP1"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8132": {
      "op": "DUP4"
    },
    "8133": {
      "op": "DUP6"
    },
    "8134": {
      "op": "SUB"
    },
    "8135": {
      "op": "SLT"
    },
    "8136": {
      "op": "ISZERO"
    },
    "8137": {
      "op": "PUSH2",
      "value": "0x1FD1"
    },
    "8140": {
      "op": "JUMPI"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8143": {
      "op": "DUP1"
    },
    "8144": {
      "op": "REVERT"
    },
    "8145": {
      "op": "JUMPDEST"
    },
    "8146": {
      "op": "DUP3"
    },
    "8147": {
      "op": "CALLDATALOAD"
    },
    "8148": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8157": {
      "op": "DUP1"
    },
    "8158": {
      "op": "DUP3"
    },
    "8159": {
      "op": "GT"
    },
    "8160": {
      "op": "ISZERO"
    },
    "8161": {
      "op": "PUSH2",
      "value": "0x1FE9"
    },
    "8164": {
      "op": "JUMPI"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8167": {
      "op": "DUP1"
    },
    "8168": {
      "op": "REVERT"
    },
    "8169": {
      "op": "JUMPDEST"
    },
    "8170": {
      "op": "DUP2"
    },
    "8171": {
      "op": "DUP6"
    },
    "8172": {
      "op": "ADD"
    },
    "8173": {
      "op": "SWAP2"
    },
    "8174": {
      "op": "POP"
    },
    "8175": {
      "op": "DUP6"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8178": {
      "op": "DUP4"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "op": "SLT"
    },
    "8181": {
      "op": "PUSH2",
      "value": "0x1FFD"
    },
    "8184": {
      "op": "JUMPI"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8187": {
      "op": "DUP1"
    },
    "8188": {
      "op": "REVERT"
    },
    "8189": {
      "op": "JUMPDEST"
    },
    "8190": {
      "op": "DUP2"
    },
    "8191": {
      "op": "CALLDATALOAD"
    },
    "8192": {
      "op": "DUP2"
    },
    "8193": {
      "op": "DUP2"
    },
    "8194": {
      "op": "GT"
    },
    "8195": {
      "op": "ISZERO"
    },
    "8196": {
      "op": "PUSH2",
      "value": "0x200C"
    },
    "8199": {
      "op": "JUMPI"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8202": {
      "op": "DUP1"
    },
    "8203": {
      "op": "REVERT"
    },
    "8204": {
      "op": "JUMPDEST"
    },
    "8205": {
      "op": "DUP7"
    },
    "8206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8208": {
      "op": "DUP3"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8211": {
      "op": "SHL"
    },
    "8212": {
      "op": "DUP6"
    },
    "8213": {
      "op": "ADD"
    },
    "8214": {
      "op": "ADD"
    },
    "8215": {
      "op": "GT"
    },
    "8216": {
      "op": "ISZERO"
    },
    "8217": {
      "op": "PUSH2",
      "value": "0x2021"
    },
    "8220": {
      "op": "JUMPI"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8223": {
      "op": "DUP1"
    },
    "8224": {
      "op": "REVERT"
    },
    "8225": {
      "op": "JUMPDEST"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8228": {
      "op": "SWAP3"
    },
    "8229": {
      "op": "SWAP1"
    },
    "8230": {
      "op": "SWAP3"
    },
    "8231": {
      "op": "ADD"
    },
    "8232": {
      "op": "SWAP7"
    },
    "8233": {
      "op": "SWAP2"
    },
    "8234": {
      "op": "SWAP6"
    },
    "8235": {
      "op": "POP"
    },
    "8236": {
      "op": "SWAP1"
    },
    "8237": {
      "op": "SWAP4"
    },
    "8238": {
      "op": "POP"
    },
    "8239": {
      "op": "POP"
    },
    "8240": {
      "op": "POP"
    },
    "8241": {
      "op": "POP"
    },
    "8242": {
      "jump": "o",
      "op": "JUMP"
    },
    "8243": {
      "op": "JUMPDEST"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8246": {
      "op": "DUP1"
    },
    "8247": {
      "op": "DUP3"
    },
    "8248": {
      "op": "MSTORE"
    },
    "8249": {
      "op": "DUP3"
    },
    "8250": {
      "op": "MLOAD"
    },
    "8251": {
      "op": "DUP3"
    },
    "8252": {
      "op": "DUP3"
    },
    "8253": {
      "op": "ADD"
    },
    "8254": {
      "op": "DUP2"
    },
    "8255": {
      "op": "SWAP1"
    },
    "8256": {
      "op": "MSTORE"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8259": {
      "op": "SWAP2"
    },
    "8260": {
      "op": "SWAP1"
    },
    "8261": {
      "op": "DUP5"
    },
    "8262": {
      "op": "DUP3"
    },
    "8263": {
      "op": "ADD"
    },
    "8264": {
      "op": "SWAP1"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8267": {
      "op": "DUP6"
    },
    "8268": {
      "op": "ADD"
    },
    "8269": {
      "op": "SWAP1"
    },
    "8270": {
      "op": "DUP5"
    },
    "8271": {
      "op": "JUMPDEST"
    },
    "8272": {
      "op": "DUP2"
    },
    "8273": {
      "op": "DUP2"
    },
    "8274": {
      "op": "LT"
    },
    "8275": {
      "op": "ISZERO"
    },
    "8276": {
      "op": "PUSH2",
      "value": "0x1FB2"
    },
    "8279": {
      "op": "JUMPI"
    },
    "8280": {
      "op": "DUP4"
    },
    "8281": {
      "op": "MLOAD"
    },
    "8282": {
      "op": "DUP4"
    },
    "8283": {
      "op": "MSTORE"
    },
    "8284": {
      "op": "SWAP3"
    },
    "8285": {
      "op": "DUP5"
    },
    "8286": {
      "op": "ADD"
    },
    "8287": {
      "op": "SWAP3"
    },
    "8288": {
      "op": "SWAP2"
    },
    "8289": {
      "op": "DUP5"
    },
    "8290": {
      "op": "ADD"
    },
    "8291": {
      "op": "SWAP2"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8294": {
      "op": "ADD"
    },
    "8295": {
      "op": "PUSH2",
      "value": "0x204F"
    },
    "8298": {
      "op": "JUMP"
    },
    "8299": {
      "op": "JUMPDEST"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8302": {
      "op": "DUP1"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8305": {
      "op": "DUP4"
    },
    "8306": {
      "op": "DUP6"
    },
    "8307": {
      "op": "SUB"
    },
    "8308": {
      "op": "SLT"
    },
    "8309": {
      "op": "ISZERO"
    },
    "8310": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "8313": {
      "op": "JUMPI"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8316": {
      "op": "DUP1"
    },
    "8317": {
      "op": "REVERT"
    },
    "8318": {
      "op": "JUMPDEST"
    },
    "8319": {
      "op": "DUP3"
    },
    "8320": {
      "op": "CALLDATALOAD"
    },
    "8321": {
      "op": "PUSH2",
      "value": "0x2089"
    },
    "8324": {
      "op": "DUP2"
    },
    "8325": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "8328": {
      "jump": "i",
      "op": "JUMP"
    },
    "8329": {
      "op": "JUMPDEST"
    },
    "8330": {
      "op": "SWAP2"
    },
    "8331": {
      "op": "POP"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8334": {
      "op": "DUP4"
    },
    "8335": {
      "op": "ADD"
    },
    "8336": {
      "op": "CALLDATALOAD"
    },
    "8337": {
      "op": "PUSH2",
      "value": "0x2099"
    },
    "8340": {
      "op": "DUP2"
    },
    "8341": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "8344": {
      "jump": "i",
      "op": "JUMP"
    },
    "8345": {
      "op": "JUMPDEST"
    },
    "8346": {
      "op": "DUP1"
    },
    "8347": {
      "op": "SWAP2"
    },
    "8348": {
      "op": "POP"
    },
    "8349": {
      "op": "POP"
    },
    "8350": {
      "op": "SWAP3"
    },
    "8351": {
      "op": "POP"
    },
    "8352": {
      "op": "SWAP3"
    },
    "8353": {
      "op": "SWAP1"
    },
    "8354": {
      "op": "POP"
    },
    "8355": {
      "jump": "o",
      "op": "JUMP"
    },
    "8356": {
      "op": "JUMPDEST"
    },
    "8357": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8364": {
      "op": "SHL"
    },
    "8365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8367": {
      "op": "MSTORE"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8372": {
      "op": "MSTORE"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8377": {
      "op": "REVERT"
    },
    "8378": {
      "op": "JUMPDEST"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8381": {
      "op": "MLOAD"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8384": {
      "op": "DUP3"
    },
    "8385": {
      "op": "ADD"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8388": {
      "op": "NOT"
    },
    "8389": {
      "op": "AND"
    },
    "8390": {
      "op": "DUP2"
    },
    "8391": {
      "op": "ADD"
    },
    "8392": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8401": {
      "op": "DUP2"
    },
    "8402": {
      "op": "GT"
    },
    "8403": {
      "op": "DUP3"
    },
    "8404": {
      "op": "DUP3"
    },
    "8405": {
      "op": "LT"
    },
    "8406": {
      "op": "OR"
    },
    "8407": {
      "op": "ISZERO"
    },
    "8408": {
      "op": "PUSH2",
      "value": "0x20E3"
    },
    "8411": {
      "op": "JUMPI"
    },
    "8412": {
      "op": "PUSH2",
      "value": "0x20E3"
    },
    "8415": {
      "op": "PUSH2",
      "value": "0x20A4"
    },
    "8418": {
      "jump": "i",
      "op": "JUMP"
    },
    "8419": {
      "op": "JUMPDEST"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8422": {
      "op": "MSTORE"
    },
    "8423": {
      "op": "SWAP2"
    },
    "8424": {
      "op": "SWAP1"
    },
    "8425": {
      "op": "POP"
    },
    "8426": {
      "jump": "o",
      "op": "JUMP"
    },
    "8427": {
      "op": "JUMPDEST"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8430": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8439": {
      "op": "DUP3"
    },
    "8440": {
      "op": "GT"
    },
    "8441": {
      "op": "ISZERO"
    },
    "8442": {
      "op": "PUSH2",
      "value": "0x2105"
    },
    "8445": {
      "op": "JUMPI"
    },
    "8446": {
      "op": "PUSH2",
      "value": "0x2105"
    },
    "8449": {
      "op": "PUSH2",
      "value": "0x20A4"
    },
    "8452": {
      "jump": "i",
      "op": "JUMP"
    },
    "8453": {
      "op": "JUMPDEST"
    },
    "8454": {
      "op": "POP"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8457": {
      "op": "SHL"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8460": {
      "op": "ADD"
    },
    "8461": {
      "op": "SWAP1"
    },
    "8462": {
      "jump": "o",
      "op": "JUMP"
    },
    "8463": {
      "op": "JUMPDEST"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8466": {
      "op": "DUP1"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8469": {
      "op": "DUP4"
    },
    "8470": {
      "op": "DUP6"
    },
    "8471": {
      "op": "SUB"
    },
    "8472": {
      "op": "SLT"
    },
    "8473": {
      "op": "ISZERO"
    },
    "8474": {
      "op": "PUSH2",
      "value": "0x2122"
    },
    "8477": {
      "op": "JUMPI"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8480": {
      "op": "DUP1"
    },
    "8481": {
      "op": "REVERT"
    },
    "8482": {
      "op": "JUMPDEST"
    },
    "8483": {
      "op": "DUP3"
    },
    "8484": {
      "op": "CALLDATALOAD"
    },
    "8485": {
      "op": "SWAP2"
    },
    "8486": {
      "op": "POP"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8489": {
      "op": "DUP1"
    },
    "8490": {
      "op": "DUP5"
    },
    "8491": {
      "op": "ADD"
    },
    "8492": {
      "op": "CALLDATALOAD"
    },
    "8493": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8502": {
      "op": "DUP2"
    },
    "8503": {
      "op": "GT"
    },
    "8504": {
      "op": "ISZERO"
    },
    "8505": {
      "op": "PUSH2",
      "value": "0x2141"
    },
    "8508": {
      "op": "JUMPI"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8511": {
      "op": "DUP1"
    },
    "8512": {
      "op": "REVERT"
    },
    "8513": {
      "op": "JUMPDEST"
    },
    "8514": {
      "op": "DUP5"
    },
    "8515": {
      "op": "ADD"
    },
    "8516": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8518": {
      "op": "DUP2"
    },
    "8519": {
      "op": "ADD"
    },
    "8520": {
      "op": "DUP7"
    },
    "8521": {
      "op": "SGT"
    },
    "8522": {
      "op": "PUSH2",
      "value": "0x2152"
    },
    "8525": {
      "op": "JUMPI"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8528": {
      "op": "DUP1"
    },
    "8529": {
      "op": "REVERT"
    },
    "8530": {
      "op": "JUMPDEST"
    },
    "8531": {
      "op": "DUP1"
    },
    "8532": {
      "op": "CALLDATALOAD"
    },
    "8533": {
      "op": "PUSH2",
      "value": "0x2165"
    },
    "8536": {
      "op": "PUSH2",
      "value": "0x2160"
    },
    "8539": {
      "op": "DUP3"
    },
    "8540": {
      "op": "PUSH2",
      "value": "0x20EB"
    },
    "8543": {
      "jump": "i",
      "op": "JUMP"
    },
    "8544": {
      "op": "JUMPDEST"
    },
    "8545": {
      "op": "PUSH2",
      "value": "0x20BA"
    },
    "8548": {
      "jump": "i",
      "op": "JUMP"
    },
    "8549": {
      "op": "JUMPDEST"
    },
    "8550": {
      "op": "DUP2"
    },
    "8551": {
      "op": "DUP2"
    },
    "8552": {
      "op": "MSTORE"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8555": {
      "op": "SWAP2"
    },
    "8556": {
      "op": "SWAP1"
    },
    "8557": {
      "op": "SWAP2"
    },
    "8558": {
      "op": "SHL"
    },
    "8559": {
      "op": "DUP3"
    },
    "8560": {
      "op": "ADD"
    },
    "8561": {
      "op": "DUP4"
    },
    "8562": {
      "op": "ADD"
    },
    "8563": {
      "op": "SWAP1"
    },
    "8564": {
      "op": "DUP4"
    },
    "8565": {
      "op": "DUP2"
    },
    "8566": {
      "op": "ADD"
    },
    "8567": {
      "op": "SWAP1"
    },
    "8568": {
      "op": "DUP9"
    },
    "8569": {
      "op": "DUP4"
    },
    "8570": {
      "op": "GT"
    },
    "8571": {
      "op": "ISZERO"
    },
    "8572": {
      "op": "PUSH2",
      "value": "0x2184"
    },
    "8575": {
      "op": "JUMPI"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8578": {
      "op": "DUP1"
    },
    "8579": {
      "op": "REVERT"
    },
    "8580": {
      "op": "JUMPDEST"
    },
    "8581": {
      "op": "SWAP3"
    },
    "8582": {
      "op": "DUP5"
    },
    "8583": {
      "op": "ADD"
    },
    "8584": {
      "op": "SWAP3"
    },
    "8585": {
      "op": "JUMPDEST"
    },
    "8586": {
      "op": "DUP3"
    },
    "8587": {
      "op": "DUP5"
    },
    "8588": {
      "op": "LT"
    },
    "8589": {
      "op": "ISZERO"
    },
    "8590": {
      "op": "PUSH2",
      "value": "0x21AB"
    },
    "8593": {
      "op": "JUMPI"
    },
    "8594": {
      "op": "DUP4"
    },
    "8595": {
      "op": "CALLDATALOAD"
    },
    "8596": {
      "op": "PUSH2",
      "value": "0x219C"
    },
    "8599": {
      "op": "DUP2"
    },
    "8600": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "8603": {
      "jump": "i",
      "op": "JUMP"
    },
    "8604": {
      "op": "JUMPDEST"
    },
    "8605": {
      "op": "DUP3"
    },
    "8606": {
      "op": "MSTORE"
    },
    "8607": {
      "op": "SWAP3"
    },
    "8608": {
      "op": "DUP5"
    },
    "8609": {
      "op": "ADD"
    },
    "8610": {
      "op": "SWAP3"
    },
    "8611": {
      "op": "SWAP1"
    },
    "8612": {
      "op": "DUP5"
    },
    "8613": {
      "op": "ADD"
    },
    "8614": {
      "op": "SWAP1"
    },
    "8615": {
      "op": "PUSH2",
      "value": "0x2189"
    },
    "8618": {
      "op": "JUMP"
    },
    "8619": {
      "op": "JUMPDEST"
    },
    "8620": {
      "op": "DUP1"
    },
    "8621": {
      "op": "SWAP6"
    },
    "8622": {
      "op": "POP"
    },
    "8623": {
      "op": "POP"
    },
    "8624": {
      "op": "POP"
    },
    "8625": {
      "op": "POP"
    },
    "8626": {
      "op": "POP"
    },
    "8627": {
      "op": "POP"
    },
    "8628": {
      "op": "SWAP3"
    },
    "8629": {
      "op": "POP"
    },
    "8630": {
      "op": "SWAP3"
    },
    "8631": {
      "op": "SWAP1"
    },
    "8632": {
      "op": "POP"
    },
    "8633": {
      "jump": "o",
      "op": "JUMP"
    },
    "8634": {
      "op": "JUMPDEST"
    },
    "8635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8637": {
      "op": "DUP2"
    },
    "8638": {
      "op": "DUP2"
    },
    "8639": {
      "op": "SHR"
    },
    "8640": {
      "op": "SWAP1"
    },
    "8641": {
      "op": "DUP3"
    },
    "8642": {
      "op": "AND"
    },
    "8643": {
      "op": "DUP1"
    },
    "8644": {
      "op": "PUSH2",
      "value": "0x21CE"
    },
    "8647": {
      "op": "JUMPI"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8650": {
      "op": "DUP3"
    },
    "8651": {
      "op": "AND"
    },
    "8652": {
      "op": "SWAP2"
    },
    "8653": {
      "op": "POP"
    },
    "8654": {
      "op": "JUMPDEST"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8657": {
      "op": "DUP3"
    },
    "8658": {
      "op": "LT"
    },
    "8659": {
      "op": "DUP2"
    },
    "8660": {
      "op": "SUB"
    },
    "8661": {
      "op": "PUSH2",
      "value": "0x21EE"
    },
    "8664": {
      "op": "JUMPI"
    },
    "8665": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8672": {
      "op": "SHL"
    },
    "8673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8675": {
      "op": "MSTORE"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8680": {
      "op": "MSTORE"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8685": {
      "op": "REVERT"
    },
    "8686": {
      "op": "JUMPDEST"
    },
    "8687": {
      "op": "POP"
    },
    "8688": {
      "op": "SWAP2"
    },
    "8689": {
      "op": "SWAP1"
    },
    "8690": {
      "op": "POP"
    },
    "8691": {
      "jump": "o",
      "op": "JUMP"
    },
    "8692": {
      "op": "JUMPDEST"
    },
    "8693": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8700": {
      "op": "SHL"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8703": {
      "op": "MSTORE"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8708": {
      "op": "MSTORE"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8713": {
      "op": "REVERT"
    },
    "8714": {
      "op": "JUMPDEST"
    },
    "8715": {
      "op": "DUP1"
    },
    "8716": {
      "op": "DUP3"
    },
    "8717": {
      "op": "ADD"
    },
    "8718": {
      "op": "DUP1"
    },
    "8719": {
      "op": "DUP3"
    },
    "8720": {
      "op": "GT"
    },
    "8721": {
      "op": "ISZERO"
    },
    "8722": {
      "op": "PUSH2",
      "value": "0x7F6"
    },
    "8725": {
      "op": "JUMPI"
    },
    "8726": {
      "op": "PUSH2",
      "value": "0x7F6"
    },
    "8729": {
      "op": "PUSH2",
      "value": "0x21F4"
    },
    "8732": {
      "jump": "i",
      "op": "JUMP"
    },
    "8733": {
      "op": "JUMPDEST"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8736": {
      "op": "DUP1"
    },
    "8737": {
      "op": "DUP3"
    },
    "8738": {
      "op": "MSTORE"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8741": {
      "op": "SWAP1"
    },
    "8742": {
      "op": "DUP3"
    },
    "8743": {
      "op": "ADD"
    },
    "8744": {
      "op": "MSTORE"
    },
    "8745": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8780": {
      "op": "DUP3"
    },
    "8781": {
      "op": "ADD"
    },
    "8782": {
      "op": "MSTORE"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "8787": {
      "op": "SHL"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8790": {
      "op": "DUP3"
    },
    "8791": {
      "op": "ADD"
    },
    "8792": {
      "op": "MSTORE"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8795": {
      "op": "ADD"
    },
    "8796": {
      "op": "SWAP1"
    },
    "8797": {
      "jump": "o",
      "op": "JUMP"
    },
    "8798": {
      "op": "JUMPDEST"
    },
    "8799": {
      "op": "DUP2"
    },
    "8800": {
      "op": "DUP2"
    },
    "8801": {
      "op": "SUB"
    },
    "8802": {
      "op": "DUP2"
    },
    "8803": {
      "op": "DUP2"
    },
    "8804": {
      "op": "GT"
    },
    "8805": {
      "op": "ISZERO"
    },
    "8806": {
      "op": "PUSH2",
      "value": "0x7F6"
    },
    "8809": {
      "op": "JUMPI"
    },
    "8810": {
      "op": "PUSH2",
      "value": "0x7F6"
    },
    "8813": {
      "op": "PUSH2",
      "value": "0x21F4"
    },
    "8816": {
      "jump": "i",
      "op": "JUMP"
    },
    "8817": {
      "op": "JUMPDEST"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8822": {
      "op": "DUP3"
    },
    "8823": {
      "op": "DUP5"
    },
    "8824": {
      "op": "SUB"
    },
    "8825": {
      "op": "SLT"
    },
    "8826": {
      "op": "ISZERO"
    },
    "8827": {
      "op": "PUSH2",
      "value": "0x2283"
    },
    "8830": {
      "op": "JUMPI"
    },
    "8831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8833": {
      "op": "DUP1"
    },
    "8834": {
      "op": "REVERT"
    },
    "8835": {
      "op": "JUMPDEST"
    },
    "8836": {
      "op": "POP"
    },
    "8837": {
      "op": "MLOAD"
    },
    "8838": {
      "op": "SWAP2"
    },
    "8839": {
      "op": "SWAP1"
    },
    "8840": {
      "op": "POP"
    },
    "8841": {
      "jump": "o",
      "op": "JUMP"
    },
    "8842": {
      "op": "JUMPDEST"
    },
    "8843": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8850": {
      "op": "SHL"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8853": {
      "op": "MSTORE"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8858": {
      "op": "MSTORE"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8863": {
      "op": "REVERT"
    },
    "8864": {
      "op": "JUMPDEST"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8869": {
      "op": "DUP1"
    },
    "8870": {
      "op": "DUP4"
    },
    "8871": {
      "op": "DUP6"
    },
    "8872": {
      "op": "SUB"
    },
    "8873": {
      "op": "SLT"
    },
    "8874": {
      "op": "ISZERO"
    },
    "8875": {
      "op": "PUSH2",
      "value": "0x22B3"
    },
    "8878": {
      "op": "JUMPI"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8881": {
      "op": "DUP1"
    },
    "8882": {
      "op": "REVERT"
    },
    "8883": {
      "op": "JUMPDEST"
    },
    "8884": {
      "op": "DUP3"
    },
    "8885": {
      "op": "MLOAD"
    },
    "8886": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8895": {
      "op": "DUP2"
    },
    "8896": {
      "op": "GT"
    },
    "8897": {
      "op": "ISZERO"
    },
    "8898": {
      "op": "PUSH2",
      "value": "0x22CA"
    },
    "8901": {
      "op": "JUMPI"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8904": {
      "op": "DUP1"
    },
    "8905": {
      "op": "REVERT"
    },
    "8906": {
      "op": "JUMPDEST"
    },
    "8907": {
      "op": "DUP4"
    },
    "8908": {
      "op": "ADD"
    },
    "8909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8911": {
      "op": "DUP2"
    },
    "8912": {
      "op": "ADD"
    },
    "8913": {
      "op": "DUP6"
    },
    "8914": {
      "op": "SGT"
    },
    "8915": {
      "op": "PUSH2",
      "value": "0x22DB"
    },
    "8918": {
      "op": "JUMPI"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8921": {
      "op": "DUP1"
    },
    "8922": {
      "op": "REVERT"
    },
    "8923": {
      "op": "JUMPDEST"
    },
    "8924": {
      "op": "DUP1"
    },
    "8925": {
      "op": "MLOAD"
    },
    "8926": {
      "op": "PUSH2",
      "value": "0x22E9"
    },
    "8929": {
      "op": "PUSH2",
      "value": "0x2160"
    },
    "8932": {
      "op": "DUP3"
    },
    "8933": {
      "op": "PUSH2",
      "value": "0x20EB"
    },
    "8936": {
      "jump": "i",
      "op": "JUMP"
    },
    "8937": {
      "op": "JUMPDEST"
    },
    "8938": {
      "op": "DUP2"
    },
    "8939": {
      "op": "DUP2"
    },
    "8940": {
      "op": "MSTORE"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8943": {
      "op": "SWAP2"
    },
    "8944": {
      "op": "SWAP1"
    },
    "8945": {
      "op": "SWAP2"
    },
    "8946": {
      "op": "SHL"
    },
    "8947": {
      "op": "DUP3"
    },
    "8948": {
      "op": "ADD"
    },
    "8949": {
      "op": "DUP4"
    },
    "8950": {
      "op": "ADD"
    },
    "8951": {
      "op": "SWAP1"
    },
    "8952": {
      "op": "DUP4"
    },
    "8953": {
      "op": "DUP2"
    },
    "8954": {
      "op": "ADD"
    },
    "8955": {
      "op": "SWAP1"
    },
    "8956": {
      "op": "DUP8"
    },
    "8957": {
      "op": "DUP4"
    },
    "8958": {
      "op": "GT"
    },
    "8959": {
      "op": "ISZERO"
    },
    "8960": {
      "op": "PUSH2",
      "value": "0x2308"
    },
    "8963": {
      "op": "JUMPI"
    },
    "8964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8966": {
      "op": "DUP1"
    },
    "8967": {
      "op": "REVERT"
    },
    "8968": {
      "op": "JUMPDEST"
    },
    "8969": {
      "op": "SWAP3"
    },
    "8970": {
      "op": "DUP5"
    },
    "8971": {
      "op": "ADD"
    },
    "8972": {
      "op": "SWAP3"
    },
    "8973": {
      "op": "JUMPDEST"
    },
    "8974": {
      "op": "DUP3"
    },
    "8975": {
      "op": "DUP5"
    },
    "8976": {
      "op": "LT"
    },
    "8977": {
      "op": "ISZERO"
    },
    "8978": {
      "op": "PUSH2",
      "value": "0x232F"
    },
    "8981": {
      "op": "JUMPI"
    },
    "8982": {
      "op": "DUP4"
    },
    "8983": {
      "op": "MLOAD"
    },
    "8984": {
      "op": "PUSH2",
      "value": "0x2320"
    },
    "8987": {
      "op": "DUP2"
    },
    "8988": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "8991": {
      "jump": "i",
      "op": "JUMP"
    },
    "8992": {
      "op": "JUMPDEST"
    },
    "8993": {
      "op": "DUP3"
    },
    "8994": {
      "op": "MSTORE"
    },
    "8995": {
      "op": "SWAP3"
    },
    "8996": {
      "op": "DUP5"
    },
    "8997": {
      "op": "ADD"
    },
    "8998": {
      "op": "SWAP3"
    },
    "8999": {
      "op": "SWAP1"
    },
    "9000": {
      "op": "DUP5"
    },
    "9001": {
      "op": "ADD"
    },
    "9002": {
      "op": "SWAP1"
    },
    "9003": {
      "op": "PUSH2",
      "value": "0x230D"
    },
    "9006": {
      "op": "JUMP"
    },
    "9007": {
      "op": "JUMPDEST"
    },
    "9008": {
      "op": "SWAP8"
    },
    "9009": {
      "op": "SWAP7"
    },
    "9010": {
      "op": "POP"
    },
    "9011": {
      "op": "POP"
    },
    "9012": {
      "op": "POP"
    },
    "9013": {
      "op": "POP"
    },
    "9014": {
      "op": "POP"
    },
    "9015": {
      "op": "POP"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "jump": "o",
      "op": "JUMP"
    },
    "9018": {
      "op": "JUMPDEST"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9023": {
      "op": "DUP3"
    },
    "9024": {
      "op": "ADD"
    },
    "9025": {
      "op": "PUSH2",
      "value": "0x234C"
    },
    "9028": {
      "op": "JUMPI"
    },
    "9029": {
      "op": "PUSH2",
      "value": "0x234C"
    },
    "9032": {
      "op": "PUSH2",
      "value": "0x21F4"
    },
    "9035": {
      "jump": "i",
      "op": "JUMP"
    },
    "9036": {
      "op": "JUMPDEST"
    },
    "9037": {
      "op": "POP"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9040": {
      "op": "ADD"
    },
    "9041": {
      "op": "SWAP1"
    },
    "9042": {
      "jump": "o",
      "op": "JUMP"
    },
    "9043": {
      "op": "JUMPDEST"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9046": {
      "op": "DUP1"
    },
    "9047": {
      "op": "DUP3"
    },
    "9048": {
      "op": "MSTORE"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9051": {
      "op": "SWAP1"
    },
    "9052": {
      "op": "DUP3"
    },
    "9053": {
      "op": "ADD"
    },
    "9054": {
      "op": "MSTORE"
    },
    "9055": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9090": {
      "op": "DUP3"
    },
    "9091": {
      "op": "ADD"
    },
    "9092": {
      "op": "MSTORE"
    },
    "9093": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "9102": {
      "op": "SHL"
    },
    "9103": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9105": {
      "op": "DUP3"
    },
    "9106": {
      "op": "ADD"
    },
    "9107": {
      "op": "MSTORE"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9110": {
      "op": "ADD"
    },
    "9111": {
      "op": "SWAP1"
    },
    "9112": {
      "jump": "o",
      "op": "JUMP"
    },
    "9113": {
      "op": "JUMPDEST"
    },
    "9114": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9121": {
      "op": "SHL"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9124": {
      "op": "MSTORE"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9129": {
      "op": "MSTORE"
    },
    "9130": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9134": {
      "op": "REVERT"
    },
    "9135": {
      "op": "JUMPDEST"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9138": {
      "op": "DUP1"
    },
    "9139": {
      "op": "DUP3"
    },
    "9140": {
      "op": "MSTORE"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "9143": {
      "op": "SWAP1"
    },
    "9144": {
      "op": "DUP3"
    },
    "9145": {
      "op": "ADD"
    },
    "9146": {
      "op": "MSTORE"
    },
    "9147": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9182": {
      "op": "DUP3"
    },
    "9183": {
      "op": "ADD"
    },
    "9184": {
      "op": "MSTORE"
    },
    "9185": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9199": {
      "op": "SHL"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9202": {
      "op": "DUP3"
    },
    "9203": {
      "op": "ADD"
    },
    "9204": {
      "op": "MSTORE"
    },
    "9205": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9207": {
      "op": "ADD"
    },
    "9208": {
      "op": "SWAP1"
    },
    "9209": {
      "jump": "o",
      "op": "JUMP"
    },
    "9210": {
      "op": "JUMPDEST"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9213": {
      "op": "DUP3"
    },
    "9214": {
      "op": "GT"
    },
    "9215": {
      "op": "ISZERO"
    },
    "9216": {
      "op": "PUSH2",
      "value": "0xA3A"
    },
    "9219": {
      "op": "JUMPI"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9222": {
      "op": "DUP2"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9225": {
      "op": "MSTORE"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9230": {
      "op": "KECCAK256"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9233": {
      "op": "DUP6"
    },
    "9234": {
      "op": "ADD"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9237": {
      "op": "SHR"
    },
    "9238": {
      "op": "DUP2"
    },
    "9239": {
      "op": "ADD"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9242": {
      "op": "DUP7"
    },
    "9243": {
      "op": "LT"
    },
    "9244": {
      "op": "ISZERO"
    },
    "9245": {
      "op": "PUSH2",
      "value": "0x2423"
    },
    "9248": {
      "op": "JUMPI"
    },
    "9249": {
      "op": "POP"
    },
    "9250": {
      "op": "DUP1"
    },
    "9251": {
      "op": "JUMPDEST"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9254": {
      "op": "DUP6"
    },
    "9255": {
      "op": "ADD"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9258": {
      "op": "SHR"
    },
    "9259": {
      "op": "DUP3"
    },
    "9260": {
      "op": "ADD"
    },
    "9261": {
      "op": "SWAP2"
    },
    "9262": {
      "op": "POP"
    },
    "9263": {
      "op": "JUMPDEST"
    },
    "9264": {
      "op": "DUP2"
    },
    "9265": {
      "op": "DUP2"
    },
    "9266": {
      "op": "LT"
    },
    "9267": {
      "op": "ISZERO"
    },
    "9268": {
      "op": "PUSH2",
      "value": "0x2442"
    },
    "9271": {
      "op": "JUMPI"
    },
    "9272": {
      "op": "DUP3"
    },
    "9273": {
      "op": "DUP2"
    },
    "9274": {
      "op": "SSTORE"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9277": {
      "op": "ADD"
    },
    "9278": {
      "op": "PUSH2",
      "value": "0x242F"
    },
    "9281": {
      "op": "JUMP"
    },
    "9282": {
      "op": "JUMPDEST"
    },
    "9283": {
      "op": "POP"
    },
    "9284": {
      "op": "POP"
    },
    "9285": {
      "op": "POP"
    },
    "9286": {
      "op": "POP"
    },
    "9287": {
      "op": "POP"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "jump": "o",
      "op": "JUMP"
    },
    "9290": {
      "op": "JUMPDEST"
    },
    "9291": {
      "op": "DUP2"
    },
    "9292": {
      "op": "MLOAD"
    },
    "9293": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9302": {
      "op": "DUP2"
    },
    "9303": {
      "op": "GT"
    },
    "9304": {
      "op": "ISZERO"
    },
    "9305": {
      "op": "PUSH2",
      "value": "0x2464"
    },
    "9308": {
      "op": "JUMPI"
    },
    "9309": {
      "op": "PUSH2",
      "value": "0x2464"
    },
    "9312": {
      "op": "PUSH2",
      "value": "0x20A4"
    },
    "9315": {
      "jump": "i",
      "op": "JUMP"
    },
    "9316": {
      "op": "JUMPDEST"
    },
    "9317": {
      "op": "PUSH2",
      "value": "0x2478"
    },
    "9320": {
      "op": "DUP2"
    },
    "9321": {
      "op": "PUSH2",
      "value": "0x2472"
    },
    "9324": {
      "op": "DUP5"
    },
    "9325": {
      "op": "SLOAD"
    },
    "9326": {
      "op": "PUSH2",
      "value": "0x21BA"
    },
    "9329": {
      "jump": "i",
      "op": "JUMP"
    },
    "9330": {
      "op": "JUMPDEST"
    },
    "9331": {
      "op": "DUP5"
    },
    "9332": {
      "op": "PUSH2",
      "value": "0x23FA"
    },
    "9335": {
      "jump": "i",
      "op": "JUMP"
    },
    "9336": {
      "op": "JUMPDEST"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9339": {
      "op": "DUP1"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9342": {
      "op": "DUP4"
    },
    "9343": {
      "op": "GT"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9346": {
      "op": "DUP2"
    },
    "9347": {
      "op": "EQ"
    },
    "9348": {
      "op": "PUSH2",
      "value": "0x24AD"
    },
    "9351": {
      "op": "JUMPI"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9354": {
      "op": "DUP5"
    },
    "9355": {
      "op": "ISZERO"
    },
    "9356": {
      "op": "PUSH2",
      "value": "0x2495"
    },
    "9359": {
      "op": "JUMPI"
    },
    "9360": {
      "op": "POP"
    },
    "9361": {
      "op": "DUP6"
    },
    "9362": {
      "op": "DUP4"
    },
    "9363": {
      "op": "ADD"
    },
    "9364": {
      "op": "MLOAD"
    },
    "9365": {
      "op": "JUMPDEST"
    },
    "9366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9368": {
      "op": "NOT"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9371": {
      "op": "DUP7"
    },
    "9372": {
      "op": "SWAP1"
    },
    "9373": {
      "op": "SHL"
    },
    "9374": {
      "op": "SHR"
    },
    "9375": {
      "op": "NOT"
    },
    "9376": {
      "op": "AND"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9379": {
      "op": "DUP6"
    },
    "9380": {
      "op": "SWAP1"
    },
    "9381": {
      "op": "SHL"
    },
    "9382": {
      "op": "OR"
    },
    "9383": {
      "op": "DUP6"
    },
    "9384": {
      "op": "SSTORE"
    },
    "9385": {
      "op": "PUSH2",
      "value": "0x2442"
    },
    "9388": {
      "op": "JUMP"
    },
    "9389": {
      "op": "JUMPDEST"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9392": {
      "op": "DUP6"
    },
    "9393": {
      "op": "DUP2"
    },
    "9394": {
      "op": "MSTORE"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9397": {
      "op": "DUP2"
    },
    "9398": {
      "op": "KECCAK256"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9401": {
      "op": "NOT"
    },
    "9402": {
      "op": "DUP7"
    },
    "9403": {
      "op": "AND"
    },
    "9404": {
      "op": "SWAP2"
    },
    "9405": {
      "op": "JUMPDEST"
    },
    "9406": {
      "op": "DUP3"
    },
    "9407": {
      "op": "DUP2"
    },
    "9408": {
      "op": "LT"
    },
    "9409": {
      "op": "ISZERO"
    },
    "9410": {
      "op": "PUSH2",
      "value": "0x24DC"
    },
    "9413": {
      "op": "JUMPI"
    },
    "9414": {
      "op": "DUP9"
    },
    "9415": {
      "op": "DUP7"
    },
    "9416": {
      "op": "ADD"
    },
    "9417": {
      "op": "MLOAD"
    },
    "9418": {
      "op": "DUP3"
    },
    "9419": {
      "op": "SSTORE"
    },
    "9420": {
      "op": "SWAP5"
    },
    "9421": {
      "op": "DUP5"
    },
    "9422": {
      "op": "ADD"
    },
    "9423": {
      "op": "SWAP5"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9426": {
      "op": "SWAP1"
    },
    "9427": {
      "op": "SWAP2"
    },
    "9428": {
      "op": "ADD"
    },
    "9429": {
      "op": "SWAP1"
    },
    "9430": {
      "op": "DUP5"
    },
    "9431": {
      "op": "ADD"
    },
    "9432": {
      "op": "PUSH2",
      "value": "0x24BD"
    },
    "9435": {
      "op": "JUMP"
    },
    "9436": {
      "op": "JUMPDEST"
    },
    "9437": {
      "op": "POP"
    },
    "9438": {
      "op": "DUP6"
    },
    "9439": {
      "op": "DUP3"
    },
    "9440": {
      "op": "LT"
    },
    "9441": {
      "op": "ISZERO"
    },
    "9442": {
      "op": "PUSH2",
      "value": "0x24FA"
    },
    "9445": {
      "op": "JUMPI"
    },
    "9446": {
      "op": "DUP8"
    },
    "9447": {
      "op": "DUP6"
    },
    "9448": {
      "op": "ADD"
    },
    "9449": {
      "op": "MLOAD"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9452": {
      "op": "NOT"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9455": {
      "op": "DUP9"
    },
    "9456": {
      "op": "SWAP1"
    },
    "9457": {
      "op": "SHL"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9460": {
      "op": "AND"
    },
    "9461": {
      "op": "SHR"
    },
    "9462": {
      "op": "NOT"
    },
    "9463": {
      "op": "AND"
    },
    "9464": {
      "op": "DUP2"
    },
    "9465": {
      "op": "SSTORE"
    },
    "9466": {
      "op": "JUMPDEST"
    },
    "9467": {
      "op": "POP"
    },
    "9468": {
      "op": "POP"
    },
    "9469": {
      "op": "POP"
    },
    "9470": {
      "op": "POP"
    },
    "9471": {
      "op": "POP"
    },
    "9472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9474": {
      "op": "SWAP1"
    },
    "9475": {
      "op": "DUP2"
    },
    "9476": {
      "op": "SHL"
    },
    "9477": {
      "op": "ADD"
    },
    "9478": {
      "op": "SWAP1"
    },
    "9479": {
      "op": "SSTORE"
    },
    "9480": {
      "op": "POP"
    },
    "9481": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "556c3944666a1c2c89032701696da14ba91da1e2",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\n/**\n * @title SmartNodes\n * @dev An ERC20 contract for managing off-chain networks\n */\ncontract SmartnodesCore is ERC20Upgradeable {\n    // ERC20 token supply metrics\n    uint256 public constant INITIAL_SUPPLY = 5_000_000e18;\n    uint256 public constant MAX_SUPPLY = 21_000_000e18;\n    uint256 public constant HALVING = 2; //52_560; // number of state updates until next HALVING\n    uint256 public emissionRate = 128e18; // amount of tokens to be emitted per state update\n    uint256 public lockAmount = 1_000e18; // minimum validator locked tokens required\n    uint256 public unlockPeriod = 50400;\n\n    // Validator multi-sig address\n    ISmartnodesMultiSig private _validatorContractInstance;\n    address public validatorContractAddress;\n\n    // Counters for storage indexing / IDs\n    uint256 public validatorIdCounter;\n    uint256 public userIdCounter;\n    uint256 public jobCounter;\n    uint256 public activeValidators;\n    uint256 public minValidators;\n    uint256 public maxValidators;\n\n    // Events\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(uint256 indexed jobId, address[] seedValidators);\n    event JobCompleted(uint256 indexed jobId);\n    event JobDisputed(uint256 indexed jobId);\n\n    // User data with key information (address, RSA key hash, reputation)\n    struct User {\n        uint256 id;\n        address userAddress;\n        bytes32 publicKeyHash;\n        uint8 reputation;\n    }\n\n    // Validator data with key information (address, RSA key hash, locked value, reputation, activity)\n    struct Validator {\n        uint256 id;\n        address validatorAddress;\n        bytes32 publicKeyHash;\n        uint256 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n    }\n\n    // Information for  a generic off-chain job (job hash [key for kademlia lookup], seed validators, participants, author, etc)\n    struct Job {\n        uint256 id;\n        address author;\n        address[] seedValidators;\n        address[] workers;\n        uint256[] capacities;\n        bool activity;\n    }\n\n    uint256[] public completedJobs;\n\n    // Main datastructure mappings via id lookup\n    mapping(uint256 => User) public users;\n    mapping(uint256 => Validator) public validators;\n    mapping(uint256 => Job) public jobs;\n\n    // Helpful mappings\n    mapping(address => uint256) public userIdByAddress;\n    mapping(address => uint256) public validatorIdByAddress;\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == validatorContractAddress,\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    function initialize() public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n\n        // Set all counters to 1 (when looking up values, 0 = Not found)\n        userIdCounter = 1;\n        jobCounter = 1;\n        validatorIdCounter = 1;\n        minValidators = 1;\n        maxValidators = 3;\n        completedJobs = new uint256[](5_000);\n        emissionRate = 128e18; // amount of tokens to be emitted per state update\n        lockAmount = 1_000e18; // minimum validator locked tokens required\n        unlockPeriod = 50400;\n    }\n\n    function setValidatorContract(address validatorAddress) external {\n        require(\n            validatorContractAddress == address(0),\n            \"Validator address already set.\"\n        );\n        _validatorContractInstance = ISmartnodesMultiSig(validatorAddress);\n        validatorContractAddress = validatorAddress;\n    }\n\n    /**\n     * @dev Create a User, limit one per address & public key hash (RSA)\n     */\n    function createUser(bytes32 _publicKeyHash) external {\n        // Only one address & public key hash per user.\n        require(userIdByAddress[msg.sender] == 0, \"User already registered.\");\n\n        users[userIdCounter] = User({\n            id: userIdCounter,\n            userAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            reputation: 50\n        });\n\n        userIdByAddress[msg.sender] = userIdCounter;\n        userIdCounter++;\n    }\n\n    /**\n     * @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno\n     */\n    function createValidator(bytes32 _publicKeyHash) external {\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already exists.\"\n        );\n\n        require(\n            balanceOf(msg.sender) >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n\n        // Lock token in contract\n        bool success = transferFrom(msg.sender, address(this), lockAmount);\n        require(success, \"Token transfer failed\");\n\n        validators[validatorIdCounter] = Validator({\n            id: validatorIdCounter,\n            validatorAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            locked: lockAmount,\n            unlockTime: 0,\n            reputation: 50\n        });\n\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n        validatorIdCounter++;\n    }\n\n    // User Job Requesting Via Chainlink VRF TODO\n    function requestJob(\n        uint256[] calldata _capacities\n    ) external returns (uint256[] memory validatorIds) {\n        uint256 uid = userIdByAddress[msg.sender];\n\n        require(uid != 0, \"User not registered.\");\n        require(_capacities[0] > 0, \"Capacity must be greater zero.\");\n        require(\n            validatorContractAddress != address(0),\n            \"Validator contract not set!\"\n        );\n\n        address[] memory _seedValidators = _validatorContractInstance\n            .generateValidatorCandidates();\n        uint256[] memory _validatorIds = new uint256[](_seedValidators.length);\n\n        for (uint256 i = 0; i < _seedValidators.length; i++) {\n            _validatorIds[i] = validatorIdByAddress[_seedValidators[i]];\n        }\n\n        // Store the job in the jobs mapping\n        jobs[jobCounter] = Job({\n            id: jobCounter,\n            author: msg.sender,\n            seedValidators: _seedValidators,\n            workers: new address[](_capacities.length),\n            capacities: _capacities,\n            activity: true\n        });\n\n        emit JobRequested(jobCounter, _seedValidators);\n        jobCounter++;\n\n        return _validatorIds;\n    }\n\n    function completeJob(\n        uint256 jobId,\n        address[] memory _workers\n    ) external onlyValidatorMultiSig returns (uint256[] memory) {\n        require(_workers.length == jobs[jobId].capacities.length);\n        jobs[jobId].workers = _workers;\n        emit JobCompleted(jobId);\n        if (completedJobs.length >= 5_000) {\n            completedJobs.pop();\n        }\n        completedJobs.push(jobId);\n        return jobs[jobId].capacities;\n    }\n\n    function disputeJob(uint256 jobId) external onlyValidatorMultiSig {\n        Job storage job = jobs[jobId];\n        job.activity = false;\n        emit JobDisputed(jobId);\n    }\n\n    /**\n     * @dev Validator token unlocking, 30 day withdrawal period.\n     */\n    function lockTokens(uint32 amount) external {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(msg.sender, address(this), amount);\n        validators[validatorId].locked += amount;\n\n        emit TokensLocked(msg.sender, amount);\n    }\n\n    function unlockTokens(uint32 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + unlockPeriod; // 14 day unlocking period\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    /**\n     * @dev Mint tokens for updating state rewards,\n     TODO change to internal (external for testing)\n     */\n    function mintTokens(address recipient, uint256 amount) external {\n        require(\n            totalSupply() + emissionRate <= MAX_SUPPLY,\n            \"Maximum supply reached!\"\n        );\n        // _mint(msg.sender, emissionRate);\n        _mint(recipient, amount);\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobValidators(\n        uint256 jobId\n    ) external view returns (address[] memory) {\n        require(jobId < jobCounter, \"Invalid job ID\");\n        if (jobs[jobId].id == jobId) {\n            address[] memory jobValidators = jobs[jobId].seedValidators;\n            return jobValidators;\n        } else {\n            revert(\"Job not found!\");\n        }\n    }\n\n    function getUserCount() external view returns (uint256) {\n        return userIdCounter;\n    }\n\n    function getValidatorCount() external view returns (uint256) {\n        return validatorIdCounter;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return activeValidators;\n    }\n\n    function getEmissionRate() external view returns (uint256) {\n        return emissionRate;\n    }\n\n    function getSupply() external view returns (uint256) {\n        return this.totalSupply();\n    }\n\n    function isLocked(address validatorAddr) external view returns (bool) {\n        uint256 _id = validatorIdByAddress[validatorAddr];\n        return validators[_id].locked >= lockAmount;\n    }\n}\n",
  "sourceMap": "271:10170:6:-:0;;;597:6;567:36;;688:8;660:36;;776:5;746:35;;271:10170;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}